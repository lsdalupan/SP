
<div id='cmdsdiv'>
<a id="top">
<table>
<tr>
<td valign=top>
<span style='font-size:24pt;font-face:bold'>
<a target="_blank" href="http://chemapps.stolaf.edu/jmol">Jmol</a>/
<a target="_blank" href="http://jsmol.sourceforge.net">JSmol</a> interactive scripting documentation</span></td>
<td valign=center>
<select onchange=eval(value)>
<option value="showVersion('14.4')">version 14.4</option>
<option selected="1" value="showVersion('14.2')">version 14.2</option>
<option value="showVersion('14.0')">version 14.0</option>
<option value="showVersion('13.4')">version 13.4</option>
<option value="showVersion('13.2')">version 13.2</option>
<option value="showVersion('13.0')">version 13.0</option>
<option value="showVersion('12.4')">version 12.4</option>
<option value="showVersion('12.2')">version 12.2</option>
<option value="showVersion('12.0')">version 12.0</option></select></td></tr></table></a>
<form action="">
<table width="700">
<tr>
<td>See an error? Something missing? Please 
<a href="mailto:hansonr@stolaf.edu?subject=Jmol applet documentation">let us know</a>. For a wide variety of interactive examples, see 
<a href=examples-12/new.htm>new.htm</a> and 
<a href=../jsmol/jsmol.htm>jsmol.htm</a>.
<br />
<br />
<table width="750">
<tr>
<td>
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />Search the Database</a>       
<a href="#index">
<img class="nf" src="img/i.gif" border="0" />Index</a>      
<select onchange=eval(value)>
<option value="0">Examples</option>
<option value="showModel('.center')">center (1crn.pdb)</option>
<option value="showModel('coloratoms')">color (atom object) (caffeine.xyz)</option>
<option value="showModel('colortext')">color (model object) (1crn.pdb)</option>
<option value="showModel('.connect')">connect (caffeine.xyz)</option>
<option value="showModel('.define')">define (1blu.pdb)</option>
<option value="showModel('.depth')">depth (1crn.pdb)</option>
<option value="showModel('.dipole')">dipole (new window)</option>
<option value="showModel('.display')">display (1blu.pdb)</option>
<option value="showModel('.draw')">draw (new window)</option>
<option value="showModel('.echo')">echo (caffeine.xyz)</option>
<option value="showModel('models')">frame (cyclohexane_movie.xyz)</option>
<option value="showModel('.isosurface')">isosurface (ethene-HOMO.cub.gz)</option>
<option value="showModel('.label')">label (1crn.pdb)</option>
<option value="showModel('.lcaoCartoon')">lcaoCartoon (new window)</option>
<option value="showModel('.load')">load (new window)</option>
<option value="showModel('.loop')">loop (1blu.pdb)</option>
<option value="showModel('.measure')">measure (new window)</option>
<option value="showModel('.mo')">mo (new window)</option>
<option value="showModel('.moveto')">moveto (1crn.pdb)</option>
<option value="showModel('polyhedra1')">polyhedra (caffeine.xyz)</option>
<option value="showModel('polyhedra2')">polyhedra (kaolin.mol)</option>
<option value="showModel('.rotateSelected')">rotateSelected (caffeine.xyz)</option>
<option value="showModel('.select')">select (1a3n.pdb)</option>
<option value="showModel('setsolvent')">set (visibility) (1crn.pdb)</option>
<option value="showModel('.slab')">slab (1crn.pdb)</option>
<option value="showModel('.spin')">spin (caffeine.xyz)</option>
<option value="showModel('.star')">star (1crn.pdb)</option>
<option value="showModel('.stereo')">stereo (1crn.pdb)</option></select></td>
<td>
<a href="javascript:alert('These images mark places in the documentation where you \ncan click on a link to pull up a working example in a new window.')">
<img src="img/ex.jpg" border="0" title="look for this icon throughout this document to pop up specific examples." /></td></tr></table></td></tr>
<tr>
<td class="sep" colspan="12"> </td></tr></table></form>
<table width="800"> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#jmolcommandsyntax">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> [Jmol Command Syntax]</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#colorother">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> color (other)</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#image">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>image **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#quit">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> quit</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#shownmr">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> show (NMR)</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#jmolmath">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=new>[Jmol Math] *</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#colorscheme">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> color (scheme)</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#initialize">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> initialize</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#ramachandran">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> ramachandran</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#slab">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> slab</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#jmolparameters">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> [Jmol Parameters]</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#colormeasures">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> color measures</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#invertselected">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> invertSelected</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#redo">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> redo</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#spacefill">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> spacefill</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#jmolsmarts/smiles">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> [Jmol SMARTS/SMILES]</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#compare">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=new>compare *</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#isosurface">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> 
<span class=newer>isosurface **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#redomove">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> redoMove</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#spin">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> spin</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#jmol/jspecview/magresview">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> [Jmol/JSpecView/MagresView]</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#configuration">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> configuration</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#javascript">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> javascript</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#refresh">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> refresh</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#ssbonds">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> ssbonds</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#annotations">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>[annotations] **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#connect">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> 
<span class=new>connect *</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#label">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> label</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#reset">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>reset **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#star">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> star</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#atomexpressions">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> [atom expressions]</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#console">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> console</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#lcaocartoon">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> lcaoCartoon</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#restore">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=new>restore *</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#step">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> step</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#atomproperties">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=new>[atom properties] *</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#contact">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> contact</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#load">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> 
<span class=newer>load **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#restrict">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> restrict</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#stereo">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> 
<span class=newer>stereo **</span></a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#auxiliaryinfo">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>[auxiliaryInfo] **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#continue">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> continue</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#loadappend">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> load APPEND</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#resume">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> resume</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#strand">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> strand</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#comments">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> [comments]</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#data">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> data</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#loadasync">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=new>load ASYNC *</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#return">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> return</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#structure">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> structure</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#export">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> [export]</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#default">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> default</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#loaddata">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> load DATA</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#ribbon">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> ribbon</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#struts">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> struts</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#fractionalcoordinates">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> [fractional coordinates]</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#define">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> define</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#loadfiles">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=new>load FILES *</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#rocket">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> rocket</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#subset">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> subset</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#functions">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>[functions] **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#delay">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> delay</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#loadmenu">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> load MENU</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#rotate">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> rotate</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#switch">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> switch</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#immediate!">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> [immediate (!)]</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#delete">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=new>delete *</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#loadmodels">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> load MODELS</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#rotateselected">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> rotateSelected</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#sync">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>sync **</span></a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#planeexpressions">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> [plane expressions]</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#depth">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> depth</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#loadtrajectory">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> load TRAJECTORY</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#save">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=new>save *</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#throw">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=new>throw *</span></a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#read/writezipfiles">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> [read/write ZIP files]</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#dipole">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> 
<span class=new>dipole *</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#loadproperty">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> load [property]</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#script">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> script</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#timeout">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> timeout</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#usingtheclipboard">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> [using the clipboard]</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#display">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> display</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#log">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> log</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#select">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> 
<span class=new>select *</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#trace">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> trace</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#animation">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> animation</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#dots">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> dots</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#loop">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> loop</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#selectionhalos">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> selectionHalos</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#translate">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> translate</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#axes">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>axes **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#draw">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> 
<span class=newer>draw **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#mapproperty">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> mapProperty</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#set">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> set</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#translateselected">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> translateSelected</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#backbone">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> backbone</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#echo">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> echo</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#measure">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> measure</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#setantialiasing">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> set (antialiasing)</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#try">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> try</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#background">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> background</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#ellipsoid">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> ellipsoid</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#menu">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> menu</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#setbondstyles">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> 
<span class=newer>set (bond styles) **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#unbind">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> unbind</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#bind">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> bind</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#else">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> else</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#meshribbon">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> meshribbon</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#setcallback">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> set (callback)</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#undo">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> undo</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#bondorder">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> bondorder</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#elseif">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> elseIf</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#message">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> message</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#setdebugging">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> set (debugging)</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#undomove">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> undoMove</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#boundbox">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> boundbox</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#exit">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> exit</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#minimize">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> minimize</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#setfilesandscripts">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>set (files and scripts) **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#unitcell">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=new>unitcell *</span></a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#break">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> break</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#file">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> file</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#mo">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> mo</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#sethighlights">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> set (highlights)</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#unset">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> unset</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#cache">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> cache</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#fix">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> fix</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#model">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>model **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#setlabels">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>set (labels) **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#var">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=new>var *</span></a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#calculate">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>calculate **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#font">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> font</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#modulation">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> modulation</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#setlanguage">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> set (language)</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#vector">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=new>vector *</span></a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#capture">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> capture</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#for">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>for **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#move">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> move</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#setlighting">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> set (lighting)</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#vibration">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>vibration **</span></a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#cartoon">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> cartoon</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#frame">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> 
<span class=newer>frame **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#moveto">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> 
<span class=newer>moveto **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#setmeasure">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> set (measure)</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#while">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> while</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#case">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> case</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#frank">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> frank</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#mutate">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>mutate **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#setmisc">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>set (misc) **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#wireframe">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> wireframe</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#catch">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> catch</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#geosurface">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> geoSurface</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#navigate">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> navigate</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#setnavigation">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> set (navigation)</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#write">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=new>write *</span></a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#cd">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> cd</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#getproperty">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=new>getProperty *</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#nbo">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>nbo **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#setperspective">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> set (perspective)</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#writeexport">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> write (export)</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#center">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> center</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#goto">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> goto</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#parallel/process">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> parallel/process</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#setstructure">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=new>set (structure) *</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#writeimagesandframes">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>write (images and frames) **</span></a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#centerat">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> centerAt</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#halos">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> halos</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#pause">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> pause</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#setvisibility">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> 
<span class=newer>set (visibility) **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#writeinfo">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>write (info) **</span></a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#cgo">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>cgo **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#hbonds">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> hbonds</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#plot">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> plot</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#setecho">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=new>set echo *</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#writemodel">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=new>write (model) *</span></a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#color">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> color</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#help">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> help</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#pmesh">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> pmesh</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#setmodelkitmode">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> set modelKitMode</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#writeobject">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> write (object)</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#coloratomobject">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> color (atom object)</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#hide">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> hide</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#polyhedra">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> 
<span class=newer>polyhedra **</span></a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#setpicking">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> set picking</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#zap">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> zap</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#colorbondobject">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> color (bond object)</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#history">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> history</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#print">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> print</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#setpickingstyle">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> set pickingStyle</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#zoom">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> zoom</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#colorelement">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> color (element)</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#hover">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> hover</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#prompt">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> prompt</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#setusercolorscheme">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> set userColorScheme</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#zoomto">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> zoomto</a></td ></tr> 
<tr>
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#colormodelobject">
<img class="nf" height="10" width="10" border="0" src="img/ex.jpg" title="includes example page" /> color (model object)</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#if">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> if</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#quaternion">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> quaternion</a></td >
<td >
<a style="text-decoration:none" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?html#show">
<img class="nf" height="10" width="10" border="0" src="img/ex.gif" title="" /> 
<span class=newer>show **</span></a></td ></tr>
<tr >
<td colspan=6 >
<span class=new> 
<br />
<br />* indicates new or modified in version 14.2</span> 
<span class=newer> ** indicates new or modified in version after 14.2</span></td ></tr >
<tr >
<td > </td ></tr >
<tr>
<td class="sep" colspan="12"> </td></tr></table >
<table width="700">
<tr name='tr_jmolcommandsyntax'>
<td colspan="5">
<h3 >
<a id="jmolcommandsyntax" name="jmolcommandsyntax">[Jmol Command Syntax]</a>
<a id="k0"> </a></h3></td></tr>
<tr name='tr_jmolcommandsyntax'>
<td>
<i >In general, commands in Jmol start with a command word and continue with a set of parameters separated by white space and terminated by an end of line character or a semicolon, much as in JavaScript. Similar to JavaScript, a backslash just prior to the end of a line indicates a line continuation, and commands can "wrap" to the next line in a JavaScript-like fashion. In general, any unclosed (, [, or { on a line indicates that the command continues on to the next line. In addition, with 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#print">print</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set">set</a>, lines can continue just after or before a mathematical operator such as +, -, * or /. This results in a more natural line formatting, which has strong similarities to JavaScript. For example:
<br>
<br>function processInfo(f, i) {
<br>    var pdbid = (i ? f[i] : f)
<br>    
<b>load @{"="+pdbid}</b>
<br> 
<br>    var molinfo = ({protein} == 0 ? "nonprotein"
<br>        : {protein and not *.ca} == 0 ? "alpha carbon model"
<br>        : {*}[0].model != {*}[1].model ? "multi-model"
<br>        : "OK")
<br>    
<br>    if (molinfo != "OK") {
<br>        print pdbid+"	"+molinfo; 
<br>        return;
<br>    }
<br>
<br>    var chaincount = script("select protein; show chain").trim().lines.length
<br>    var helixcount = script("show structure").lines.find("HELIX").length
<br>    var sheetcount = script("show structure").lines.find("SHEET").length
<br>    print pdbid+"	"+molinfo
<br>        +"	"+{*.ca}.size
<br>        +"	"+chaincount
<br>        +"	"+helixcount
<br>        +"	"+sheetcount
<br>}
<br>
<br>There are two basic Jmol command types -- "RasMol-like" commands (shown in bold face, above), such as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#load">load</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#select">select</a>, and JavaScript-like "Jmol math" commands. The distinction between these two command types has to do with parameter order and variable replacement, as discussed below. The RasMol-like commands are characterized by a leading command word that is intrinsic to molecular systems, serving to load models, select atoms, measure distances, write data to files, etc. For the most part, order of parameters in the RasMol-like commands is not important. The command processor simply cycles through the keywords, looking for ones it recognizes. (That said, the more complicated commmands do have some aspects of order -- especially 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#load">load</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write</a>. String parameters in these commands are generally quoted using single or double quotes. Some older RasMol-like commands in Jmol do not require any quotes, though. 
<br>
<br>JavaScript-like commands have a very different look, starting with a command word such as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#for">for</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#if">if</a> or simply starting with a variable name as part of an assignment statement, as illustrated above. These commands should look quite familiar to anyone who has done any JavaScript programming. However, be advised, they are not JavaScript. Like JavaScript, strings in Jmol can be delimited by either single or double quotes. Jmol math, however, makes a distinction between integers and floating-point numbers. Jmol has several data types not found in JavaScript, making it more like Java itself in some ways. The "Jmol Math" language was written specifically for Jmol, with JavaScript in mind, and with the idea of extending the relatively limited capabilities of RasMol script with a a rich layer of features. Differences between Jmol and JavaScript are summarized 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#jmolmathdifferencesbetweenjmolmathandjavascript">below</a>. 
<b>In this document, Jmol math commands are introduced using UPPER CASE HEADINGS.</b>
<br />
<br /></i ></td></tr> 
<tr name='tr_jmolcommandsyntax'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_jmolcommandsyntax'>
<td colspan="5">
<p>
<a class="xref" href="#jmolmath">[Jmol Math]</a> 
<a class="xref" href="#jmolparameters">[Jmol Parameters]</a> 
<a class="xref" href="#atomexpressions">[atom expressions]</a> 
<a class="xref" href="#atomproperties">[atom properties]</a> 
<a class="xref" href="#functions">[functions]</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#message">message</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#set">set</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_jmolcommandsyntax'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_jmolmath'>
<td colspan="5">
<h3 class=h3new>
<a id="jmolmath" name="jmolmath">[Jmol Math]</a>
<a id="k3"> </a> 
<br />
<span class=new>(v. 11.2 -- new)</span></h3>   
<a class="textParam" href="#jmolmathjmolvariables">Jmol Variables</a>
<br />   
<a class="textParam" href="#jmolmathexamplesofvariableuse">Examples of Variable Use</a>
<br />   
<a class="textParam" href="#jmolmathindirectreferencinganduseof@">Indirect referencing and use of @</a>
<br />   
<a class="textParam" href="#jmolmathglobalandlocalscope">Global and Local Scope</a>
<br />   
<a class="textParam" href="#jmolmathread-onlyvariables">Read-Only Variables</a>
<br />   
<a class="textParam" href="#jmolmathjmolmathvariabletypes">Jmol Math Variable Types</a>
<br />   
<a class="textParam" href="#jmolmathdifferencesbetweenjmolmathandjavascript">Differences Between Jmol Math and JavaScript</a>
<br />   
<a class="textParam" href="#jmolmathjmolquaternionmath">Jmol Quaternion Math</a>
<br />   
<a class="textParam" href="#jmolmathoperatorsandoperands">Operators and Operands</a>
<br />   
<a class="textParam" href="#jmolmathoperationrules">Operation Rules</a>
<br />   
<a class="textParam" href="#jmolmathjmolsqlsyntax">Jmol SQL syntax</a>
<br />
<br /></td></tr>
<tr name='tr_jmolmath'>
<td>
<i >Jmol incorporates a rich JavaScript-like math environment including multiple variable types and a wide variety of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#functions">functions</a>. This section of the documentation details the use of variables and the sorts of operations that are allowed with them. 
<br>
<br />
<br />
<b>
<a name="jmolmathjmolvariables">Jmol Variables</a></b>    
<a href="#jmolmath">back</a>
<br />
<br /> Variables may be assigned using standard mathematical expressions and used throughout Jmol in standard Java/JavaScirpt-like statements such as: 
<br>
<br>
<b>x = y + 3
<br>for (var i = 1; i 
< 10; i++){...}
<br>print x</b>
<br> 
<br>In addition, the at-symbol, @, can be used in any Jmol-specific command (LOAD, SELECT, etc.) in order to switch into "math mode" temporarily to obtain a variable, as in 
<b>
<br>
<br>x = "ala or gly"; select @x
<br>echo "@{'file=' + _modelFile}"
<br> x = 0.2; wireframe @x 
<br>zoom @{x * 3}
<br>
<br></b> Likewise, math expressions can temporarily switch into "atom select mode" using just { } without the @ sign:
<b>
<br>
<br>x = {ala or cys}
<br>print {*}.length
<br>for(var i in {*}) { print i.label() }</b>
<br>
<br />
<br />
<b>
<a name="jmolmathexamplesofvariableuse">Examples of Variable Use</a></b>    
<a href="#jmolmath">back</a>
<br />
<br /> Variables may be combined with 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set">settings</a> to adjust parameters: 
<br>
<br>
<b>x = bondModeOR; set bondModeOr @{!x}
<br>set showBoundBox @{!showBoundBox}</b>
<br>
<br>Variables may be used to extract information from a model: 
<br>
<br>
<b>x = {carbon}.bonds.length.min</b>
<br>
<br>Variables may be used to introduce atom-related property data from external files into the model: 
<br>
<br>
<b>x = load("chargeData.txt");select 2.1;data "property_charges @x";select 2.1 and property_charges 
< 0.5</b>
<br>
<br>Variables may be inspected using 
<b>print x</b>, 
<b>show x</b>, or 
<b>message @x</b> where 
<b>x</b> is a variable name. You can use 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#message">message</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#echo">echo</a> to transmit this information to the user or to the web page via a JavaScript 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setcallback">callback</a> function or use the Jmol.js function jmolEvaluate(). If using the Jmol stand-alone application or the signed applet, you can write a variable to a file using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write</a> command. Variables and math expressions can be checked using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#print">print</a> command.
<br>
<br>Standard C++/Java in-place assignments such as 
<b>x++</b>, 
<b>x--</b>, 
<b>++x</b>, 
<b>--x</b> are allowed, along with assignments 
<b>+=</b>, 
<b>-=</b>, 
<b>*=</b>, 
<b>/=</b>, 
<b>\=</b> (integer division), 
<b>|=</b>, and 
<b>&=</b>.
<br>
<br />
<br />
<b>
<a name="jmolmathindirectreferencinganduseof@">Indirect referencing and use of @</a></b>    
<a href="#jmolmath">back</a>
<br />
<br /> Jmol math allows for one variable referencing the value contained in another variable. This is accomplished using the @ sign in a math context rather than an atom selection context. Thus, if y = 3 and x = "y", then 
<b>print @x</b> prints "3" because @x means "the value of the variable named by x" which in this case is y. The use of @ is summarized below:
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<nobr>select @x</nobr> </td >
<td valign="top" > In implicit atom expression commands such as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#select">select</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#display">display</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#delete">delete</a> in which x must represent an atom expression, either in the form of a string,
<b> x = "ala or cys"</b>, or as an actual expression, 
<b> x = {ala or cys}</b>. </td ></tr >
<tr >
<td valign="top" >y = {@x} </td >
<td valign="top" > Similarly, within selection mode within a math expression, to have a variable atom expression.</td ></tr >
<tr >
<td valign="top" >
<nobr>select chain=@x</nobr> </td >
<td valign="top" > (
<span class="newv">Jmol 14.2</span>) In an atom expression comparison, @ substitutes a variable's value directly. For example, 
<b>select chain=X</b> selects for chain X; 
<b>x="A";select chain=@x</b> selects for chain A.</td ></tr >
<tr >
<td valign="top" > 
<nobr>echo "model=@{_modelNumber}"</nobr></td >
<td valign="top" > Specifically for the commands 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#echo">echo</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#hover">hover</a>, if a math expression is present, the text will be dynamically generated every time the screen is refreshed, thus automatically updating when variables are changed. </td ></tr >
<tr >
<td valign="top" > load @x </td >
<td valign="top" >In all other commands that accept parameters as any sort of variable parameter. </td ></tr >
<tr >
<td valign="top" > y = @x </td >
<td valign="top" > within math mode as an indirect reference, with 
<b>@x</b> representing the contents of the variable named by x.</td ></tr >
<tr >
<td valign="top" >
<nobr>@36</nobr> </td >
<td valign="top" > @ sign followed by a number 
<b>n</b> is a shortcut in any context for {atomno=n}.</td ></tr >
<tr >
<td valign="top" >
<nobr>@@36</nobr> </td >
<td valign="top" > @@ sign followed by a number 
<b>n</b> is a shortcut in any context for {atomno=n and thisModel}, returning the subset of atoms with this atom number that are in the current frame set as determined using with the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frame">frame</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#animation">animation frames</a> command. For example, 
<b>model 3;select @@2</b> would be the same as 
<b>select atomno=2 and model=3</b>.</td ></tr >
<tr >
<td valign="top" >
<nobr>@myGroups ala or cys</nobr> </td >
<td valign="top" > @ sign followed by a name in the context of a command is a substitute for the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#define">define</a> command, which is an early Jmol syntax. In this case, "myGroups" is defined as "ala or cys", so we can now say 
<b>select myGroups</b> in place of 
<b>select ala or cys</b>. A difference between this usage and @myGroups, where myGroups is a Jmol Math variable, is that all definitions created with the DEFINE command are temporary definitions that will be deleted when a new model is loaded or appended. Such is not the case for Jmol Math variables. </td ></tr ></table >
<br>
<br>Users are cautioned to be careful using @, particularly because of indirect referencing and the need to switch into the proper mode before using a variable. The following statements probably will not do what you think they will do: select x; print @x; x = @y + 2.
<br>
<br> The table below lists all JavaScript-like commands as well as the RasMol commands not requiring quotes. 
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > These JavaScript-like commands do not require @ with expressions. </td >
<td valign="top" > 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#case">CASE</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#catch">CATCH</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#for">FOR</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#if">IF/ELSEIF</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#log">LOG</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#print">PRINT</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#prompt">PROMPT</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#return">RETURN</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#switch">SWITCH</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#throw">THROW</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#var">VAR</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#while">WHILE</a> </td ></tr >
<tr >
<td valign="top" >These commands, many of which predate Jmol math, accept exactly one string parameter. For these specific commands, quotes are optional. The distinction with and without quotes in these cases only has to do with simple variable substitution. 
<b>echo @x</b> will echo the contents of variable x; 
<b>echo "@x"</b> will echo 
<b>@x</b>. (However, variable expressions, such as @{x + 3}, are processed in these cases even if quoted. </td >
<td valign="top" > 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#cd">cd</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#echo">echo</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#goto">goto</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#help">help</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#hover">hover</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#javascript">javascript</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#label">label</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#message">message</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#pause">pause</a> </td ></tr ></table >
<br />
<br />
<b>
<a name="jmolmathglobalandlocalscope">Global and Local Scope</a></b>    
<a href="#jmolmath">back</a>
<br />
<br /> Variables in Jmol have one of two scopes -- 
<b>global</b> or 
<b>local</b>. Global variables hold values that need to persist across scripts or functions. Local variables override the values previously assigned to the same name for some limited extent. In general, variables defined in Jmol are global variables. Note that no variables are recorded in the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">state</a>. It is good programming practice to define variables locally as much as possible, but there are times when global assignments are needed. Just be aware that any global variables created and not destroyed using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#reset">reset</a> command consume memory and may slow script processing. The following rules govern the scope of local variables: 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > applet localization </td >
<td valign="top" > all variables in Jmol are localized to a specific applet. Note that this is not necessarily true for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#functions">functions</a>. Specifically, functions beginning with 
<b>static_</b> are common to all 
<b>non-Java</b> applets. These static functions, though able to be used by any applet, will not share variables. </td ></tr >
<tr >
<td valign="top" >script localization 
<br>
<br>Variables defined using the keyword VAR within a script file that is read by the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#script">script</a> command are localized to that script and scripts that that script calls.</td >
<td valign="top" > var x = 30
<br>var d = {atomno=1}.xyz.distance({atomno=2}.xyz) </td ></tr >
<tr >
<td valign="top" > function localization 
<br>
<br> The parameters of a function and any variables defined within a function using VAR are local to that function. The Jmol script on the right will print
<br>
<br>
<b>a=1 b=2
<br>testing now</b></td >
<td valign="top" > a = "testing"; c = "now"
<br>function checkX(a, b) {
<br>   var c = 15;
<br>   print "a="+a + " b=" + b
<br>}
<br>checkX(1,2)
<br>print "" + a + " " + c</td ></tr >
<tr >
<td valign="top" >FOR/WHILE localization 
<br>
<br> Variables defined using VAR within the context of a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#for">FOR</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#while">WHILE</a> loop will be local to that loop. The script on the right will print
<br>
<b>
<br>5
<br>6
<br>7
<br>3</b> </td >
<td valign="top" >
<br>x = 3
<br>for (var x = 5; x 
< 8; x++) {
<br>   print x
<br>}
<br>print x</td ></tr >
<tr >
<td valign="top" > { ... } localization 
<br>
<br> Variables defined using VAR can be localized to a section of a script by bracketing that section of the script with { and }. This script will print
<br>
<br>
<b>10
<br>3</b> </td >
<td valign="top" >
<br>x = 3
<br>{
<br>   var x = 10;print x
<br>}
<br>print x </td ></tr ></table >
<br />
<br />
<b>
<a name="jmolmathread-onlyvariables">Read-Only Variables</a></b>    
<a href="#jmolmath">back</a>
<br />
<br /> Some variables have preset meanings, as shown in the table below. A subset of these variables can be used in math expressions. If you create your own variables, their names must not begin with an underscore. Variables starting with underscore are defined by Jmol and can be used but not set in a script. To check the settings of all available read-only variables, use 
<b>show _?</b>. Read-only variables include: 
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>_animating</b></td >
<td valign="top" >whether or not Jmol is currently running through the frames as a result of 
<b>animation on</b> or 
<b>animation play</b> (true or false)</td ></tr >
<tr >
<td valign="top" >
<b>_animTimeSec</b></td >
<td valign="top" > The time in seconds required for an animation to complete one cycle. </td ></tr >
<tr >
<td valign="top" >
<b>_applet</b></td >
<td valign="top" >whether or not Jmol is running as an applet</td ></tr >
<tr >
<td valign="top" >
<b>_atomHovered</b></td >
<td valign="top" >the overall atom index of the atom that was most recently hovered over (or -1)</td ></tr >
<tr >
<td valign="top" >
<b>_atomPicked</b></td >
<td valign="top" >the overall atom index of the atom that was most recently picked (or -1). Can be used, for example, with 
<b>select atomIndex = _atomPicked</b></td ></tr >
<tr >
<td valign="top" >
<b>_currentFileNumber</b></td >
<td valign="top" >the number of the currently displayed file, starting with 1 (value will be 0 if more than one file is displayed) </td ></tr >
<tr >
<td valign="top" >
<b>_currentModelNumberInFile</b></td >
<td valign="top" >the number of the currently displayed model in its file (or 0 if more than one model is displayed) </td ></tr >
<tr >
<td valign="top" >
<b>_depthPlane</b></td >
<td valign="top" >The plane defining the back limit of the model for the current orientation and slabbing. See also 
<b>_slabPlane</b></td ></tr >
<tr >
<td valign="top" >
<b>_fileType</b></td >
<td valign="top" >The file type of the most recently loaded file</td ></tr >
<tr >
<td valign="top" >
<b>_firstFrame</b></td >
<td valign="top" >The first frame in the current animation frame range expressed in x.y notation </td ></tr >
<tr >
<td valign="top" >
<b>_frameID</b></td >
<td valign="top" > A numerical frame number equal to 1000000 times the file number plus the model index in the file</td ></tr >
<tr >
<td valign="top" >
<b>_height</b></td >
<td valign="top" >the height of the applet or application window in pixels </td ></tr >
<tr >
<td valign="top" >
<b>_lastFrame</td >
<td valign="top" >The last frame in the current animation frame range expressed in x.y notation</td ></tr >
<tr >
<td valign="top" >
<b>_loadPoint</b></td >
<td valign="top" > a number indicating the load status, usually 3 indicating successful load, possibly 0 indicating load failure. </td ></tr >
<tr >
<td valign="top" >
<b>_memory</b></td >
<td valign="top" >the amount of memory allocated to the applet or application </td ></tr >
<tr >
<td valign="top" >
<b>_modelFile</b></td >
<td valign="top" >the filename of the model (or "" if more than one model is displayed) </td ></tr >
<tr >
<td valign="top" >
<b>_modelName</b></td >
<td valign="top" >the name of the model (or "" if more than one model is displayed) </td ></tr >
<tr >
<td valign="top" >
<b>_modelNumber</b></td >
<td valign="top" >the current model number 
<b>as a string</b> in file.model notation (or "file1.model1 - file2.model2" if more than one model is currently displayed) </td ></tr >
<tr >
<td valign="top" >
<b>_modelTitle</b></td >
<td valign="top" >information from the file reader interpreted as a title</td ></tr >
<tr >
<td valign="top" >
<b>_mouseAction</b></td >
<td valign="top" > a number associated with the current mouse/key state </td ></tr >
<tr >
<td valign="top" >
<b>_mouseModifiers</b></td >
<td valign="top" > a number associated with the current key combination associated with the mouse </td ></tr >
<tr >
<td valign="top" >
<b>_mouseX</b></td >
<td valign="top" > the current X-position of the mouse </td ></tr >
<tr >
<td valign="top" >
<b>_mouseY</b></td >
<td valign="top" > the current Y-position of the mouse </td ></tr >
<tr >
<td valign="top" >
<b>_multiTouchClient</b></td >
<td valign="top" >indicates if Jmol is operating as a Sparsh-UI client and has connected with the Sparsh-UI server (possibly itself).</td ></tr >
<tr >
<td valign="top" >
<b> _multiTouchServer</b></td >
<td valign="top" > indicates whether Jmol is functioning as a 
<a class="xref" href="http://code.google.com/p/sparsh-ui/" target="_blank">Sparsh-UI</a> server. (Requires a specialized Jmol Sparsh-UI driver) and has successfully connected to a multi-touch device.</td ></tr >
<tr >
<td valign="top" >
<b>_navigating</b></td >
<td valign="top" > TRUE if navigation is on</b></td ></tr >
<tr >
<td valign="top" >
<b>_nProcessors</b></td >
<td valign="top" >the number of available processors</td ></tr >
<tr >
<td valign="top" >
<b>_picked</b></td >
<td valign="top" >The set of atoms most recently picked. This buffer is cleared when the user clicks twice off the molecule.</td ></tr >
<tr >
<td valign="top" >
<b>_pickedList</b></td >
<td valign="top" >The _picked atoms as an ordered array. Thus, 
<b>_pickedList[0]</b> is the last-picked atom; 
<b>_pickedList[-1]</b> is the second-to-last-picked atom; 
<b>_pickedList[-2][0]</b> are the three last-picked atoms.</td ></tr >
<tr >
<td valign="top" >
<b>_pickInfo</b></td >
<td valign="top" >information about the last atom picked, including a description of the atom, its atom number, and its x y z coordinates. For example: 
<br>
<b>[GLN]25:A.O/2.1 #175 40.271 8.524 2.615</b> </td ></tr >
<tr >
<td valign="top" >
<b>_signedApplet</b></td >
<td valign="top" >whether or not Jmol is running as an signed applet</td ></tr >
<tr >
<td valign="top" >
<b>_slabPlane</b></td >
<td valign="top" >The plane defining the front limit of the model for the current orientation and slabbing. See also 
<b>_depthPlane</b></td ></tr >
<tr >
<td valign="top" >
<b>_spinning</b></td >
<td valign="top" >whether or not the model is currently spinning (true or false). The _spinning variable can be used, for example, to toggle spinning on and off: 
<br>
<b>if (_spinning);spin off;else;spin on;endif;</b> </td ></tr >
<tr >
<td valign="top" >
<b>_useCommandThread</b></td >
<td valign="top" >TRUE if Jmol is using an independent command thread.</td ></tr >
<tr >
<td valign="top" >
<b>_version</b></td >
<td valign="top" >the version of Jmol expressed as an integer: vvrrxxx for Jmol vv.rr.xxx. For example, for Jmol 11.2.38, _version = 1102038</td ></tr >
<tr >
<td valign="top" >
<b>_versionDate</b></td >
<td valign="top" >the version of Jmol expressed in the form of 
<b>14.5.4_2016.04.03 2016-04-03 14:35</b> (Jmol 14.1).</td ></tr >
<tr >
<td valign="top" >
<b>_width</b></td >
<td valign="top" >the width of the applet or application window in pixels </td ></tr ></table >
<br />
<br />
<b>
<a name="jmolmathjmolmathvariabletypes">Jmol Math Variable Types</a></b>    
<a href="#jmolmath">back</a>
<br />
<br /> Jmol math allows for several distinct variable types, some of which are common types (boolean, integer, decimal, string, serial array, byte array, associative array, binary associative arrays), and some of which are special types of particular use in molecular calculations (point, plane, quaternion, 3x3 matrix, 4x4 matrix, atom bitset, bond bitset). Variable types may be combined in mathematical expressions. Array types may include any number of any combination of these data types. Examples include: 
<br>
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >array</td >
<td valign="top" > Standard arrays in Jmol are created using 
<b>x = [...]</b> or 
<b>x = array(...)</b>. For example: 
<br>
<br>
<b>xlist = array(true,3,3.5,"testing",{2.3,3.4,4.5});
<br>xlist = [true,3,3.5,"testing",{2.3, 3.4, 4.5}]
<br>xlist = [3 -3 5 -5]</b>
<br>
<br>Note that arrays may contain a mix of any variable type. Commas between elements are not required. The two methods of defining an array are slightly different. The 
<b>array()</b> function always defines an array, regardless of its contents. The 
<b>a = [....]</b> notation, on the other hand, will define a matrix, not an array, if the elements are numerical and the array is of the correct form (3 rows and 3 columns, or 4 rows and 4 columns).
<br>
<br>Arrays are stored, saved, and manipulable as objects, and all array assignments are by reference, as for JavaScript and Java, meaning that if x = ["a", "b", [3, 4, 5]], and we assign y = x[3], then y 
<i>is</i> x[3], not a copy of it, and if we later assign y[4] = "new", then at x[3] = ["a", "b", [3, 4, 5], "new"] as well. The functions 
<b>x.push(y)</b> and 
<b>x.pop()</b> can be used to add and remove elements from a Jmol array.
<br>
<br>The notation 
<b>a[2][3]</b> generally refers to the subarray consisting of the second and third elements of 
<b>a</b>. However, in the assignment context 
<b>a[2][3] = ...</b>, these numbers refer to the third element of the second element of the multidimensional array. 
<br>
<br>To specify a specific element of a multidimensional array in other contexts, you can use parentheses: 
<b>print (a[2])[3]</b> or, starting in Jmol 14.3.13, you can use "." separation to indicate nested array elements: 
<b>print a[2].[3]</b>.
<br>
<br></td ></tr >
<tr >
<td valign="top" >byte array</td >
<td valign="top" > A byte array holds data in the form of 8-bit bytes. Starting with 
<span class="newv">Jmol 14.2</span>, byte arrays can be created from base64-encoded data using 
<b>x = array(";base64,...")</b> where "..." is base64-encoded data or loaded from a file using load(fileName, TRUE). When loaded from a file, the byte array takes the form of one or more entries in a "binary associative array" (below). A byte array x will give x.type = "byteArray".</td ></tr >
<tr >
<td valign="top" >associative array</td >
<td valign="top" > Associative arrays store information retrievable by string-based keys. The information may be any type, including another associative array. Empty associative arrays are created using 
<b>x = {}</b>. Reference or retrieval is accomplished one of three ways: 
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > arrayName["keyName"] </td >
<td valign="top" > The guaranteed way to get a key is the same as JavaScript notation. If a key is absent, the empty string is returned. </td ></tr >
<tr >
<td valign="top" > arrayName..keyName </td >
<td valign="top" > Alternatively, wo consecutive periods can be used, provided the key is a simple alphanumeric quantity such as "key1" or "x". Keys can be chained: 
<b>myData..atoms[1]..x</b></td ></tr >
<tr >
<td valign="top" > arrayName.keyName </td >
<td valign="top" > Finally, similarly to JavaScript and Java, one can use simple "dot" notation -- with just one caveate. In Jmol the three functions 
<b>a.keys</b>, 
<b>a.size</b>, and 
<b>a.type</b> return an array of keys, the number of keys, and the string "hash" for an associative array. If your array has those keys, you must use 
<b>a..keys</b>, 
<b>a..size</b>, or 
<b>a..type</b>, or 
<b>a["keys"]</b>, 
<b>a["size"]</b>, or 
<b>a["type"]</b>, to access them. </td ></tr ></table > 
<br> Thus, 
<br> 
<br> 
<b>x = {}</b>
<br> 
<b>x.atoms = {visible}</b>
<br> 
<b>x["file"] = _modelFile</b>. The functions 
<b>x.push(key,value)</b> and 
<b>x.pop(key)</b> can be used to add and remove elements from a Jmol associate array (
<span class="newv">Jmol 14.2</span>).
<br>
<br>Jmol's associative arrays are, strictly speaking, a superset of JSON arrays, consisting of a bracketed comma-separated list of key-value pairs, involving a key, a colon, and an expression. The key does not have to be quoted if it is a simple alphanumeric key such as "x" or "x2" and square brackets [...] are used rather than braces {...}. For example: 
<br>
<br>
<b> b = [test : 34, "my test": "OK"]
<br>b.test = 100
<br > b.test3 =["one", 3, 4, 5]
<br>print b["my test"] + " -- " + ++b.test +" -- "+b.test3[1]</b>
<br>
<br>OK -- 101 -- one
<br>
<br>
<b>show b</b>
<br>
<br> b = [ "my test":"OK","test":101,"test3":[ "one",3,4,5 ] ]
<br> 
<br>
<b>b -= "test3"
<br> show b</b>
<br> 
<br> b = ["test" : 101, "my test" : "OK"] 
<br>
<br>The key can always be quoted, as in JSON, and, as noted, an alternative syntax involving braces insead of brackets, as in JavaScript, can be used, in which case the key must be quoted. Note that an empty associative array must be created using {}, not [ ]. </td ></tr >
<tr >
<td valign="top" >binary associative array</td >
<td valign="top" > 
<span class="newv">Jmol 14.2</span> introduces the binary associative array type. This data type is a form of associative array that allows data to be preserved as raw bytes. For example, image or zip file data can be saved in an array without need for translation to base64. Any associative array is a binary array if it contains the key "$_BINARY_$". The value of this key is never checked, but Jmol will then assume that all other values MAY be in byte form. (They can be any values, but if they are byte arrays, then they will be preserved as such.) 
<br>
<br>The three forms of binary associative arrays are given in the table below:
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>keys</b></td >
<td valign="top" >
<b>contents</b></td >
<td valign="top" >
<b>write VAR</b></td ></tr >
<tr >
<td valign="top" >$_BINARY_$, _DATA_</td >
<td valign="top" > generic binary data as a single byte array</td >
<td valign="top" >binary file</td ></tr >
<tr >
<td valign="top" >$_BINARY_$, (filenames) </td >
<td valign="top" > byte arrays keyed by filename</td >
<td valign="top" >ZIP fle</td ></tr >
<tr >
<td valign="top" >$_BINARY_$, _IMAGE_ , (filenames) </td >
<td valign="top" > PNG image with associated files</td >
<td valign="top" >PNGJ file, if created as such using 
<b>x = write("PNGJ")</b> </td ></tr ></table >
<br>
<br>Combined with Jmol's capability to read and write ZIP files, the manipulation of associative arrays allows Jmol scripts to read or create, modify, append to, and save ZIP files and PNGJ images as well as any binary data format. For example, the following script creates a ZIP file relating to the currently loaded structure:
<b>
<br>
<br>  a = {}
<br>  a.push("file.dat",show("file"))
<br>  a.push("state.spt",show("state"))
<br>  a.push"image.png", getProperty("image"))
<br>  a.push("$_BINARY_$",true)
<br>  write var a myfile.zip</b> </td ></tr >
<tr >
<td valign="top" >bitset</td >
<td valign="top" > x = {atomno 
< 30};
<br> x = ({0:28 45 56:62})
<br>
<br>Atom bitsets specify a group of atoms in the overall collection (not just one model). Numbers are atom indices, which start with 0 and run through all atoms in all models. </td ></tr >
<tr >
<td valign="top" >bondset</td >
<td valign="top" > x = {atomno 
< 30}.bonds;
<br> x = [{0:4 6 9:12}]
<br>
<br> Bondsets specify groups of bonds in the overall collection. Numbers are bond indices, which start with 0 and go through all bonds in all models. There are only a few contexts in which bond bitsets can be used. Examples include: 
<br>
<br>color @{ {ala}.bonds } green; select [{3:300}]; color BONDS white; connect @{ {dna}.bonds } radius 0.1;. </td ></tr >
<tr >
<td valign="top" > boolean </td >
<td valign="top" >Boolean values include TRUE and FALSE. Case is not sensitive, so TRUE == True == true: 
<br>
<br> isOK = TRUE; if(isOK) { print "all is good" }</td ></tr >
<tr >
<td valign="top" >decimal</td >
<td valign="top" >averX_nm = {atomno 
< 10}.x * 100.0; 
<br>
<br>Decimal numbers in Jmol are stored as 32-bit floating-point values, with critical calculations carried out as 64-bit double values.</td ></tr >
<tr >
<td valign="top" > integer</td >
<td valign="top" > for (var i = 1; i 
< 10; i = i + 1){ print i }
<br>
<br></td ></tr >
<tr >
<td valign="top" > 3x3 matrix</td >
<td valign="top" >Rotation matrices in Jmol are indicated either as a 3-row, 3-column array or by 9 numbers set off by double brackets.
<br>
<br>m = [[1.0 2.0 3.0],[4.0 5.0 6.0],[7.0 8.0 9.0]];
<br>m = [[0.57010806 -0.0516641 0.8199437 0 -0.5407497 0.72776425 0.42183995 -0.6185197 -0.68387866 0.3869669]]
<br>m = axisAngle({1 0 0},30)%-9
<br>rotate @m
<br>
<br>Note that commas are required between rows, if they are indicated.</td ></tr >
<tr >
<td valign="top" > 4x4 matrix</td >
<td valign="top" >Translation/rotation matrices in Jmol are indicated either as a 4-row, 4-column array or by 16 numbers set off by double brackets.
<br>
<br>m = [[0.57010806 -0.0516641 0.8199437 0],[-0.5407497 0.72776425 0.42183995 0],[-0.6185197 -0.68387866 0.3869669 0][0 0 0 1]];
<br>m =[[0.57010806 -0.0516641 0.8199437 0 -0.5407497 0.72776425 0.42183995 0 -0.6185197 -0.68387866 0.3869669 0 0 0 0 1]] ;
<br>rotate @m
<br>
<br>Commas are required between rows, but indicating rows is optional.</td ></tr >
<tr >
<td valign="top" >point </td >
<td valign="top" > pt = {3.2 3.3 3.4};
<br>
<br>Commas are optional.</td ></tr >
<tr >
<td valign="top" > plane </td >
<td valign="top" > xyPlane = {0 0 1 0};
<br>
<br> Planes are defined as {a b c d}, where the equation of the plane is 
<b>ax + by + cz + d = 0</b>.</td ></tr >
<tr >
<td valign="top" >quaternion </td >
<td valign="top" > q = quaternion({1 0 0}, 30);
<br> q = {0.25881904 0.0 0.0 0.9659258};
<br>
<br>(see next section) Quaternions are saved internally in Jmol using the same format as for planes, as single-precision floating point four-element vectors, with parameter order {x y z w} or {q1 q2 q3 q0}. Ordering the parameters in this way is consistent with 
<a class="xref" href="http://java.sun.com/javase/technologies/desktop/java3d/forDevelopers/J3D_1_3_API/j3dapi/javax/vecmath/Quat4f.html" target="_blank">Java Quat4f</a> format and allows both quaternions and planes to contain axis information in the first three parameters. The common storage format for planes and quaternions works because typical quaternion operations are not common to operations involving planes.</td ></tr >
<tr >
<td valign="top" >string</td >
<td valign="top" > myLabel = "this is a test"; 
<br>
<br>Strings may be enclosed in either single or double quotes.</td ></tr ></table >
<br />
<br />
<b>
<a name="jmolmathdifferencesbetweenjmolmathandjavascript">Differences Between Jmol Math and JavaScript</a></b>    
<a href="#jmolmath">back</a>
<br />
<br /> Jmol Math is mostly an extension of JavaScript, with some differences, most notably:
<br> 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>Jmol</b></td >
<td valign="top" >
<b>JavaScript</b></td ></tr >
<tr >
<td valign="top" > Variable and function names are not case sensitive. 
<b>test == Test</b>.</td >
<td valign="top" > Variable and function names are case sensitive. </td ></tr >
<tr >
<td valign="top" > Use of undefined variables is not an error; undefined variables are simply returned as empty strings. </td >
<td valign="top" > Reference to undefined variables throws an error. </td ></tr >
<tr >
<td valign="top" > Boolean values are not case sensitive: TRUE == true.</td >
<td valign="top" >Booleans are specifically 
<b>true</b> and 
<b>false</b>. </td ></tr >
<tr >
<td valign="top" > Integers are distinct from decimals, which are 32-bit floating-point values. </td >
<td valign="top" > All numbers are double-precision 64-bit floating-point values; there is no distinction between integers and decimals (without using special data types such as Int32Array). </td ></tr >
<tr >
<td valign="top" > Array indices are 1-based; 0 is the last element of an array, -1 is the next-to-last element, etc. If 
<b>a</b> is an array, then 
<b>a[1][2]</b> generally represents the first two elements of 
<b>a</b>. To specify a specific element of a multidimensional array, use parenthesis: 
<b>(a[1])[2]</b>. However, in the assignment context 
<b>a[1][2] = ...</b>, this notation refers to the second element of the first element of the multidimensional array 
<b>a</b>.</td >
<td valign="top" > Array indices are 0-based; negative array indices are not meaningful.. If 
<b>a</b> is an array, then 
<b>a[1][2]</b> represents the third element of the second element of the multidimensional array 
<b>a</b>.</td ></tr >
<tr >
<td valign="top" > 3x3 and 4x4 matrices are distinct subsets of arrays. If 
<b>m</b> is a matrix, then 
<b>m[1][2]</b> addresses the matrix element in column 1, row 2.</td >
<td valign="top" > No distinction between arrays and matrices. </td ></tr >
<tr >
<td valign="top" >Associative arrays are expressed as {"key":value} or [key:value]. Quotation marks, are required when braces { } are used, but are optional when brackets [ ] are used. </td >
<td valign="top" > Associative arrays are Objects and as such are expressed as {key:value} only. Quotation marks around key are generally optional.</td ></tr >
<tr >
<td valign="top" > Bitsets serve as highly compressed boolean arrays, with logical operations AND, OR, and NOT.</td >
<td valign="top" >No equivalent data type.</td ></tr >
<tr >
<td valign="top" > Operations such as 
<b>a + b</b> on variables of different types depend upon the types involved, with the one on the left of principal importance, coercing the result. For example, 3 + "3" == 6; "3" + 3 = "33". </td >
<td valign="top" > Operations such as 
<b>a + b</b> on variables of different types depend upon the types involved, but do not depend upon order: 3 + "3" and "3" + 3 both equal "33".</td ></tr >
<tr >
<td valign="top" > Binary operations include +, -, *, /, % (modulus), \ (integer division), ** (exponentiation), && (or AND or just &), || (or OR or just |), ! (or NOT), == (or just =), and other standard comparison operators. Jmol math does not support bitwise operations such as &, |, or ^, although bitwise and, or, and not are all used with bitsets.</td >
<td valign="top" > Operations include +, -, *, /, %, ++, --, && (logical AND), || (logical OR), == and === (strict equivalence, as distinct from == or the assignment operator, =), and bitwise operations &, | ^, ~, &lt;&lt;, >>, and >>>. </td ></tr >
<tr >
<td valign="top" > Inline assignment such as x = (y = 3), or just x = y = 3, is not supported. (In this case, x will end up true or false, depending upon the value of y.</td >
<td valign="top" > Inline assignment such as x = (y = 3),or just x = y = 3, is supported.</td ></tr ></table >
<br />
<br />
<b>
<a name="jmolmathjmolquaternionmath">Jmol Quaternion Math</a></b>    
<a href="#jmolmath">back</a>
<br />
<br /> All quaternions in Jmol are 
<b>unit</b> quaternions, which are four-dimensional vectors that can be used to define the relative rotational aspects of a protein or nucleic acid structure as well as overall molecular orientation. This means that they can be used in a variety of commands, including 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#navigate">navigate</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#moveto">moveto</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#rotate">rotate</a> to rotate the model or selected atoms of the model around specific axes and to specific orientations. Each quaternion can be thought of as representing a unique axis and angle which will transform a reference frame (either the molecular reference frame or the window reference plane to a given orientation. If 
<b>n</b> is the axis and 
<b>theta</b> is the angle (measured in a right-handed, counter-clockwise direction), then 
<b>q</b>(
<b>theta</b>/2, 
<b>n</b>) = (cos(
<b>theta</b>/2), 
<b>n</b> sin(
<b>theta</b>/2)). For storage, the vector 
<b>n</b> is broken out into its x, y, z components, giving a total of four numbers, (q0, q1, q2, q3), where q0 = cos(
<b>theta</b>/2), q1 = 
<b>n
<sub>x</sub></b> sin(
<b>theta</b>/2), q2 = 
<b>n
<sub>y</sub></b> sin(
<b>theta</b>/2), and q3 = 
<b>n
<sub>z</sub></b> sin(
<b>theta</b>/2). Jmol reports a quaternion as a four-vector with q0 listed last: {q1, q2, q3, q0} in order to be consistent with Java's {x, y, z, w} notation. 
<br>
<br>The 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#functionsx=fyfunctions">quaternion()</a> function constructs quaternions using a variety of starting points, including no parameters (the current model rotation), the four numbers q0-q3, 
<b>quaternion(q0, q1, q2, q3)</b>, axis-angle information, 
<b>quaternion({0 0 01}, 30)</b>, and 3x3 rotation matrices, 
<b>quaternion(mat)</b>. The quaternion() function also can deliver the 
<a class="xref" href="http://www.math.ucsd.edu/%7Esbuss/ResearchWeb/spheremean/" target="_blank">spherical mean</a> rotation of a set of rotations, 
<b>quaternion([qa, qb, qc, ....])</b>, or its standard deviation, 
<b>quaternion([qa, qb, qc, ....], TRUE)</b> based on Samuel R. Buss and Jay Fillmore, "Spherical Averages and Applications to Spherical Splines and Interpolation", ACM Transactions on Graphics 20 (2001) 95-126.
<br>In addition, quaternions representing the orientation of specific amino acid residues and nucleic acid bases can be constructed automatically based on the setting of the Jmol parameter 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setmisc">quaternionFrame</a>, and certain commands and functions such as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#show">show rotation</a> and 
<b>script("show rotation")</b> deliver quaternions. These quaternion values can be depicted visually using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#plot">plot</a> commands and can be listed or saved to a file using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#show">show</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write</a> commands, respectively. 
<br>
<br>An interesting feature of quaternions that makes them different from the more common 3x3 rotation matrices is that they can encode rotations up to 720 degrees. For example, quaternion({0 0 1}, 30) = {0.0 0.0 0.25881904 0.9659258} (a 30-degree CCW rotation around the Z axis), while quaternion({0 0 1}, 390) = {0.0 0.0 -0.25881904 -0.9659258} (because sin(195) and cos(195) are both negative). While rotations of 0 degrees, {0 0 1 1}, and 360 degrees, {0 0 -1 -1} represent the same final state, in certain cases they can represent different 
<i>processes</i> and can thus be significantly different. In addition, quaternion differences (or "derivatives") can be quantified in ways that cannot be done for 3x3 rotation matrices. For example, the mean and standard deviation of a set of quaternions can be determined: 
<b>print [a,b,c,d,e].average</b>, 
<b>print [a,b,c,d,e].stddev</b>, where a-e are quaternions, providing, for example, the average helical axis for a protein helix structure, or a measure of how "ideal" that helix is. 
<br>
<br>The quaternion 
<b>q = quaternion()</b> measures how much the model has been rotated from its reference position (with 
<b>x</b> to the right, 
<b>y</b> to the top, and 
<b>z</b> toward the user). It can be used to align any axis or plane with any other "window-frame" axis. For example, here is a quaternion recipe for the shortest rotation that takes atom "X" and puts it between the center of the model and the user, that is, "in the forefront:"
<br>
<br>
<b>q = quaternion(script("show rotation"))
<br>toAtom = {C1}.xyz - {*}.xyz
<br>toUser = (!q)%{0 0 1}
<br>axis = cross(toAtom, toUser)
<br>a = angle(toAtom, {0 0 0}, axis, toUser)
<br>rotate MOLECULAR {0 0 0} @axis @a</b>
<br>
<br>The idea here is to apply the 
<i>reverse</i> model rotation quaternion to the z axis, {0 0 1} to give a vector that is pointing straight at the user. Then we get an axis that is perpendicular to both that and the vector we want to assume this position. The directed angle around that axis is obtained as a dihedral angle relating our atom, the origin, that axis, and the point in space directed toward the user. Then we rotate in a MOLECULAR frame to get the desired effect.
<br>
<br>For another example, let's line up the plane through atoms C1, C5, and C8 such that, relative to the user, C1 is directly to the right of C5, and C8 is in the plane of the screen, above the other two atoms. This is trivial using quaternions:
<b>
<br>
<br>x = quaternion({c5}, {C1}, {c8})
<br>q = quaternion(script("show rotation"))
<br>rotate molecular quaternion @{(!q) * (!x)}</b>
<br>
<br>This basically says, "Move this plane into the position currently occupied by the xy plane (!x), then move that plane back to the original position of the xy plane (!q)."
<br />
<br />
<b>
<a name="jmolmathoperatorsandoperands">Operators and Operands</a></b>    
<a href="#jmolmath">back</a>
<br />
<br /> Jmol expressions can include standard operators: +, -, *, /, **(exponentiation) %(modulus), and (&, &&, and), or (|, ||, or), not (!, not), and all standard comparison operators. 
<span class="newv">Jmol 14.2</span> implements an SQL-like operator LIKE, which can be used to compare strings with wildcards (xxx*, *xxx, and *xxx*, for "starts with", "ends with", and "contains", respectively). Also supported are the unary operators x++, x--, ++x, --x, which can stand alone or be part of an expression: 
<br>
<br>
<b>a = ++b
<br>print "i=" + ++i
<br>++a</b>
<br>
<br> In addition, assignments +=, -=, *=, /=, = (integer division), |=, and &= are supported:
<br>
<br>
<b>a += 2
<br>b = {ala}; b |= {gly}</b>
<br>
<br> In general, expressions are evaluated from left to right using standard operator precedence (*,/,\ before +/-; +/- before AND/OR/NOT). For example: 
<br>
<br>
<b>twoPI = 3.14159 * 2;
<br>minBondDistance = minBondDistance * 0.5 + 0.1;</b>
<br>
<br> In addition, you can set variables to be the number of atoms that match an atom expression. For example: 
<br>
<br>
<b>nNC = {_N and */1 and connected(_C)}.size
<br>nAtoms = {*}.size;
<br>nCH = {_H} + {_C};</b>
<br>
<br>Since Jmol math does not include strict typecasting, it uses a relatively complex set of rules to determine the result of operations on mixed variable types. When two different variables are operated upon, the resulting variable type depends upon the operator used, the order of the variables, and sometimes the value of the variables. See 
<a class="xref" href="misc/operations.txt" target="_blank">misc/operations.txt</a> for details. In general, when conversion is required for a string, point, plane, bitset, or array, Jmol will attempt to convert it to a variable type compatible with the left-hand operand prior to operating. These conversions generally involve:
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >string </td >
<td valign="top" >to boolean</td >
<td valign="top" >The strings "", "FALSE", "0", and decimal strings such as "0E1" and "0.0" that equal 0 are converted to FALSE; all other strings are converted to TRUE.</td ></tr >
<tr >
<td valign="top" >string</td >
<td valign="top" >to integer</td >
<td valign="top" >A string evaluating to an integer is converted to that integer; all other strings are converted to 0.</td ></tr >
<tr >
<td valign="top" >string</td >
<td valign="top" >to decimal</td >
<td valign="top" >A string evaluating to a number is converted to that number; all other strings are converted to the decimal value "not a number", or "NaN".</td ></tr >
<tr >
<td valign="top" >string</td >
<td valign="top" >to other</td >
<td valign="top" >Jmol saves all states as simple strings, so certain character sequences are automatically turned back into other variable types when operated upon. Jmol automatically converts:
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >{x y z}</td >
<td valign="top" > to a point </td ></tr >
<tr >
<td valign="top" >{x y z w}</td >
<td valign="top" > to a plane or quaternion</td ></tr >
<tr >
<td valign="top" >({i j k l:m ... })</td >
<td valign="top" > to an atom bitset </td ></tr >
<tr >
<td valign="top" >[{i j k l:m ... }]</td >
<td valign="top" > to a bond bitset</td ></tr ></table ></td ></tr >
<tr >
<td valign="top" >point</td >
<td valign="top" >to integer</td >
<td valign="top" >The distance from the point to {0 0 0} rounded DOWN to the nearest integer. Note that this allows rounding a positive decimal number x down to the nearest integer (a "floor" operation) using 
<b>0 + point(x, 0, 0)</b>.</td ></tr >
<tr >
<td valign="top" >point</td >
<td valign="top" >to decimal</td >
<td valign="top" >The distance from the point to {0 0 0}; same as x.distance({0 0 0})</td ></tr >
<tr >
<td valign="top" >plane</td >
<td valign="top" >to integer</td >
<td valign="top" >The distance from the plane to {0 0 0} rounded DOWN to the nearest integer</td ></tr >
<tr >
<td valign="top" >plane</td >
<td valign="top" >to decimal</td >
<td valign="top" >The distance from the plane to {0 0 0}; same as x.distance({0 0 0})</td ></tr >
<tr >
<td valign="top" >quaternion</td >
<td valign="top" >to decimal</td >
<td valign="top" >cotangent(abs(theta)/2), where theta is the angle of the rotation associated with this quaternion </td ></tr >
<tr >
<td valign="top" >bitset</td >
<td valign="top" >to decimal or integer</td >
<td valign="top" >The number of selected atoms or bonds in the bitset; same as x.size</td ></tr >
<tr >
<td valign="top" >array</td >
<td valign="top" >to decimal or integer</td >
<td valign="top" >The number of elements in the array; same as x.size</td ></tr ></table >
<br />
<br />
<b>
<a name="jmolmathoperationrules">Operation Rules</a></b>    
<a href="#jmolmath">back</a>
<br />
<br /> Rules for operations with the given types include:
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > 
<br>+</td >
<td valign="top" >addition</td >
<td valign="top" >a + b produces a decimal number EXCEPT:
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >string + b</td >
<td valign="top" >string</td >
<td valign="top" > If b is not a string, the closest string representation will be used. </td ></tr >
<tr >
<td valign="top" >integer + b</td >
<td valign="top" >integer</td >
<td valign="top" > unless b is a decimal. </td ></tr >
<tr >
<td valign="top" >array + b</td >
<td valign="top" >array</td >
<td valign="top" >adds b (or all the elements of b, if b is also an array) to the end of the array to form a new array. Thus, to add a full array b as a single element to the array a, use 
<b>a + [b]</b>, and to add an element b to the beginning of array a, use 
<b>[b] + a</b>.</td ></tr >
<tr >
<td valign="top" >point + b</td >
<td valign="top" > point </td >
<td valign="top" > If b is another point then adds the two; if b is a quaternion or plane, extracts the {x y z} component of b and adds that; otherwise adds the decimal equivalent of b to all coordinates of the point.</td ></tr >
<tr >
<td valign="top" >
<nobr>matrix3x3 + matrix3x3</nobr> </td >
<td valign="top" > matrix3x3</td >
<td valign="top" > sum of individual elements of the two matrices</td ></tr >
<tr >
<td valign="top" >matrix3x3 + point </td >
<td valign="top" > matrix4x4</td >
<td valign="top" > adds a translation vector to a rotation matrix to give a 4x4 matrix</td ></tr >
<tr >
<td valign="top" >
<nobr>quaternion + b</nobr></td >
<td valign="top" >quaternion</td >
<td valign="top" > If b is a quaternion, generates the product of the two quaternion rotations; otherwise adds the decimal equivalent of x to the angle of rotation associated with this quaternion.</td ></tr ></table ></td ></tr >
<tr >
<td valign="top" > 
<br> -</td >
<td valign="top" >subtraction</td >
<td valign="top" >a - b produces a decimal number EXCEPT:
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >string - b</td >
<td valign="top" >integer</td >
<td valign="top" > specifically when the string is not a string representation of a decimal, such as "3.5", and b is not a decimal itself. </td ></tr >
<tr >
<td valign="top" >integer - b</td >
<td valign="top" >integer</td >
<td valign="top" > unless b is a decimal. </td ></tr >
<tr >
<td valign="top" >point - b</td >
<td valign="top" >point</td >
<td valign="top" > subtraction of one point from another if both are points; subtraction of the {x y z} components of b if b is a quaternion or plane; otherwise subtaction of the decimal equivalent of b from each of the coordinates of the point. </td ></tr >
<tr >
<td valign="top" >
<nobr>associative array - x</nobr></td >
<td valign="top" > associative arrray</td >
<td valign="top" >removes key "x" from the associative array</td ></tr >
<tr >
<td valign="top" >matrix3x3 - matrix3x3 </td >
<td valign="top" > matrix3x3</td >
<td valign="top" > difference of individual elements of the two matrices</td ></tr >
<tr >
<td valign="top" >matrix4x4 - matrix4x4 </td >
<td valign="top" > matrix4x4</td >
<td valign="top" > difference of rotational parts of the two matrices, with no change in the translational component</td ></tr >
<tr >
<td valign="top" >quaternion - b</td >
<td valign="top" >quaternion</td >
<td valign="top" > If b is a quaternion, generates the divides b into the quaternion; otherwise subtracts the decimal equivalent of x from the angle of rotation associated with this quaternion</td ></tr ></table ></td ></tr >
<tr >
<td valign="top" > 
<br>*</td >
<td valign="top" >multiplication</td >
<td valign="top" >a * b produces a decimal number EXCEPT:
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >string * integer </td >
<td valign="top" >integer</td >
<td valign="top" > when the string is the string representation of an integer</td ></tr >
<tr >
<td valign="top" >integer * b</td >
<td valign="top" >integer </td >
<td valign="top" > unless b is a decimal </td ></tr >
<tr >
<td valign="top" >point * b</td >
<td valign="top" >point </td >
<td valign="top" > producing the point scaled by the decimal equivalent of b, unless b is also a point, in which case the result is the dot product producing a decimal, or a matrix, in which case the result is the transform of the point</td ></tr >
<tr >
<td valign="top" >array * matrix3x3 </td >
<td valign="top" > array </td >
<td valign="top" > when the array has 3 elements; the transpose of the matrix is used for the transformation</td ></tr >
<tr >
<td valign="top" >array * matrix4x4 </td >
<td valign="top" > array </td >
<td valign="top" > when the array has 4 elements; the transpose of the matrix is used for the transformation</td ></tr >
<tr >
<td valign="top" >matrix3x3 * matrix3x3 </td >
<td valign="top" > matrix3x3</td >
<td valign="top" > product of two matrices</td ></tr >
<tr >
<td valign="top" >matrix3x3 * b </td >
<td valign="top" > point</td >
<td valign="top" > if b is a representation of a point, the matrix transformation of that point.</td ></tr >
<tr >
<td valign="top" >matrix3x3 * array </td >
<td valign="top" > array</td >
<td valign="top" > if the array is a 3-element array; generates a 3-element array transformed by the matrix.</td ></tr >
<tr >
<td valign="top" >
<nobr>matrix4x4 * matrix4x4 </nobr></td >
<td valign="top" > matrix4x4</td >
<td valign="top" > product of two 4x4 matrices</td ></tr >
<tr >
<td valign="top" >matrix4x4 * b </td >
<td valign="top" > point </td >
<td valign="top" > if b is a represenation of a point, the matrix transformation of that point.</td ></tr >
<tr >
<td valign="top" >matrix4x4 * array </td >
<td valign="top" > array</td >
<td valign="top" > if the array is a 4-element array; generates a 4-element array transformed by the matrix.</td ></tr >
<tr >
<td valign="top" >
<nobr>quaternion * quaternion</nobr></td >
<td valign="top" >quaternion</td >
<td valign="top" >quaternion multiplication q2 * q1 results in a composite rotation resulting from first rotating by q1, then by q2.</td ></tr >
<tr >
<td valign="top" >quaternion * (decimal)x</td >
<td valign="top" >quaternion</td >
<td valign="top" > multiplication of the angle associated with this quaternion by x </td ></tr >
<tr >
<td valign="top" >quaternion * matrix3x3</td >
<td valign="top" >quaternion</td >
<td valign="top" > quaternion product</td ></tr ></table ></td ></tr >
<tr >
<td valign="top" > 
<br> /</td >
<td valign="top" >division</td >
<td valign="top" >a / b produces a decimal number EXCEPT:
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >integer / integer</td >
<td valign="top" >integer </td ></tr >
<tr >
<td valign="top" >point / b</td >
<td valign="top" >point</td >
<td valign="top" > if b is a point, then a is scaled by the magnitude of b; thus 
<b>a/a</b> when a is a point produces a normalized vector in the direction from {0 0 0} to point a</td ></tr >
<tr >
<td valign="top" >
<nobr>quaternion / (decimal)x</nobr></td >
<td valign="top" > quaternion</td >
<td valign="top" > division of the angle associated with this quaternion by x </td ></tr >
<tr >
<td valign="top" >
<nobr>quaternion / quaternion</nobr></td >
<td valign="top" >quaternion</td >
<td valign="top" > q2 / q1 = q2 * q1
<sup>-1</sup> (absolute difference in rotation, in the molecular frame)</td ></tr ></table ></td ></tr >
<tr >
<td valign="top" > 
<br> \</td >
<td valign="top" >left division</td >
<td valign="top" >a \ b produces integer division EXCEPT:
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >quaternion \ quaternion</td >
<td valign="top" >quaternion</td >
<td valign="top" > q1 \ q2 = q1
<sup>-1</sup> * q2 (relative difference in rotation, in the q1 frame)</td ></tr ></table ></td ></tr >
<tr >
<td valign="top" > 
<br> **</td >
<td valign="top" >exponentiation</td >
<td valign="top" >a**b takes a to the power of b; if both a and b are integers, the result is an integer, otherwise the result is a decimal number.</td ></tr >
<tr >
<td valign="top" > 
<br> %</td >
<td valign="top" >modulus</td >
<td valign="top" >a % b is fully defined only for integer b and produces an integer EXCEPT:
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >decimal % 0</td >
<td valign="top" >integer </td >
<td valign="top" > decimal a rounded to nearest integer, with n.5 rounding to (n + 1) and -n.5 rounding to -(n + 1)</td ></tr >
<tr >
<td valign="top" >decimal % b</td >
<td valign="top" >string </td >
<td valign="top" > decimal a rounded to b digits after the decimal point when b > 0; decimal a rounded to b significant digits in scientific notation when b 
< 0</td ></tr >
<tr >
<td valign="top" >matrix4x4 % 1</td >
<td valign="top" > matrix3x3 </td >
<td valign="top" > extract the 3x3 rotation matrix from a 4x4 rotation/translation matrix</td ></tr >
<tr >
<td valign="top" >matrix4x4 % 2</td >
<td valign="top" >point</td >
<td valign="top" > extract the translational vector from a 4x4 rotation/translation matrix</td ></tr >
<tr >
<td valign="top" >quaternion %"w"</td >
<td valign="top" >decimal</td >
<td valign="top" >(also q.w or q%0) extract q0 </td ></tr >
<tr >
<td valign="top" >quaternion %"x"</td >
<td valign="top" >decimal</td >
<td valign="top" > (also q.x or q%1) extract q1</td ></tr >
<tr >
<td valign="top" >quaternion %"y"</td >
<td valign="top" >decimal</td >
<td valign="top" > (also q.y or q%2) extract q2</td ></tr >
<tr >
<td valign="top" >quaternion %"z"</td >
<td valign="top" >decimal</td >
<td valign="top" >(also q.z or q%3) extract q3 </td ></tr >
<tr >
<td valign="top" >
<nobr>quaternion (or plane) %"normal"</nobr></td >
<td valign="top" >point</td >
<td valign="top" > (also q%4) plane normal or quaternion axis; in the case of a plane, the vector from this point to {0 0 0} is directed toward the plane; for quaternions, the axis is defined such that the angle would be between -180 and 180 degrees. </td ></tr >
<tr >
<td valign="top" >quaternion %"eulerZXZ"</td >
<td valign="top" >point</td >
<td valign="top" >(also q%5) Euler Z-X-Z equivalent angles, as {z x z}.</td ></tr >
<tr >
<td valign="top" >quaternion %"eulerZYZ"</td >
<td valign="top" >point</td >
<td valign="top" >(also q%6) Euler Z-Y-Z equivalent angles, as {z y z}.</td ></tr >
<tr >
<td valign="top" >quaternion %"vector"</td >
<td valign="top" >point</td >
<td valign="top" >(also q%-1) extract the rotational axis ({q1 q2 q3} or {x y z}) as a point (vector from {0 0 0}) </td ></tr >
<tr >
<td valign="top" >quaternion %"theta"</td >
<td valign="top" >decimal</td >
<td valign="top" > (also q%-2) extract the angle in degrees for the rotation associated with this quaternion</td ></tr >
<tr >
<td valign="top" >quaternion %"axisX"</td >
<td valign="top" >point</td >
<td valign="top" >(also q%-3) extract the first column of the rotation matrix associated with this quaternion (what {1 0 0} is transformed to)</td ></tr >
<tr >
<td valign="top" >quaternion %"axisY"</td >
<td valign="top" >point</td >
<td valign="top" >(also q%-4) extract the second column of the rotation matrix associated with this quaternion (what {0 1 0} is transformed to)</td ></tr >
<tr >
<td valign="top" >quaternion %"axisZ"</td >
<td valign="top" >point</td >
<td valign="top" >(also q%-5) extract the third column of the rotation matrix associated with this quaternion (what {0 0 1} is transformed to)</td ></tr >
<tr >
<td valign="top" >quaternion %"axisangle"</td >
<td valign="top" >point4</td >
<td valign="top" >(also q%-6) extract the related axis-angle for this rotation as {x, y, z, theta(degrees)} </td ></tr >
<tr >
<td valign="top" >quaternion %"matrix"</td >
<td valign="top" >3x3 matrix</td >
<td valign="top" >(also q%-9) rotation matrix equivalent.</td ></tr >
<tr >
<td valign="top" >quaternion % {x y z}</td >
<td valign="top" >point</td >
<td valign="top" >transform {x y z} by the rotation associated with this quaternion</td ></tr >
<tr >
<td valign="top" >string % b</td >
<td valign="top" >string</td >
<td valign="top" > when b > 0, right-justified in a field b characters wide; when b 
< 0, left-justified in a field b characters wide. Special values 9999 and -9999 return upper case and lower case, respectively. b = 0 trims the string of white space.</td ></tr >
<tr >
<td valign="top" >point % b</td >
<td valign="top" >point</td >
<td valign="top" >generates the unitcell coordinate corresponding to the point, offset from {0 0 0} by {b/1 b/1 b/1}. </td ></tr >
<tr >
<td valign="top" >bitset % b</td >
<td valign="top" >bitset</td >
<td valign="top" >a truncated to first b items; same as a[1][b]</td ></tr >
<tr >
<td valign="top" >array % b</td >
<td valign="top" >array</td >
<td valign="top" >each element treated as a string and justified individually</td ></tr ></table ></td ></tr >
<tr >
<td valign="top" > 
<br>&& || ! </td >
<td valign="top" >AND/OR/NOT</td >
<td valign="top" >In a logical AND operation (as opposed to a bitset AND operation) if the operand on the left is FALSE, the operand on the right will not be evaluated; likewise for logical OR -- if the left operand evaluates to TRUE, then the right operand is not evaluated. This is the same as in most programming languages, including JavaScript and Java. The following are equivalent: 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > AND </td >
<td valign="top" > & </td >
<td valign="top" > &&</td ></tr >
<tr >
<td valign="top" >OR </td >
<td valign="top" > ||</td >
<td valign="top" > |</td ></tr >
<tr >
<td valign="top" >NOT </td >
<td valign="top" >  ! </td ></tr ></table > 
<br>a AND/OR b as well as NOT b produce a boolean except for the following cases:
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >array OR x </td >
<td valign="top" > array </td >
<td valign="top" > adds the element 
<b>x</b> to the array. If x itself is an array, the operation appends the elements of x as individual elements, concatenating the two arrays. To append one array onto another as a single element, simply surround the array being added with brackets: 
<b>a = [1,2,3]; a |= [4, 5 6]</b> leaves 
<b>a</b> as 
<b>[1,2,3,4,5,6]</b>; 
<b>a = [1,2,3]; a |= [ [4, 5 6] ]</b> leaves 
<b>a</b> as 
<b>[1,2,3,[4,5,6] ]</b>.</td ></tr >
<tr >
<td valign="top" > 
<nobr>bitset AND bitset</nobr></td >
<td valign="top" >bitset</td >
<td valign="top" > the intersection of the two bitsets </td ></tr >
<tr >
<td valign="top" >bitset OR bitset</td >
<td valign="top" >bitset</td >
<td valign="top" > including all selections from both bitsets </td ></tr >
<tr >
<td valign="top" >NOT bitset</td >
<td valign="top" >bitest</td >
<td valign="top" >the inverse of the bitset, based on the total atom count for an atom bitset or the total bond count for a bond bitset</td ></tr >
<tr >
<td valign="top" >
<nobr>bitset OR integer</nobr> </td >
<td valign="top" > bitset </td >
<td valign="top" > turns on the specified bit in the bitset. For example, 
<b>({2}) | 4</b> evaluates to 
<b>({2 4})</b>.</td ></tr >
<tr >
<td valign="top" >bitset OR array </td >
<td valign="top" > bitset </td >
<td valign="top" > turns on the specified bits in the bitset. For example, 
<b>({2}) | [4,5,6]</b> evaluates to 
<b>({2 4:6})</b>.</td ></tr >
<tr >
<td valign="top" >!m</td >
<td valign="top" > matrix</td >
<td valign="top" > matrix inversion</td ></tr >
<tr >
<td valign="top" >!q</td >
<td valign="top" >quaternion</td >
<td valign="top" >quaternion inverse, {-x -y -z w}</td ></tr ></table ></td ></tr >
<tr >
<td valign="top" > 
<br>==  !=</td >
<td valign="top" >equal/not equal </td >
<td valign="top" >== (or just "=") and != test for equality based on the following rules: 
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >string == string</td >
<td valign="top" > true if the strings are identical </td ></tr >
<tr >
<td valign="top" > array == array </td >
<td valign="top" > true if the two arrays (including associative arrays) are the same length and each of their elements are identical. (In this test numerical identity does not distinguish between integers and decimals, so, for example, [4 5 6] == [4.0 5.0 6.0].) </td ></tr >
<tr >
<td valign="top" > bitset == bitset </td >
<td valign="top" > true if their bits are identical </td ></tr >
<tr >
<td valign="top" >point == point</td >
<td valign="top" > true if the distance between the points is less than 1E-6. </td ></tr >
<tr >
<td valign="top" >plane == plane 
<br>
<nobr>quaternion == quaternion</nobr></td >
<td valign="top" > true if the four-vector distance between the quaternions or planes is less than 1E-6. </td ></tr >
<tr >
<td valign="top" > others</td >
<td valign="top" > all other comparisons are processed by first converting the two values to decimals and then testing to see if these values are within 1E-6 of each other. Note that this conversion follows the rules given in 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#jmolmathoperatorsandoperands">Operators and Operands</a>. So, for example, 4.0 == 4, 5 == "5", 1.0000005 == 1, {1 1 1} == 1.7320508, [1 4 5] == 3, and ({9:12}) == 4. If a strict identity test is desired, use array notation: [5] != ["5"], since array equality does not use these conversions. </td ></tr ></table ></td ></tr ></table >
<br />
<br />
<b>
<a name="jmolmathjmolsqlsyntax">Jmol SQL syntax</a></b>    
<a href="#jmolmath">back</a>
<br />
<br /> Starting with 
<span class="newv">Jmol 14.2</span>, a new mySQL-like search query language syntax allows the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#getproperty">getProperty</a> command and the 
<b>getProperty()</b> function to return subsets of information, including subsets of information from user-defined associative arrays using 
<b>getProperty(x,"...")</b>. The syntax is also available for atom selection based on nucleic acid secondary structure using 
<b>within(dssr,...)</b> (for which the syntax was specifically designed). The syntax takes the place of a bracketed associative array key such as 
<b>modelInfo["_ipt"]</b> and takes the form:
<br />
<br>  
<b>xxx[SELECT keys WHERE expression]</b>
<br>
<br>where SELECT and WHERE are case-insensitive literal keywords. 
<b>xxx</b> is the name of an associative array variable (or a sequential array that contains associative arrays as elements, see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#jmolmatharraydrilling">Array Drilling</a>, below). 
<b>keys</b> is a subset of the keys in xxx, and 
<b>expression</b> is a standard Jmol math expression using key names for variables. The Jmol SQL syntax allows functionality similar to the standard SQL syntax 
<b>SELECT keys FROM xxx WHERE expression</b> with subtle differences. Similarly to standard SQL, the WHERE clause is optional, allowing 
<b>xxx[SELECT keys]</b> to act similarly to the standard SQL statement 
<b>SELECT keys FROM xxx</b>. However, the Jmol SQL is primarily designed to return values, not "columns" of key:value pairs. So, for example, the following Jmol commands are equivalent to 
<b>select atomno>10</b>:
<br>
<br>
<b>  x = getProperty("atomInfo[SELECT _ipt WHERE atomno>10]");
<br>  select atomIndex=x;</b>
<br>
<br>For simple selections such as this, clearly Jmol SQL syntax is not needed. Where it becomes useful, though, is when it is used with more complex WHERE clauses. The following selects for models from a benzene infrared frequency calculation for which the frequency of vibration is in the range of 1600-1700 cm- 1:
<br>
<br>
<b>  x = getProperty("modelInfo.models[select _ipt where modelProperties.PATH='Frequencies' and modelProperties.FreqValue >= 1600 and modelProperties.FreqValue 
<= 1700]");
<br>  select modelindex = x;</b>
<br>
<br>Note that this selection relies on another new features of 
<span class="newv">Jmol 14.2</span> not present in previous versions, the 
<b>select property=array</b> syntax (
<b>x</b> here is an array). The following selection finds and highlights RNA base pairs for which the absolute value of the shear is greater than 6, indicating a highly distorted RNA helix:
<br>
<br>  
<b>select on within(dssr, "basePairs[SELECT nt* WHERE abs (bpShear)>6");</b>
<br>
<br>Note that Jmol SQL can be chained when the first selection returns an array:
<br>
<br>  
<b>x = getProperty("measurementInfo[SELECT atoms WHERE value > 1.4][SELECT atomno]");</b>
<br>
<br>In this case, the first selection returns an array of arrays, and the second selection "drills down" through that to retrieve all atomno values, still as an array of arrays, perhaps something such as 
<b>[ [ 12,13 ],[ 2,1 ],[ 6,5 ],[ 11,10 ] ]</b>.
<br>
<br>The SELECT clause may contain references to more than one key. This is useful when two keys refer to the same sort of information. For example, getProperty("bondInfo") returns a list of arrays with keys "atom1" and "atom2". The syntax for multiple keys follows the Jmol LIKE operator syntax using "*" as a wild card at the beginning or end of the keys as a wildcard. After the following command, x will contain a list of all atom numbers involving single bonds, because both atom1 and atom2 arrays will be selected in the first SELECT, and then the value of atomno of those will be selected from both of those:
<br>
<br>  
<b>x = getProperty("bondInfo[SELECT atom* WHERE type='single'][SELECT atomno]");</b>
<br>
<br>Whether the [SELECT] returns just values or a full set of matching key:value pairs (as in standard SQL) is determined by a flag at the beginning of the keys option. If keys begins with "*/" or is simply "*", then what is returned is an associative array (or array of arrays) containing the specified keys. Thus, 
<b>xxx[SELECT *]</b> effectively copies array xxx to a new array; 
<b>xxx[SELECT */nt*]</b> creates a subset of xxx that contains, perhaps, keys nt1 and nt2 and their associated values. 
<br>
<br>
<b>SQL "drilling" in associative arrays for sub arrays with a given property</b>
<br>
<br>
<b> x = [key_1:[type:"a"],key_2:[type:"b"],key_3:[type:"a"]]
<br> z = getProperty(x, "[SELECT ** WHERE type='a']");
<br> show z;
<br>
<br> z = { "key_1":{ "type":"a" },"key_3":{ "type":"a" } }
<br></b>
<br> Note that x now only has entries for key_1 and key_3. The idea is to use "**" as the SELECT option to select subarrays of an array based on a value for those subarrays.
<br />
<br /></i ></td></tr> 
<tr name='tr_jmolmath'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_jmolmath'>
<td colspan="5">
<p>
<a class="xref" href="#jmolcommandsyntax">[Jmol Command Syntax]</a> 
<a class="xref" href="#jmolparameters">[Jmol Parameters]</a> 
<a class="xref" href="#atomexpressions">[atom expressions]</a> 
<a class="xref" href="#atomproperties">[atom properties]</a> 
<a class="xref" href="#functions">[functions]</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#message">message</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#set">set</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_jmolmath'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k4">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_jmolparameters'>
<td colspan="5">
<h3 >
<a id="jmolparameters" name="jmolparameters">[Jmol Parameters]</a>
<a id="k5"> </a></h3>   
<a class="textParam" href="#jmolparametersgeneralparameters">General Parameters</a>
<br />   
<a class="textParam" href="#jmolparametersset-onlyparameters">Set-Only Parameters</a>
<br />   
<a class="textParam" href="#jmolparametersdeprecatedparameters">Deprecated Parameters</a>
<br />   
<a class="textParam" href="#jmolparametersreservednames">Reserved Names</a>
<br />
<br /></td></tr>
<tr name='tr_jmolparameters'>
<td>
<i >Many parameters in Jmol can be 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set">set</a> and may also be checked using Jmol math. 
<br />
<br />
<b>
<a name="jmolparametersgeneralparameters">General Parameters</a></b>    
<a href="#jmolparameters">back</a>
<br />
<br /> 
<a id="table1"> </a>The following 279 parameters may be SET and also checked using Jmol math. Items without a link are either undocumented at this time or for later versions of Jmol than the one you have selected for this documentation display.
<br />
<br />
<table border="0" cellspacing="2">
<tr>
<td></td>
<td class="tbl">
<a href="#set_allowembeddedscripts">allowEmbeddedScripts</a></td>
<td class="tbl">
<a href="#set_allowgestures">allowGestures</a></td>
<td class="tbl">
<a href="#set_allowkeystrokes">allowKeyStrokes</a></td>
<td class="tbl">
<a href="#set_allowmodelkit">allowModelKit</a></td>
<td class="tbl">
<a href="#set_allowmoveatoms">allowMoveAtoms</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_allowmultitouch">allowMultiTouch</a></td>
<td class="tbl">
<a href="#set_allowrotateselected">allowRotateSelected</a></td>
<td class="tbl">
<a href="#set_ambientpercent">ambientpercent</a></td>
<td class="tbl">
<a href="#set_animationfps">animationFps</a></td>
<td class="tbl">
<a href="#set_animationmode">animationMode</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_animframecallback">animFrameCallback</a></td>
<td class="tbl">
<a href="#set_antialiasdisplay">antialiasDisplay</a></td>
<td class="tbl">
<a href="#set_antialiasimages">antialiasImages</a></td>
<td class="tbl">
<a href="#set_antialiastranslucent">antialiasTranslucent</a></td>
<td class="tbl">
<a href="#set_appendnew">appendNew</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_appletproxy">appletProxy</a></td>
<td class="tbl">
<a href="#set_applysymmetrytobonds">applySymmetryToBonds</a></td>
<td class="tbl">
<a href="#set_atompicking">atomPicking</a></td>
<td class="tbl">
<a href="#set_atomtypes">atomTypes</a></td>
<td class="tbl">
<a href="#set_autobond">autobond</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_autofps">autoFPS</a></td>
<td class="tbl">
<a href="#set_autoloadorientation">autoLoadOrientation</a></td>
<td class="tbl">
<a href="#set_axesmode">axesMode</a></td>
<td class="tbl">
<a href="#set_axesmolecular">axesMolecular</a></td>
<td class="tbl">
<a href="#set_axesscale">axesScale</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_axesunitcell">axesUnitcell</a></td>
<td class="tbl">
<a href="#set_axeswindow">axesWindow</a></td>
<td class="tbl">
<a href="#set_axis1color">axis1Color</a></td>
<td class="tbl">
<a href="#set_axis2color">axis2Color</a></td>
<td class="tbl">
<a href="#set_axis3color">axis3Color</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_backbonesteps">backboneSteps</a></td>
<td class="tbl">
<a href="#set_backgroundcolor">backgroundColor</a></td>
<td class="tbl">
<a href="#set_backgroundmodel">backgroundModel</a></td>
<td class="tbl">
<a href="#set_bondingversion">bondingVersion</a></td>
<td class="tbl">
<a href="#set_bondmodeor">bondModeOr</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_bondpicking">bondPicking</a></td>
<td class="tbl">
<a href="#set_bondradiusmilliangstroms">bondRadiusMilliAngstroms</a></td>
<td class="tbl">
<a href="#set_bondtolerance">bondTolerance</a></td>
<td class="tbl">
<a href="#set_boundboxcolor">boundboxColor</a></td>
<td class="tbl">
<a href="#set_cameradepth">cameraDepth</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_cartoonbaseedges">cartoonBaseEdges</a></td>
<td class="tbl">
<a href="#set_cartoonfancy">cartoonFancy</a></td>
<td class="tbl">
<a href="#set_cartoonladders">cartoonLadders</a></td>
<td class="tbl">
<a href="#set_cartoonribose">cartoonRibose</a></td>
<td class="tbl">
<a href="#set_cartoonrockets">cartoonRockets</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_celshading">celShading</a></td>
<td class="tbl">
<a href="#set_celshadingpower">celShadingPower</a></td>
<td class="tbl">
<a href="#set_chaincasesensitive">chainCaseSensitive</a></td>
<td class="tbl">
<a href="#set_colorrasmol">colorRasmol</a></td>
<td class="tbl">
<a href="#set_contextdepthmax">contextDepthMax</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_currentlocalpath">currentLocalPath</a></td>
<td class="tbl">
<a href="#set_dataseparator">dataSeparator</a></td>
<td class="tbl">
<a href="#set_debug">debug</a></td>
<td class="tbl">
<a href="#set_debugscript">debugScript</a></td>
<td class="tbl">
<a href="#set_defaultanglelabel">defaultAngleLabel</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_defaultcolorscheme">defaultColorScheme</a></td>
<td class="tbl">
<a href="#set_defaultdirectory">defaultDirectory</a></td>
<td class="tbl">
<a href="#set_defaultdistancelabel">defaultDistanceLabel</a></td>
<td class="tbl">
<a href="#set_defaultdropscript">defaultDropScript</a></td>
<td class="tbl">
<a href="#set_defaultdrawarrowscale">defaultDrawArrowScale</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_defaultlabelpdb">defaultLabelPDB</a></td>
<td class="tbl">
<a href="#set_defaultlabelxyz">defaultLabelXYZ</a></td>
<td class="tbl">
<a href="#set_defaultlattice">defaultLattice</a></td>
<td class="tbl">
<a href="#set_defaultloadscript">defaultLoadScript</a></td>
<td class="tbl">
<a href="#set_defaults">defaults</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_defaultstructuredssp">defaultStructureDSSP</a></td>
<td class="tbl">
<a href="#set_defaulttorsionlabel">defaultTorsionLabel</a></td>
<td class="tbl">
<a href="#set_defaulttranslucent">defaultTranslucent</a></td>
<td class="tbl">
<a href="#set_defaultvdw">defaultVDW</a></td>
<td class="tbl">
<a href="#set_delaymaximumms">delayMaximumMs</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_depth">depth</a></td>
<td class="tbl">
<a href="#set_diffusepercent">diffusepercent</a></td>
<td class="tbl">
<a href="#set_dipolescale">dipoleScale</a></td>
<td class="tbl">
<a href="#set_disablepopupmenu">disablePopupMenu</a></td>
<td class="tbl">
<a href="#set_displaycellparameters">displayCellParameters</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_dotdensity">dotDensity</a></td>
<td class="tbl">
<a href="#set_dotscale">dotScale</a></td>
<td class="tbl">
<a href="#set_dotsselectedonly">dotsSelectedOnly</a></td>
<td class="tbl">
<a href="#set_dotsurface">dotSurface</a></td>
<td class="tbl">
<a href="#set_dragselected">dragSelected</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_drawfontsize">drawFontSize</a></td>
<td class="tbl">
<a href="#set_drawhover">drawHover</a></td>
<td class="tbl">
<a href="#set_drawpicking">drawPicking</a></td>
<td class="tbl">
<a href="#set_dsspcalculatehydrogenalways">dsspCalculateHydrogenAlways</a></td>
<td class="tbl">
<a href="#set_echocallback">echoCallback</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_edsurlcutoff">edsUrlCutoff</a></td>
<td class="tbl">
<a href="#set_edsurlformat">edsUrlFormat</a></td>
<td class="tbl">
<a href="#set_edsurlformatdiff">edsUrlFormatDiff</a></td>
<td class="tbl">
<a href="#ellipsoid">ellipsoidarcs</a></td>
<td class="tbl">
<a href="#ellipsoid">ellipsoidaxes</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#ellipsoid">ellipsoidAxisDiameter</a></td>
<td class="tbl">
<a href="#ellipsoid">ellipsoidball</a></td>
<td class="tbl">
<a href="#ellipsoid">ellipsoiddotCount</a></td>
<td class="tbl">
<a href="#ellipsoid">ellipsoiddots</a></td>
<td class="tbl">
<a href="#ellipsoid">ellipsoidfill</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_energyunits">energyUnits</a></td>
<td class="tbl">
<a href="#set_exportdrivers">exportDrivers</a></td>
<td class="tbl">
<a href="#set_exportscale">exportScale</a></td>
<td class="tbl">
<a href="#set_evalcallback">evalCallback</a></td>
<td class="tbl">
<a href="#set_fontcaching">fontCaching</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_fontscaling">fontScaling</a></td>
<td class="tbl">
<a href="#set_forceautobond">forceAutoBond</a></td>
<td class="tbl">
<a href="#set_forcefield">forcefield</a></td>
<td class="tbl">
<a href="#set_greyscalerendering">greyscaleRendering</a></td>
<td class="tbl">
<a href="#calculate">hbondsAngleMinimum</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_hbondsbackbone">hbondsBackbone</a></td>
<td class="tbl">
<a href="#calculate">hbondsDistanceMaximum</a></td>
<td class="tbl">
<a href="#set_hbondssolid">hbondsSolid</a></td>
<td class="tbl">
<a href="#set_helixstep">helixStep</a></td>
<td class="tbl">
<a href="#set_helppath">helpPath</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_hermitelevel">hermiteLevel</a></td>
<td class="tbl">
<a href="#set_hidenameinpopup">hideNameInPopup</a></td>
<td class="tbl">
<a href="#set_hidenavigationpoint">hideNavigationPoint</a></td>
<td class="tbl">
<a href="#set_hidenotselected">hideNotSelected</a></td>
<td class="tbl">
<a href="#set_highresolution">highResolution</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_historylevel">historyLevel</a></td>
<td class="tbl">
<a href="#set_hovercallback">hoverCallback</a></td>
<td class="tbl">
<a href="#set_hoverdelay">hoverDelay</a></td>
<td class="tbl">
<a href="#set_hoverlabel">hoverLabel</a></td>
<td class="tbl">
<a href="#set_imagestate">imageState</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_iskiosk">isKiosk</a></td>
<td class="tbl">
<a href="#set_isosurfacekey">isosurfaceKey</a></td>
<td class="tbl">
<a href="#set_isosurfacepropertysmoothing">isosurfacePropertySmoothing</a></td>
<td class="tbl">
<a href="#set_isosurfacepropertysmoothingpower">isosurfacePropertySmoothingPower</a></td>
<td class="tbl">
<a href="#set_justifymeasurements">justifyMeasurements</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_language">language</a></td>
<td class="tbl">
<a href="#set_languagetranslation">languageTranslation</a></td>
<td class="tbl">
<a href="#set_legacyjavafloat">legacyJavaFloat</a></td>
<td class="tbl">
<a href="#set_loadatomdatatolerance">loadAtomDataTolerance</a></td>
<td class="tbl">
<a href="#set_loadligandformat">loadLigandFormat</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_loadformat">loadFormat</a></td>
<td class="tbl">
<a href="#set_loadstructcallback">loadStructCallback</a></td>
<td class="tbl">
<a href="#log">logCommands</a></td>
<td class="tbl">
<a href="#log">logFile</a></td>
<td class="tbl">
<a href="#log">logGestures</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_loglevel">logLevel</a></td>
<td class="tbl">
<a href="#set_measureallmodels">measureAllModels</a></td>
<td class="tbl">
<a href="#set_measurecallback">measureCallback</a></td>
<td class="tbl">
<a href="#set_measurementlabels">measurementLabels</a></td>
<td class="tbl">
<a href="#set_measurements">measurements</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_measurementunits">measurementUnits</a></td>
<td class="tbl">
<a href="#set_meshscale">meshScale</a></td>
<td class="tbl">
<a href="#set_messagecallback">messageCallback</a></td>
<td class="tbl">
<a href="#set_messagestylechime">messageStyleChime</a></td>
<td class="tbl">
<a href="#set_minbonddistance">minBondDistance</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_minimizationcallback">minimizationCallback</a></td>
<td class="tbl">
<a href="#set_minimizationcriterion">minimizationCriterion</a></td>
<td class="tbl">
<a href="#set_minimizationrefresh">minimizationRefresh</a></td>
<td class="tbl">
<a href="#set_minimizationsilent">minimizationSilent</a></td>
<td class="tbl">
<a href="#set_minimizationsteps">minimizationSteps</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_minpixelselradius">minPixelSelRadius</a></td>
<td class="tbl">
<a href="#set_modelkitmode">modelKitMode</a></td>
<td class="tbl">
<a href="#set_modulationscale">modulationScale</a></td>
<td class="tbl">
<a href="#set_mousedragfactor">mouseDragFactor</a></td>
<td class="tbl">
<a href="#set_mousewheelfactor">mouseWheelFactor</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_multiplebondbananas">multipleBondBananas</a></td>
<td class="tbl">
<a href="#set_multiplebondradiusfactor">multipleBondRadiusFactor</a></td>
<td class="tbl">
<a href="#set_multiplebondspacing">multipleBondSpacing</a></td>
<td class="tbl">
<a href="#set_navfps">navFPS</a></td>
<td class="tbl">
<a href="#set_navigatesurface">navigateSurface</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_navigationdepth">navigationDepth</a></td>
<td class="tbl">
<a href="#set_navigationmode">navigationMode</a></td>
<td class="tbl">
<a href="#set_navigationperiodic">navigationPeriodic</a></td>
<td class="tbl">
<a href="#set_navigationslab">navigationSlab</a></td>
<td class="tbl">
<a href="#set_navigationspeed">navigationSpeed</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_navx">navX</a></td>
<td class="tbl">
<a href="#set_navy">navY</a></td>
<td class="tbl">
<a href="#set_navz">navZ</a></td>
<td class="tbl">
<a href="#set_nihresolverformat">nihResolverFormat</a></td>
<td class="tbl">
<a href="#set_nmrurlformat">nmrURLFormat</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_partialdots">partialDots</a></td>
<td class="tbl">
<a href="#set_particleradius">particleRadius</a></td>
<td class="tbl">
<a href="#set_pathforallfiles">pathForAllFiles</a></td>
<td class="tbl">
<a href="#set_pdbaddhydrogens">pdbAddHydrogens</a></td>
<td class="tbl">
<a href="#set_pdbgetheader">pdbGetHeader</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_pdbsequential">pdbSequential</a></td>
<td class="tbl">
<a href="#set_percentvdwatom">percentVdwAtom</a></td>
<td class="tbl">
<a href="#set_perspectivedepth">perspectiveDepth</a></td>
<td class="tbl">
<a href="#set_perspectivemodel">perspectiveModel</a></td>
<td class="tbl">
<a href="#set_phongexponent">phongExponent</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_pickcallback">pickCallback</a></td>
<td class="tbl">
<a href="#set_picking">picking</a></td>
<td class="tbl">
<a href="#set_pickingspinrate">pickingSpinRate</a></td>
<td class="tbl">
<a href="#set_pickingstyle">pickingStyle</a></td>
<td class="tbl">
<a href="#set_picklabel">pickLabel</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_platformspeed">platformSpeed</a></td>
<td class="tbl">
<a href="#set_pointgroupdistancetolerance">pointGroupDistanceTolerance</a></td>
<td class="tbl">
<a href="#set_pointgrouplineartolerance">pointGroupLinearTolerance</a></td>
<td class="tbl">
<a href="#set_preservestate">preserveState</a></td>
<td class="tbl">
<a href="#set_propertyatomnumbercolumncount">propertyAtomNumberColumnCount</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_propertyatomnumberfield">propertyAtomNumberField</a></td>
<td class="tbl">
<a href="#set_propertycolorscheme">propertyColorScheme</a></td>
<td class="tbl">
<a href="#set_propertydatacolumncount">propertyDataColumnCount</a></td>
<td class="tbl">
<a href="#set_propertydatafield">propertyDataField</a></td>
<td class="tbl">
<a href="#set_quaternionframe">quaternionFrame</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_rangeselected">rangeSelected</a></td>
<td class="tbl">
<a href="#set_refreshing">refreshing</a></td>
<td class="tbl">
<a href="#set_repaintwaitms">repaintWaitMs</a></td>
<td class="tbl">
<a href="#set_resizecallback">resizeCallback</a></td>
<td class="tbl">
<a href="#set_ribbonaspectratio">ribbonAspectRatio</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_ribbonborder">ribbonBorder</a></td>
<td class="tbl">
<a href="#set_rocketbarrels">rocketBarrels</a></td>
<td class="tbl">
<a href="#set_rotationradius">rotationRadius</a></td>
<td class="tbl">
<a href="#set_saveproteinstructurestate">saveProteinStructureState</a></td>
<td class="tbl">
<a href="#set_scaleangstromsperinch">scaleAngstromsPerInch</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_scriptcallback">scriptCallback</a></td>
<td class="tbl">
<a href="#set_scriptqueue">scriptQueue</a></td>
<td class="tbl">
<a href="#set_scriptreportinglevel">scriptReportingLevel</a></td>
<td class="tbl">
<a href="#set_selectallmodels">selectAllModels</a></td>
<td class="tbl">
<a href="#set_selecthetero">selectHetero</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_selecthydrogen">selectHydrogen</a></td>
<td class="tbl">
<a href="#set_sheetsmoothing">sheetSmoothing</a></td>
<td class="tbl">
<a href="#set_showaxes">showAxes</a></td>
<td class="tbl">
<a href="#set_showboundbox">showBoundBox</a></td>
<td class="tbl">
<a href="#set_showfrank">showFrank</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_showhiddenselectionhalos">showHiddenSelectionHalos</a></td>
<td class="tbl">
<a href="#set_showhydrogens">showHydrogens</a></td>
<td class="tbl">
<a href="#set_showkeystrokes">showKeyStrokes</a></td>
<td class="tbl">
<a href="#set_showmeasurements">showMeasurements</a></td>
<td class="tbl">
<a href="#set_showmodulationvectors">showModulationVectors</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_showmultiplebonds">showMultipleBonds</a></td>
<td class="tbl">
<a href="#set_shownavigationpointalways">showNavigationPointAlways</a></td>
<td class="tbl">
<a href="#set_showscript">showScript</a></td>
<td class="tbl">
<a href="#set_showtiming">showTiming</a></td>
<td class="tbl">
<a href="#set_showunitcell">showUnitcell</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_showunitcelldetails">showUnitcellDetails</a></td>
<td class="tbl">
<a href="#set_slabbyatom">slabByAtom</a></td>
<td class="tbl">
<a href="#set_slabbymolecule">slabByMolecule</a></td>
<td class="tbl">
<a href="#set_slab">slab</a></td>
<td class="tbl">
<a href="#set_slabenabled">slabEnabled</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_slabrange">slabRange</a></td>
<td class="tbl">
<a href="#set_smallmoleculemaxatoms">smallMoleculeMaxAtoms</a></td>
<td class="tbl">
<a href="#set_smartaromatic">smartAromatic</a></td>
<td class="tbl">
<a href="#set_smilesurlformat">smilesURLformat</a></td>
<td class="tbl">
<a href="#set_solventprobe">solventProbe</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_solventproberadius">solventProbeRadius</a></td>
<td class="tbl">
<a href="#set_specularexponent">specularExponent</a></td>
<td class="tbl">
<a href="#set_specularpercent">specularPercent</a></td>
<td class="tbl">
<a href="#set_specularpower">specularPower</a></td>
<td class="tbl">
<a href="#set_spinfps">spinFps</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_spinx">spinX</a></td>
<td class="tbl">
<a href="#set_spiny">spinY</a></td>
<td class="tbl">
<a href="#set_spinz">spinZ</a></td>
<td class="tbl">
<a href="#set_ssbondsbackbone">ssBondsBackbone</a></td>
<td class="tbl">
<a href="#set_starwidth">starWidth</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_statusreporting">statusReporting</a></td>
<td class="tbl">
<a href="#set_stereodegrees">stereoDegrees</a></td>
<td class="tbl">
<a href="#set_strandcountformeshribbon">strandCountForMeshRibbon</a></td>
<td class="tbl">
<a href="#set_strandcountforstrands">strandCountForStrands</a></td>
<td class="tbl">
<a href="#set_structuremodifiedcallback">structureModifiedCallback</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_synccallback">syncCallback</a></td>
<td class="tbl">
<a href="#set_strutdefaultradius">strutDefaultRadius</a></td>
<td class="tbl">
<a href="#set_strutlengthmaximum">strutLengthMaximum</a></td>
<td class="tbl">
<a href="#set_strutsmultiple">strutsMultiple</a></td>
<td class="tbl">
<a href="#set_strutspacing">strutSpacing</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_syncmouse">syncMouse</a></td>
<td class="tbl">
<a href="#set_syncscript">syncScript</a></td>
<td class="tbl">
<a href="#set_tracealpha">traceAlpha</a></td>
<td class="tbl">
<a href="#set_translucent">translucent</a></td>
<td class="tbl">
<a href="#set_unitcellcolor">unitCellColor</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_useminimizationthread">useMinimizationThread</a></td>
<td class="tbl">
<a href="#set_usenumberlocalization">useNumberLocalization</a></td>
<td class="tbl">
<a href="#set_usercolorscheme">userColorScheme</a></td>
<td class="tbl">
<a href="#set_vectorscale">vectorScale</a></td>
<td class="tbl">
<a href="#set_vectorscentered">vectorsCentered</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_vectorsymmetry">vectorSymmetry</a></td>
<td class="tbl">
<a href="#set_vibrationperiod">vibrationPeriod</a></td>
<td class="tbl">
<a href="#set_vibrationscale">vibrationScale</a></td>
<td class="tbl">
<a href="#set_visualrange">visualRange</a></td>
<td class="tbl">
<a href="#set_waitformoveto">waitForMoveTo</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_windowcentered">windowCentered</a></td>
<td class="tbl">
<a href="#set_wireframerotation">wireframeRotation</a></td>
<td class="tbl">
<a href="#set_zoomenabled">zoomEnabled</a></td>
<td class="tbl">
<a href="#set_zoomheight">zoomHeight</a></td>
<td class="tbl">
<a href="#set_zoomlarge">zoomLarge</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_zdepth">zDepth</a></td>
<td class="tbl">
<a href="#set_zshade">zShade</a></td>
<td class="tbl">
<a href="#set_zshadepower">zShadePower</a></td>
<td class="tbl">
<a href="#set_zslab">zSlab</a></td></tr></table>
<br />
<br />
<b>
<a name="jmolparametersset-onlyparameters">Set-Only Parameters</a></b>    
<a href="#jmolparameters">back</a>
<br />
<br /> 
<a id="table1B"> </a>The following 12 parameters may be SET but because of their complexity or context cannot be checked using Jmol math.
<br />
<br />
<table border="0" cellspacing="2">
<tr>
<td></td>
<td class="tbl">
<a href="#set_axescolor">set axesColor</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_echo">set echo</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_formalcharge">set formalcharge</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_labelalignment">set labelAlignment</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_labelatom">set labelAtom</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_labelfront">set labelFront</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_labelgroup">set labelGroup</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_labeloffset">set labelOffset</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_labeloffsetabsolute">set labelOffsetAbsolute</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_labelpointer">set labelPointer</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_labeltoggle">set labelToggle</a></td></tr>
<tr>
<td></td>
<td class="tbl">
<a href="#set_vdw">set vdw</a></td></tr></table>
<br />
<br />
<b>
<a name="jmolparametersdeprecatedparameters">Deprecated Parameters</a></b>    
<a href="#jmolparameters">back</a>
<br />
<br /> 
<a id="table1C"> </a>The following 50 parameters have been deprecated.
<br />
<br />
<table border="0" cellspacing="2">
<tr>
<td></td>
<td class="tbl">set ambient</td>
<td class="tbl">see 
<a href="#set_ambientpercent">set ambientPercent</a></td></tr>
<tr>
<td></td>
<td class="tbl">set axes</td>
<td class="tbl">see 
<a href="#set_axesmode">set axesMode</a></td></tr>
<tr>
<td></td>
<td class="tbl">set background</td>
<td class="tbl">see 
<a href="#set_backgroundcolor">set backgroundColor</a></td></tr>
<tr>
<td></td>
<td class="tbl">set bond</td>
<td class="tbl">see 
<a href="#set_showmultiplebonds">set showMultipleBonds</a></td></tr>
<tr>
<td></td>
<td class="tbl">set bondmode</td>
<td class="tbl">see 
<a href="#set_bondmodeor">set bondModeOr</a></td></tr>
<tr>
<td></td>
<td class="tbl">set bonds</td>
<td class="tbl">see 
<a href="#set_showmultiplebonds">set showMultipleBonds</a></td></tr>
<tr>
<td></td>
<td class="tbl">set boundbox</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#boundbox">boundbox</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set charge</td>
<td class="tbl">see 
<a href="#set_formalcharge">set formalCharge</a></td></tr>
<tr>
<td></td>
<td class="tbl">set color</td>
<td class="tbl">see 
<a href="#set_defaultcolorscheme">set defaultColorScheme</a></td></tr>
<tr>
<td></td>
<td class="tbl">set colour</td>
<td class="tbl">see 
<a href="#set_defaultcolorscheme">set defaultColorScheme</a></td></tr>
<tr>
<td></td>
<td class="tbl">set defaultcolors</td>
<td class="tbl">see 
<a href="#set_defaultcolorscheme">set defaultColorScheme</a></td></tr>
<tr>
<td></td>
<td class="tbl">set diffuse</td>
<td class="tbl">see 
<a href="#set_diffusepercent">set diffusePercent</a></td></tr>
<tr>
<td></td>
<td class="tbl">set display</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#selectionhalos">selectionHalos ON/OFF</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set dynamicMeasurements</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#measure">measure</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set fontsize</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#font">font labels</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set fractionalRelative</td>
<td class="tbl">removed in Jmol 14.1.16</a></td></tr>
<tr>
<td></td>
<td class="tbl">set frank</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frank">frank ON/OFF</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set hbond</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_hbondsbackbone">set hbondsBackbone</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_hbondssolid">set hbondsSolid</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set hbonds</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_hbondsbackbone">set hbondsBackbone</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_hbondssolid">set hbondsSolid</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set hetero</td>
<td class="tbl">see 
<a href="#set_selecthetero">set selectHetero</a></td></tr>
<tr>
<td></td>
<td class="tbl">set history</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#history">history</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set hydrogen</td>
<td class="tbl">see 
<a href="#set_selecthydrogen">set selectHydrogen</a></td></tr>
<tr>
<td></td>
<td class="tbl">set hydrogens</td>
<td class="tbl">see 
<a href="#set_selecthydrogen">set selectHydrogen</a></td></tr>
<tr>
<td></td>
<td class="tbl">set label</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#label">label</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setlabels">set (labels)</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set labels</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#label">label</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setlabels">set (labels)</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set measure</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_measurements">set measurements</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_measurementlabels">set measurementLabels</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_measurementunits">set measurementUnits</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set measurement</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_measurements">set measurements</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_measurementlabels">set measurementLabels</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_measurementunits">set measurementUnits</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set measurementNumbers</td>
<td class="tbl">see 
<a href="#set_measurementlabels">set measurementLabels</a></td></tr>
<tr>
<td></td>
<td class="tbl">set measures</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_measurements">set measurements</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_measurementlabels">set measurementLabels</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_measurementunits">set measurementUnits</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set monitor</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_measurements">set measurements</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_measurementlabels">set measurementLabels</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_measurementunits">set measurementUnits</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set monitors</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_measurements">set measurements</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_measurementlabels">set measurementLabels</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_measurementunits">set measurementUnits</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set radius</td>
<td class="tbl">see 
<a href="#set_solventproberadius">set solventProbeRadius</a></td></tr>
<tr>
<td></td>
<td class="tbl">set scale3d</td>
<td class="tbl">see 
<a href="#set_scaleangstromsperinch">set scaleAngstromsPerInch</a></td></tr>
<tr>
<td></td>
<td class="tbl">set selectionhalo</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#selectionhalos">selectionHalos ON/OFF</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set selectionHalos</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#selectionhalos">selectionHalos ON/OFF</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set showSelections</td>
<td class="tbl">see 
<a href="#set_selectionhalos">set selectionHalos</a></td></tr>
<tr>
<td></td>
<td class="tbl">set solvent</td>
<td class="tbl">see 
<a href="#set_solventprobe">set solventProbe</a></td></tr>
<tr>
<td></td>
<td class="tbl">set specPercent</td>
<td class="tbl">see 
<a href="#set_specularpercent">set specularPercent</a></td></tr>
<tr>
<td></td>
<td class="tbl">set specpower</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_specularpower">set specularPower</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_specularexponent">set specularExponent</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set specular</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_specular">set specular</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_specularpercent">set specularPercent</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set spin</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_spinx">set spinX</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_spiny">set spinY</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_spinz">set spinZ</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_spinfps">set spinFPS</a> </a></td></tr>
<tr>
<td></td>
<td class="tbl">set ssbond</td>
<td class="tbl">see 
<a href="#set_ssbondsbackbone">set ssBondsBackbone</a></td></tr>
<tr>
<td></td>
<td class="tbl">set ssbonds</td>
<td class="tbl">see 
<a href="#set_ssbondsbackbone">set ssBondsBackbone</a></td></tr>
<tr>
<td></td>
<td class="tbl">set strand</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_strandcountformeshribbon">strandCountForMeshRibbon</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_strandcountforstrands">set strandCountForStrands</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set strandCount</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_strandcountformeshribbon">strandCountForMeshRibbon</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_strandcountforstrands">set strandCountForStrands</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set strands</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_strandcountformeshribbon">strandCountForMeshRibbon</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_strandcountforstrands">set strandCountForStrands</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set timeOut</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#timeout">timeout</a></a></td></tr>
<tr>
<td></td>
<td class="tbl">set timing</td>
<td class="tbl">see 
<a href="#set_showtiming">set showTiming</a></td></tr>
<tr>
<td></td>
<td class="tbl">set toggleLabel</td>
<td class="tbl">see 
<a href="#set_labeltoggle">set labelToggle</a></td></tr>
<tr>
<td></td>
<td class="tbl">set unitcell</td>
<td class="tbl">see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#unitcell">unitcell</a></a></td></tr></table>
<br />
<br />
<b>
<a name="jmolparametersreservednames">Reserved Names</a></b>    
<a href="#jmolparameters">back</a>
<br />
<br /> 
<a id="table1A"> </a>In addition to all command names, the following 7 names are reserved and should be avoided.
<br />
<br />
<table border="0" cellspacing="2">
<tr>
<td></td>
<td class="tbl">axesOrientationRasmol</td></tr>
<tr>
<td></td>
<td class="tbl">property</td></tr>
<tr>
<td></td>
<td class="tbl">testFlag1</td></tr>
<tr>
<td></td>
<td class="tbl">testFlag2</td></tr>
<tr>
<td></td>
<td class="tbl">testFlag3</td></tr>
<tr>
<td></td>
<td class="tbl">testFlag4</td></tr>
<tr>
<td></td>
<td class="tbl">zeroBasedXyzRasmol</td></tr></table>
<br />
<br /></i ></td></tr> 
<tr name='tr_jmolparameters'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_jmolparameters'>
<td colspan="5">
<p>
<a class="xref" href="#jmolcommandsyntax">[Jmol Command Syntax]</a> 
<a class="xref" href="#jmolmath">[Jmol Math]</a> 
<a class="xref" href="#atomexpressions">[atom expressions]</a> 
<a class="xref" href="#atomproperties">[atom properties]</a> 
<a class="xref" href="#functions">[functions]</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#message">message</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#set">set</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_jmolparameters'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k6">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_jmolsmarts/smiles'>
<td colspan="5">
<h3 >
<a id="jmolsmarts/smiles" name="jmolsmarts/smiles">[Jmol SMARTS/SMILES]</a>
<a id="k7"> </a></h3></td></tr>
<tr name='tr_jmolsmarts/smiles'>
<td>
<i >Jmol supports a full implementation of 
<a class="xref" href="http://www.opensmiles.org" target="_blank">Open SMILES</a> and 
<a class="xref" href="http://www.daylight.com/dayhtml/doc/theory/theory.smarts.html" target="_blank">Daylight SMARTS</a> along with powerful 
<a class="xref" href="http://sourceforge.net/p/jmol/code/HEAD/tree/trunk/Jmol/src/org/jmol/smiles/package.html" target="_blank">
<b>Jmol SMILES</b> and 
<b>Jmol SMARTS</b> extensions</a>, allowing the SMARTS syntax to be used for biomolecular substructure searching and three-dimensional conformation searching. The Jmol bioSMILES, Jmol bioSMARTS, and Jmol SMARTS syntaxes are relatively simple extensions of the Open SMILES definitions, including all stereochemistry and "primitive" syntax in those definitions. Importantly, Jmol can compare and search SMILES strings themselves (independent of any loaded structure). This feature allows, for example, checking of student answers to questions that require the entry of structures using 2D drawing programs such as JSDraw and JME. 
<br>
<br>Jmol implements several aromaticity models using Jmol SMILES prefix "directives," including /strict/, /open/, /mmff94/, /noaromatic/, as well as the default aromaticity model, /jmol3d/. These models are described more fully in 
<a class="xref" href="misc/Jmol-OpenSmiles.pdf" target="_blank">Jmol-OpenSmiles.pdf</a>. Note that Jmol SMILES is not 
<a class="xref" href="https://en.wikipedia.org/wiki/Simplified_molecular-input_line-entry_system" target="_blank">canonical</a>, but the /nci/ directive, as in 
<b>{*}.find("SMILES/nci")</b>, allows retrieving a canonical SMILES string from the 
<a class="xref" href="https://cactus.nci.nih.gov/chemical/structure" target="_blank">NCI CACTVS resolver</a>.
<br>
<br>Examples of using SMILES and SMARTS include:
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >substructure search</td >
<td valign="top" >
<b>select search("[r4]")</b></td >
<td valign="top" > search for all atoms in 4-membered rings</td ></tr >
<tr >
<td valign="top" >selective substructure search</td >
<td valign="top" >
<b>x = {*}.find("SMARTS","{C}C=O")</b></td >
<td valign="top" >using {xx} here to specify a subset of the matching atoms to select; in this case, load the variable x with all alpha-carbons.</td ></tr >
<tr >
<td valign="top" >conformational search</td >
<td valign="top" >
<b>x = {1.1}.find("[!H](.t:-55,-65)CC[!H] || [!H](.t:55,65)CC[!H]", true)</b></td >
<td valign="top" >fill array x with all non-hydrogen "gauche" interactions (torsions between -55 and -65 degrees or between 55 and 65 degrees). </td ></tr >
<tr >
<td valign="top" >Jmol BioSMILES search</td >
<td valign="top" >
<b>x = {*}.find("~r~{*:1}[$(*())2-4]{*:1}", true)</b></td >
<td valign="top" >create an array variable x that lists all RNA (~r~) loops ( {*:1}...{*:1} ) that involve from 2 to 4 un-paired bases ( [$(*())2-4] ).</td ></tr >
<tr >
<td valign="top" >generate a Jmol SMILES string</td >
<td valign="top" > 
<b>x = {1.1}.find("SMILES")</b></td >
<td valign="top" >Return the SMILES string for model 1.1; same as 
<b>select 1.1; show SMILES</b>. Note that when creating a SMILES string from a 3D model, Jmol may "over-express" chirality centers. The SMILES algorithm identifies 
<i>local</i> stereochemistry; it does not run down two paths to see if they are the same or not. Jmol will check only for the following, and only for carbon: (a) two atoms that are identical and have only one connection (H, F, Cl, Br, for example) and (b) two CH3 groups. Thus, for example, Jmol will not tag an isopropyl group as R[C@H](C)C, but it will tag RCHEt
<sub>2</sub> as R[C@H](CC)CC. This is intentional. Jmol's aromaticity model is based on 3D structure (a flat ring with all sp
<sup>2</sup> hybridization).</td ></tr >
<tr >
<td valign="top" >generate an OpenSMILES string</td >
<td valign="top" > 
<b>x = {1.1}.find("SMILES/open")</b></td >
<td valign="top" >Return a SMILES string that utilizes the OpenSMILES aromaticity model, which roughly follows 
<a class="xref" href="https://en.wikipedia.org/wiki/H%C3%BCckel's_rule" target="_blank">H�ckel's_rule</a> but includes some structures that are not cyclic pi systems, such as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/jmol.php?model=C=C1C=CC(=C)C=C1" target="_blank">3,6-dimethylidenecyclohexa-1,4-diene</a>, though not 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/jmol.php?model=O=C1C=CC(=O)C=C1" target="_blank">p-quinone</a>. </td ></tr >
<tr >
<td valign="top" >generate a "strict" SMILES string</td >
<td valign="top" > 
<b>x = {1.1}.find("SMILES/strict")</b></td >
<td valign="top" >Return a SMILES string that applies a more strict definition of "aromatic" that is more familiar to organic chemists. This model requires that the pi system be cyclic, not allowing for double bonds to atoms outside the cycle. In this model, neither 3,6-dimethylidenecyclohexa-1,4-diene nore p-quinone would be considered aromatic.</td ></tr >
<tr >
<td valign="top" >generate a nonaromatic (Kekul�) SMILES string</td >
<td valign="top" > 
<b>x = {1.1}.find("SMILES/noaromatic")</b></td >
<td valign="top" >Return a SMILES string that contains no indication of aromaticity.</td ></tr >
<tr >
<td valign="top" >generate a canonical SMILES string</td >
<td valign="top" >
<b>{1.1}.find("SMILES/nci")</b></td >
<td valign="top" > retrieves a canonical SMILES string from the 
<a class="xref" href="https://cactus.nci.nih.gov/chemical/structure" target="_blank">NCI CACTVS resolver</a>.</td ></tr >
<tr >
<td valign="top" >generate a Jmol BioSMILES string</td >
<td valign="top" >
<b>x = {*:A}.find("SMILES",true);</b></td >
<td valign="top" > display the sequence for chain A in bioSMILES format:
<pre>//* Jmol bioSMILES 12.0.RC25 2010-07-14 15:28 1 *//
<br>//* chain A protein 1 *// ~p~GRRIQGQRRGRGTSTFRAPSHRYKADLEHRKVEDGDV //* 37 *//</pre></td ></tr >
<tr >
<td valign="top" >generating a Jmol BioSMILES string with crosslinking</td >
<td valign="top" >
<b>x = {selected}.find("SEQUENCE", true)</b></td >
<td valign="top" >returns the Jmol bioSMILES sequence for the specified atoms (same as .find("SMILES",true), but without the header comment. Adding the optional second parameter TRUE adds crosslinking:
<pre>//* chain A protein 1 *//~p~TTC:1C:2PSIVARSNFNVC:3RLPGTPEAIC:3ATYTGC:2IIIPGA
<br> TC:1PGDYAN //* 46 *//</pre></td ></tr >
<tr >
<td valign="top" >canonical and noncanonical SMILES strings</td >
<td valign="top" >
<nobr>
<b>smiles1 = "C1=C(NC(=O)C)C=CC(=C1)O"</nobr>
<br>smiles2 = "CC(=O)NC1=CC=C(C=C1)O"
<br>if(smiles2.find("SMILES", smiles1) > 0) {
<br>print "These are the same."</br>}</b> </td >
<td valign="top" > Various programs and web services can produce what are referred to as "canonical SMILES" strings. "Canonical" here does not mean a unique standard. Rather, it means that a given molecular structure given as input 
<em>to this particular program or service</em> will always return the same string regardless of how atoms in the structure are ordered or how the structure is drawn. For example, for acetaminophen, we have:
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >service</td >
<td valign="top" >canonical SMILES</td ></tr >
<tr >
<td valign="top" >
<a class="xref" href="https://pubchem.ncbi.nlm.nih.gov/compound/acetaminophen#section=IUPAC-Name" target="_blank">PubChem</a> </td >
<td valign="top" > CC(=O)NC1=CC=C(C=C1)O</td ></tr >
<tr >
<td valign="top" > 
<a class="xref" href="http://cactus.nci.nih.gov/chemical/structure" target="_blank">NCI/CADD</a> </td >
<td valign="top" > C1=C(NC(=O)C)C=CC(=C1)O</td ></tr >
<tr >
<td valign="top" > 
<a class="xref" href="http://peter-ertl.com/jsme" target="_blank">JSME</a> </td >
<td valign="top" > CC(=O)Nc1ccc(O)cc1</td ></tr ></table ></td >
<td valign="top" >
<img src=img/acetaminophen.png /></td ></tr ></table >Clearly there is a need to be able to compare SMILES strings across different servers, canonical or not. Jmol accomplishes this using the 
<b>find()</b> function, which can compare structures with structures, structures with SMILES strings, and SMILES string with SMILES strings.</td ></tr >
<tr >
<td valign="top" >matching student-drawn structures</td >
<td valign="top" >
<b>x = Jmol.evaluateVar(jmolApplet0,"'" + stringAnswer + "'.find("'SMILES','" + stringKey + "') > 0")</td >
<td valign="top" >JavaScript call to a Jmol applet to find out if a given SMILES string that a student has entered using a 2D drawing object matches the key. If required stereochemistry indicated in the key is missing in the answer, the result will be FALSE. If the student's answer has unnecessary stereochemistry indicated, the result will be TRUE. </td ></tr ></table > 
<br />
<br /></i ></td></tr> 
<tr name='tr_jmolsmarts/smiles'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k8">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_jmol/jspecview/magresview'>
<td colspan="5">
<h3 >
<a id="jmol/jspecview/magresview" name="jmol/jspecview/magresview">[Jmol/JSpecView/MagresView]</a>
<a id="k9"> </a></h3></td></tr>
<tr name='tr_jmol/jspecview/magresview'>
<td>
<i >Jmol 13.0 
<image src="img/Jmol-JspecView.png" width="400" height="250" align="right" />marks a new collaboration with the 
<a class="xref" href="jspecview.sourceforge.net" target="_blank">JSpecView project</a> with the incorporation of JSpecView into the Jmol application and synchronized communication between the Jmol applet and the JSpecView applet. This is most evident in that there is a new menu item Tools...JSpecView, which opens a new JSpecView frame that includes the current model. Work is in progress in the design and implementation of a new JCAMP-DX format that incorporates models and assignments into JDX files using custom ##$MODELS and ##$PEAKS records. See 
<a class="xref" href="misc/Jmol-JSpecView-specs.pdf" target="_blank">Jmol-JSpecView-specs.pdf</a> for proposed specification. Progress can be monitored at 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/jspecview" target="_blank">http://chemapps.stolaf.edu/jmol/jspecview</a>. The Jmol application command 
<b>SYNC ON; sync * "JSpecView:..."</b> sends commands to JSpecView. 
<br>
<br>Starting with Jmol 14.0, the Jmol application can access simulated NMR specta using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#show_nmr">show NMR</a> command and display them along with their correlations. 
<br>
<br>Also starting with Jmol 14.0, functionality is added for interacting with 
<a class="xref" href="http://www.ccpnc.ac.uk/pmwiki.php/CCPNC/MagresView" target="_blank">MagresView</a> in relation to calculation and visualization of solid-state NMR constants: 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >{*}.ms and %[ms] (for labels) </td >
<td valign="top" > magnetic shielding tensor isotropic values</td ></tr >
<tr >
<td valign="top" >{*}.cs and %[cs] (for labels) </td >
<td valign="top" > chemical shift tensor isotropic values</td ></tr >
<tr >
<td valign="top" >set shift_XX xxx </td >
<td valign="top" > sets chemical shift offset, in ppm</td ></tr >
<tr >
<td valign="top" >getProperty nmrInfo </td >
<td valign="top" > delivers the table of isotopes</td ></tr >
<tr >
<td valign="top" > print getproperty("nmrinfo.isotopes")["2H"] </td >
<td valign="top" > an array for deuterium including [n,dc,qc] where n is the isotope number, (negative if the most abundant isotope), dc is the dipolar coupling constant, and qc is the quadrupolar coupling constant.</td ></tr >
<tr >
<td valign="top" >measure({a} {b} "isc_hz") </td >
<td valign="top" > function returning Magres J-coupling value</td ></tr >
<tr >
<td valign="top" >measure({a} {b} "dc_khz") </td >
<td valign="top" > function returning Magres dipolar constant</td ></tr >
<tr >
<td valign="top" > MEASURE {a} {b} "2://dc_hz" </td >
<td valign="top" > measurement line showing dipolar constant, Hz</td ></tr >
<tr >
<td valign="top" > MEASURE {a} {b} "2:%3.2VALUE//dc_khz" </td >
<td valign="top" > measurement line showing dipolar constant, kHz</td ></tr >
<tr >
<td valign="top" > MEASURE {a} {b} "2://khz" </td >
<td valign="top" > measurement defaults to dc_khz</td ></tr >
<tr >
<td valign="top" > MEASURE {a} {b} "2://hz" </td >
<td valign="top" > measurement defaults to isc_hz</td ></tr >
<tr >
<td valign="top" > MEASURE {a} {b} "2://isc_1hz" </td >
<td valign="top" > measurement line showing specifically "isc_1" values in Magres file</td ></tr >
<tr >
<td valign="top" > {xxx}.tensor(type,what) </td >
<td valign="top" > full access to tensor quantities, including j, chi, dc, eigenvalues, eigenvectors, value, asymMatrix, symMatrix, isotropy, anisotropy, asymmetry, eulerzyz, euelerzxz, quaternion, indices, type id, span, and skew.</td ></tr ></table >
<br />
<br /></i ></td></tr> 
<tr name='tr_jmol/jspecview/magresview'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_jmol/jspecview/magresview'>
<td colspan="5">
<p>
<a class="xref" href="#cache">cache</a> 
<a class="xref" href="#initialize">initialize</a> 
<a class="xref" href="#load">load</a> 
<a class="xref" href="#setfilesandscripts">set (files and scripts)</a> 
<a class="xref" href="#sync">sync</a> 
<a class="xref" href="#zap">zap</a> </p></td></tr>
<tr name='tr_jmol/jspecview/magresview'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k10">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_annotations'>
<td colspan="5">
<h3 class=h3newer>
<a id="annotations" name="annotations">[annotations]</a>
<a id="k11"> </a> 
<br />
<span class=newer>(v. 14.4)</span></h3>   
<a class="textParam" href="#annotationssequencedomainannotations">sequence domain annotations</a>
<br />   
<a class="textParam" href="#annotationsstructurevalidationannotations">structure validation annotations</a>
<br />
<br /></td></tr>
<tr name='tr_annotations'>
<td>
<i >Jmol 14.4 introduces the capability to load "annotations" -- additional information relating to a database-derived structure that is from other databases. For example, the command 
<b>load *1crn/val</b> loads PDB ID 1crn from 
<a class="xref" href="http://pdbe.org" target="_blank">PDBe</a> along with structure validation information (see below). 
<br />
<br />
<b>
<a name="annotationssequencedomainannotations">sequence domain annotations</a></b>    
<a href="#annotations">back</a>
<br />
<br /> Using the 
<b>/dom</b> extension for RCSB or PDBe (
<b>load *1cbs/dom</b> or 
<b>load =1cbs/dom</b>), Jmol will load an mmCIF file along with sequence domain data from the European Bioinformatics Institute (EBI) using the PDBe JSON api, for example, 
<a class="xref" href="http://wwwdev.ebi.ac.uk/pdbe/api/mappings/sequence_domains/1cbs?metadata=true&pretty=false" target="_blank">http://wwwdev.ebi.ac.uk/pdbe/api/mappings/sequence_domains/1cbs?metadata=true&pretty=false</a>. For example:
<br>
<br>
<b>load *1cbs/dom</b>
<br>
<br> Domains loaded:
<br> CATH 2.40.128.20 
<br> GO GO:0001972 GO:0005215 GO:0005501 GO:0005634 GO:0005730 GO:0005737 GO:0005783 GO:0006355 
<br> GO:0006810 GO:0007165 GO:0008289 GO:0008544 GO:0016918 GO:0019841 GO:0035115 GO:0042573 GO:0070062 
<br> InterPro IPR000463 IPR000566 IPR011038 IPR012674 
<br> Pfam PF00061 
<br> SCOP 50847 
<br> UniProt P29373
<br> 
<br>
<b>show domains</b>
<br>
<br> metadata restapi_version=0.8
<br> metadata date=20140801
<br> metadata url=http://wwwdev.ebi.ac.uk/pdbe/api/mappings/1cbs?pretty=false&metadata=true
<br> 1cbs SCOP 50847 identifier=Fatty acid binding protein-like
<br> 1cbs SCOP 50847 fold description=Lipocalins
<br> 1cbs SCOP 50847 fold sunid=50813
<br> 1cbs SCOP 50847 description=Fatty acid binding protein-like
<br> 1cbs SCOP 50847 class description=All beta proteins
<br> 1cbs SCOP 50847 class sunid=48724
<br> 1cbs SCOP 50847 superfamily description=Lipocalins
<br> 1cbs SCOP 50847 superfamily sunid=50814
<br> 1cbs UniProt P29373 name=RABP2_HUMAN
<br> 1cbs UniProt P29373 identifier=RABP2_HUMAN
<br> 1cbs GO GO:0005215 name=transporter activity
<br> 1cbs GO GO:0005215 identifier=transporter activity
<br> 1cbs GO GO:0005215 definition=Enables the directed movement of substances (such asmacromolecules,small molecules, ions) into, out of or within a cell, or between cells.
<br> 1cbs GO GO:0005215 category=Molecular_function
<br> ...
<br> 1cbs CATH 2.40.128.20 architecture=Beta Barrel
<br> 1cbs CATH 2.40.128.20 identifier=Lipocalin
<br> 1cbs CATH 2.40.128.20 name=Cellular retinoic acid binding protein type ii. Chain: a.Engineered:yes
<br> 1cbs CATH 2.40.128.20 homology=Lipocalin
<br> 1cbs CATH 2.40.128.20 class=Mainly Beta
<br> 1cbs CATH 2.40.128.20 topology=Lipocalin
<br> 1cbs Pfam PF00061 identifier=Lipocalin / cytosolic fatty-acid binding protein family
<br> 1cbs Pfam PF00061 description=Lipocalin / cytosolic fatty-acid binding protein family
<br> 1cbs InterPro IPR012674 name=Calycin
<br> 1cbs InterPro IPR012674 identifier=Calycin
<br> 1cbs InterPro IPR000566 name=Lipocalin/cytosolic fatty-acid binding domain
<br> 1cbs InterPro IPR000566 identifier=Lipocalin/cytosolic fatty-acid binding domain
<br> 1cbs InterPro IPR011038 name=Calycin-like
<br> 1cbs InterPro IPR011038 identifier=Calycin-like
<br> 1cbs InterPro IPR000463 name=Cytosolic fatty-acid binding
<br> 1cbs InterPro IPR000463 identifier=Cytosolic fatty-acid binding 
<br>
<br>Following this loading, you can select groups using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#jmolmathjmolsqlsyntax">Jmol SQL syntax</a>:
<b> select within(domains,"InterPro where domain.identifier='calycin'")</b>.
<br />
<br />
<b>
<a name="annotationsstructurevalidationannotations">structure validation annotations</a></b>    
<a href="#annotations">back</a>
<br />
<br /> When a structure is deposited with the Protein Data Bank it must pass a set of tests that validate as an acceptable structure. In the process, PDB maintains in its database the results of those tests. A summary report is available for each structure deposited (for example, for 
<a class="xref" href="http://ftp.wwpdb.org/pub/pdb/validation_reports/cr/1crn/1crn_full_validation.pdf" target="_blank">1CRN</a>). During the summer of 2014, in collaboration with the European Bioinformatics Institute, Jmol's capabilities were extended to read the 
<a class="xref" href="http://wwwdev.ebi.ac.uk/pdbe/api/validation/outliers/all/1crn?pretty=true&metadata=true" target="_blank">JSON version</a> of these reports, incorporating the data as a set of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#datasettingatomproperties">atom properties</a>. For example:
<br>
<br>
<b>load *1crn/val; show validation</b>
<br>Validations loaded:
<br> property_types_of_outliers (residues: 3)
<br> property_bond_lengths (atoms: 2, max: 5.38)
<br> property_bond_angles (atoms: 6, max: 7.83) 
<br>
<br>After such loading, the validation values are available as for any atom property. For example:
<br>
<br>
<b>load =1crn/val
<br>select property_bond_lengths > 0
<br>display property_types_of_outliers > 0
<br>color property_rsrz</b>
<br>
<br>These properties may be expanded over time. As of 10/2014 they include:
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >property_bond_angles </td >
<td valign="top" > bond angle outliers </td ></tr >
<tr >
<td valign="top" >property_bond_lengths </td >
<td valign="top" > bond length outliers </td ></tr >
<tr >
<td valign="top" >property_chirals </td >
<td valign="top" > inverted side-chain chirality </td ></tr >
<tr >
<td valign="top" >property_clashes </td >
<td valign="top" > clashes </td ></tr >
<tr >
<td valign="top" >property_planes </td >
<td valign="top" > nonplanar aromatic ring systems </td ></tr >
<tr >
<td valign="top" >property_rama </td >
<td valign="top" > Ramachandran outliers </td ></tr >
<tr >
<td valign="top" >property_RNA_suite </td >
<td valign="top" > RNA base issues </td ></tr >
<tr >
<td valign="top" >property_RNA_pucker </td >
<td valign="top" > RNA sugar pucker outliers </td ></tr >
<tr >
<td valign="top" >property_rsrz </td >
<td valign="top" > missing or mismatched electron density (r-value for short range zones) </td ></tr >
<tr >
<td valign="top" >property_sidechains </td >
<td valign="top" > residue side-chain issues</td ></tr >
<tr >
<td valign="top" > property_types_of_outliers </td >
<td valign="top" > = 1 for residues that are outliers of any type</td ></tr ></table >
<br />
<br /></i ></td></tr> 
<tr name='tr_annotations'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k12">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_atomexpressions'>
<td colspan="5">
<h3 >
<a id="atomexpressions" name="atomexpressions">[atom expressions]</a>
<a id="k13"> </a></h3>   
<a class="textParam" href="#atomexpressionsatomselectors">Atom selectors</a>
<br />   
<a class="textParam" href="#atomexpressionsfunctions">Functions</a>
<br />   
<a class="textParam" href="#atomexpressionsrasmolbiomolecularresiduespecifications">RasMol biomolecular residue specifications</a>
<br />   
<a class="textParam" href="#atomexpressionswildcards">Wildcards</a>
<br />   
<a class="textParam" href="#atomexpressionsatomnamesforotherfiletypes">Atom names for other file types</a>
<br />
<br /></td></tr>
<tr name='tr_atomexpressions'>
<td>
<i >In Jmol, an atom expression is a mathematical expressions that represent a collection of atoms in one or more models. Examples include 
<br>
<br>  select on 
<b>protein or water</b>
<br>  display add 
<b>carbohydrate</b>
<br>  color 
<b>{ala24}</b> red
<br>  zoomto 
<b>{ligand}</b> 0
<br>  contact 
<b>{e20}</b> surface
<br>  isosurface select 
<b>{within(5, HEM)}</b> only vdw map property temperature
<br>  print "the center is at " + 
<b>{*}.xyz</b>
<br>
<br>Notice that some of these commands require braces { } surrounding the atom expression and some do not. The basic rule is that you can always use braces, but you 
<b>must</b> use braces when a command can take arguments that are not atom expressions. So, for example, you can also color cartoons and isosurfaces and drawn objects; you can zoomto {ligand} 80 as well as 0. But what you select are atoms, and only atoms can be added to a display. Most commands DO require braces. The only ones that do not are the following ten: 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#center">center</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#define">define</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#delete">delete</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#display">display</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#fix">fix</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#hide">hide</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#restrict">restrict</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#select">select</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#subset">subset</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#zap">zap</a>. These are the only commands in Jmol that act specifically on atom sets.
<br>
<br>All terms in and atom expression can be preceeded by the keyword NOT, joined by AND, OR, or XOR, and surrounded by parentheses. Terms in atom expressions include:
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >general terms</td >
<td valign="top" >
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>all</b></td >
<td valign="top" > all atoms; same as 
<b>*</b></td ></tr >
<tr >
<td valign="top" >
<b>bonded</b></td >
<td valign="top" > covalently bonded</td ></tr >
<tr >
<td valign="top" >
<b>clickable</b></td >
<td valign="top" > actually visible -- having some visible aspect such as wireframe, spacefill, or a label showing, or the alpha-carbon or phosphorus atom in a biomolecule that is rendered with only cartoon, rocket, or other biomolecule-specific shape. </td ></tr >
<tr >
<td valign="top" >
<b>connected</b></td >
<td valign="top" > bonded in any way, including hydrogen bonds</td ></tr >
<tr >
<td valign="top" >
<b>displayed</b></td >
<td valign="top" > displayed using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#display">display</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#hide">hide</a></b> command; not necessarily visible</td ></tr >
<tr >
<td valign="top" >
<b>hidden</b></td >
<td valign="top" > hidden using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#display">display</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#hide">hide</a></b> command</td ></tr >
<tr >
<td valign="top" >
<b>none</b></td >
<td valign="top" > no atoms</td ></tr >
<tr >
<td valign="top" >
<b>selected</b></td >
<td valign="top" > atoms that have been selected; defaults to 
<b>all</b> when a file is first loaded</td ></tr >
<tr >
<td valign="top" >
<b>thisModel</b></td >
<td valign="top" > atoms in the current frame set, as defined by 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frame">frame</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#model">model</a>, or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#animation">animation</a> commands. If more than one model is in this set, "thisModel" refers to all of them, regardless of atom displayed/hidden status.</td ></tr >
<tr >
<td valign="top" >
<b>visible</b></td >
<td valign="top" >visible in any way, including PDB residue atoms for which a cartoon or other such rendering makes their group visible, even if they themselves are not visible.</td ></tr ></table >
<br></td ></tr >
<tr >
<td valign="top" >file.model</td >
<td valign="top" >as, for example, 
<b>select 3.2</b>, a specific model in a specific file. Note that 
<b>select 3.0</b> selects all atoms in all models of the third file of the most recent 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#load">load</a>. </td ></tr >
<tr >
<td valign="top" >subset</td >
<td valign="top" >the currently defined 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#subset">subset</a>. Note that if a subset is currently defined, then 
<b>select/display all</b> is the same as 
<b>select/display subset</b>, 
<b>restrict none</b> is the same as 
<b>restrict not subset</b>. In addition, 
<b>select not subset</b> selects nothing. </td ></tr >
<tr >
<td valign="top" >specialPosition</td >
<td valign="top" >atoms in crystal structures that are at special positions - that is, for which there is more than one operator that leads to them.</td ></tr >
<tr >
<td valign="top" >unitcell</td >
<td valign="top" >atoms within the current 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#unitcell">unitcell</a>, which may be offset. This includes atoms on the faces and at the vertices of the unitcell. </td ></tr >
<tr >
<td valign="top" > polyhedra </td >
<td valign="top" > all central atoms for which 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#polyhedra">polyhedra</a> have been created. See also 
<b>polyhera(n)</b>, below. (Jmol 14.4)</td ></tr >
<tr >
<td valign="top" >chemical elements</td >
<td valign="top" >element_name (including "deuterium and tritium"), _Xx (an element symbol preceeded by underscore, possibly with isotope number listed, such as _Cu, _Fe, _2H, _31P)</td ></tr >
<tr >
<td valign="top" >isaromatic</td >
<td valign="top" >atoms connected with the AROMATIC, AROMATICSINGLE, or AROMATICDOUBLE bond types</td ></tr >
<tr >
<td valign="top" >non-protein/nucleic groups</td >
<td valign="top" >carbohydrate, hetero, ions (specifically the PDB designations "PO4" and "SO4"), ligand (originally "hetero and not solvent"; changed to "!(protein,nucleic,water,UREA)" for Jmol 12.2), sidechain</td ></tr >
<tr >
<td valign="top" >nucleic acid residues</td >
<td valign="top" >
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >nucleic</td >
<td valign="top" > any group that (a) has one of the following group names: G, C, A, T, U, I, DG, DC, DA, DT, DU, DI, +G, +C, +A, +T, +U, +I; or (b) can be identified as a group that is only one atom, with name "P"; or (c) has all of the following atoms (prime, ', can replace * here): C1*, C2*, C3*, O3*, C4*, C5*, and O5*.</td ></tr >
<tr >
<td valign="top" >purine</td >
<td valign="top" > any 
<em>nucleic</em> group that (a) has one of the following group names: A, G, I, DA, DG, DI, +A, +G, or +I; or (b) also has atoms N7, C8, and N9.</td ></tr >
<tr >
<td valign="top" >pyrimidine</td >
<td valign="top" > any 
<em>nucleic</em> group that (a) has one of the following group names: C, T, U, DC, DT, DU, +C, +T, +U; or (b) also has atom O2.</td ></tr >
<tr >
<td valign="top" >dna</td >
<td valign="top" > any 
<em>nucleic</em> group that (a) has one of the following group names: DG, DC, DA, DT, DU, DI, T, +G, +C, +A, +T; or (b) has neither atom O2* or O2'.</td ></tr >
<tr >
<td valign="top" >rna</td >
<td valign="top" > any 
<em>nucleic</em> group that (a) has one of the following group names: G, C, A, U, I, +U, +I; or (b) has atom O2* or O2'.</td ></tr ></table ></td ></tr >
<tr >
<td valign="top" >protein residues</td >
<td valign="top" >
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >protein</td >
<td valign="top" > defined as a group that (a) has one of the following group names: ALA, ARG, ASN, ASP, CYS, GLN, GLU, GLY, HIS, ILE, LEU, LYS, MET, PHE, PRO, SER, THR, TRP, TYR, VAL, ASX, GLX, or UNK; or (b) contains PDB atom designations [C, O, CA, and N] bonded correctly; or (c) does not contain "O" but contains [C, CA, and N] bonded correctly; or (d) has only one atom, which has name CA and does not have the group name CA (indicating a calcium atom). </td ></tr >
<tr >
<td valign="top" >acidic</td >
<td valign="top" >ASP GLU</td ></tr >
<tr >
<td valign="top" >acyclic</td >
<td valign="top" > amino and not cyclic</td ></tr >
<tr >
<td valign="top" >aliphatic</td >
<td valign="top" >ALA GLY ILE LEU VAL</td ></tr >
<tr >
<td valign="top" >amino</td >
<td valign="top" >all twenty standard amino acids, plus ASX, GLX, UNK</td ></tr >
<tr >
<td valign="top" >aromatic</td >
<td valign="top" >HIS PHE TRP TYR (see also "isaromatic" for aromatic bonds)</td ></tr >
<tr >
<td valign="top" >basic</td >
<td valign="top" >ARG HIS LYS</td ></tr >
<tr >
<td valign="top" >buried</td >
<td valign="top" > ALA CYS ILE LEU MET PHE TRP VAL</td ></tr >
<tr >
<td valign="top" >charged</td >
<td valign="top" >same as 
<em>acidic or basic</em> -- ASP GLU, ARG HIS LYS</td ></tr >
<tr >
<td valign="top" >cyclic</td >
<td valign="top" >HIS PHE PRO TRP TYR</td ></tr >
<tr >
<td valign="top" >helix, helixalpha, helix310, helixpi</td >
<td valign="top" >secondary structure-related. </td ></tr >
<tr >
<td valign="top" >hetero</td >
<td valign="top" >PDB atoms designated as HETATM</td ></tr >
<tr >
<td valign="top" >hydrophobic</td >
<td valign="top" > ALA GLY ILE LEU MET PHE PRO TRP TYR VAL</td ></tr >
<tr >
<td valign="top" >large </td >
<td valign="top" >ARG GLU GLN HIS ILE LEU LYS MET PHE TRP TYR</td ></tr >
<tr >
<td valign="top" >medium</td >
<td valign="top" >ASN ASP CYS PRO THR VAL</td ></tr >
<tr >
<td valign="top" >negative</td >
<td valign="top" >same as 
<em>acidic</em> -- ASP GLU</td ></tr >
<tr >
<td valign="top" >neutral</td >
<td valign="top" > amino and not (acidic or basic)</td ></tr >
<tr >
<td valign="top" >polar</td >
<td valign="top" > amino and not hydrophobic</td ></tr >
<tr >
<td valign="top" >positive</td >
<td valign="top" >same as 
<em>basic</em> -- ARG HIS LYS</td ></tr >
<tr >
<td valign="top" >sheet</td >
<td valign="top" >secondary structure-related</td ></tr >
<tr >
<td valign="top" >small</td >
<td valign="top" >ALA GLY SER</td ></tr >
<tr >
<td valign="top" >surface</td >
<td valign="top" > amino and not buried</td ></tr >
<tr >
<td valign="top" >turn</td >
<td valign="top" >secondary structure-related</td ></tr ></table ></td ></tr >
<tr >
<td valign="top" >protein/nucleic acid-related</td >
<td valign="top" >alpha (*.CA), base (nucleic bases), backbone (or "mainchain"; *.C, *.CA, *.N, and all nucleic other than the bases themselves), sidechain ((protein or nucleic) and not backbone), spine (*.CA, *.N, *.C for proteins; *.P, *.O3', *.O5', *.C3', *.C4', *.C5 for nucleic acids), and leadatom (*.CA, *.P, and terminal *.O5')</td ></tr >
<tr >
<td valign="top" >solvent-related</td >
<td valign="top" >solvent, PDB "HOH", water, also the connected set of H-O-H in any model</td ></tr ></table >
<br>The comparison operators &lt;, &lt;=, =, >, >=, !=, and LIKE operate with many keywords. Note that = and != are not case-sensitive in Jmol, so 
<b>select group="ARG"</b> is the same as 
<b>select group="arg"</b>. If you want to compare cases, use LIKE: 
<b>select chain like "D"</b>. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomproperties">atom properties</a>.
<br />
<br />
<b>
<a name="atomexpressionsatomselectors">Atom selectors</a></b>    
<a href="#atomexpressions">back</a>
<br />
<br /> An atom expression is simply a list of atoms. You can select a single atom or a range of atoms from an atom expression. The way to do this is simply to suround the atom expression with parentheses and follow it with one or two numbers in brackets: 
<b>select (carbon)[3][5]</b>.This says, "Select the third through fifth carbon atoms." If the second selector is not present, then only a single atom is selected; the selector [0] indicates the last atom in the set, and negative numbers count back from that atom. Thus, 
<b>select (*)[0]</b> selects the last atom, and 
<b>select (carbon and 2.3)[-1][0]</b> selects the last two carbon atoms in model 2.3. Atom selectors can be used for any expression embedded in another command. In that case an additional set of parentheses or braces is required around the whole expression: 
<b>measure {(_O)[1]} {(_O)[2]}</b>.
<br />
<br />
<b>
<a name="atomexpressionsfunctions">Functions</a></b>    
<a href="#atomexpressions">back</a>
<br />
<br /> The following functions are also supported.
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >CONNECTED()</td >
<td valign="top" > allows for selection of specific atoms based on their connectivity to other atoms. The general format is: 
<b>connected([optional min # bonds], [optional max # bonds], [optional bond type], [optional atom expression])</b> Bond type may be any described for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#connect">connect</a>. See 
<a class="xref" href="misc/groups.txt" target="_blank">groups.txt</a> for many examples of using connected() with 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#define">define</a> </td ></tr >
<tr >
<td valign="top" > SEARCH(pattern)</td >
<td valign="top" > selects atoms that match 
<a class="xref" href="http://www.daylight.com/dayhtml/doc/theory/theory.smarts.html" target="_blank">SMARTS pattern</a> such as "[C,N]" or "a". The pattern may be prefixed with any Jmol SMILES directives as described in 
<a class="xref" href=".#jmolsmarts/smiles" target="_blank">Jmol SMARTS/SMILES</a>.</td ></tr >
<tr >
<td valign="top" > SMILES(smiles)</td >
<td valign="top" > selects atoms if and only if there is only one model loaded and that model matches the 
<a class="xref" href="http://www.daylight.com/dayhtml/doc/theory/theory.smiles.html" target="_blank">SMILES string</a> such as "CCC" (propane) or "c1ccccc1" (benzene). The pattern may be prefixed with any Jmol SMILES directives as described in 
<a class="xref" href=".#jmolsmarts/smiles" target="_blank">Jmol SMARTS/SMILES</a>.</td ></tr >
<tr >
<td valign="top" >WITHIN(setName,atomExpression)</td >
<td valign="top" >any atom within a given set. The setName can be any one of the words 
<b>BOUNDBOX</b>, 
<b>CHAIN</b>, 
<b>ELEMENT</b>, 
<b>GROUP</b>, 
<b>MODEL</b>, 
<b>MOLECULE</b>, 
<b>POLYMER</b>, 
<b>SITE</b>, or 
<b>STRUCTURE</b>, or it can be a protein or nucleic acid sequence expressed in single-letter notation surrounded by quotation marks as, for example, "GGCCCTT" or "MAACYXV" (in which case the sequence is found within the expression). (SITE refers to all crystallographic sites common to the specified atom set; BOUNDBOX refers to the smallest box containing the atom set.) Additional options, including "BASEPAIR", "SMILES", and "SMARTS", are discussed below.</td ></tr >
<tr >
<td valign="top" >WITHIN(distance, withinAllModels, atomExpression)</td >
<td valign="top" >any atom within the specified distance of any atom in the atomExpression. The optional TRUE/FALSE flag withinAllModels (by default FALSE) may be set TRUE to allow finding atoms in one model that may be within some distance of another model. If the distance is negative, then the operation applies to all atoms having normalized unit cell coordinates within the given distance of the designated atoms.</td ></tr >
<tr >
<td valign="top" > WITHIN(distance, {x y z})</td >
<td valign="top" >any atom within the specified distance of the given fractional or Cartesian coordinate. If the distance is negative, then the operation applies to all atoms having normalize unit cell coordinates within -distance of the designated atoms.</td ></tr >
<tr >
<td valign="top" > WITHIN(distance, $surfaceObject) </td >
<td valign="top" > any atom within the given distance of a point on the specified surface. </td ></tr >
<tr >
<td valign="top" > WITHIN(x.x, VDW, {atomset})</td >
<td valign="top" > Selects atoms that have overlapping van der Waals surfaces with {atomset}. The distance parameter is optional, and its meaning depends upon its magnitude. If it is > 10, then it is assumed to be a percent, such as 110%, 100%, 90%; otherwise it is assumed to be a distance to be added to the van der Waals radii of both atoms under consideration. So, for example, 
<b>select GROUPS within(1.4, VDW, {*:A})</b> selects all groups with solvent-accessible surfaces overlapping with chain A, and 
<b>select GROUPS within(100, VDW, {ligand})</b> selects all groups "clashing" with any ligand.</td ></tr >
<tr >
<td valign="top" >WITHIN(nResidues,GROUP,{atoms})</td >
<td valign="top" > groups that are within a given number of residues of a specified group of atoms. </td ></tr >
<tr >
<td valign="top" > POLYHEDRA(n) </td >
<td valign="top" > all central atoms for polyhedra with n vertices. (Jmol 14.4)</td ></tr >
<tr >
<td valign="top" > WITHIN(0,planeType, planeDesignation)</td >
<td valign="top" > selects for any atoms within 0.01 Angstroms of a plane. If planeType is HKL, then planeDesignation is in the form {h k l}, where h, k, and l are Miller indices. If planeType is PLANE, then planeDesignation should be of the form @{plane(a,b,c)}, where a, b, and c are atom expressions or coordinates. </td ></tr >
<tr >
<td valign="top" >WITHIN(distance,planeType, planeDesignation)</td >
<td valign="top" >selects for atoms within the given distance in Angstroms from the plane. Positive distances are on one side; negative distances are on the other side. Experimentation may be necessary to determine which side is which for these purposes. In all cases the atoms in the plane itself (within 0.01 Angstroms of the plane on either side) are included. </td ></tr >
<tr >
<td valign="top" >WITHIN(ATOMNAME,"aa,bb,ccc")</td >
<td valign="top" >any atom having a listed atom name </td ></tr >
<tr >
<td valign="top" >WITHIN(ATOMTYPE, "atomType,atomType,..."</td >
<td valign="top" > selects for atoms of one or more atom type. Atom type is defined in certain file types, including MOL2 model files and AMBER topology files. For other file types, atom types are the same as atom names. For example, 
<b>select within(ATOMTYPE,"HW,OW")</b> selects all water atoms an AMBER topology file.</td ></tr >
<tr >
<td valign="top" >WITHIN(BASEPAIR("XY...")</td >
<td valign="top" > finds all atoms within hydrogen-bonded DNA or RNA basepairs. Any number of pairs can be indicated. For example, 
<b>display within(BASEPAIR,"GCAU")</b> would select only G-C and A-U pairs. (Note that the RasMol-derived predefined sets "gc" and "at" refer simply to "G or C" and "A or T", respectively, and do not relate to base pairing.) </td ></tr >
<tr >
<td valign="top" > WITHIN(BOUNDBOX)</td >
<td valign="top" > selects all atoms within the currently defined 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#boundbox">boundbox</a></td ></tr >
<tr >
<td valign="top" >WITHIN(BRANCH,{first atom}, {second atom})</td >
<td valign="top" > selects the second atom and all atoms in the molecular branch starting with the second atom but not including the first atom.</td ></tr >
<tr >
<td valign="top" >WITHIN(DSSR,type)</td >
<td valign="top" > Provided DSSR information is loaded, this function selects atoms within the given type of secondary structure of RNA or DNA. Options include 
<b>aMinorMotifs</b>, 
<b>basePairs</b>, 
<b>bulges</b>, 
<b>coaxialStacks</b>, 
<b>hairpinLoops</b>, 
<b>helices</b>, 
<b>internalLoops</b>, 
<b>junctions</b>, 
<b>kinkTurns</b>, 
<b>kissingLoops</b>, 
<b>isolatedPairs</b>, 
<b>multiplets</b>, 
<b>riboseZippers</b>, 
<b>singleStranded</b>, and 
<b>stems</b>. For example, the following script produces a "3D stem diagram" for a nucleic acid:
<b>
<br>
<br>  load =1msy/dssr
<br>  set backboneSteps
<br>  backbone -0.2
<br>  select within(dssr,"helices")
<br>  color blue 
<br>  select within(dssr,"stems")
<br>  color red 
<br>  select within (dssr,"singleStranded")
<br>  color white
<br>  select within (dssr,"multiplets")
<br>  color green
<br>  select within (dssr,"isolatedPairs")
<br>  color orange
<br>  select leadatom
<br>  spacefill 1.5
<br>  label %[group1]
<br>  font label 24 bold
<br>  set labeloffset 0 0
<br>  color label grey</b>
<br>
<br>In addition, the type may be followed by one of the following:
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>.n</b></td >
<td valign="top" > where n is a number starting with 1, to designate a specific region of that type: 
<b>select within(dssr,"bulges.3")</b></td ></tr >
<tr >
<td valign="top" >
<b>.linkedBy</b></td >
<td valign="top" > for loops, bulges, and junctions, to give the linking atoms: 
<b>select within(dssr,"bulges.3.linkedBy")</b></td ></tr >
<tr >
<td valign="top" >
<b>.res1</b> or 
<b>.res2</b></td >
<td valign="top" >to specify only one of the bases in the base pair 
<b>select within(dssr,"stems.1.res1")</b></td ></tr >
<tr >
<td valign="top" >
<b>[SQL phrase]</b> </td >
<td valign="top" > to be more specific: 
<b>select within(dssr,"basePairs[SELECT res* WHERE twist > 1]")</b></td ></tr ></table >
<br>
<br></td ></tr >
<tr >
<td valign="top" >WITHIN(HELIX)</td >
<td valign="top" >Selects groups that would be selected using 
<b>select helix</b> but are not at either end of a helix section.</td ></tr >
<tr >
<td valign="top" >WITHIN(SEQUENCE,"sequence")</td >
<td valign="top" > a protein or nucleic acid sequence expressed in single-letter notation surrounded by quotation marks as, for example, "GGCCCTT" or "MAACYXV" (the entire sequence must be found; as indicated above, the keyword SEQENCE is optional). </td ></tr >
<tr >
<td valign="top" > WITHIN(SHEET)</td >
<td valign="top" >Selects groups that would be selected using 
<b>select sheet</b> but are not at either end of a sheet section. </td ></tr >
<tr >
<td valign="top" > WITHIN(SMARTS,"smartsString") </td >
<td valign="top" > all atoms that conform to the given SMARTS string are found. When used as a math function, this method returns a list of all matching sets of atoms; when used in a selection context (SELECT, DISPLAY, HIDE, etc.), all matching atoms are returned. Only hydrogen atoms that are explicitly indicated as [H] are returned. Extensive details on Jmol 3D-SEARCH SMARTS capability may be found 
<a class="xref" href="http://jmol.svn.sourceforge.net/viewvc/jmol/trunk/Jmol/src/org/jmol/smiles/package.html" target="_blank">on-line</a>. </td ></tr >
<tr >
<td valign="top" > WITHIN(SMILES,"smilesString") </td >
<td valign="top" > all atoms that conform to the given 
<a class="xref" href="http://www.daylight.com/dayhtml/doc/theory/theory.smiles.html" target="_blank">SMILES</a> string are found. When used as a math function, this method returns a list of all matching sets of atoms, including any indicated hydrogen atoms or hydrogen atoms required to complete the valence on an atom. When used in a selection context (SELECT, DISPLAY, HIDE, etc.), all matching atoms are returned. Note that for substructure searches, WITHIN(SMARTS,"smartsString") is recommended. </td ></tr ></table >
<br />
<br />
<b>
<a name="atomexpressionsrasmolbiomolecularresiduespecifications">RasMol biomolecular residue specifications</a></b>    
<a href="#atomexpressions">back</a>
<br />
<br /> The general specification of atoms in PDB "residues" follows the method used in RasMol. While the order of specifiers is somewhat flexible, the following order is generally applicable:
<br>
<br>[residueType]seqRange ^insertionCode :chainLetter .atomName %altLoc /modelNumber
<br>
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >[residueType]</td >
<td valign="top" >[ALA] [G] [2E1] [L??] When used without any other specifiers it is possible 
<b>in some but not all cases</b> to leave off the brackets around the residue type. However, leaving off the brackets is not recommended and is 
<b>known to fail</b> when the residue type begins with a number.</td ></tr >
<tr >
<td valign="top" >seqRange</td >
<td valign="top" > 1 1-30 40- Note that ranges refer to physical ranges of data in the file. If residues corresponding to both the starting and ending residue numbers are not present in the file, selection returns no atoms. If residues with numbers between the starting and ending numbers are out of place in the file -- not physically between those two file positions -- they will not be included in the selection. If there is a desire to include such residues, or the selection should allow starting or ending residues to not be present, then use the 
<b>resno</b> comparison method instead. In this case, for example: 
<b>select resno >=1 and resno 
<=30</b> or 
<b>select resno >= 40</b>. </td ></tr >
<tr >
<td valign="top" >^insertionCode </td >
<td valign="top" > ^A ^B ^? </td ></tr >
<tr >
<td valign="top" >:chainLetter </td >
<td valign="top" > :A :B :? </td ></tr >
<tr >
<td valign="top" >.atomName </td >
<td valign="top" >.Ca .C? .? .?? </td ></tr >
<tr >
<td valign="top" >%altLoc </td >
<td valign="top" > %1 %A %? </td ></tr >
<tr >
<td valign="top" >/modelNumber</td >
<td valign="top" > /1 /2 /* refer to the number on the MODEL record in multimodel PDB files or the sequential number of the model in the file otherwise. When multiple files are loaded, these numbers refer to the file number, indicating "all models in that file." Specific models in specific files can be specified using a decimal notation: 
<b>file.model</b> as, for example, 
<b>select *.CA/2.1</b> -- all alpha carbons in the first model of the second file listed in the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#load">load</a> command.</td ></tr ></table >
<br />
<br />
<b>
<a name="atomexpressionswildcards">Wildcards</a></b>    
<a href="#atomexpressions">back</a>
<br />
<br /> Unspecified components of the atom specification are indicated in some cases using a question mark and in others using an asterisk. The wildcard * can be used in place of [residueType]seqRange to indicate "any." For example: 
<b>select *.CA</b>. Wildcards can be used elsewhere in the specification, but it is preferred simply to not include a specifier altogether. Thus, 
<b>select [ALA].*</b> is the same as 
<b>select [ALA]</b>. Note that in the case of PDB files and MOL2 files with residues indicated, * may be used in the form x* only in the case of residue names, not atom names. Thus, 
<b>select AS*</b> selects aspartate and asparagine. When used for an atom, for example, with the unremediated PDB file 1bkx 
<b>select A.O?*</b> the * is not wild and selects atoms A.O1* and A.O4*. (In remediated PDB files, this * becomes a single quote or "prime" character -- AO1', AO4'.) For other file types, * can be used at the end of an atom name fragment. Asterisks cannot be used in place of insertionCode or altLoc. 
<br>
<br>Question marks are used to indicate "some character": 
<b>select *.C??</b>. Note that the number of question marks is significant. ".?" only finds atoms with single-letter names such as "O" and "C"; ".??" finds atoms with single-letter or double-letter names. The specification :?, ^?, and %? mean SOME chain, SOME insertion code or SOME alternate location; use :, ^, and % alone to indicate "atoms without chain indication," "atoms without insertion code," and "atoms without alternate location," respectively.
<br>
<br> You can use \? to match an actual ? in an atom name. For instance, if there are two atoms, one with the name "O1" and one with the name "O1?" then 
<b>select O1?</b> will select both atoms, but 
<b>select O1\?</b> will select only the second atom. You cannot use \* to escape an actual * in an atom name.
<br />
<br />
<b>
<a name="atomexpressionsatomnamesforotherfiletypes">Atom names for other file types</a></b>    
<a href="#atomexpressions">back</a>
<br />
<br /> Atom names can also be used for some non-PDB file types. For example, in CIF files, the atom_site_label field is used for the atom name. If an atom has the label "C34" you can select it using 
<b>select *.C34</b> or 
<b>select C34</b> or even 
<b>select C*</b>. Note that in this case, the wildcard * is no problem, since non-PDB file types do not include residue names, which might conflict with atom names. Similarly, Jaguar, NWChem, Tripos MOL2, Wavefunction Odyssey, SHELX, and Wavefunction Spartan files list atoms as "H3" and "O2". Atoms for these file types can be selected using these names, and the names can be displayed in 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#label">labels</a> using the format code %a. For file types such as XYZ that do not indicate a number with the atom symbol, Jmol constructs an atom name from the element symbol and the sequential number of the atom in the file.
<br />
<br /></i ></td></tr> 
<tr name='tr_atomexpressions'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_atomexpressions'>
<td colspan="5">
<p>
<a class="xref" href="#jmolcommandsyntax">[Jmol Command Syntax]</a> 
<a class="xref" href="#jmolmath">[Jmol Math]</a> 
<a class="xref" href="#jmolparameters">[Jmol Parameters]</a> 
<a class="xref" href="#atomproperties">[atom properties]</a> 
<a class="xref" href="#functions">[functions]</a> 
<a class="xref" href="#planeexpressions">[plane expressions]</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#message">message</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#set">set</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_atomexpressions'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k14">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_atomproperties'>
<td colspan="5">
<h3 class=h3new>
<a id="atomproperties" name="atomproperties">[atom properties]</a>
<a id="k15"> </a> 
<br />
<span class=new>(v. 11.8)</span></h3></td></tr>
<tr name='tr_atomproperties'>
<td>
<i >Over 90 atom properties can be selected or retrieved from model data, and most of these can be set as well. The older, more limited Rasmol notation 
<b>[group].atomName^insertion:chain%altloc</b> can still be used, but equally well one can combine any subsets of those using a more natural notation. For example, 
<b>select group="ARG" and atomname="CA" and chain="A"</b> is equivalent to 
<b>select [ARG].CA:A</b>. Mostly, the newer 
<b>xxxx=y</b> notation generalizes better in terms of additional parameters not unique to Rasmol. The comparison operators &lt;, &lt;=, =, >, >=, !=, and LIKE operate with many keywords. Note that = and != are not case-sensitive in Jmol, so 
<b>select group="ARG"</b> is the same as 
<b>select group="arg"</b>. If you want to compare cases, use LIKE: 
<b>select chain like "D"</b>. If you want to do case-sensitive string comparisons, use LIKE: 
<b>select chain like "D"</b>. Note that LIKE is only for string comparison. 
<em>select atomono like 3</em> returns nothing. 
<br>
<br>Atom properties may also be set directly using 
<b>{atom expression}.xxxx = y</b>. For example, 
<b>{_H}.radius = 0</b> or 
<b>{*}.radius = for(x;{*};x.adpmax - x.adpmin)</b> or {*}.radius = {*}.temperature.all.mul(0.03)</b>. An associative array of all matching atom properties can be created using 
<b>{atom expression}.xx?</b>, where "xx" is the beginning of a property name, or even just 
<b>{atom expression}.?</b> for all atom properties. (for example, 
<b>print {atomno=3}.a?</b> or 
<b>print @3.?</b>).
<br>
<br>Starting in 
<span class="newv">Jmol 14.2</span>, you can apply operations to arrays of values. For example, 
<b>select atomno=[1,2,4]</b> or 
<b>display color !=["red","white"]</b>. These can be read "select atoms for which the atomno is 1, 2, or 4" and "display all atoms for which the color is not red or white." 
<br>
<br>For 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#label">labels</a>, the 
<b>%[xxx]</b> notation extends the original single-character %x code of early Jmol versions. For example, 
<b>label %[atomno]</b> or 
<b>label %8.2[xyz]</b>. Within labels, 
<b>%%</b> will be interpreted as "%" to avoid its being treated as a special character. This is only needed in the rare case where its context could be interpreted as a variable token, for example, in 
<b>label 30%x</b>, if that needed to be displayed exactly like that for some reason.
<br>
<br>The full list of atom properties is given below.
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>property</b></td >
<td valign="top" >
<b>select xxx=y</b></td >
<td valign="top" >
<b>label %[xxx]</b></td >
<td valign="top" >
<b></nobr>label %x</nobr></b></td >
<td valign="top" >
<b>print {*}.xxx</b></td >
<td valign="top" >
<b>
<nobr>{*}.xxx = y</nobr></b></td >
<td valign="top" >
<b>description</b></td ></tr >
<tr >
<td valign="top" >adpmax</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >the maximum anisotropic displacement parameter for the selected atom</td ></tr >
<tr >
<td valign="top" > adpmin</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >the minimum anisotropic displacement parameter for the selected atom</td ></tr >
<tr >
<td valign="top" > altloc</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%A</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >PDB alternate location identifier</td ></tr >
<tr >
<td valign="top" >altname</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >an alternative name given to atoms by some file readers (for example, P2N)</td ></tr >
<tr >
<td valign="top" >atomID</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >special atom IDs for PDB atoms assigned by Jmol</td ></tr >
<tr >
<td valign="top" >atomIndex</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%D</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >atom 0-based index; a unique number for each atom regardless of the number of models loaded</td ></tr >
<tr >
<td valign="top" >atomName</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%a</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >atom name</td ></tr >
<tr >
<td valign="top" >atomno</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%i</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >sequential number; you can use "@" instead of "atomno=" -- for example, 
<b>select @33</b> or 
<b>Var x = @33 or @35</b></td ></tr >
<tr >
<td valign="top" >atomType</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%B</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >atom type (mol2, AMBER files) or atom name (other file types)</td ></tr >
<tr >
<td valign="top" >atomX</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%x</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >Cartesian X coordinate (or just X)</td ></tr >
<tr >
<td valign="top" >atomY</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%y</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >Cartesian Y coordinate (or just Y)</td ></tr >
<tr >
<td valign="top" >atomZ</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%z</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >Cartesian Z coordinate (or just Z </td ></tr >
<tr >
<td valign="top" > bondcount</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >covalent bond count</td ></tr >
<tr >
<td valign="top" >bondingRadius</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%I</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >radius used for auto bonding; synonymous with 
<b>ionic</b> and 
<b>ionicRadius</b> </td ></tr >
<tr >
<td valign="top" >cell</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" > </td >
<td valign="top" > </td >
<td valign="top" > </td >
<td valign="top" >crystallographic unit cell, expressed either in lattice integer notation (111-999) or as a coordinate in ijk space, where {1 1 1} is the same as 555. ANDing two cells, for example 
<b>select cell=555 and cell=556</b>, selects the atoms on the common face. (Note: in the specifc case of CELL, only "=" is allowed as a comparator.)</td ></tr >
<tr >
<td valign="top" >configuration</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" > </td >
<td valign="top" > </td >
<td valign="top" > </td >
<td valign="top" >Only in the context 
<b>{configuration=n}</b>, this option selects the set of atoms with either no ALTLOC specified or those atoms having this index into the array of altlocs within its model. So, for example, if the model has altloc "A" and "B", 
<b>select configuration=1</b> is equivalent to 
<b>select altloc="" or altloc="A"</b>, and 
<b>print {configuration=2}</b> is equivalent to 
<b>print {altloc="" or altloc="B"}</b>. Configuration 0 is "all atoms in a model having configurations", and an invalid configuration number gives no atoms. (Note: in the specifc case of CONFIGURATION, only "=" is allowed as a comparator.)</td ></tr >
<tr >
<td valign="top" >chain</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >c/s</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >protein chain. For newer CIF files allowing multicharacter chain specifications, use quotations marks: 
<b>select chain="AA"</b>. For these multicharacter desigations, case is not checked unless the CIF file has lower-case chain designations. </td ></tr >
<tr >
<td valign="top" >
<b>property</b></td >
<td valign="top" >
<b>select xxx=y</b></td >
<td valign="top" >
<b>label %[xxx]</b></td >
<td valign="top" >
<b>label %x</b></td >
<td valign="top" >
<b>print {*}.xxx</b></td >
<td valign="top" >
<b>{*}.xxx = y</b></td >
<td valign="top" >
<b>description</b></td ></tr >
<tr >
<td valign="top" >chainNo</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >chain number; sequentially counted from 1 for each model; chainNo == 0 means"no chain" or PDB chain identifier indicated as a blank (Jmol 14.0).</td ></tr >
<tr >
<td valign="top" >color</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >the atom color</td ></tr >
<tr >
<td valign="top" >covalentRadius</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >covalent bonding radius, synonymous with 
<b>covalent</b>. Not used by Jmol, but could be used, for example, in 
<b>{*}.spacefill={*}.covalentRadius.all</b>.</td ></tr >
<tr >
<td valign="top" >cs</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >chemical shift calculated using computational results that include magnetic shielding tensors.</td ></tr >
<tr >
<td valign="top" >element</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%e</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >element symbol. The value of this parameter depends upon the context. Used with 
<b>select structure=x</b>, x can be either the quoted element symbol, "H", "He", "Li", etc. or atomic number. In all other contexts, the value is the element symbol. When the atom is a specific isotope, the string will contain the isotope number -- "13C", for example.</td ></tr >
<tr >
<td valign="top" >elemno</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%l (
<em>el</em>)</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >atomic element number</td ></tr >
<tr >
<td valign="top" > eta/theta</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >Based on Carlos M. Duarte, Leven M. Wadley, and Anna Marie Pyle, 
<i>RNA structure comparison, motif search and discovery using a reduced representation of RNA conformational space</i>, 
<b>Nucleic Acids Research</b>, 
<b>2003</b>, Vol. 31, No. 16 4755-4761. The parameter eta is the C4'[i-1]-P[i]-C4'[i]-P[i+1] dihedral angle; theta is the P[i]-C4'[i]-P[i+1]-C4'[i+1] dihedral angle. Both are measured on a 0-360 degree scale because they are commonly near 180 degrees. Using the commands 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#plot">plot PROPERTIES eta theta resno; select visible;wireframe only</a> one can create these authors' "RNA worm" graph. </td ></tr >
<tr >
<td valign="top" >file</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >file number containing this atom</td ></tr >
<tr >
<td valign="top" >formalCharge</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%C</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >formal charge</td ></tr >
<tr >
<td valign="top" >format</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >format (label) of the atom. </td ></tr >
<tr >
<td valign="top" >fXyz</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >fractional XYZ coordinates</td ></tr >
<tr >
<td valign="top" >fX</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%X</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >fractional X coordinate</td ></tr >
<tr >
<td valign="top" >fY</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%Y</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >fractional Y coordinate</td ></tr >
<tr >
<td valign="top" >fZ</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%Z</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >fractional Z coordinate</td ></tr >
<tr >
<td valign="top" >fuxyz</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >fractional XYZ coordinates in the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#unitcell">unitcell</a> coordinate system</td ></tr >
<tr >
<td valign="top" >fux</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >fractional X coordinate in the unitcell coordinate system</td ></tr >
<tr >
<td valign="top" >fuy</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >fractional Y coordinate in the unitcell coordinate system</td ></tr >
<tr >
<td valign="top" >fuz</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >fractional Z coordinate in the unit cell coordinate system</td ></tr >
<tr >
<td valign="top" >group</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%n</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >3-letter residue code</td ></tr >
<tr >
<td valign="top" >group1</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%m</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >single-letter residue code (amino acids only)</td ></tr >
<tr >
<td valign="top" >groupID</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >group ID number: A unique ID for each amino acid or nucleic acid residue in a PDB file. 
<br> 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > 0 </td >
<td valign="top" > noGroup</td ></tr >
<tr >
<td valign="top" > 1-5 </td >
<td valign="top" >ALA, ARG, ASN, ASP, CYS</td ></tr >
<tr >
<td valign="top" > 6-10</td >
<td valign="top" > GLN, GLU, GLY, HIS, ILE</td ></tr >
<tr >
<td valign="top" > 11-15</td >
<td valign="top" > LEU, LYS, MET, PHE, PRO</td ></tr >
<tr >
<td valign="top" > 16-20 </td >
<td valign="top" > SER, THR, TRP, TYR, VAL </td ></tr >
<tr >
<td valign="top" > 21-23 </td >
<td valign="top" > ASX, GLX, UNK</td ></tr >
<tr >
<td valign="top" > 24-29</td >
<td valign="top" > A, +A, G, +G, I, +I </td ></tr >
<tr >
<td valign="top" > 30-35</td >
<td valign="top" > C, +C, T, +T, U, +U</td ></tr ></table >
<br>Additional unique numbers are assigned arbitrarily by Jmol and cannot be used reproducibly. </td ></tr >
<tr >
<td valign="top" >
<b>property</b></td >
<td valign="top" >
<b>select xxx=y</b></td >
<td valign="top" >
<b>label %[xxx]</b></td >
<td valign="top" >
<b>label %x</b></td >
<td valign="top" >
<b>print {*}.xxx</b></td >
<td valign="top" >
<b>{*}.xxx = y</b></td >
<td valign="top" >
<b>description</b></td ></tr >
<tr >
<td valign="top" >groupindex</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%G</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" > overall group index </td ></tr >
<tr >
<td valign="top" >hydrophobicity</td >
<td valign="top" > yes </td >
<td valign="top" > yes </td >
<td valign="top" >   </td >
<td valign="top" > yes </td >
<td valign="top" >  </td >
<td valign="top" > Aminoacid residue scale of hydrophobicity based on 
<a class="xref" href="http://www.ncbi.nlm.nih.gov/pubmed/4023714" target="_blank">Rose, G. D., Geselowitz, A. R., Lesser, G. J., Lee, R. H., and Zehfus, M. H. (1985). Hydrophobicity of amino acid residues in globular proteins, Science, 229(4716):834-838</a>.</td ></tr >
<tr >
<td valign="top" >identify</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%U</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >for a PDB/mmCIF file, a label such as 
<b>[ILE]7^1:A.CD1%A/3 #47</b>, which includes the group ([ILE]), residue number with optional insertion code (7^1), chain (:A), atom name (CD1), alternate location if present (%A), PDB model number (/3, for NMR models when one file is loaded; /file.model such as /2.3 if more than one file is loaded), and atom number (#47). For non-PDB data, the information is shorter -- for example, 
<b>H15/2.1 #6</b>, indicating atom name (H15), full file.model number (/2.1), and atom number (#6). If only a single model is loaded, %[identify] does not include the model number.</td ></tr >
<tr >
<td valign="top" >insertion</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%E</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >protein residue insertion code</td ></tr >
<tr >
<td valign="top" >label</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >current atom label (same as 
<b>format</b>)</td ></tr >
<tr >
<td valign="top" >mass</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >atomic mass -- especially useful with appended 
<b>.max</b> or 
<b>.sum</b></td ></tr >
<tr >
<td valign="top" >model</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%M</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >model number</td ></tr >
<tr >
<td valign="top" >modelindex</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >a unique number for each model, starting with 0 and spanning all models in all files</td ></tr >
<tr >
<td valign="top" ></td ></tr >
<tr >
<td valign="top" >modO</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >currently calculated occupancy from modulation (0 to 100; NaN if atom has no occupancy modulation)</td ></tr >
<tr >
<td valign="top" >modXYZ</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >currently calculated displacement modulation (for incommensurately modulated structures). Also 
<b>modX</b>, 
<b>modY</b>, 
<b>modZ</b> for individual components. For atoms without modultion, {xx}.modXYZ is -1 and {xx}.modX is NaN, and in a label %[modXYZ] and %[modX] are blank.</td ></tr >
<tr >
<td valign="top" >molecule</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%N</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >molecule number</td ></tr >
<tr >
<td valign="top" >monomer</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%g</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >monomer number (group number) in a polymer (usually a chain), starting with 1, or 0 if not part of a biopolymer -- that is, not a connected carbohydrate, amino acid, or nucleic acid (Jmol 14.3.15)</td ></tr >
<tr >
<td valign="top" >ms</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >magnetic shielding calculated from file-loaded tensors.</td ></tr >
<tr >
<td valign="top" >occupancy</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%q/%Q</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > CIF file site occupancy. In SELECT command comparisons ("select occupancy 
< 90"), an integer n implies measurement on a 0-100 scale; also, in the context %[occupancy] or %q for a label, the reported number is a percentage. In all other cases, such as when %Q is used in a label or when a decimal number is used in a comparison, the scale is 0.0 - 1.0.</td ></tr >
<tr >
<td valign="top" >partialCharge</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%P</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >partial charge</td ></tr >
<tr >
<td valign="top" >phi</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%f</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >protein group PHI angle for atom's residue </td ></tr >
<tr >
<td valign="top" >polymer</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >sequential polymer number in a model, starting with 1.</td ></tr >
<tr >
<td valign="top" >polymerLength</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%L</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >polymer length</td ></tr >
<tr >
<td valign="top" >property_xx</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >a property created using the DATA command</td ></tr >
<tr >
<td valign="top" >psi</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%p</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >protein group PSI angle for the atom's residue </td ></tr >
<tr >
<td valign="top" >radius</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >currently displayed radius -- In SELECT command comparisons ("select radius=n"), integer n implies Rasmol units 1/250 Angstroms; in all other cases or when a decimal number is used, the units are Angstroms.</td ></tr >
<tr >
<td valign="top" >
<b>property</b></td >
<td valign="top" >
<b>select xxx=y</b></td >
<td valign="top" >
<b>label %[xxx]</b></td >
<td valign="top" >
<b>label %x</b></td >
<td valign="top" >
<b>print {*}.xxx</b></td >
<td valign="top" >
<b>{*}.xxx = y</b></td >
<td valign="top" >
<b>description</b></td ></tr >
<tr >
<td valign="top" >resno</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%R</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >PDB residue number, not including insertion code (see also 
<b>seqcode</b>, below)</td ></tr >
<tr >
<td valign="top" >selected</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >1.0 if atom is selected; 0.0 if not </td ></tr >
<tr >
<td valign="top" >sequence</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >PDB one-character sequence code, as a string of characters, with "?" indicated where single-character codes are not available</td ></tr >
<tr >
<td valign="top" >seqcode</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%r</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >PDB residue number, including insertion code (for example, 
<b>234^2</b>; "seqcode" option added in Jmol 14.3.16)</td ></tr >
<tr >
<td valign="top" >seqid</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" > (mmCIF only) the value from _atom_site.label_seq_id; a pointer to _entity_poly_seq.num in the ENTITY_POLY_SEQ category specifying the sequence of monomers in a polymer. Allowance is made for the possibility of microheterogeneity in a sample by allowing a given sequence number to be correlated with more than one monomer id. (
<span class="newv">Jmol 14.2</span>.3)</td ></tr >
<tr >
<td valign="top" >shape</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >hybridization geometry such as "tetrahedral"</td ></tr >
<tr >
<td valign="top" >site</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%S</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >crystallographic site number</td ></tr >
<tr >
<td valign="top" >spacefill</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >currently displayed radius</td ></tr >
<tr >
<td valign="top" >straightness</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%T</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >quaternion-derived straightness (second derivative of the quaternion describing the orientation of the residue. This quantity will have different values depending upon the setting of 
<b>quaternionFrame</b> as "A" (alpha-carbon/phosphorus atom only), "C" (alpha-carbon/pyrimidine or purine base based), "P" (carbonyl-carbon peptide plane/phosphorus tetrahedron based), or "N" (amide-nitrogen based). The default is alpha-carbon based, which corresponds closely to the following combination of Ramachandran angles involving three consecutive residues i-1, i, and i+1: -psi
<sub>i-1</sub> - phi
<sub>i</sub> + psi
<sub>i</sub> + phi
<sub>i+1</sub>.</td ></tr >
<tr >
<td valign="top" >strucno</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >a unique number for each helix, sheet, or turn in a model, starting with 1.</td ></tr >
<tr >
<td valign="top" >structure</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >The value of this parameter depends upon the context. Used with 
<b>select structure=x</b>, x can be either the quoted keyword "none", "turn", "sheet", "helix", "dna", "rna", or "carbohydrate" or a respective number 0-6. In the context 
<b>{*}.structure</b>, the return value is a number; in the context 
<b>label %[structure]</b>, the return is one of the six keywords. </td ></tr >
<tr >
<td valign="top" >substructure</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >like 
<b>structure</b>, the value of this parameter depends upon the context. Used with 
<b>select substructure=x</b>, x can be either the quoted keyword "none", "turn", "sheet", "helix", "dna", "rna", "carbohydrate", "helix310", "helixalpha", or "helixpi", or the respective number 0-9. In the context 
<b>{*}.substructure</b>, the return value is a number; in the context 
<b>label %[substructure]</b>, the return is one of the nine keywords. </td ></tr >
<tr >
<td valign="top" >surfacedistance</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%u</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >A value related to the distance of an atom to a nominal molecular surface. 0 indicates at the surface. Positive numbers are minimum distances in Angstroms from the given atom to the surface. </td ></tr >
<tr >
<td valign="top" >symop</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >the first symmetry operation code that generated this atom by Jmol; an integer starting with 1. See also 
<b>symmetry</b>, below. This operator is only present if the file contains space group information and the file was loaded using the {i, j, k} option so as to generate symmetry-based atoms. To select only the original atoms prior to application of symmetry, you can either use "SYMOP=n", where n is the symmetry operator corresponding to "x,y,z", or you can specify instead simply "NOT symmetry" the way you might specify "NOT hydrogen". Note that atoms in special positions will have multiple operator matches. These atoms can be selected using the keyword SPECIALPOSITION. The special form 
<b>select SYMOP=nijk</b> selects a specific translation of atoms from the given crystallographic symmetry operation. Comparators &lt;, &lt;=, >, >=, and != can be used and only apply to the ijk part of the designation. The ijk are relative, not absolute. Thus, 
<b>symop=2555</b> selects for atoms that have been transformed by symop=2 but not subjected to any further translation. 
<b>select symop=1555</b> is identical to 
<b>select not symmetry</b>. All other ijk are relative to these selections for 555. If the model was loaded using 
<b>load "filename.cif" {444 666 1}</b>, where the 1 indicates that all symmetry-generated atoms are to be packed within cell 555 and then translated to fill the other 26 specified cells, then 
<b>select symop=3555</b> is nearly the same as 
<b>select symop=3 and cell=555</b>. (The difference being that cell=555 selects for all atoms that are on any edge of the cell, while symop=3555 does not.) However, the situation is different if instead the model was loaded using 
<b>load "filename.cif" {444 666 0}</b>, where the 0 indicates that symmetry-generated atoms are to be placed exactly where their symmetry operator would put them (x,-y,z being different then from x, 1-y, z). In that case, 
<b>select symop=3555</b> is for all atoms that have been generated using symmetry operation 3 but have not had any additional translations applied to the x,y,z expression found in the CIF file. If, for example, symmetry operation 3 is -x,-y,-z, then 
<b>load "filename.cif" {444 666 0}</b> will place an atom originally at {1/2, 1/2, 1/2} at positions {-1/2, -1/2, -1/2} (symop=3555) and {-3/2, -3/2, -3/2} (symop=3444) and 24 other sites.</td ></tr >
<tr >
<td valign="top" >
<b>property</b></td >
<td valign="top" >
<b>select xxx=y</b></td >
<td valign="top" >
<b>label %[xxx]</b></td >
<td valign="top" >
<b>label %x</b></td >
<td valign="top" >
<b>print {*}.xxx</b></td >
<td valign="top" >
<b>{*}.xxx = y</b></td >
<td valign="top" >
<b>description</b> </td ></tr >
<tr >
<td valign="top" > symmetry</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >%o/%O</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" > as "symmetry" or in a label as lower-case "o" gives list of crystallographic symmetry operators generating this atom with lattice designations,such as 3555; upper-case "%O" in a label gives a list without the lattice designations. See also 
<b>symop</b>, above. </td ></tr >
<tr >
<td valign="top" >temperature</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%b/%t</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >temperature factor (B-factor)</td ></tr >
<tr >
<td valign="top" >unitXyz</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >unit cell XYZ coordinates</td ></tr >
<tr >
<td valign="top" >uX</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >unit cell X coordinate normalized to [0,1)</td ></tr >
<tr >
<td valign="top" >uY</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >unit cell Y coordinate normalized to [0,1)</td ></tr >
<tr >
<td valign="top" >uZ</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >unit cell Z coordinate normalized to [0,1)</td ></tr >
<tr >
<td valign="top" >valence</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >the valence of an atom (sum of bonds, where double bond counts as 2 and triple bond counts as 3</td ></tr >
<tr >
<td valign="top" >vanderwaals</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%V</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >van der Waals radius </td ></tr >
<tr >
<td valign="top" >vectorScale</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >vibration vector scale</td ></tr >
<tr >
<td valign="top" > volume</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >approximate van der Waals volume for this atom. Note, {*}.volume gives an average; use {*}.volume.sum to get total volume. </td ></tr >
<tr >
<td valign="top" >vXyz</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >%v</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >vibration vector, or individual components as %vx %vy %vz. For atoms without vibration vectors, {xx}.vXyz is -1; in a label, %[vxyz] is blank. </td ></tr >
<tr >
<td valign="top" >vX</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >vibration vector X coordinate; for atoms without vibration vector, {xx}.vX is NaN (same for vY and vZ)</td ></tr >
<tr >
<td valign="top" >vY</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >vibration vector Y coordinate</td ></tr >
<tr >
<td valign="top" >vZ</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >vibration vector Z coordinate </td ></tr >
<tr >
<td valign="top" >x</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%x</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >Cartesian X coordinate </td ></tr >
<tr >
<td valign="top" >y</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%y</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >Cartesian Y coordinate </td ></tr >
<tr >
<td valign="top" >z</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >%z</td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >Cartesian Z coordinate </td ></tr >
<tr >
<td valign="top" >xyz</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" > </td >
<td valign="top" >yes</td >
<td valign="top" >yes</td >
<td valign="top" >Cartesian XYZ coordinates; 
<b>select xyz > 1.0</b> selects atoms more than one Angstrom from the origin.</td ></tr >
<tr >
<td valign="top" > </td >
<td valign="top" > </td >
<td valign="top" > </td >
<td valign="top" >%W</td >
<td valign="top" > </td >
<td valign="top" > </td >
<td valign="top" >PDB residue designator with x, y, z included: [%n]%r %x %y %z </td ></tr ></table >
<br />
<br /></i ></td></tr> 
<tr name='tr_atomproperties'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_atomproperties'>
<td colspan="5">
<p>
<a class="xref" href="#jmolcommandsyntax">[Jmol Command Syntax]</a> 
<a class="xref" href="#jmolmath">[Jmol Math]</a> 
<a class="xref" href="#jmolparameters">[Jmol Parameters]</a> 
<a class="xref" href="#atomexpressions">[atom expressions]</a> 
<a class="xref" href="#functions">[functions]</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#message">message</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#set">set</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_atomproperties'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k16">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_auxiliaryinfo'>
<td colspan="5">
<h3 class=h3newer>
<a id="auxiliaryinfo" name="auxiliaryinfo">[auxiliaryInfo]</a>
<a id="k17"> </a> 
<br />
<span class=newer>(v. 14.4)</span></h3></td></tr>
<tr name='tr_auxiliaryinfo'>
<td>
<i >Jmol 14.4 introduces powerful methods for accessing and adding to the metadata that is associated with each model. This information can be found using 
<b>getProperty("auxiliaryInfo")</b>, but there are also several useful shortcuts for that:
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > _ (underscore) </td >
<td valign="top" > By itself, _ is shorthand for getProperty("auxiliaryInfo"). For example:
<br />
<br />
<b> print _.keys 
<br /> boundbox
<br /> group3Counts
<br /> group3Lists
<br /> modelLoadNote
<br /> models
<br /> properties
<br /> someModelsHaveFractionalCoordinates
<br /> someModelsHaveSymmetry
<br /> someModelsHaveUnitcells
<br /> symmetryRange
<br /></b> 
<br /></td ></tr >
<tr >
<td valign="top" > _m </td >
<td valign="top" >Shorthand for 
<b>getProperty("auxiliaryInfo.models")[_currentFrame]</b>, the auxiliary information for the current model.
<br />
<br />
<b>print _m.unitCellParams[1][6].format("JSON")
<br />[ 4.916,4.916,5.4054,90.0,90.0,120.0 ]
<br />
<br /></b></td ></tr >
<tr >
<td valign="top" > {atomset}._ </td >
<td valign="top" > A subset array of auxiliaryInfo.models for all models in {atomset}
<br />
<br />
<b>print {*}._..1..aflowInfo
<br /> 
<br /> (first model's aflowInfo)
<br /></b></td ></tr >
<tr >
<td valign="top" > _(key) </td >
<td valign="top" > prepends "auxiliaryInfo.models", delivering a modelCount-length array of information
<br />
<br />
<b> print _("aflowInfo[SELECT auid WHERE H__eV___VASP_ 
< 0]")
<br /> print _("aflowInfo[select sg where volume_cell > 70]")
<br /> print _("aflowInfo[select sg where volume_cell > 70]", {model>10})
<br />
<br /></b></td ></tr >
<tr >
<td valign="top" >{atomSet}._()</td >
<td valign="top" > The array of atomInfo records for this set of atoms. Note that this value is an array even if {atomSet} is only one atom.</td ></tr >
<tr >
<td valign="top" >{atomSet}._(key)</td >
<td valign="top" > Produces an atom-based array of atomInfo data. Same as getProperty("atomInfo." + key, {atomSet}). Note that this value is an array even if {atomSet} is only one atom.</td ></tr >
<tr >
<td valign="top" >{atomSet}._("bondInfo.xxx")</td >
<td valign="top" > Produces a bond-based array of bondInfo data. Same as getProperty("bondInfo.xxx", {atomSet}). This function returns an array of bond information. If {atomSet} is only one atom, then all bonds to that atom are given; if it is more than one atom, then only bonds between atoms in that set are returned.</td ></tr ></table >
<br />
<br /></i ></td></tr> 
<tr name='tr_auxiliaryinfo'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k18">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_comments'>
<td colspan="5">
<h3 >
<a id="comments" name="comments">[comments]</a>
<a id="k19"> </a></h3></td></tr>
<tr name='tr_comments'>
<td>
<i >Comments in Jmol are expressed in a variety of ways. If the character string 
<b>****Jmol Embedded Script****</b> is found within a comment block, then ONLY the text following that string and carrying through the rest of the comment or super-comment is processed, and all other text in the file is ignored. This allows the embedding of Jmol scripts in other document types, including images and HTML files.
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > 
<b>//</b> </td >
<td valign="top" > Two adjacent forward slashes at any point in a line acts as in JavaScript to indicate the beginning of comments for that line. (Same as for Java and JavaScript) </td ></tr >
<tr >
<td valign="top" >
<b>/*...*/</b></td >
<td valign="top" > A simple comment block; same as for Java and JavaScript.</td ></tr >
<tr >
<td valign="top" >
<b>/**...**/</b> </td >
<td valign="top" >A "super-comment" block, effectively overriding the closing */ of an enclosed simple comment block. </td ></tr >
<tr >
<td valign="top" >
<b>#</b></td >
<td valign="top" > Anything following '#' up until the 
<b>end of a statement (terminated with semicolon or new line character)</b> is ignored by Jmol with the following two exceptions: (1) The characters 
<b>#jx</b> at the beginning of a Jmol command will be ignored. (2) If the string 
<b>#jc</b> appears anywhere within a statement, then that entire statement will be assumed to be a comment and will be completely ignored by the Jmol interpreter. These exceptions are legacies of desire for compatibility with
<a class="xref" href="http://www.umass.edu/microbio/chime/chimvers.htm" target="_blank">Chime</a> and 
<a class="xref" href="http://www.rasmol.org/" target="_blank">RasMol</a>, which is for the most part no longer relevant. </td ></tr >
<tr >
<td valign="top" >
<b>$</b> </td >
<td valign="top" > Scripts starting with 
<b>$</b> are processed by skipping all lines NOT starting with $, and removing the starting $ from the commands that are processed. (This option is useful for clipping console output back into the console as input in the Jmol application.) </td ></tr ></table >
<br />
<br /></i ></td></tr> 
<tr name='tr_comments'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k20">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_export'>
<td colspan="5">
<h3 >
<a id="export" name="export">[export]</a>
<a id="k21"> </a></h3></td></tr>
<tr name='tr_export'>
<td>
<i >The Jmol application (not the applet) allows export of the currently rendered scene as files that can be read by 
<a class="xref" href="http://www.avatech.com/solutions/visualization/product-details.aspx?product=17" target="_blank">Maya</a>, 
<a class="xref" href="http://www.povray.org/" target="_blank">POV-Ray</a>, and VRML readers. See the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write</a> command for details.
<br />
<br /></i ></td></tr> 
<tr name='tr_export'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k22">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_fractionalcoordinates'>
<td colspan="5">
<h3 >
<a id="fractionalcoordinates" name="fractionalcoordinates">[fractional coordinates]</a>
<a id="k23"> </a></h3></td></tr>
<tr name='tr_fractionalcoordinates'>
<td>
<i >Several Jmol commands, namely 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#center">center</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#centerat">centerAt</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#dipole">dipole</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#moveto">moveTo</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#rotate">rotate</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#spin">spin</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#translateselected">translateSelected</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#unitcell">unitcell</a>, accept coordinates in place of atom expressions. These coordinates are introduced using braces: {x, y, z} or {x y z}. (The commas are optional.) However, when the file data are crystallographic, and the coordinates have been derived by transformation of unit cell coordinates into cartesian coordinates, one can use the unit cell fractional coordinate system instead. The designation of a coordinate as fractional is simplicity itself: just include somewhere in one of the three coordinate values a fraction symbol, "/". Thus, {1/2, 0, 0} is a fractional coordinate, and it will be automatically transformed into the correct cartesian point. This allows formation of commands such as 
<b>set unitCell {1/2, 1/2, 1/2}</b> to move the unit cell to a new crystallographic orgin (for display purposes only). Since n/1 is n, one can use decimals as well, writing {0.5/1, 0, 0} instead of {1/2, 0, 0}. And since "/1" is not particularly informative, the "1" can be left off to give {0.5/, 0, 0} or {0.5, 0, 0/} as sufficient indication of fractional coordinates. Note that when the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#unitcell">unit cell</a> is shifted, an atom's fractional coordinates also shift with it. 
<br />
<br /></i ></td></tr> 
<tr name='tr_fractionalcoordinates'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k24">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_functions'>
<td colspan="5">
<h3 class=h3newer>
<a id="functions" name="functions">[functions]</a>
<a id="k25"> </a> 
<br />
<span class=newer>(v. 11.8 -- adds support for quaternion functions)</span></h3>   
<a class="textParam" href="#functionsx=fyfunctions">x = f(y) functions</a>
<br />   
<a class="textParam" href="#functionscoordinatetransformingxxxfunctions">coordinate transforming .xxx functions</a>
<br />   
<a class="textParam" href="#functionsgeneralxxxfunctions">general .xxx functions</a>
<br />   
<a class="textParam" href="#functionsarrayxxxorpropertynamexxxmodifiers">[array].xxx or .propertyName.xxx modifiers</a>
<br />   
<a class="textParam" href="#functions{atomexpression}propertyname">{atomExpression}.propertyName</a>
<br />   
<a class="textParam" href="#functionsxfyfunctions">x.f(y) functions</a>
<br />   
<a class="textParam" href="#functionsitem-selectorij">item-selector [i][j]</a>
<br />   
<a class="textParam" href="#functionsuser-definedfunctions">user-defined functions</a>
<br />   
<a class="textParam" href="#functionsspecialvariablesforfunctions">special variables for functions</a>
<br />   
<a class="textParam" href="#functionscustomizedcommandfunctions">customized command functions</a>
<br />
<br /></td></tr>
<tr name='tr_functions'>
<td>
<i >Jmol math allows for two types of functions. The first simply operate on their given parameters. For example, 
<b>x = load("myfile.dat")</b> loads the variable x with the contents of the file "myfile.dat". The second operate on the elements of a variable individually in some way and are referred to here as 
<i>item selector</i> functions. In the listings below, these functions all begin with a period character. For example, 
<b> x = {carbon}.bonds</b> operates so as to deliver the bond set associated with the carbon atoms; 
<b> x = "this is a test".replace("s","S")</b> operates on the individual characters of the string "this is a test"; 
<b> x = {oxygen}.label("%U")</b> assigns x the list of labels for the oxygen atoms in the model. Some functions can be used in both contexts. For example, 
<b> x = distance({oxygen}, {carbon}) </b> delivers the distance from the CENTER of the oxygens to the CENTER of the carbons. 
<b> x = {oxygen}.distance{carbon}</b> delivers the AVERAGE distance of an oxygen atom to the CENTER of the carbons. These are subtly different. Some functions require parentheses; some do not. Basically, if a function CAN have parameters, for example, .join(), .split(), or .label(), then it MUST have at least empty (); if a function CANNOT have parameters, for example, .atoms, .bonds, or .ident, then it NEVER uses parentheses.
<br />
<br />
<b>
<a name="functionsx=fyfunctions">x = f(y) functions</a></b>    
<a href="#functions">back</a>
<br />
<br /> Several of these functions are described more fully under the heading 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions">atom expressions</a>, as they can also be used in commands such as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#select">select</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#display">display</a>.
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b> x = abs(y)</b></td >
<td valign="top" >the absolute value of y</td ></tr >
<tr >
<td valign="top" >
<b> x = acos(y)</b></td >
<td valign="top" >the arccosine of y, in degrees in the range 0 to 180 .</td ></tr >
<tr >
<td valign="top" >
<b>x = angle(a,b,c)</b></td >
<td valign="top" >the a-b-c angle, where a, b, and c can be points or atom sets.</td ></tr >
<tr >
<td valign="top" >
<b>x = angle(a,b,c,d)</b></td >
<td valign="top" > the dihedral angle a-b-c-d is measured.</td ></tr >
<tr >
<td valign="top" >
<b>x = cache()</b></td >
<td valign="top" >returns an array describing the contents of the file 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#cache">cache</a> in the format {filename: nBytes, filename: nbytes,...} </td ></tr >
<tr >
<td valign="top" >
<a name="color__">
<b>x = color(color1,color2,nColors,asHSL)</b></a></td >
<td valign="top" > Returns a color scheme string spanning the distance between color1 and color2 with nColors colors. The last parameter, asHSL, if TRUE does the gradient in terms of hue, saturation, and lightness (HSL), which is better for cross-color gradients such as red-to-blue; if FALSE, uses RGB, which is better for single-color gradients such as white to red. The standard Jmol "rgb" color scheme is very close to 
<b>color("red","blue",33,true)</b>. Once a variable is defined as a color scheme string, it can be used in commands such as 
<b>
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#color">color</a> property temperature @x</b> and 
<b>
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface</a> vdw map property temperature colorScheme @x</b>. </td ></tr >
<tr >
<td valign="top" >
<b>x = color(schemeName, min, max)</b></td >
<td valign="top" > (Note: To get just the {r g b} color value of a named color, use the 
<b>.color</b> function rather than the function described here: 
<b>print "red".color</b> reports {255.0 0.0 0.0}.) Coloring by atom property and mapping of isosurfaces utilize mapped color schemes, which are sets of colors that are associated with given ranges of values. The 
<b>color</b> function returns information relating to these schemes. The basic form of the function, with one or three parameters returns an associatvie array describing a color scheme such as "rwb" or "roygb" that has been mapped from value 
<b>min</b> to value 
<b>max</b> with the keys listed below. If 
<b>schemeName</b> is "", then the current property scheme (default "roygb") is used.) The parameters 
<b>min</b> and 
<b>max</b> are optional and, if absent, will take the numbers 1 and N, where N is the number of colors in the color scheme if no property has been mapped, or the most recent range of values, if a property has been mapped.
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > "colors" </td >
<td valign="top" > an array of points giving {r g b} on a 0 to 255 scale</td ></tr >
<tr >
<td valign="top" >"max" </td >
<td valign="top" > the maximum value being mapped </td ></tr >
<tr >
<td valign="top" > "min" </td >
<td valign="top" > the minimum value being mapped </td ></tr >
<tr >
<td valign="top" > "name" </td >
<td valign="top" > the name of the color scheme </td ></tr >
<tr >
<td valign="top" > "reversed" </td >
<td valign="top" > TRUE if 
<b>min</b> > 
<b>max</b> </td ></tr >
<tr >
<td valign="top" > "values" </td >
<td valign="top" > an array of values associated with the two ends and each boundary between individual color of the scheme. (Note that if there are N colors, then there will be N + 1 values.) </td ></tr ></table > 
<br>Thus, for example, 
<b>print color("rwb", 0, 100)["colors"][1]</b> prints the first color of the color scheme, and 
<b>print color("rwb", 0, 100)["values"][0]</b> prints the last value (max). </td ></tr >
<tr >
<td valign="top" >
<b>x = color(schemeName, min, max, value)</b></td >
<td valign="top" > Returns a color as {r g b} on a 0 to 255 scale from a specified color scheme that has been mapped using the specified minimum and maximum values. For example: 
<b>print color("rwb", 0, 100, 30)</b> returns 
<b>{255.0 144.0 144.0}</b>. </td ></tr >
<tr >
<td valign="top" >
<b>x = color("toHSL",RGBcolor)</b> </td >
<td valign="top" > From an RGB color expressed as a point, {100 50 100} or color(100, 50, 100), or a hex name such as "[xFF00FF]", or a JavaScript color name such as "chartreuse", returns an {h s v} point with hue ranging from 0 to 360, saturation ranging from 0 to 100, and lightness ranging from 0 to 100. </td ></tr >
<tr >
<td valign="top" >
<b>x = color("toRGB",colorNameOrHSLcolor)</b> </td >
<td valign="top" > From a color name or hex code such as [xFF00FF] or an HSL color expressed as a point, {100 50 100} or using color(100, 50, 100), returns an {r g b} point with red, green, and blue ranging from 0 to 255. (Note that you can also use colorName.color</b> to get the color of a JavaScript color: 
<b>print "red".color</b>, for example.)</td ></tr >
<tr >
<td valign="top" > 
<b>x = color("$isosurfaceID")</b> </td >
<td valign="top" > Returns the color scheme associative array (see above) associated with this isosurface. </td ></tr >
<tr >
<td valign="top" > 
<b>x = color("$isosurfaceID", value)</b> </td >
<td valign="top" > Returns the color as {r g b} associated with the given value of a mapped isosurface. </td ></tr >
<tr >
<td valign="top" >
<b>x = compare({atomset1}, {atomset2})</b></td >
<td valign="top" >Returns a 4x4 matrix that gives the optimal rotation (x%1) and translation (x%2) to superimpose the atoms in {atomset1} onto the atoms in {atomset2} using the closed-form quaternion method. One or the other or both of the atom sets may be replaced by an array of points. The number of atoms/points must be the same in each set, or "NaN" will be returned instead. </td ></tr >
<tr >
<td valign="top" >
<b>x = compare({atomset1}, {atomset2}, "stddev")</b></td >
<td valign="top" >Returns the standard deviation of atom positions for the optimal rotation and translation to superimpose the atoms in {atomset1} onto the atoms in {atomset2}. The number of atoms must be the same in each set, or "NaN" will be returned instead. </td ></tr >
<tr >
<td valign="top" > 
<b>x = compare({atomset1}, {atomset2}, "ISOMER")</b></td >
<td valign="top" > Carries out a comparisons of atoms in the two atom sets and returns one of the following strings : 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > CONSTITUTIONAL ISOMERS </td >
<td valign="top" > having the same molecular formula but not the same connectivity </td ></tr >
<tr >
<td valign="top" > ENANTIOMERS </td >
<td valign="top" > configurationally enantiomeric (mirror images) </td ></tr >
<tr >
<td valign="top" > DIASTERIOMERS </td >
<td valign="top" > differing in one or more stereocenters (including double bonds) </td ></tr >
<tr >
<td valign="top" > CONFORMATIONAL ISOMERS </td >
<td valign="top" > having the same constitution and configuration, but differing significantly in conformation (having root-mean-square deviations greater than ?? </td ></tr >
<tr >
<td valign="top" > IDENTICAL </td >
<td valign="top" > the same, constitutionally, configurationally, and conformationally </td ></tr >
<tr >
<td valign="top" > NONE </td >
<td valign="top" > no relationship </td ></tr ></table > </td ></tr >
<tr >
<td valign="top" >
<b>x = compare({atomset1}, {atomset2}, "SMARTS", SMARTSstring)</b></td >
<td valign="top" >Uses a SMARTS (substructure) description to find the first instance of atoms in the first structure that correlate one-for-one with atoms in the second structure, then finds the rotation and translation that best aligns them. Returns a 4x4 matrix. </td ></tr >
<tr >
<td valign="top" >
<b>x = compare({atomset1}, {atomset2}, "SMARTS", SMARTSstring, "stddev")</b> </td >
<td valign="top" > Same as above, but returns the standard deviation. </td ></tr >
<tr >
<td valign="top" >
<b>x = compare({atomset1}, {atomset2}, SMARTSstring, "BONDS")</b> </td >
<td valign="top" >Carries out a SMARTS match (or SMILES if the string is "SMILES" itself) on the two atom sets. Returning an array of n*6 elements, where n is the number of dihedral angle matches. Each set of six elements indicates the four atoms involved in the dihedral, the angle in the first atom set, and the angle in the second atom set. If there is no match, the string "NaN" is returned. This function is run internally by Jmol when carrying out flexible fits using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#compare">compare</a> command and the 
<b>BONDS</b> option. (Jmol 14.0) </td ></tr >
<tr >
<td valign="top" >
<b>x = compare({atomset1}, {atomset2}, "SMILES", SMILESstring)</b> </td >
<td valign="top" >Same as "SMARTS", but does a whole-molecule comparison. </td ></tr >
<tr >
<td valign="top" >
<b>x = compare({atomset1}, {atomset2}, "SMILES", SMILESstring, "stddev")</b> </td >
<td valign="top" >Same as "SMARTS", but does a whole-molecule comparison. </td ></tr >
<tr >
<td valign="top" >
<b>x = connected(...{atomSet})</b></td >
<td valign="top" >See the discussion of connected() at 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions">atom expressions</a>.</td ></tr >
<tr >
<td valign="top" >
<b>x =connected(...{atomset1}, {atomset2})</b></td >
<td valign="top" > Specifying two atom sets in a CONNECTED function returns the bond set [{...}] including all such bonds. This bond set can be selected, colored, sized using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#wireframe">wireframe</a>, and hidden or displayed. </td ></tr >
<tr >
<td valign="top" > 
<b>connected({bondSet},...)</b></td >
<td valign="top" >returns a subset of the specified bonds that match additional criteria, for example: 
<b>x = connected({*}.bonds, "DOUBLE");connect @x radius 0.1</b> or 
<b>x = connected({*}.bonds, 1.3, 1.5);color @x blue</b>.</td ></tr >
<tr >
<td valign="top" > 
<b>x = contact({atomset1}, {atomset2})</b>
<br> 
<b>x = contact(nPercent, {atomset1}, {atomset2})</b>
<br> 
<b>x = contact(distance, {atomset1}, {atomset2})</b></td >
<td valign="top" >returns the atoms in {atomset2} within van der Waals contact of {atomset1}. {atomset2} is optional and defaults to "not atomset1". Optional parameters include a percent van der Waals radius expressed as an integer or a distance in Angstroms do be added to the van der Waals radius, expressed as a decimal number </td ></tr >
<tr >
<td valign="top" >
<b>x = cos(y)</td >
<td valign="top" >the cosine of y, where y is in degrees </td ></tr >
<tr >
<td valign="top" >
<b>x = cross(a,b)</b></td >
<td valign="top" > the cross product of two vectors or points.</td ></tr >
<tr >
<td valign="top" >
<b>x = data({atomset},type)</b></td >
<td valign="top" >creates model file data of the type "MOL", "PDB", or "XYZ" for the selected atom set. Starting with Jmol 14.4, if 
<b>type</b> is lower case "xyz", then only the atom data lines are written, not the header lines of the XYZ file format.</td ></tr >
<tr >
<td valign="top" >
<b>x = data({atomset},type,TRUE)</b></td >
<td valign="top" >Adding a third parameter TRUE specifies that all trajectories should be returned.</td ></tr >
<tr >
<td valign="top" >
<b>x = data("dataset_name")</b></td >
<td valign="top" >places the text of the data set created using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#data">data</a> command into variable x.</td ></tr >
<tr >
<td valign="top" >
<b>x = data(stringData,fieldOrColumn,columnCount,firstLine)</b></td >
<td valign="top" >separates stringData into lines, then reads lines starting from firstLine (1 being the first line). Data are read from free-format field or column fieldOrColumn. If the data are free-format, then set columnCount = 0, otherwise columnCount indicates the number of columns to read for each data point. The data() function returns a newline-separated list, which can be read directly into atomic properties, for example, using 
<b>{*}.partialCharge = data(load("mydata.mol2"),9,0,7)</b>.</td ></tr >
<tr >
<td valign="top" >
<b>x = distance(a,b)</b></td >
<td valign="top" > The distance from the geometric center of a to the geometric center of b, where a and b are atom expressions, coordinates, or planes.</td ></tr >
<tr >
<td valign="top" >
<b>x = dot(a,b)</b></td >
<td valign="top" > the dot product of two vectors (or points). </td ></tr >
<tr >
<td valign="top" >
<b>x = eval("expression")</b></td >
<td valign="top" >indirect evaluation of a Jmol script expresion. (
<span class="newv">Jmol 14.2</span>) </td ></tr >
<tr >
<td valign="top" >
<b>x = file("filename")</b></td >
<td valign="top" > the full path to the indicated file name. Note that 
<b>file("?")</b> displays a file dialog, which allows the user to navigate to a different directory, and 
<b>file("")</b> returns the full path to the current default directory. </td ></tr >
<tr >
<td valign="top" >
<b>x = format("ARRAY",data)</b></td >
<td valign="top" >Makes a copy of the data in array form, turning string and byteArrays into integer arrays based on characters or bytes, respectively (
<span class="newv">Jmol 14.2</span>).</td ></tr >
<tr >
<td valign="top" >
<b>x = format("BYTEARRAY",data)</b></td >
<td valign="top" >Copies the data into a byteArray. Data may be an array, a byteArray, a string, or a base64-encoded array (
<span class="newv">Jmol 14.2</span>).</td ></tr >
<tr >
<td valign="top" >
<b>x = format("BASE64",data)</b></td >
<td valign="top" >Generates base64 code for data contained in a variable, prepending the string with ";base64," (
<span class="newv">Jmol 14.2</span>).</td ></tr >
<tr >
<td valign="top" >
<b>x = format("JSON",data)</b></td >
<td valign="top" >Generates JavaScript Object Notation (JSON) code for data contained in a variable (
<span class="newv">Jmol 14.2</span>).</td ></tr >
<tr >
<td valign="top" >
<b>x = format(sprintfFormat, a, b, c, ...)</b></td >
<td valign="top" >This function creates a string using a format similar to that used in C++ to format a set of variables into a string with special codes that start with %. While not an exact implementation of this format, there are strong similarities. Here a, b, and c are variable names, and sprintfFormat is the format string containing a </b>%n.mX</b> code for each variable. As for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#labelcolumnformattingandscientificnotation">labels</a>, 
<b>n</b> and 
<b>m</b> indicate column formatting and precisions. Both 
<b>n</b> and 
<b>.m</b> are optional. Here, 
<b>X</b> indicates the variable type , whereas in, for example, {*}.label("%a"), 
<b>X</b> represents an atom property, and the type of formatting is determined automatically from that. The options for 
<b>X</b> include:
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > 
<b>i</b> or 
<b>d</b></td >
<td valign="top" > integer. Either i or d can be used synonymously.</td ></tr >
<tr >
<td valign="top" > 
<b>f</b></td >
<td valign="top" >float/decimal. A negative value for m indicates to use scientific notation with a total of -m digits. The default is full width, full precision.</td ></tr >
<tr >
<td valign="top" > 
<b>e</b></td >
<td valign="top" >exponential (scientific notation). "%8.3e" is equivalent to "%8.-3f". </td ></tr >
<tr >
<td valign="top" > 
<b>p</b></td >
<td valign="top" >point. Each of the three coordinates is formatted according to the specified width and precision. The default is %6.2p. </td ></tr >
<tr >
<td valign="top" > 
<b>q</b></td >
<td valign="top" >quaternion/plane/axisangle. Each of the four elements of the vector {x y z w} are formatted according to the specified width and precision. The default is %6.2q</td ></tr >
<tr >
<td valign="top" > 
<b>s</b></td >
<td valign="top" >string. Values for precision, m, determine maximum number of characters starting from the left (m > 0) or right (m 
< 0). So, for example, 
<b>print format("%0.-3s","testing")</b> prints "ing". </td ></tr ></table >
<br>For example: 
<b>calculate straightness;print format("average straightness = %4.2f", {*}.straightness)</b></td ></tr >
<tr >
<td valign="top" >
<b>x = getProperty(format,type,parameters...)</td >
<td valign="top" > The 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#getproperty">property</a> of the given type is returned as a Jmol math list, 
<b>print getProperty()</b> by itself giving the list of available types. Each property type has its own intrinsic structure, but in general the parameters may include an initial atom set specification followed by one or more key values and, in the case of arrays, an item selector. For example, 
<br>
<br>
<b>print getProperty("boundboxInfo","center")</b>
<br>
<b> x = getProperty("atomInfo",{atomno=3})</b> 
<br>
<b>x = getproperty("bondInfo",{*},2,"atom1", "sym")</b>
<br>
<br>An optional format "JSON" may be included to indicate that the data should be converted to JSON format. The JSmol call from JavaScript 
<b>Jmol.evaluateVar(app,expr)</b> uses the getProperty method to evaluate an expression and return its value in JavaScript format, via JSON.</td ></tr >
<tr >
<td valign="top" > 
<b>x = hkl(a,b,c)</b></td >
<td valign="top" > generates the plane associated with a given set of Miller plane indices. </td ></tr >
<tr >
<td valign="top" > 
<b>x = intersection(plane1, plane2)</b></td >
<td valign="top" >returns the line of intersection between two planes in the form of an array: [point,vector] or "" if the planes are parallel. </td ></tr >
<tr >
<td valign="top" >
<b>x = intersection(point,plane)</b></td >
<td valign="top" >returns the nearest point on a plane to a given point. </td ></tr >
<tr >
<td valign="top" >
<b>x = intersection(point,vector,plane)</b> </td >
<td valign="top" >returns the point of intersection of a plane with a line trough the given point with in the direction of the given vector. </td ></tr >
<tr >
<td valign="top" >
<b>x = intersection(point1, point2, point3)</b></td >
<td valign="top" >returns the nearest point to point3 on the line through point1 and point2. </td ></tr >
<tr >
<td valign="top" >
<b>x = javascript("...")</b></td >
<td valign="top" >returns the result of evaluating the specified JavaScript. Applet only; disallowed if on the web page _jmol.noEval = true.</td ></tr >
<tr >
<td valign="top" >
<b>x = label(...)</b></td >
<td valign="top" > See 
<b>x = format(...)</b>, above.</td ></tr >
<tr >
<td valign="top" >
<b>x = load("filename")</b></td >
<td valign="top" > Load the data from the specified file into variable x.</td ></tr >
<tr >
<td valign="top" >
<b>x = load("filename", nBytesMax)</b></td >
<td valign="top" > Load the data from the specified file into variable x, but no more than the specified number of bytes. Since this function returns "java.io.FileNotFoundException: ..." when working from a local drive, the function 
<b>x = load("filename", 0)</b> can be used to test for the existance of a file. If the function returns the empty string "", then the file exists; if it returns an error message, then the file does not exist. So, for example, the following code loads a PDB file from the RCSB only if not found on the local drive:
<b>
<br>
<br>if (load(pdbid + ".pdb", 0) == "") {load @{pdbid + ".pdb"} } else {load @{"=" + pdbid} }
<br>
<br></b></td ></tr >
<tr >
<td valign="top" >
<b> x = load("filename",TRUE)</b> </td >
<td valign="top" > (
<span class="newv">Jmol 14.2</span>). Adding a second parameter TRUE creates a binary associative array variable x that contains the contents of the file. Data are stored as raw bytes (but will appear as a string in the PRINT command). If the file is a standard file, the key "_DATA_" will hold the file data. If the file is a PNGJ file, the key "_IMAGE_" will hold the image data and additional files will be keyed by file name. If the file is a zip file, the files will be keyed by file name, but no "_IMAGE_" key will be present (presumably). Note that x = load("myfile") without TRUE loads just the file list for PNGJ or ZIP files, not the actual data.</td ></tr >
<tr >
<td valign="top" >
<b> x = measure(...)</b></td >
<td valign="top" > The 
<b>measure</b> function requires from two to four atom expressions and/or points in space and returns associated measurements in a string, one measurement per line. Additional optional parameters include minimum and maximum ranges, the designations "connected" or "notConnected", the units "nm", "nanometers", "pm", "picometers", "angstroms", "ang", or "au", and a format string in quotes similar to that used by the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#measure">measure</a> command. </td ></tr >
<tr >
<td valign="top" >
<b>x = now()</b></td >
<td valign="top" > returns the time in milliseconds since some old date; can be used for timing scripts. 
<b>now(x)</b> returns the number of milliseconds since time 
<b>x</b>: 
<b>x = now();.......;print now(x);</b>. </td ></tr >
<tr >
<td valign="top" > 
<b>x = plane(pt1, pt2)</b></td >
<td valign="top" > the plane that bisects the line connecting pt1 and pt2. </td ></tr >
<tr >
<td valign="top" >
<b>x = plane(pt1, pt2, f)</b></td >
<td valign="top" > the plane perpendicular to the line connecting pt1 and pt2 and containing the point that is fraction f of the way from pt1 to pt2. (Jmol 14.3.11)</td ></tr >
<tr >
<td valign="top" >
<b>x = plane(pta,ptb,ptc,ptd)</b></td >
<td valign="top" >creates an {x y z w} plane from the first three points, and assigns the signs of x, y, z, and w to correspond to a positive distance to ptd as measured with the distance() function. Parameters may be mathematical expressions. </td ></tr >
<tr >
<td valign="top" >
<b>x = plane(a, b, c, d)</b></td >
<td valign="top" >creates the four-vector {a b c d}, which represents a plane satisfying the equation 
<b>ax + by + cz + d = 0</b></td ></tr >
<tr >
<td valign="top" >
<b>x = plane("{a b c d}")</b></td >
<td valign="top" >creates an plane satisfying the equation 
<b>ax + by + cz + d = 0</b> from a string equivalent. As for all Jmol math expressions, parameters may be mathematical expressions. </td ></tr >
<tr >
<td valign="top" >
<b>x = plane(pta,ptb,ptc)</b></td >
<td valign="top" >creates an {x y z w} plane through the three given points, which may themselves be mathematical expressions that evaluate to {x y z} points or atom expressions. </td ></tr >
<tr >
<td valign="top" > 
<b>x = plane(r,theta,phi)</b></td >
<td valign="top" >generates a plane that is perpendicular to the vector from {0 0 0} to the point defined by the given r, theta, and phi. The vector is generated by sequential rotation of a vector along the Z axis first by phi around the X axis, then by theta around the Z axis: 
<b>v = R[z,theta]R[x,phi]{0 0 r}</b>. </td ></tr >
<tr >
<td valign="top" >
<b>x = point(a,b,c)</b></td >
<td valign="top" >Creates an {x y z} point. Parameters may be mathematical expressions.</td ></tr >
<tr >
<td valign="top" >
<b>x = point({x,y,z}, true)</b></td >
<td valign="top" >gives the screen coordinates {sx, sy, sz} corresponding to the 3D coordinates {x, y, z}. </td ></tr >
<tr >
<td valign="top" >
<b>x = point({sx,sy,sz}, false)</b></td >
<td valign="top" >gives the 3D coordinates {x, y, z} cooresponding to the screen coordinates {sx, sy, sz}. </td ></tr >
<tr >
<td valign="top" >
<b>x = point("{x,y,z}")</b></td >
<td valign="top" >creates an {x y z} point from the string equivalent. Parameters may be mathematical expressions. </td ></tr >
<tr >
<td valign="top" >
<b>x = point(x)</b></td >
<td valign="top" >Rounds x down (toward 0) to the nearest integer. Note that x%0 rounds to the NEAREST integer value, instead.</td ></tr >
<tr >
<td valign="top" >
<b>x = polyhedra(); x = polyhedra(n)</b></td >
<td valign="top" > the atom centers for all polyhedra or polyhedra with a specific number of vertices, respectively. (Jmol 14.4)</td ></tr >
<tr >
<td valign="top" >
<b>x = polyhedra(smilesString); x = polyhedra(smartsString)</b></td >
<td valign="top" > These two functions can be used search for matching polyhedra (atom environments), either topologically (using a SMARTS string; only *) or including atom identity (SMILES string; with atom names). An atom set is returned. Note that the SMILES and SMARTS strings created by Jmol in association with 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#polyhedra">polyhedra</a> describe the connectivity of the faces and do not include the central atom itself. (Jmol 14.4)</td ></tr >
<tr >
<td valign="top" >
<b>x = prompt(message)</b></td >
<td valign="top" >displays a pop-up message box and waits for the user to press OK</td ></tr >
<tr >
<td valign="top" >
<b>x = prompt(message,defaultInput)</b></td >
<td valign="top" >displays an input dialog allowing the user to enter some text and press OK (or ESCAPE to cancel). If canceled, returns "null". </td ></tr >
<tr >
<td valign="top" >
<b>x = prompt(message,buttonText,TRUE)</td >
<td valign="top" >displays a message box with buttons and returns the label of the button that was pressed. The parameter is a list of button labels separated by |, for example: "Yes|No" or "OK|cancel" or "Spacefill|Wireframe|Ball&Stick".</td ></tr >
<tr >
<td valign="top" >
<b>x = prompt(message,buttonArray)</td >
<td valign="top" >displays a message box with buttons based on the values in the array parameter and returns an integer indicating which button was pressed (starting with 1, or -1 if ESCAPE was pressed). </td ></tr >
<tr >
<td valign="top" >
<b>x = quaternion()</b></td >
<td valign="top" > The current model rotation in the form of a quaternion. Same as 
<b>x = quaternion(script("show rotation"))</b> </td ></tr >
<tr >
<td valign="top" >
<b>x = quaternion("best")</b></td >
<td valign="top" > The 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#rotate_best">"best"</a> model rotation in the form of a quaternion. Same as 
<b>x = quaternion(script("show best rotation"))</b> (Jmol 14.0)</td ></tr >
<tr >
<td valign="top" >
<b>x = quaternion({x y z},theta)</b></td >
<td valign="top" >the quaternion {x y z w} associated with a rotation of 
<b>theta</b> degrees (counter-clockwise) around axis {x y z}. {x y z} need not be a unit vector -- Jmol will normalize it automatically. </td ></tr >
<tr >
<td valign="top" >
<b>x = quaternion("{x y z w}")</b></td >
<td valign="top" >the unit quaternion {x y z w} produced by normalizing the specified quaternion. That is, where 
<b>theta</b> is the rotation angle, and 
<b>q0 = w = cos(theta/2)</b>, 
<b>{x y z} = sin(theta/2) * unitNormal</b>. </td ></tr >
<tr >
<td valign="top" >
<b>x = quaternion(q0, q1, q2, q3)</b></td >
<td valign="top" >the unit quaternion {x y z w} produced by normalizing the specified quaternion. Note that q0 is first in the list of parameters, even though Jmol will store the quaternion in the form {q1/f, q2/f, q3/f, q0/f} where 
<b>f</b> is sqrt(q0*q0 + q1*q1 + q2*q2 + q3*q3). </td ></tr >
<tr >
<td valign="top" >
<b>x = quaternion({m00 m10 m20}, {m01 m11 m21})</b></td >
<td valign="top" >the unit quaternion corresponding to the rotation matrix having the first two column vectors indicated. </td ></tr >
<tr >
<td valign="top" >
<b>x = quaternion({center},{x-axis point}, {xy-plane point})</b></td >
<td valign="top" >the unit quaternion associated with a frame that has a center at the first parameter position, an x axis in the direction of the second parameter position, and a y axis in the plane of the three parameter positions. These parameters may be atom expressions. For example, 
<b>x = quaternion({215.CA},{215.C},{215.N})</b> creates the "standard" quaternion for residue 215. The z axis will be generated using the x and y axes and the right-hand rule. </td ></tr >
<tr >
<td valign="top" >
<b>x = quaternion({atom})</b></td >
<td valign="top" > the quaternion associated with the an atom (or the first atom in the atom set) based on the setting of 
<b>set quaternionFrame</b>.</td ></tr >
<tr >
<td valign="top" >
<b>x = quaternion({atomset}, nMax)</b></td >
<td valign="top" > an 
<i>array</i> of quaternions, one per residue, up to nMax long (or all if nMax is &lt;=0). Quaternions are created based on the setting of 
<b>set quaternionFrame</b>.</td ></tr >
<tr >
<td valign="top" >
<b>x = quaternion({atom1}, {atom2})</b></td >
<td valign="top" > the quaternion difference of the two residues containing the specified atoms (or the first atom in each set, if applicable), created based on the setting of 
<b>set quaternionFrame</b>. An optional last parameter "relative" utilizes quaternion left-division. The quaternion relative difference represents the necessary rotation to get from q1 to q2 within the reference frame of q2 rather than the standard reference frame </td ></tr >
<tr >
<td valign="top" >
<b>x = quaternion({atomset1}, {atomset2}, nMax)</b></td >
<td valign="top" > an 
<i>array</i> up to nMax long (or all if nMax is &lt;=0) of quaternion differences, one per residue pair in the two sets, created based on the setting of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setmisc">set quaternionFrame</a>. An optional last parameter "relative" utilizes quaternion left-division. </td ></tr >
<tr >
<td valign="top" >
<b>x = quaternion(quaternionArray)</b></td >
<td valign="top" > calculates the spherical mean (see 
<a class="xref" href="http://math.ucsd.edu/%7Esbuss/ResearchWeb/spheremean/" target="_blank">Buss and Fillmore, 2001</a>) of the array of quaternions.</td ></tr >
<tr >
<td valign="top" >
<b>x = quaternion(quaternionArray, true)</b></td >
<td valign="top" > returns the standard deviation for the calculated spherical mean (see 
<a class="xref" href="http://math.ucsd.edu/%7Esbuss/ResearchWeb/spheremean/" target="_blank">Buss and Fillmore, 2001</a>) of the array of quaternions.</td ></tr >
<tr >
<td valign="top" >
<b>x = quaternion(quaternionArray1, quaternionArray2)</b></td >
<td valign="top" > an 
<i>array</i> of quaternion differences of the two array elements, taken a pair at a time. An optional last parameter "relative" utilizes quaternion left-division. </td ></tr >
<tr >
<td valign="top" >
<b>x = random()</b>
<br>
<b>x = random(n)</b>
<br>
<b>x = random(m,n)</b>
<br>
<b>x = random(m,n,seed)</b></td >
<td valign="top" >Generate a random number in the range [0,1), [0, n), or [m, n). Optionally (Jmol 14.4) set the seed (resetting the generator to a predefined point).</td ></tr >
<tr >
<td valign="top" >
<b>x = script("...")</b></td >
<td valign="top" >returns the output from the specified script command; particularly informative script commands include 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#getproperty">getProperty</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#show">show</a>.</td ></tr >
<tr >
<td valign="top" >
<b>x = script("...", appletName)</b></td >
<td valign="top" >returns the output from the specified script command run in one or more applets. For example, 
<b>print script("show orientation moveto", 2)</b> will print the orientation moveto command for an applet with name "2" or, if that does not exist, "jmolApplet2". See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#script">script</a> for details. </td ></tr >
<tr >
<td valign="top" >
<b>x = search(smilesString)</b></td >
<td valign="top" > find atoms matching the given smiles string, which may include bond types such as = or - between atoms. More powerful SMILES/SMARTS functions include 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#jmolsmarts/smiles">find() and search()</a>. </td ></tr >
<tr >
<td valign="top" >
<b> x = select(x;{a};b)</b></td >
<td valign="top" >selects atoms from the atom expression 
<b>{a}</b> based on the boolean expression 
<b>b</b>. Note the use of semicolons, not commas, to separate the three components of this function. The variable 
<b>x</b> is local to the function, and when it appears in the boolean expression in the form 
<b>x.
<i>property</i></b> represents a single atom of the atom expression. For example, 
<b>x = select(a;{*};a.distance({0 0 0}) > 3 and a.elemno > 18)</b>. select() functions can be nested -- just use two different variable names: 
<b>x = select(x;{*.ca};x.phi 
< select(y; {*.ca}; y.resno = x.resno + 1).phi)</b>. The select() function provides a powerful selection mechanism that can utilize any Jmol math expression involving properties of an atom. (In contrast, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#select">select</a> command comparisons are limited to =, &lt;, >, &lt;=, and >=, and values are rounded to the nearest 1/100th). </td ></tr >
<tr >
<td valign="top" >
<b>x = show(y)</b></td >
<td valign="top" >returns the result of the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#show">show</a> command; the same as 
<b>x = script('show y')</b> but simpler to implement. (
<span class="newv">Jmol 14.2</span>)</td ></tr >
<tr >
<td valign="top" >
<b>x = sin(y)</td >
<td valign="top" >the sine of y, where y is in degrees </td ></tr >
<tr >
<td valign="top" >
<b>x = sqrt(y)</td >
<td valign="top" >the square root of y </td ></tr >
<tr >
<td valign="top" >
<b>x = unitcell()</b></td >
<td valign="top" > returns a "unit cell" array containing [origin, va, vb, vc] suitable for use in the command 
<b>UNITCELL @x</b>.</td ></tr >
<tr >
<td valign="top" >
<b>x = unitcell(uc)</b></td >
<td valign="top" > returns a copy of a unit cell.</td ></tr >
<tr >
<td valign="top" >
<b>x = unitcell(uc, "reciprocal")</b></td >
<td valign="top" > returns the reciprocal lattice for specified unit cell.</td ></tr >
<tr >
<td valign="top" >
<b>x = unitcell("reciprocal")</b></td >
<td valign="top" > returns the reciprocal lattice for current model's unit cell.</td ></tr >
<tr >
<td valign="top" >
<b>x = unitcell("primitive")</b></td >
<td valign="top" > returns the primitive unit cell for the current model. (Assumes current unit cell is conventional.)</td ></tr >
<tr >
<td valign="top" >
<b>x = unitcell("primitive", centering)</b></td >
<td valign="top" > returns the primitive unit cell for the current model using the specified centering, which may be one of "P", "A", "B", "C", "I", "F", "R", "BCC", or "FCC". (Assumes current unit cell is conventional.)</td ></tr >
<tr >
<td valign="top" >
<b>x = unitcell("conventional")</b></td >
<td valign="top" > returns the conventional unit cell for the current model. (Assumes current unit cell is primitive.)</td ></tr >
<tr >
<td valign="top" >
<b>x = unitcell("conventional", centering)</b></td >
<td valign="top" > returns the primitive unit cell for the current model using the specified centering. (Assumes current unit cell is primitive.)</td ></tr >
<tr >
<td valign="top" >
<b>x = unitcell(ucconv, "primitive",centering)</b></td >
<td valign="top" > converts conventional to primitive based on a centering.</td ></tr >
<tr >
<td valign="top" >
<b>x = unitcell(ucconv, "conventional",centering)</b></td >
<td valign="top" > converts primitive to conventional based on a centering.</td ></tr >
<tr >
<td valign="top" >
<b>x = unitcell(origin, [va, vb, vc])</b></td >
<td valign="top" > returns a user-defined unit cell; just the array [origin, va, vb, vc].</td ></tr >
<tr >
<td valign="top" >
<b>x = unitcell(origin, pta, ptb, ptc)</b></td >
<td valign="top" > returns a user-defined unit cell as [origin, pta - origin, ptb - origin, ptc - origin].</td ></tr >
<tr >
<td valign="top" >
<b>x = within(...)</b></td >
<td valign="top" >returns a matching atom set for a wide variety of atoms that are in some way "within" another atom set or plane or "within some distance" of any one of a set of atoms or a plane.</td ></tr >
<tr >
<td valign="top" >
<b>x = within("SMILES", smilesString,{searchSet})</b></td >
<td valign="top" >returns any array of atom sets that match the given smiles string. If provided, only atoms in {searchSet} will be checked. More powerful SMILES/SMARTS functions include 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#jmolsmarts/smiles">find() and search()</a>. </td ></tr >
<tr >
<td valign="top" >
<b>x = within(distance, point, [arrayOfPoints])</b> </td >
<td valign="top" > Returns a subarray of points (not necessarily in the same order) that are within a given distance of a given point. (Jmol 14.4)</td ></tr >
<tr >
<td valign="top" >
<b>x = within(distance, TRUE, "UNITCELL", {atomset})</b> </td >
<td valign="top" > This function iterates over all the atoms that 
<em>could</em> be loaded using crystallographic symmetry 
<em>even if they have not been created</em>. It returns an associative array with two keys: "atoms" and "points", each of which is an array. For example, 
<b>x = within(4, true, "unitcell", {selected})</b>.The atoms array lists atom indices for the equivalent originating atoms present in the model; the points array lists the coordinates of the atoms. The following DRAW command visualizes these points: 
<b>draw width 0.2 points @{x["points"]} color red mesh nofill</b>.</td ></tr >
<tr >
<td valign="top" >
<b>x = write(...)</b></td >
<td valign="top" >the output of the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write</a> command is loaded into variable 
<b>x</b>. The parameters are those of the write command. For example, 
<b>x = write("PDB")</b> or 
<b>x = write(quaternion, "r", "difference2")</b>. Note that 
<b>x = write("PNGJ")</b> creates a binary associative array for which the keys are file names and the values are their associated file data, equivalent to writing a PNGJ file. The image for this PNGJ file will be the value associated with the "_IMAGE_" key. Note that since more key/value pairs can be added to 
<b>x</b>, this mechanism allows one to add (or remove) files from a PNGJ collection. A subsequent 
<b>WRITE VAR x "xxx.png" command can then be used to save the modified PNGJ file to disk. </td ></tr ></table >
<br />
<br />
<b>
<a name="functionscoordinatetransformingxxxfunctions">coordinate transforming .xxx functions</a></b>    
<a href="#functions">back</a>
<br />
<br /> These functions operate on coordinates, either the geometric center of a set of atoms expressed as {atom expression} or a coordinate point expressed as {x y z}. The unit cell system used is the currently defined 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#unitcell">unitcell</a> for the current model. If more than one model is visible, all coordinates are considered Cartesian coordinates, and these functions are not distinguishable. 
<br>
<br> 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>x = pt.xyz</b> </td >
<td valign="top" > the Cartesian coordinates for the point. For example, if 
<b>pt = {1/2 3/2 1}</b> in an orthonormal unit cell with a = 28.0, b = 5.04, c = 6.04, then pt.xyz would equal {14.0 7.56 6.04}. </td ></tr >
<tr >
<td valign="top" > 
<b>x = pt.fxyz</b></td >
<td valign="top" > the fractional coordinates of a point. In the same case, 
<b>pt.fxyz</b> would be {0.5 1.5 1.0}. </td ></tr >
<tr >
<td valign="top" >
<b>pt.fx</b>, 
<b>pt.fy</b>, 
<b>pt.fz</b></td >
<td valign="top" > The fractional x, y, and z coordinates, respectively.</td ></tr >
<tr >
<td valign="top" > 
<b>x = pt.uxyz</b></td >
<td valign="top" > the unit-cell normalized point in the range [0,1). In this case, 
<b>pt.uxyz</b> would be {0.5 0.5 0}. </td ></tr >
<tr >
<td valign="top" >
<b>pt.ux</b>, I708
<b>pt.uy</b>, 
<b>pt.uz</b></td >
<td valign="top" > The unit cell x, y, and z coordinates, respectively. </td ></tr >
<tr >
<td valign="top" > 
<b>pt.x</b>, 
<b>pt.y</b>, 
<b>pt.z</b></td >
<td valign="top" > The x, y, or z component of the point, regardless of the unit system. </td ></tr ></table >
<br>
<br>Note that the fractional notation {1 1/2 1} is immediately converted to Cartesian coordinates, so {1/2 3/2 1} = {14.0 7.56 6.04} in this case, and {1/2 3/2 1}.y = 7.56, whereas {1/2 3/2 1}.fy = 1.5, and {1/2 3/2 1}.uy = 0.5. Note that if vibration vectors are set using, for example, 
<b>{atomno=3}.vxyz = {1/2 1/2 1/2}</b>, then the 
<b>frame</b> command should be sent so as to update the popup menu so that the 
<b>vibration</b> menu item is enabled .
<br />
<br />
<b>
<a name="functionsgeneralxxxfunctions">general .xxx functions</a></b>    
<a href="#functions">back</a>
<br />
<br /> These modifiers can be used with a number of different variable types. 
<br> 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>x = y.array</b></td >
<td valign="top" >Forces y into an array format. If y is already an array just returns that; otherwise returns an array created from y. Variables of type matrix3f and matrix4f are converted to standard 3x3 or 4x4 arrays; others are returned as [ xxx ]. This function can be used to force an array where a string or other single value might be returned. In this way it is similar to y.all, but whereas y.all only works on atom properties, y.array works on any type of value. (Jmol 14.4)</td ></tr >
<tr >
<td valign="top" >
<b>
<nobr>x = y.count</nobr></b></td >
<td valign="top" >Not defined for associative arrays; for other types, same as 
<b>y.size</b>, but see also x.count(), below.</td ></tr >
<tr >
<td valign="top" >
<b>x = y.color</b></td >
<td valign="top" >Returns the color point {red, green, blue} with values ranging from 0 to 255 for a given value y. If y is a string, then it should correspond to a color, such as "red" or "[xFF0000]". If y is a numerical value, then the color returned will be based on the current 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_propertycolorscheme">property color scheme</a> and range if the propertyColorScheme has been set and it has been used. For example with
<b>color atoms property partialcharge "rwb" range -1 1</b> or 
<b>color "roygb" range 0 10</b>, then y can be a number, as in 
<b>x = 3.color</b>. Using this mechanism a key can be generated within the Jmol applet using echo text appropriately positioned on the screen. Leaving the echo blank but coloring the background of the echo as well as the echo itself produces a horizontal bar of the desired color. </td ></tr >
<tr >
<td valign="top" >
<b>x = y.keys</b></td >
<td valign="top" >Returns the set of keys in associative array y. Starting with 
<span class="newv">Jmol 14.2</span>, 
<b>y.keys.all</b> gives a full listing of all keys within an associative array that may have multiple depths, such as that returned by 
<b>getProperty("modelInfo")</b>.</td ></tr >
<tr >
<td valign="top" >
<b>
<nobr>x = y.length</nobr></b></td >
<td valign="top" >In the case of x a set of bonds, the average length of the bonds (but see modifiers, below -- for example: 
<b>x = {carbon}.bonds.length.min</b>). Not defined for associative arrays. In all other cases, the same as 
<b>y.size</b>. </td ></tr >
<tr >
<td valign="top" >
<b>x = y.lines</b></td >
<td valign="top" >Not defined for associative arrays. For all other types, splits y into a set of lines based on new-line characters, appending a new-line character onto the end if necessary so that there is one new-line character per line.</b></td ></tr >
<tr >
<td valign="top" >
<b>x = y.size</b></td >
<td valign="top" >The nominal "size" of y, which depends upon its data type -- number of characters in a string, number of elements of an array, number of keys in an associative array, number of selected atoms or bonds in a bitset. Negative numbers indicate boolean (-1), integer (-2), decimal (-4), point (-8), or plane (-16). If y is a DRAW or ISOSURFACE id, such as 
<b>$draw1</b>, then 
<b>$draw1.size</b> returns a point {a b c} where a is the index of the object in the set of objects, b is the total number of such objects, and c is the number of vertices. </td ></tr >
<tr >
<td valign="top" >
<b>x = y.type</b></td >
<td valign="top" >the type of variable; one of: "array", "bitset", "bondset", "boolean", "context", "decimal", "hash" (an associative array), "integer", "matrix3f", "matrix4f", "point", "point4", or "string" . </td ></tr ></table >
<br />
<br />
<b>
<a name="functionsarrayxxxorpropertynamexxxmodifiers">[array].xxx or .propertyName.xxx modifiers</a></b>    
<a href="#functions">back</a>
<br />
<br /> Several modifiers can be added to property functions 
<b>{atoms}.y</b> or arrays, such as 
<b>[1.2, 1.4, 1.6]</b>.
<br> 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>.all</b></td >
<td valign="top" > If a property, such as 
<b>{selected}.vanderwaals</b>, then appending 
<b>.all</b> creates a list of those measures. This list can be used to transfer one property to another, as in: 
<b>{*}.partialCharge = {*}.temperature.all</b>, which would allow temperature data to be used for partial charges in an 
<b>isosurface molecular map MEP</b> command, for instance. Note that the "list" is really an array of string values. </td ></tr >
<tr >
<td valign="top" >
<b>.average</b></td >
<td valign="top" >the average value (the default modifier). </td ></tr >
<tr >
<td valign="top" >
<b>.max</b></td >
<td valign="top" >the maximum value, for example: {*}.temperature.max</b></td ></tr >
<tr >
<td valign="top" >
<b>.min</b></td >
<td valign="top" >the minimum value, for example: {*}.partialCharge.min</b> </td ></tr >
<tr >
<td valign="top" >
<b>.pivot</b></td >
<td valign="top" > Creates a pivot table from an array (Jmol 14.4). For example:
<br>
<br>
<b>print {*}.element.all.pivot
<br>{
<br>   "Ag" : 1561
<br>   "Cd" : 1360
<br>}
<br>
<br>
<br>load $caffeine
<br>print {_N}.bondCount({_C}).pivot
<br>{
<br>   "2" : 1
<br>   "3" : 3
<br> }
<br></b> </td ></tr >
<tr >
<td valign="top" >
<b>.reverse</b></td >
<td valign="top" >reverses an array IN PLACE (does not make a copy). Thus, the preferred command is simply 
<b>xxx.reverse</b>.</td ></tr >
<tr >
<td valign="top" >
<b>.sort</b></td >
<td valign="top" >sorts an array IN PLACE (does not make a copy). Thus, the preferred command is simply 
<b>xxx.sort</b>. An optional parameter allows for sorting a multidimensional array based on a specific "column" of data: For example, 
<b>x = [ [1,"orange"], [2,"apple"], [3, "banana"] ]; x.sort(2)</b> sorts this array to read: [[2,"apple"], [3, "banana"], [1,"orange"] ] </td ></tr >
<tr >
<td valign="top" >
<b>.stddev</b></td >
<td valign="top" >the standard deviation, for example: 
<b>print {helix}.straightness.stddev</b> </td ></tr >
<tr >
<td valign="top" >
<b>.sum</b></td >
<td valign="top" >the sum of the values </td ></tr >
<tr >
<td valign="top" >
<b>.sum2</b> </td >
<td valign="top" >sum of squares </td ></tr ></table >
<br />
<br />
<b>
<a name="functions{atomexpression}propertyname">{atomExpression}.propertyName</a></b>    
<a href="#functions">back</a>
<br />
<br /> These functions operate on each atom in an atom expression. In addition to these are all of the atom properties described under the heading 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions">atom expressions</a>, in which case they give the average value. For example: 
<b> x = {oxgyen}.temperature</b>. Several more functions that act on atom expressions are in the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#functionsx=fyfunctions">section below</a>. 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>x = y.atoms</b></td >
<td valign="top" >The atoms associated with a set of bonds.</td ></tr >
<tr >
<td valign="top" >
<b>x = y.bonds</b></td >
<td valign="top" > The bonds associated with the specified atoms, using the current setting of 
<b>bondModeOr</b> (true, bonds having one OR the the other atom within this set; or false, bonds having BOTH atoms within the set) </td ></tr >
<tr >
<td valign="top" >
<b>x = y.boundbox</b></td >
<td valign="top" >A Jmol math list containing the boundbox center, vector to corner, and two opposite corners associated with this atom set </td ></tr >
<tr >
<td valign="top" >
<b>x = y.color</b></td >
<td valign="top" >The average color of the atoms in the set y expressed as a {r,g,b} coordinate in color space. If y is already a point, then .color converts this to a string of the form [[xRRGGBB]]. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#functionsgeneralxxxfunctions">general x = y.color</a>, above. </td ></tr >
<tr >
<td valign="top" >
<b> x = y.ident</b></td >
<td valign="top" > a list of the standard identity labels for the elements of y, either atoms or bonds.</td ></tr >
<tr >
<td valign="top" >
<b>x = y.length</b></td >
<td valign="top" >In the case of x a set of bonds, the average length of the bonds. In all other cases, the length of the data. For example: 
<b>x = {carbon}.bonds.length</b>, 
<b>x = {*}.length</b>. To check the size of a bondset, use .size. </td ></tr >
<tr >
<td valign="top" >
<b>x = y.size</b></td >
<td valign="top" >The number of selected atoms or bonds in a bitset. </td ></tr ></table >
<br />
<br />
<b>
<a name="functionsxfyfunctions">x.f(y) functions</a></b>    
<a href="#functions">back</a>
<br />
<br /> Used for construction of new polyhedra, parameters fall into five subsets:
<br>
<br>
<b>polyhedra [basis] [selection sets] [display options]</b>. These functions operate on the individual elements of some group or listing, returning a modified listing.
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>x = data1.add(data2)</b></td >
<td valign="top" >Specifically for use with data set lists, adds each element of data1 to its corresponding element in data2 and returns the result. If data2 is a simple number, adds that number to each element of data1.</td ></tr >
<tr >
<td valign="top" >
<b>x = data1.add("\t",data2)</b></td >
<td valign="top" >Specifically for use with data set lists, creates a new column separated from the previous with a tab. ("\t" may be replaced with whatever separation one desires. </td ></tr >
<tr >
<td valign="top" >
<b>x = array.bin(low,high,binSize,asArray)</b></td >
<td valign="top" > Operating on an array, delivers an array that counts the number of values in specific bins defined by a low limit, a high limit, and a bin size. If the fourth parameter is TRUE, then creates an array of arrays for which the first value is the lower limit and second value is the count (Jmol 14.6). Values equal to the lower limit of a bin are included in that bin. Values less than the low limit or higher than or equal to the upper limit are ignored (starting in Jmol 14.4.4_2016.04.04). </td ></tr >
<tr >
<td valign="top" >
<b>x = array.bin(low,high,binSize,fieldName, asArray)</b></td >
<td valign="top" > For an array of associative arrays, creates a pivot table of bins from one of the associative array's values. Also adds keys "_bin", "_binMin", and "_binMax" to the initial arrays. For example, if x = [{"energy":2.345,"model":1},{"energy":1.5,"model":2},{"energy":2.36,"model":3}], then 
<b>x.bin(1,3,0.5,"energy")</b> will be [ 0,1,2,0 ]. (Jmol 14.4). Similarly for sequential arrays, adding TRUE for the fourth parameter, creates an array of arrays. (Jmol 4.6) </td ></tr >
<tr >
<td valign="top" >
<b>x = {atomset1}.bondCount({atomset2})</b> </td >
<td valign="top" >Counts bonds to a specific set of atoms.(Jmol 14.4) </td ></tr >
<tr >
<td valign="top" >
<b>x = array.count()</b></td >
<td valign="top" > Operating on an array, 
<b>.count()</b> returns an array of [value, count] pairs. Thus, for example, 
<b>{*}.radius.all.count()</b> would return a list of all the radii of all the atoms and how many of each radius value there are. </td ></tr >
<tr >
<td valign="top" > 
<b>x = y.count(z)</b></td >
<td valign="top" > returns how many 
<b>z</b> there are in y, which should be either an array or a string.</td ></tr >
<tr >
<td valign="top" >
<b>x = a.cross(b)</b></td >
<td valign="top" > the cross product of two vectors or points.</td ></tr >
<tr >
<td valign="top" > 
<b>x = y.distance(z)</b></td >
<td valign="top" >The evaluation of this function depends upon the type of variables y and z:
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >y type</td >
<td valign="top" >z type</td >
<td valign="top" >evaluation</td ></tr >
<tr >
<td valign="top" > atomset</td >
<td valign="top" > atomset</td >
<td valign="top" > The average distance from atoms of y to the geometric center of z; same as 
<b>y.distance(z.xyz)</b>.</td ></tr >
<tr >
<td valign="top" > atomset</td >
<td valign="top" > point </td >
<td valign="top" > The average distance from atoms of y to the point z.</td ></tr >
<tr >
<td valign="top" > point</td >
<td valign="top" > atomset </td >
<td valign="top" > The distance from the point y to the geometric center of z.</td ></tr >
<tr >
<td valign="top" > point</td >
<td valign="top" > plane </td >
<td valign="top" > The distance from point y to plane z. The absolute value of the result depends upon the winding of the points used to create the plane, using a right-hand winding rule.</td ></tr ></table ></td ></tr >
<tr >
<td valign="top" > 
<b>x = y.distance(plane, point)</b></td >
<td valign="top" >The distance of y to a plane, using a point for a reference, giving a positive value if the y and the point are on the same side of the plane and a negative number if they are on opposite sides of the plane. (Jmol 14.4)</td ></tr >
<tr >
<td valign="top" >
<b>x = {atomset1}.distance.all({atomset2}</b></td >
<td valign="top" > Generates an array of arrays of distances indicating distances from every atom in {atomset1} to every atom in {atomset2}. (Jmol 14.4)</td ></tr >
<tr >
<td valign="top" >
<b>x = {atomset1}.distance.min({atomset2}, asAtomSet)</b> </td >
<td valign="top" > If asAtomSet is true, returns the closest atom in atomset1 to any atom of atomset2; if false or omitted, returns an array listing the distance of each atom in atomset1 to the closest atom in atomset2. This array can be used to assign properties to atomset1: 
<b>{1.1}.property_d = {1.1}.distance.min({2.1}); color {1.1} property_d</b>. </td ></tr >
<tr >
<td valign="top" >
<b>x = {atomset1}.distance.min({point}, asAtomSet)</b> </td >
<td valign="top" > If asAtomSet is true, returns the atom in atomset1 closest to the specified point;if false or omitted, returns the closest distance to the specified point from any atom in atomset1.</td ></tr >
<tr >
<td valign="top" >
<b>x = {atomset1}.distance.min({atomset2}).min</b> </td >
<td valign="top" > returns the shortest distance from any atom in atomset1 to any atom in atomset2.</td ></tr >
<tr >
<td valign="top" >
<b>x = {atomset1}.distance.max({atomset2}, asAtomSet)</b> </td >
<td valign="top" > If asAtomSet is true, returns the furthest atom in atomset1 to any atom of atomset2; if false or omitted, returns an array listing the distance of each atom in atomset1 to the furthest atom in atomset2.</td ></tr >
<tr >
<td valign="top" >
<b>x = {atomset1}.distance.max({point}, asAtomSet)</b> </td >
<td valign="top" > If asAtomSet is true, returns the atom in atomset1 furthest from the specified point;if false or omitted, returns the furthest distance to the specified point from any atom in atomset1.</td ></tr >
<tr >
<td valign="top" >
<b>x = {atomset1}.distance.max({atomset2}).max</b> </td >
<td valign="top" > returns the furthest distance from any atom in atomset1 to any atom in atomset2.</td ></tr >
<tr >
<td valign="top" >
<b>x = data1.div(data2)</b></td >
<td valign="top" >See data1.add(). Division by 0 results in the value "NaN", meaning "not-a-number".</td ></tr >
<tr >
<td valign="top" >
<b>x = a.dot(b)</b></td >
<td valign="top" > the dot product of two vectors (or points). </td ></tr >
<tr >
<td valign="top" >
<b>x = y.find("s")</b></td >
<td valign="top" >finds the first location of "s" in y or, in the case of y being a set of lines, selects only the lines of y containing "s".</td ></tr >
<tr >
<td valign="top" >
<b>x = y.find("pattern","flags")</b></td >
<td valign="top" > Searches string or list y for a 
<a class="xref" href="http:
<http://java.sun.com/j2se/1.4.2/docs/api/java/util/regex/Pattern.htm" target="_blank">Java regular expression pattern</a>. The second parameter is a set of flags. This parameter must be included, even if it is the blank string "" so as to distinguish this command from the standard .find() command. Flags include:
<br>
<br> 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >  </td >
<td valign="top" >(no flags) Returns the position in the string containing the pattern, starting with 1, or 0 if the pattern is not found. For lists, returns a sublist containing the elements that match.</td ></tr >
<tr >
<td valign="top" >
<b>i</b> </td >
<td valign="top" >(case-insensitive) Match upper or lower case letters.</td ></tr >
<tr >
<td valign="top" >
<b>v</b> </td >
<td valign="top" >(reverse match) With a string, 
<b>v</b> returns "false" if the string contains the match or "true" if it does not; with lists, 
<b>v</b> returns all elements of the list that do not contain the match.</td ></tr >
<tr >
<td valign="top" > 
<b>m</b></td >
<td valign="top" >(return match) The 
<b>m</b> option allows returning only the portion of the string that matches (or, with 
<b>vm</b>, only the portion of the string that does NOT match). With lists, both 
<b>m</b> and 
<b>vm</b> return only elements that contain the match, but, as for strings, each element is returned as just the matching phrase or the reverse. </td ></tr ></table >
<br>
<br>Note that special characters such as \S and \d must be escaped with two back-slashes, and if they are introduced via JavaScript, they will need double escaping (four back-slashes). Examples include:
<br>
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >"this test is a Test".find("Test","") </td >
<td valign="top" >
<b>16</b></td ></tr >
<tr >
<td valign="top" >print "this test is a Test".find("Test","i")</td >
<td valign="top" >
<b>6</b></td ></tr >
<tr >
<td valign="top" >print "this test is a Test".find("Test","m")</td >
<td valign="top" >
<b>Test</b></td ></tr >
<tr >
<td valign="top" >print "this test is a Test".find(" a test","v")</td >
<td valign="top" >
<b>true</b> (because it was 
<b>not</b> found)</td ></tr >
<tr >
<td valign="top" >print "this test is a Test".find(" Test","ivm")</td >
<td valign="top" >
<b>this is a Test</b></td ></tr >
<tr >
<td valign="top" >print "this test is a Test".find("\\stest","m")</td >
<td valign="top" >
<b> test</b></td ></tr >
<tr >
<td valign="top" >print "this test is a Test".find("\\stest","vm")</td >
<td valign="top" >
<b>this is a Test</b></td ></tr >
<tr >
<td valign="top" >print script("show spacegroup all").split()
<br>.find("Hall symbol:")</td >
<td valign="top" >
<b>Hall symbol: P 1
<br>primitive Hall symbol: P 1
<br>Hall symbol: -P 1
<br>primitive Hall symbol: P 1 -1
<br>Hall symbol: P 2y
<br>primitive Hall symbol: P 2y
<br>...</b></td ></tr >
<tr >
<td valign="top" >print script("show spacegroup all").split()
<br>.find("Hall symbol:").find("primitive","v")</td >
<td valign="top" >
<b>Hall symbol: P 1
<br>Hall symbol: -P 1
<br>Hall symbol: P 2y
<br>...</b></td ></tr >
<tr >
<td valign="top" >print script("show spacegroup all").split()
<br>.find("Hall symbol:").find("primitive","v")
<br>.find("Hall symbol:","vm")[1][3]</td >
<td valign="top" >
<b> P 1
<br> -P 1
<br> P 2y
<br></b> </td ></tr ></table > </td ></tr >
<tr >
<td valign="top" > 
<b>{CELL=nnn}.find("CELLFORMULA")</b> </td >
<td valign="top" > calculates cell formula for specified unit cell, weighing interior 1, face 1/2, edge 1/4, vertex 1/8; selection should be a single packed unit cell; fails with "?" if end result is not integral. For example, 
<b>load quartz.cif packed;print {*}.find("cellFormula")</b> gives "O 6 Si 3".</td ></tr >
<tr >
<td valign="top" > 
<b>{CELL=nnn}.find("CELLFORMULA", TRUE)</b> </td >
<td valign="top" > calculates the empirical cell formula for specified unit cell, for example: 
<b>load quartz.cif packed;print {*}.find("cellFormula", TRUE)</b> gives "O 2 Si 1".</td ></tr >
<tr >
<td valign="top" >
<b>x = {atomExpression}.find("chemical",type)</b> </td >
<td valign="top" > Determines or looks up the specific type of information for this subset of atoms. 
<b>type</b> may be one of: "smiles", "inchi", "stdinchi", "inchikey", or "stdinchikey". In the case of InChIs and InChIKeys, the return does not include the prefix "InChIKey=" or "InChI=".</td ></tr >
<tr >
<td valign="top" >
<b>x = {atomExpression}.find("smartsString", "BONDS") </td >
<td valign="top" > Finds the first match in the structure to the given SMARTS string and returns an array of all the dihedrals involving the matching atoms. Each dihedral is expressed as an ordered list of the four atom indices. </td ></tr >
<tr >
<td valign="top" >
<b>x = {atomExpression}.find("MF")</b></td >
<td valign="top" > finds the molecular formula of the atom expression.</td ></tr >
<tr >
<td valign="top" >
<b>x = {atomExpression}.find("MF",formula)</b></td >
<td valign="top" >finds the subset of atoms in this atom expression that matches the given formula, for example: 
<b>{xxx}.find("MF","CH2O")</b>.</td ></tr >
<tr >
<td valign="top" >
<b>x = {atomExpression}.find("MF",TRUE)</b></td >
<td valign="top" >finds the empirical formula for the specified atoms. For example, 
<b>load $glucose; print {*}.find("MF",true)</b> displays "H 2 C 1 O 1".</td ></tr >
<tr >
<td valign="top" >
<b>x = {atomExpression}.find("SEQUENCE")</b></td >
<td valign="top" > returns the Jmol 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#jmolsmiles/smarts">bioSMILES</a> sequence for the specified atoms. An optional second parameter TRUE adds crosslinking.</td ></tr >
<tr >
<td valign="top" >
<b>x = smilesString2.find("SMILES",smilesString1, exactMap, allMappings)</b> </td >
<td valign="top" > (Jmol 14.4) Checks to see if a structure created from smilesString1 would match the structure associated with smilesString2, thus allowing Jmol to match two SMILES strings without need of "canonicalization." Boolean parameters exactMap and allMappings determine the value returned: 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" ></td >
<td valign="top" >exactMap</td >
<td valign="top" >allMappings</td >
<td valign="top" >return value</td ></tr >
<tr >
<td valign="top" ></td >
<td valign="top" >false</td >
<td valign="top" >true</td >
<td valign="top" > (default) Returns -1 if a SMILES parsing error is found, or the number of atoms in smilesString2 matched. For example, 
<b>"O[C@](F)(Cl)I".find("SMILES","[C@](O)(F)(Cl)I", false, true)</b> would return the value 5, meaning all 5 atoms of O[C@](F)(Cl)I were a match. A return value of 0 means the pattern was not found; a return of -1 indicates there was a problem parsing one or the other of the SMILES strings. </td ></tr >
<tr >
<td valign="top" ></td >
<td valign="top" >false</td >
<td valign="top" >false</td >
<td valign="top" > 1 if a SMILES parsing error is found, 0 if no structure is found, or 1 if any match is made.</td ></tr >
<tr >
<td valign="top" ></td >
<td valign="top" >true</td >
<td valign="top" >true</td >
<td valign="top" > an array of integer arrays listing all possible mappings of atoms in smilesString1 onto smilesString2.</td ></tr >
<tr >
<td valign="top" ></td >
<td valign="top" >true</td >
<td valign="top" >false</td >
<td valign="top" > an integer array of the first match of atoms in smilesString2. Numbers refer to positions along smilesString1. So, for example, 
<b>"CCCO".find("SMILES", "OCCC", true, false)</b> evaluates to [3,2,1,0].</td ></tr ></table ></td ></tr >
<tr >
<td valign="top" >
<b>x = smilesString.find("SMARTS",pattern, exactMap, allMappings)</b> </td >
<td valign="top" > (Jmol 14.4) Checks to see if a substructure created from pattern would be found in the structure associated with smilesString. Boolean parameters exactMap and allMappings determine the value returned: 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" ></td >
<td valign="top" >exactMap</td >
<td valign="top" >allMappings</td >
<td valign="top" >return value</td ></tr >
<tr >
<td valign="top" ></td >
<td valign="top" >false</td >
<td valign="top" >true</td >
<td valign="top" > (default) -1 if a SMILES parsing error is found, empty array if no substructure is found, or the array of all atoms in smilesString matched by any possible mapping of the atoms in pattern. So, for example, 
<b>"CCCC".find("SMARTS","CC",false,true)</b> evaluates to [0, 1, 2, 3].</td ></tr >
<tr >
<td valign="top" ></td >
<td valign="top" >false</td >
<td valign="top" >false</td >
<td valign="top" > -1 if a SMILES parsing error is found, 0 if no substructure is found, or 1 if any substructure is made.</td ></tr >
<tr >
<td valign="top" ></td >
<td valign="top" >true</td >
<td valign="top" >false</td >
<td valign="top" > an integer array of the first match of atoms in smilesString. Numbers refer to positions along smilesString. So, for example, 
<b>"CCCO".find("SMARTS","OCC",true,false)</b> evaluates to [3,2,1].</td ></tr >
<tr >
<td valign="top" ></td >
<td valign="top" >true</td >
<td valign="top" >true</td >
<td valign="top" > an array of integer arrays listing all possible mappings of atoms in pattern into smilesString.</td ></tr ></table ></td ></tr >
<tr >
<td valign="top" >
<b>x = smilesString.find("chemical",type)</b> </td >
<td valign="top" > Determines or looks up the specific type of information for this SMILES string. 
<b>type</b> may be one of: "smiles", "inchi", "stdinchi", "inchikey", or "stdinchikey". In the case of InChIs and InChIKeys, the return does not include the prefix "InChIKey=" or "InChI=".</td ></tr >
<tr >
<td valign="top" >
<b>x = smilesString.find("SMILES","MF")</b></td >
<td valign="top" > returns the canonical molecular formula for smilesString, including all implicit H atoms.</td ></tr >
<tr >
<td valign="top" >
<b>x = smilesString.find("SMARTS", "MF")</td >
<td valign="top" >returns the canonical MF for the smilesString, not including implicit H atoms. </td ></tr >
<tr >
<td valign="top" >
<b>x = array.find()</b></td >
<td valign="top" >returns an array that has been cleared of all "empty" elements -- ones that are empty strings, empty arrays, or empty associative arrays. For example, 
<b>[0 3 4 "" 5 {} [] 6].find()</b> returns [0 3 4 5 6] (Jmol 14.4).</td ></tr >
<tr >
<td valign="top" >
<b>x = array.find("")</b></td >
<td valign="top" >returns an array that has been cleared of all "nonempty" elements -- ones that are not empty strings, empty arrays, or empty associative arrays. For example, 
<b>[0 3 4 "" 5 {} [] 6].find("")</b> returns ["" [] {}]. (Jmol 14.4)</td ></tr >
<tr >
<td valign="top" >
<b>x = array.format(headings)</b> </td >
<td valign="top" >Transform an array of arrays into an array of associative arrays based on "column" headings, and vice-versa. For example, if y = [[1,2],[3,4]], then 
<b>z = y.format(["a","b"])</b> will set z to [ { "a": 1,"b": 2 },{ "a": 3, "b": 4 } ]. And, in reverse, 
<b>z.format(["a","b"])</b> will be back to [[1,2],[3,4]](Jmol 14.4)</td ></tr >
<tr >
<td valign="top" >
<b>x = {atomset}.getProperty("xxx")</b> or 
<b>x = {atomset}._("xxx")</td >
<td valign="top" > shortcut for getProperty("atominfo.xxx", {atomset}). For example:
<br>
<b>
<br>print {*}._("visible")
<br>print {*}._("coord")
<br>
<br></b> A list of available keys xxx can be shown using 
<b> print @1._()</b>. "[SELECT ... WHERE ...]" syntax can be used (Jmol 14.4). </td ></tr >
<tr >
<td valign="top" >
<b>x = array.join()</b></td >
<td valign="top" >Makes a copy of a multidimensional array to form one array of dimension 1. For example, if a = [1,2,[3,4,5],6], then a.join() will be [1,2,3,4,5,6]. (
<span class="newv">Jmol 14.2</span>)</td ></tr >
<tr >
<td valign="top" >
<b>x = x.join(y)</b></td >
<td valign="top" >For string x, joins lines of x using the string equivalent of y into one line. For array x and string y (
<span class="newv">Jmol 14.2</span>), joins elements of x into one string, separating elements of x by s. For array x and array y (
<span class="newv">Jmol 14.2</span>), joins the two arrays into an array of arrays. (Adding a new column, effectively). If x is already an array of arrays or y is already an array of arrays, carries out an add operation on pairs of elements to maintain one array per element of the resulting array. If both x and y are arrays, the resultant array has the minimum number of elements common to x and y. For example, if x = [1, 2, 3] and y = [4, 5, 6], then x.join(y) = [ [1, 4], [2, 5], [3, 6] ], and x.join(y).join(y) = [ [1, 4, 4], [2, 5, 5], [3, 6, 6] ]. Note that x.join(y) is particularly valuable when tables of data are ultimately desired, but one does not want to go immediately into strings using x.add(s,y) (see above).</td ></tr >
<tr >
<td valign="top" >
<b>x = y.join("", TRUE)</b></td >
<td valign="top" >joins an array of arrays into line-delimited comma separated value (CSV) data. Reversed using y.split("", TRUE). (Jmol 14.4)</td ></tr >
<tr >
<td valign="top" >
<b>x = y.join("\t", TRUE)</b></td >
<td valign="top" >joins an array of arrays into line-delimited tab separated data.</td ></tr >
<tr >
<td valign="top" >
<b>x = y.label(format)</b></td >
<td valign="top" >A list of labels for atoms or bonds using format strings. (see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#label">label</a>)</td ></tr >
<tr >
<td valign="top" >
<b>x = atomset.modulation(type,t)
<b></td >
<td valign="top" > (
<span class="newv">Jmol 14.2</span>) For a given (optional) type (displacement "D", magnetic "M", occupancy "O" is implemented), returns an array of values related to one or more atoms' modulation. For displacement and magnetic, returns a vector cooresponding to the relevant phase of the modulation, t (irrespective of the setting of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_modulationscale">set moculationScale</a>) or -1 if not modulated. For occupancy, returns a number from 0 to 100 or, if not modulated, "NaN." If t is not given, as in 
<b>@33.modulation()[1]</b>, (or, alternatively, if t >= 1E6), then the unmodulated position/magnetic spin is returned for "D" or "M" or the currently calculated occupancy for "O".</td ></tr >
<tr >
<td valign="top" >
<b>x = data1.mul(data2)</b></td >
<td valign="top" >See data1.add()</td ></tr >
<tr >
<td valign="top" >
<b>x = pt1.mul3(pt2)</b></td >
<td valign="top" >(
<span class="newv">Jmol 14.2</span>) returns {pt1.x*pt2.x, pt1.y*pt2.y, pt1.z*pt2.z}, or the equivalent of taking the dot product of a coordinate in space with one in reciprocal space. If either pt1 or pt2 is not a point, reverts to simple multiplication.</td ></tr >
<tr >
<td valign="top" >
<b>x = a.pop()</b></td >
<td valign="top" >(
<span class="newv">Jmol 14.2</span>) array pop -- removes the last entry of an array and returns its value. If the array is empty, returns an empty string.</td ></tr >
<tr >
<td valign="top" >
<b>x = a.pop(key)</b></td >
<td valign="top" >(
<span class="newv">Jmol 14.2</span>) removes and returns from an associative array the value associated with the specified key; (same as 
<b>a - key</b>).</td ></tr >
<tr >
<td valign="top" >
<b>x = a.push(x)</b></td >
<td valign="top" >(
<span class="newv">Jmol 14.2</span>) array push -- adds an entry of an array and returns the array.</td ></tr >
<tr >
<td valign="top" >
<b>x = a.push(key, value)</b></td >
<td valign="top" >(
<span class="newv">Jmol 14.2</span>) adds the specified key/value pair to an associative array.</td ></tr >
<tr >
<td valign="top" >
<b>x = y.replace()</b></td >
<td valign="top" >return a cleaned-up version of y with whitespace reduced to a single space and trimmed.</td ></tr >
<tr >
<td valign="top" >
<b>x = y.replace(s1,s2)</b></td >
<td valign="top" >replaces all occurances of s1 with s2 in y. If y is a number, this function first converts the number to a string, then does the replacement.</td ></tr >
<tr >
<td valign="top" >
<b>x = y.replace(chars,s,TRUE)</b></td >
<td valign="top" >replaces all occurrences of each character of 
<b>chars</b> with 
<b>s</b>.</td ></tr >
<tr >
<td valign="top" >
<b>x = y.split(s)</b></td >
<td valign="top" >splits y into lines by replacing all occurances of 
<b>s</b> with a new-line character and converting the string to a set of lines.</td ></tr >
<tr >
<td valign="top" >
<b>x = y.split("", TRUE)</b></td >
<td valign="top" >splits line-delimited comma separated value (CSV) data into an array of arrays. y may be either a single string or an array of strings, one for each line. Reversed using x.join("", TRUE). (Jmol 14.4)</td ></tr >
<tr >
<td valign="top" >
<b>x = y.split("\t", TRUE)</b></td >
<td valign="top" >splits line-delimited tab separated data into an array of arrays. y may be either a single string or an array of strings, one for each line. Reversed using x.join("\t", TRUE). (Jmol 14.4)</td ></tr >
<tr >
<td valign="top" >
<b>x = data1.sub(data2)</b></td >
<td valign="top" >See data1.add()</td ></tr >
<tr >
<td valign="top" >
<b>x = y.substring()</b></td >
<td valign="top" > Jmol math does not include a .substring() function. Instead, this is handled using the more general item-selector [i][j] syntax, described below.</td ></tr >
<tr >
<td valign="top" >
<b>x = y.symop(op,atomOrPoint)</b></td >
<td valign="top" > Returns the point that is the result of the transformation of 
<b>atomOrPoint</b> via a crystallographic symmetry operation. The atom set 
<b>y</b> selects the unit cell and spacegroup to be used. If only one model is present, this can simply be 
<b>all</b>. Otherwise, it could be any atom or group of atoms from any model, for example 
<b>{*/1.2}</b> or {atomno=1}. The first parameter, 
<b>op</b>, is a symmetry operation. This can be the 1-based index of a symmetry operation in a file (use 
<b>show spacegroup</b> to get this listing) or a specific Jones-Faithful expression in quotes such as 
<b>"x,1/2-y,z"</b>. </td ></tr >
<tr >
<td valign="top" >
<b>x = y.symop(op,"label")</b></td >
<td valign="top" > This form of the .symop() function returns a set of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a> commands that describe the symmetry operation in terms of rotation axes, inversion centers, planes, and translational vectors. The 
<b>draw</b> objects will all have IDs starting with whatever is given for the label. </td ></tr >
<tr >
<td valign="top" >
<b>x = y.tensor("type","property")</b></td >
<td valign="top" >returns one of several tensor properties using tensors read by certain file readers (CASTEP, QuantumEspresso, Magres). "type" might be "charge" or "isc" or "ms", for example. Eigenvectors are sorted based on their corresponding eigenvlues, using the convention: |v3 - v1| >= |v3 - v2| > |v2 - v1|. Implemented "property" values include:
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > "anisotropy"</td >
<td valign="top" >v3 - (v1 + v2)/2</td ></tr >
<tr >
<td valign="top" > "asymmetry"</td >
<td valign="top" >(v2 - v1)/(v3 -v_iso)</td ></tr >
<tr >
<td valign="top" > "asymMatrix"</td >
<td valign="top" >matrix representation of the asymmetric tensor component</td ></tr >
<tr >
<td valign="top" > "chi"</td >
<td valign="top" >specific to electric field gradient (efg) tensors, the quadrupolar constant </td ></tr >
<tr >
<td valign="top" > "dc" </td >
<td valign="top" > dipolar coupling constant; tensor type ignored</td ></tr >
<tr >
<td valign="top" > "eigenvalues"</td >
<td valign="top" >[v1,v2,v3]</td ></tr >
<tr >
<td valign="top" > "eigenvectors"</td >
<td valign="top" >[V1,V2,V3]</td ></tr >
<tr >
<td valign="top" > "eulerzxz" </td >
<td valign="top" >[alpha,beta,gamma] for z-x-z convention</td ></tr >
<tr >
<td valign="top" > "eulerzyz" </td >
<td valign="top" >[alpha,beta,gamma] for z-y-z convention</td ></tr >
<tr >
<td valign="top" > "indices" </td >
<td valign="top" >[modelIndex,atomIndex1,atomIndex2], with atomIndex2 = -1 if this tensor is single-atom based</td ></tr >
<tr >
<td valign="top" > "isotropy" </td >
<td valign="top" > (v1 + v2 + v3)/3 </td ></tr >
<tr >
<td valign="top" > "j" </td >
<td valign="top" > J-coupling constant;specific to indirect spin coupling (isc) tensors, in hz</td ></tr >
<tr >
<td valign="top" > "quaternion" </td >
<td valign="top" > the quaternion representing the rotation assoicated with the symmetric matrix</td ></tr >
<tr >
<td valign="top" > "span" </td >
<td valign="top" > abs(v2 - v0) </td ></tr >
<tr >
<td valign="top" > "skew" </td >
<td valign="top" > (3 (v1 - isotropy) / span)</td ></tr >
<tr >
<td valign="top" > "symMatrix" </td >
<td valign="top" >the symmetric matrix.</td ></tr >
<tr >
<td valign="top" > "value" </td >
<td valign="top" > v3, the eigenvalue furthest from the mean</td ></tr >
<tr >
<td valign="top" >"string"</td >
<td valign="top" > a listing of selected readable data</td ></tr >
<tr >
<td valign="top" > "type" </td >
<td valign="top" > the tensor type, such as "charge" or "isc" or "ms" </td ></tr ></table > Note that any other property name results in the entire set of properties to be returned in an associative array. </td ></tr >
<tr >
<td valign="top" >
<b>x = y.trim("chars")</b></td >
<td valign="top" >trims any one of the characters specified from both ends of the string y, or from every line of y if y is a set of lines.</td ></tr ></table >
<br />
<br />
<b>
<a name="functionsitem-selectorij">item-selector [i][j]</a></b>    
<a href="#functions">back</a>
<br />
<br /> Specific elements of lists and strings can be selected using a square bracket notation similar to that used for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions">atom expressions</a>. Positive numbers select for the specified element. For example, 
<b>x = "testing"[3]</b> selects for the third letter of the string, "s"; Zero selects for the last element: 
<b>x = "testing"[0]</b> selects "g". Negative numbers count from the end of the string backward, so 
<b>x = "testing"[-1]</b> selects "n". Two selectors select an inclusive range of items. 
<b>x = "testing"[2][4]</b> acts similar to a "substring()" method and selects characters 2 through 4 -- "est"; 
<b>x = "testing"[-1][0]</b> selects the last two characters, "ng". Similarly, for arrays, 
<b>array("this", "test", 3)[0]</b> selects the number 3, and 
<b>x = array("this", "test", 3); print x[1][2]</b> prints 
<br>
<br>this
<br>test
<br>
<br> 
<br />
<br />
<b>
<a name="functionsuser-definedfunctions">user-defined functions</a></b>    
<a href="#functions">back</a>
<br />
<br /> In addition, Jmol allows for user-defined functions. You can define functions to do simple tasks, include parameters to create subroutines, and add return values to create math functions. With applets, if the function name starts with "static_", then the function defined in one applet will also be defined for all 
<b>HTML5</b> applets, not just the one running the script. Functions are not part of the state. Examples follow. 
<br>
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >function rotateModel {
<br>   rotate {atomno=1} {atomno=2} 10 
<br>}
<br>
<br>rotateModel</td >
<td valign="top" >Without any parameters listed, any commands within the function declaration are processed with a single command word.</td ></tr >
<tr >
<td valign="top" > function rotateModelX(i,j,n) {
<br>   a[2] = getProperty("orientationInfo.moveTo")
<br>   var x = 10
<br>   rotate {atomno=i} {atomno=j} @{n + x}
<br>   a[2] = getProperty("orientationInfo.moveTo") 
<br>}
<br>
<br>a = [];rotateModelX(10,11,30, a);print a[1];</td >
<td valign="top" >Any number of parameters may be passed into a function. The variable names are local to that function. Note that, like JavaScript, if an array is passed, it is passed "by reference," meaning that if its value is changed within the function, then that change is a global change. Variables preceded by "var" as in this example are local to that function.</td ></tr >
<tr >
<td valign="top" > function getDistance(i,j) {
<br>   var d = ({atomno=i}.distance({atomno=j})*100)%0 
<br>   return d
<br>}
<br>
<br>print "the distance is " + getDistance(3,5)</td >
<td valign="top" >The 
<b>return</b> command works as one might expect, returning the value of its expression.</td ></tr >
<tr >
<td valign="top" > function getXplusY {
<br>   return _x.x + _x.y
<br>}
<br>
<br>print {atomno=3}.getXplusY
<br>print {*}.getXplusY.min
<br>print {*}.getXplusY.max
<br>print {*.CA}.getXplusY.all
<br></td >
<td valign="top" >You can define atom selector functions. The local variable 
<b>_x</b> will represent the selected atom within the function. Such function references may include parameters in parentheses provided qualifiers such as .min, .max, or .all are not used within the function itself.</td ></tr ></table >
<br>
<br> Functions must be defined prior to use. Similar to the JavaScript language, a function must be declared prior to its inclusion in a script command. You can redefine a function as many times as you wish. In addition, you can save a function's definition using 
<b>myFunctionDef = script("show function myFunction")</b> where function 
<b>myFunction</b> has been defined. This can be useful if a function definition is to be replaced and later returned to its original value using 
<b>script inline @myFunctionDef</b>. 
<br />
<br />
<b>
<a name="functionsspecialvariablesforfunctions">special variables for functions</a></b>    
<a href="#functions">back</a>
<br />
<br /> Starting with Jmol 14.4, you have access to several variables in scripts and functions that are being called. 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >_arguments</td >
<td valign="top" >the array of arguments delivered to this function</td ></tr >
<tr >
<td valign="top" >_argCount</td >
<td valign="top" > number of arguments delivered to this function</td ></tr >
<tr >
<td valign="top" >_caller</td >
<td valign="top" > an associative array listing all the local VARs defined in the calling function; note that _caller._caller is not valid. But you can define 
<b>var caller = _caller</b>, and then that will be passed to the next level of function calls. Perhaps surprisingly, these local variables to the called function are modifiable by that function even though they are local to the function or script making the call.</td ></tr ></table >
<br />
<br />
<b>
<a name="functionscustomizedcommandfunctions">customized command functions</a></b>    
<a href="#functions">back</a>
<br />
<br /> You can replace standard Jmol commands with commands of your own, and you can call functions just like any Jmol command, without the need for parentheses or commas. For example: 
<br>
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >function measure (a,b) {
<br>   prompt "measuring " + a + " " + b
<br>   measure @a @b 
<br>}
<br>
<br>measure {atomno=1} {atomno=2} </td >
<td valign="top" >The function "measure" replaces the Jmol 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#measure">measure</a> command, allowing now just two parameters and displaying a message box when executed.</td ></tr ></table >
<br />
<br /></i ></td></tr> 
<tr name='tr_functions'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_functions'>
<td colspan="5">
<p>
<a class="xref" href="#jmolcommandsyntax">[Jmol Command Syntax]</a> 
<a class="xref" href="#jmolmath">[Jmol Math]</a> 
<a class="xref" href="#jmolparameters">[Jmol Parameters]</a> 
<a class="xref" href="#atomexpressions">[atom expressions]</a> 
<a class="xref" href="#atomproperties">[atom properties]</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#message">message</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#set">set</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_functions'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k26">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_immediate!'>
<td colspan="5">
<h3 >
<a id="immediate!" name="immediate!">[immediate (!)]</a>
<a id="k27"> </a></h3></td></tr>
<tr name='tr_immediate!'>
<td>
<i >Generally Jmol runs with a script "queue" meaning that as you enter script commands they are stacked up and run in succession. However, there are times when it is desirable to temporarily interrupt a running script. From the applet or application console, or from JavaScript using Jmol buttons or the jmolScript() function, including an exclamation point (!) at the VERY beginning of a script serves as a flag to tell Jmol to temporarily interrupt any running script in order to execute the script that follows. For example, 
<b>!spin off</b> will turn spinning off immediately, even if another script is running. The interruption occurs just prior to the next command in the running script, never during an actual command execution. In effect, the interruption script is simply slipped into the running script at the next available point, and then the running script continues. In addition, 
<b>!quit</b> and 
<b>!exit</b> are slightly different than 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#quit">quit</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#exit">exit</a> in that they not only stop the currently running script (or all scripts in the case of 
<b>!exit</b>), they also stop spinning, animation, vibration, and minimization that might be in process.
<br />
<br /></i ></td></tr> 
<tr name='tr_immediate!'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_immediate!'>
<td colspan="5">
<p>
<a class="xref" href="#delay">delay</a> 
<a class="xref" href="#exit">exit</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#loop">loop</a> 
<a class="xref" href="#pause">pause</a> 
<a class="xref" href="#quit">quit</a> 
<a class="xref" href="#resume">resume</a> 
<a class="xref" href="#step">step</a> </p></td></tr>
<tr name='tr_immediate!'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k28">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_planeexpressions'>
<td colspan="5">
<h3 >
<a id="planeexpressions" name="planeexpressions">[plane expressions]</a>
<a id="k29"> </a></h3></td></tr>
<tr name='tr_planeexpressions'>
<td>
<i >Several commands in Jmol accept parameters that define planes. The commands 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#depth">depth</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#mo">mo</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#slab">slab</a> all have the PLANE option, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#depth">depth</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a> 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#slab">slab</a> also have the HKL option for defining planes using Miller indices. In addition, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#select">select</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#restrict">restrict</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#display">display</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#hide">hide</a> as well as many other commands accept 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions">atom expressions</a>, and these may include one or more WITHIN() function. The method of describing planes in Jmol is defined below:
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>hkl</b></td >
<td valign="top" >Miller indices are simply indicated by enclosing them in brackets, usually as fractions: {h k l}. For example, 
<br>
<br>
<b>isosurface hkl {0 1/2 1/2}</b>
<br>
<br>. </td ></tr >
<tr >
<td valign="top" >
<b>plane</b></td >
<td valign="top" >A plane is defined in Jmol in one of five ways: (a) listing three points, (b) giving the parametric equation ax + by + cz + d = 0, (c) referencing an already-defined 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface</a> object that describes a plane, (d) using the strings "xy", "xz", or "yz", or (e) using a simple single-variable equation such as "x=3" or "y=-2". Points may be embedded atom expressions (that is, atom expressions surrounded by parentheses), for which the center is used, Cartesian coordinates expressed as {x,y,z}, or crystallographic fractional coordinates indicated using "/" in at least one coordinate: {0,1/2,1/2}. Commas are optional. Any combination of these three point types may be used. For example: 
<br>
<br>
<b>display within(0,plane,@{plane({atomno=3}, {0 0 0}, {0 1/2 1/2})})</b>
<br>
<br> The parametric equation ax + by + cz + d = 0 is expressed as {a b c d}. 
<br>
<br>Planes based on 
<b>draw</b> and 
<b>isosurface</b> objects are first defined with an ID indicated, for example: 
<br>
<br>
<b>draw plane1 (atomno=1) (atomno=2) (atomno=3)</b> 
<br>
<br> After that, the reference 
<b>$plane1</b> can be used anywhere a plane expression is required. For instance, 
<br>
<br>
<b>select within(0,plane, $plane1)</b> 
<br>
<br>or 
<br>
<br>
<b>isosurface PLANE $plane1</b> 
<br>
<br> These objects can be defined and then hidden from the user using 
<b>draw off</b> or 
<b>isosurface off</b>. For selection purposes the plane is considered of infinite extent even if it only shows up as a small triangle or quadrilateral. </td ></tr ></table > 
<br />
<br /></i ></td></tr> 
<tr name='tr_planeexpressions'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_planeexpressions'>
<td colspan="5">
<p>
<a class="xref" href="#atomexpressions">[atom expressions]</a> 
<a class="xref" href="#isosurface">isosurface</a> 
<a class="xref" href="#lcaocartoon">lcaoCartoon</a> 
<a class="xref" href="#mo">mo</a> 
<a class="xref" href="#pmesh">pmesh</a> </p></td></tr>
<tr name='tr_planeexpressions'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k30">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_read/writezipfiles'>
<td colspan="5">
<h3 >
<a id="read/writezipfiles" name="read/writezipfiles">[read/write ZIP files]</a>
<a id="k31"> </a></h3></td></tr>
<tr name='tr_read/writezipfiles'>
<td>
<i >Jmol can read and write ZIP file collections. In any file reading operation (for example, in the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#load">load</a>, or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#script">script</a> command), Jmol can read a specific file within ZIP or JAR file collections. (The two formats are the same.) Simply indicate the path to the file within the collection using the vertical bar character as a separator: 
<b>load "myfiles.zip|files|pdb|1crn.pdb"</b>. A path element may be a subdirectory within the ZIP file or the name of a ZIP file contained within one of those directories: 
<b>isosurface "mysurfaces.zip|isousurfaces|jvxl.zip|surface1.jvxl"</b>. The full directory contents of a ZIP or JAR file can be read out using 
<b>getProperty fileContents "myfile.zip"</b>, and the contents of specific files within a zip collection can also be read this way as, for example, 
<b>getProperty fileContents "myfile.zip|JmolManifest"</b>. Note that variables can be assigned these contents using the getProperty() function: 
<b>var dir = getProperty("fileContents", "myfile.zip|JmolManifest")</b>. The 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#load">load</a> command specifically allows reading of multiple files from a ZIP or JAR collection, and will read files in the order specified in a file with the name "JmolManifest" contained in the compressed file collection. The command 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write xxx.jmol</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write ZIPALL xxx.zip</a> will create a ZIP file collection that contains a JmolManifest file along with all of the files necessary to recreate the current state. In addition, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write ZIP xxx.zip</a> will make a collection that contains all local files necessary, but will simply point to any required remote (http://, ftp://) resource.
<br />
<br /></i ></td></tr> 
<tr name='tr_read/writezipfiles'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k32">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_usingtheclipboard'>
<td colspan="5">
<h3 >
<a id="usingtheclipboard" name="usingtheclipboard">[using the clipboard]</a>
<a id="k33"> </a></h3></td></tr>
<tr name='tr_usingtheclipboard'>
<td>
<i >Model data that has been clipped from local sources, such as a return from 
<a class="xref" href="http://www.rcsb.org/pdb/files/1crn.pdb" target="_blank">the RCSB PDB file directory</a>, can be loaded into Jmol directly. From the application, simply use Edit...Paste; if using the applet, simply right-click on the applet and select Show...Console. Then paste the data into the lower (input) frame and click 
<b>Load</b>.
<br />
<br /></i ></td></tr> 
<tr name='tr_usingtheclipboard'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_usingtheclipboard'>
<td colspan="5">
<p>
<a class="xref" href="#write">write</a> </p></td></tr>
<tr name='tr_usingtheclipboard'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k34">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_animation'>
<td colspan="5">
<h3 >
<a id="animation" name="animation">animation or anim</a>
<a id="k35"> </a></h3></td></tr>
<tr name='tr_animation'>
<td>
<i >Sets selected animation parameters or turns animation on or off. Note that there are four distinct animation types that can be employed using Jmol: (1) files may contain multiple structures that are "played" sequencially, (2) models may contain vibrational modes that can be animated, (3) certain Jmol script commands (namely 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#move">move</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#moveto">moveTo</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#navigate">navigate</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#restore">restore ORIENTATION</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#zoomto">zoomTo</a>), can create the illusion of motion over a period of time, and (4) Jmol scripts can be run through in a predefined way, involving 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loop">loop</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#delay">delay</a>. The "animation" command only refers to method (1). See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setmisc">set backgroundModel</a>.
<br />
<br /></i ></td></tr>
<tr name='tr_animation'>
<td valign="top">
<a name="animation_" id="k37"> </a>animation ON/OFF{default: ON}</td ></tr>
<tr name='tr_animation'>
<td>
<blockquote>
<p >
<i >Turns on or off animation. With 
<b>animation ON</b>, the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frame">frame</a> range is also reset to all frames. (An implicit 
<b>frame range ALL</b> command is executed. This functionality is for backward compatibility with Chime.) If this resetting is not desired because the frame range has been set, then 
<b>frame PLAY</b> or 
<b>frame PLAYREV</b> should be used instead of 
<b>animation ON</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_animation'>
<td valign="top">
<a name="animation_direction" id="k40"> </a>animation DIRECTION +1</td ></tr>
<tr name='tr_animation'>
<td>
<blockquote>
<p >
<i >Sets the animation direction to be first frame to last frame.</i ></p ></blockquote></td></tr> 
<tr name='tr_animation'>
<td valign="top">
<a name="animation_direction" id="k38"> </a>animation DIRECTION -1</td ></tr>
<tr name='tr_animation'>
<td>
<blockquote>
<p >
<i >Sets the animation direction to be from last frame to first frame.</i ></p ></blockquote></td></tr> 
<tr name='tr_animation'>
<td valign="top">
<a name="animation_display" id="k39"> </a>animation DISPLAY {atom set}</td ></tr>
<tr name='tr_animation'>
<td>
<blockquote>
<p >
<i >Applies a filter to a running animation to display only a certain set of atoms.</i ></p ></blockquote></td></tr> 
<tr name='tr_animation'>
<td valign="top">
<a name="animation_fps" id="k42"> </a>animation FPS 
<a class='def' href='#d41' title='the animation rate -- (integer)'>[frames-per-second]</a></td ></tr>
<tr name='tr_animation'>
<td>
<blockquote>
<p >
<i >Sets the animation frames per second (maximum 50).</i ></p ></blockquote></td></tr> 
<tr name='tr_animation'>
<td valign="top">
<a name="animation_frames" id="k43"> </a>animation FRAMES [ array of model numbers ]</td ></tr>
<tr name='tr_animation'>
<td>
<blockquote>
<p >
<i >
<b>animation frames</b> allows defining of a set of models to be displayed in any desired order. For example, 
<b>anim frames [ 1 2 3 4 5 10 9 8 7 6 ] </b>. You can specify a range of values using negative numbers. For example, the sequence "1-5, then 10-6" can also be written [ 1 -5 10 -6]. This functionality is useful, for example, when output from an IRC (intrinsic reaction coordinates) calculation is being used. See additional frame options at the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frame">frame</a> command. </i ></p ></blockquote></td></tr> 
<tr name='tr_animation'>
<td valign="top">
<a name="animation_mode" id="k44"> </a>animation MODE LOOP</td ></tr>
<tr name='tr_animation'>
<td>
<blockquote>
<p >
<i >Sets the animation mode to restart the sequence automatically when the last frame has played.</i ></p ></blockquote></td></tr> 
<tr name='tr_animation'>
<td valign="top">
<a name="animation_" id="k47"> </a>animation MODE LOOP 
<a class='def' href='#d45' title='the time in seconds to pause on the first frame -- (integer|decimal, >=0)'>[time-delay1]</a> 
<a class='def' href='#d46' title='the time in seconds to pause on the last frame -- (integer|decimal, >=0)'>[time-delay2]</a></td ></tr>
<tr name='tr_animation'>
<td>
<blockquote>
<p >
<i >Allows for a time delay at the start and end of the loop.</i ></p ></blockquote></td></tr> 
<tr name='tr_animation'>
<td valign="top">
<a name="animation_" id="k48"> </a>animation MODE ONCE</td ></tr>
<tr name='tr_animation'>
<td>
<blockquote>
<p >
<i >Sets the animation to play once through and then stop (the default mode).</i ></p ></blockquote></td></tr> 
<tr name='tr_animation'>
<td valign="top">
<a name="animation_" id="k49"> </a>animation MODE PALINDROME</td ></tr>
<tr name='tr_animation'>
<td>
<blockquote>
<p >
<i >Sets the animation to play forward and back endlessly.</i ></p ></blockquote></td></tr> 
<tr name='tr_animation'>
<td valign="top">
<a name="animation_" id="k50"> </a>animation MODE PALINDROME 
<a class='def' href='#d45' title='the time in seconds to pause on the first frame -- (integer|decimal, >=0)'>[time-delay1]</a> 
<a class='def' href='#d46' title='the time in seconds to pause on the last frame -- (integer|decimal, >=0)'>[time-delay2]</a></td ></tr>
<tr name='tr_animation'>
<td>
<blockquote>
<p >
<i >Allows for a time delay at the start and end of the palindrome.</i ></p ></blockquote></td></tr> 
<tr name='tr_animation'>
<td valign="top">
<a name="animation_morph" id="k51"> </a>animation MORPH (integer)</td ></tr>
<tr name='tr_animation'>
<td>
<blockquote>
<p >
<i >The 
<b>animation MORPH</b> option requires a previous LOAD TRAJECTORY. It creates a linear morph consisting of the designated number of representations inserted between trajectories. For example, 
<b>load test.pse;animatino morph 3</b>. It can also be used between just two models: 
<b>load trajectory "test1.pdb" "test2.pdb"; animation morph 32</b>. </i ></p ></blockquote></td></tr> 
<tr name='tr_animation'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_animation'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_animation'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples/animation.htm">animation.htm</a> </td></tr>
<tr name='tr_animation'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_animation'>
<td colspan="5">
<p>
<a class="xref" href="#capture">capture</a> 
<a class="xref" href="#file">file</a> 
<a class="xref" href="#frame">frame</a> 
<a class="xref" href="#invertselected">invertSelected</a> 
<a class="xref" href="#move">move</a> 
<a class="xref" href="#moveto">moveto</a> 
<a class="xref" href="#rotateselected">rotateSelected</a> 
<a class="xref" href="#setmisc">set (misc)</a> 
<a class="xref" href="#spin">spin</a> 
<a class="xref" href="#translate">translate</a> 
<a class="xref" href="#translateselected">translateSelected</a> 
<a class="xref" href="#writeimagesandframes">write (images and frames)</a> 
<a class="xref" href="#zoom">zoom</a> 
<a class="xref" href="#zoomto">zoomto</a> </p></td></tr>
<tr name='tr_animation'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k36">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_axes'>
<td colspan="5">
<h3 class=h3newer>
<a id="axes" name="axes">axes</a>
<a id="k52"> </a></h3></td></tr>
<tr name='tr_axes'>
<td>
<i >Turns on or off displayed axes, and determines their line style and line width (as a decimal number, in Angstroms).
<br />
<br /></i ></td></tr>
<tr name='tr_axes'>
<td valign="top">
<a name="axes_" id="k54"> </a>axes ON/OFF{default: ON}</td ></tr>
<tr name='tr_axes'>
<td>
<blockquote>
<p >
<i >Turns axes on or off</i ></p ></blockquote></td></tr> 
<tr name='tr_axes'>
<td valign="top">
<a name="axes__decimal_" id="k55"> </a>axes (decimal)</td ></tr>
<tr name='tr_axes'>
<td>
<blockquote>
<p >
<i >Sets the axes diameter in Angstroms. </i ></p ></blockquote></td></tr> 
<tr name='tr_axes'>
<td valign="top">
<a name="axes_center" id="k56"> </a>axes CENTER {x y z}</td ></tr>
<tr name='tr_axes'>
<td>
<blockquote>
<p >
<i >Sets the axes origin to the specified point, which may be an atom expression such as {*} or {rna}.</i ></p ></blockquote></td></tr> 
<tr name='tr_axes'>
<td valign="top">
<a name="axes_dotted" id="k57"> </a>axes DOTTED</td ></tr>
<tr name='tr_axes'>
<td>
<blockquote>
<p >
<i >Sets the axes style to a thin dotted line.</i ></p ></blockquote></td></tr> 
<tr name='tr_axes'>
<td valign="top">
<a name="axes__integer_" id="k60"> </a>axes (integer)</td ></tr>
<tr name='tr_axes'>
<td>
<blockquote>
<p >
<i >Sets the axes diameter in pixels (1 to 19).</i ></p ></blockquote></td></tr> 
<tr name='tr_axes'>
<td valign="top">
<a name="axes_labels" id="k58"> </a>axes LABELS "x-label" "y-label" "z-label" "origin-label"</td ></tr>
<tr name='tr_axes'>
<td>
<blockquote>
<p >
<i >Sets the labels for the positive X, Y, Z axes, and the origin. Negative-directed axes are hidden; empty quotes can be used to hide labels as desired.</i ></p ></blockquote></td></tr> 
<tr name='tr_axes'>
<td valign="top">
<a name="axes_labels" id="k59"> </a>axes LABELS "x-label" "y-label" "z-label" "-x-label" "-y-label" "-z-label"</td ></tr>
<tr name='tr_axes'>
<td>
<blockquote>
<p >
<i >Sets the labels for the positive and negative X, Y, and Z axes. The origin is not labeled. </i ></p ></blockquote></td></tr> 
<tr name='tr_axes'>
<td valign="top">
<a name="axes_molecular" id="k61"> </a>axes MOLECULAR</td ></tr>
<tr name='tr_axes'>
<td>
<blockquote>
<p >
<i >Sets the axes to be based on the molecular coordinate {0 0 0}</i ></p ></blockquote></td></tr> 
<tr name='tr_axes'>
<td valign="top">
<a name="axes_offset" id="k62"> </a>
<span class=newer>axes OFFSET (decimal) [
<b>Jmol 14.6</b>]</span></td ></tr>
<tr name='tr_axes'>
<td>
<blockquote>
<p >
<i >
<span class=newer>For 
<b>axes unitcell</b> offsets the axes by the specified fractional coordinants in a, b, and c. Same as 
<b>set axesOffset x.x</b> and 
<b>axes origin {x.x x.x x.x/1}.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_axes'>
<td valign="top">
<a name="axes_position" id="k68"> </a>axes POSITION [x y] or [x y %]</td ></tr>
<tr name='tr_axes'>
<td>
<blockquote>
<p >
<i >Sets the axes to be positioned at a specific screen coordinate or fractional position along the horizontal and vertical screen dimensions. Must be preceded by 
<b>axes on</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_axes'>
<td valign="top">
<a name="axes_scale" id="k63"> </a>axes SCALE (decimal)</td ></tr>
<tr name='tr_axes'>
<td>
<blockquote>
<p >
<i >Sets the length of the axes. For historical reasons, a scale of 2.0 is "full scale." </i ></p ></blockquote></td></tr> 
<tr name='tr_axes'>
<td valign="top">
<a name="axes_ticks_x|y|z" id="k65"> </a>axes TICKS X|Y|Z {major,minor,subminor} FORMAT [%0.2f, ...] SCALE {scaleX, scaleY, scaleZ} | x.xx</td ></tr>
<tr name='tr_axes'>
<td>
<blockquote>
<p >
<i >Sets the parameters for ticks along the axes. An optional specific axis (X, Y, or Z) can be indicated. There are three levels of ticks - major, minor, and "subminor." Only the major ticks have labels. Which of these tick levels are displayed and the distance between ticks depends upon the parameter that takes the form of a point. This point may be in fractional form, {1/2 0 0}. The optional keyword FORMAT allows formating of the labels for the major ticks. These are based on an array of strings given after the FORMAT keyword. If the array is shorter than the number of ticks, the formats in the array are repeated. Following that, the optional keyword SCALE allows setting the scale either for each axis direction independently {scaleX, scaleY, scaleZ} or overall (as a decimal number). </i ></p ></blockquote></td></tr> 
<tr name='tr_axes'>
<td valign="top">
<a name="axes_type" id="k64"> </a>
<span class=newer>axes TYPE a b c ab ac bc abc [
<b>Jmol 14.4</b>]</span></td ></tr>
<tr name='tr_axes'>
<td>
<blockquote>
<p >
<i >
<span class=newer>For axes position [x y] to only show specified axes.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_axes'>
<td valign="top">
<a name="axes_unitcell" id="k67"> </a>axes UNITCELL</td ></tr>
<tr name='tr_axes'>
<td>
<blockquote>
<p >
<i >Sets the axes to align with the a, b, and c axes of the unit cell (default if fractional coordinates)</i ></p ></blockquote></td></tr> 
<tr name='tr_axes'>
<td valign="top">
<a name="axes_window" id="k66"> </a>axes WINDOW</td ></tr>
<tr name='tr_axes'>
<td>
<blockquote>
<p >
<i >Sets the axes to be based on the center of the bounding box (default if not fractional coordinates)</i ></p ></blockquote></td></tr> 
<tr name='tr_axes'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_axes'>
<td colspan="5">
<p>
<a class="xref" href="#boundbox">boundbox</a> 
<a class="xref" href="#measure">measure</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#unitcell">unitcell</a> </p></td></tr>
<tr name='tr_axes'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k53">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_backbone'>
<td colspan="5">
<h3 >
<a id="backbone" name="backbone">backbone</a>
<a id="k69"> </a></h3></td></tr>
<tr name='tr_backbone'>
<td>
<i >Shows the backbone of a protein or nucleic acid macromolecule by connecting the alpha carbons. The selection of backbone units to display depends upon the currently selected atoms and the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_bondmode">bondmode</a> setting.
<br />
<br /></i ></td></tr>
<tr name='tr_backbone'>
<td valign="top">
<a name="backbone_" id="k71"> </a>backbone ON/OFF{default: ON}</td ></tr>
<tr name='tr_backbone'>
<td>
<blockquote>
<p >
<i >Turns the backbone on or off</i ></p ></blockquote></td></tr> 
<tr name='tr_backbone'>
<td valign="top">
<a name="backbone_only" id="k72"> </a>backbone ONLY</td ></tr>
<tr name='tr_backbone'>
<td>
<blockquote>
<p >
<i >Turns backbone rendering on and all other rendering (including labels) off.</i ></p ></blockquote></td></tr> 
<tr name='tr_backbone'>
<td valign="top">
<a name="backbone_._backbone_radius" id="k74"> </a>backbone 
<a class='def' href='#d73' title='the radius of the backbone -- (decimal, &lt;=4.0)'>[backbone-radius]</a></td ></tr>
<tr name='tr_backbone'>
<td>
<blockquote>
<p >
<i >Backbone radius can be specified in angstroms using a decimal number (1.0, 2.0, etc.). A negative number also implies 
<b>ONLY</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_backbone'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_backbone'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_backbone'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples/structure.htm">structure.htm</a> </td></tr>
<tr name='tr_backbone'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_backbone'>
<td colspan="5">
<p>
<a class="xref" href="#background">background</a> 
<a class="xref" href="#cartoon">cartoon</a> 
<a class="xref" href="#dots">dots</a> 
<a class="xref" href="#ellipsoid">ellipsoid</a> 
<a class="xref" href="#geosurface">geoSurface</a> 
<a class="xref" href="#meshribbon">meshribbon</a> 
<a class="xref" href="#ribbon">ribbon</a> 
<a class="xref" href="#rocket">rocket</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlighting">set (lighting)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#strand">strand</a> 
<a class="xref" href="#trace">trace</a> 
<a class="xref" href="#vector">vector</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_backbone'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k70">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_background'>
<td colspan="5">
<h3 >
<a id="background" name="background">background</a>
<a id="k75"> </a></h3></td></tr>
<tr name='tr_background'>
<td>
<i >Sets color of the background or sets the background image. For color specifications, see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#color">color</a>.
<br />
<br /></i ></td></tr>
<tr name='tr_background'>
<td valign="top">
<a name="background_._colorrgb" id="k78"> </a>background 
<a class='def' href='#d77' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a></td ></tr>
<tr name='tr_background'>
<td>
<blockquote>
<p >
<i >Sets the background color of the applet/application window.</i ></p ></blockquote></td></tr> 
<tr name='tr_background'>
<td valign="top">
<a name="background_echo" id="k80"> </a>background ECHO 
<a class='def' href='#d79' title='is (color name), [r, g, b], [xRRGGBB], NONE'>[color-none-CPK]</a></td ></tr>
<tr name='tr_background'>
<td>
<blockquote>
<p >
<i >Sets the background of the most recently defined 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#echo">echo</a> text and subsequent user-defined echo text to be the given color.</i ></p ></blockquote></td></tr> 
<tr name='tr_background'>
<td valign="top">
<a name="background_image" id="k81"> </a>background IMAGE "filename"</td ></tr>
<tr name='tr_background'>
<td>
<blockquote>
<p >
<i >Sets the background of the applet/application window to the specified image file, which can be of format JPG, PNG, or GIF. The image is stretched to fit the size of the window.</i ></p ></blockquote></td></tr> 
<tr name='tr_background'>
<td valign="top">
<a name="background_hover" id="k83"> </a>background HOVER 
<a class='def' href='#d79' title='is (color name), [r, g, b], [xRRGGBB], NONE'>[color-none-CPK]</a></td ></tr>
<tr name='tr_background'>
<td>
<blockquote>
<p >
<i >Sets the background color for the pop-up label box that appear when the mouse "hovers" over an atom. "NONE" results in there being no hover backgrounds. Operates globally, not on selected atoms.</i ></p ></blockquote></td></tr> 
<tr name='tr_background'>
<td valign="top">
<a name="background_labels" id="k82"> </a>background LABELS 
<a class='def' href='#d79' title='is (color name), [r, g, b], [xRRGGBB], NONE'>[color-none-CPK]</a></td ></tr>
<tr name='tr_background'>
<td>
<blockquote>
<p >
<i >Sets the background color of the atom labels that appear with the "label" command. "NONE" results in there being no label background. Operates globally, not on selected atoms.</i ></p ></blockquote></td></tr> 
<tr name='tr_background'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_background'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_background'>
<td colspan="5">
<p>
<a class="xref" href="#backbone">backbone</a> 
<a class="xref" href="#cartoon">cartoon</a> 
<a class="xref" href="#coloratomobject">color (atom object)</a> 
<a class="xref" href="#colorbondobject">color (bond object)</a> 
<a class="xref" href="#colorelement">color (element)</a> 
<a class="xref" href="#colormodelobject">color (model object)</a> 
<a class="xref" href="#colorother">color (other)</a> 
<a class="xref" href="#colorscheme">color (scheme)</a> 
<a class="xref" href="#colormeasures">color measures</a> 
<a class="xref" href="#dots">dots</a> 
<a class="xref" href="#ellipsoid">ellipsoid</a> 
<a class="xref" href="#geosurface">geoSurface</a> 
<a class="xref" href="#meshribbon">meshribbon</a> 
<a class="xref" href="#ribbon">ribbon</a> 
<a class="xref" href="#rocket">rocket</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlighting">set (lighting)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#setusercolorscheme">set userColorScheme</a> 
<a class="xref" href="#show">show</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#strand">strand</a> 
<a class="xref" href="#trace">trace</a> 
<a class="xref" href="#vector">vector</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_background'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k76">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_bind'>
<td colspan="5">
<h3 >
<a id="bind" name="bind">bind</a>
<a id="k84"> </a></h3></td></tr>
<tr name='tr_bind'>
<td>
<i >The 
<b>bind</b> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#unbind">unbind</a> commands allow users to customize the effects of mouse actions, such as a LEFT-CLICK or ALT-RIGHT-DRAG. When a mouse action is bound to a user-defined script, Jmol will replace _ACTION, _ATOM, _BOND, _DELTAX, _DELTAY, _MODE, _POINT, _TIME, _X, and _Y in the script with appropriate values. Capitalization is significant. The _ACTION variable encodes the mouse/key combination involved as well as the click count (1 SHIFT, 2 CTRL, 4 RIGHT, 8 ALT or MIDDLE, 16 LEFT, 32 WHEEL all ORed with 64*clickCount). The _MODE variable indicates the mouse action that occurred (1 dragged, 2 clicked, 3 wheeled, 4 pressed, or 5 drag-released). The standard Jmol action is replaced ("unbound") by the specified user action. Definitions of (mouse action) and (Jmol action) are given below. Notice that one mouse action can have multiple bindings. The Jmol action taken depends upon the context. 
<br>
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >mouse action</td >
<td valign="top" >Jmol action</td >
<td valign="top" >description </td ></tr >
<tr >
<td valign="top" >LEFT+click </td >
<td valign="top" >_assignNew </td >
<td valign="top" >assign/new atom or bond (requires set picking assignAtom_??/assignBond_? where ?? is an element and ? is a bond order such as "SINGLE" or "DOUBLE") </td ></tr >
<tr >
<td valign="top" >CTRL+SHIFT+LEFT+click</td >
<td valign="top" >_center </td >
<td valign="top" >center </td ></tr >
<tr >
<td valign="top" >LEFT+click </td >
<td valign="top" >_clickFrank </td >
<td valign="top" >pop up recent context menu (click on Jmol frank) </td ></tr >
<tr >
<td valign="top" >LEFT+click </td >
<td valign="top" >_pickConnect </td >
<td valign="top" >connect atoms (requires set picking CONNECT) </td ></tr >
<tr >
<td valign="top" >LEFT+click </td >
<td valign="top" >_deleteAtom </td >
<td valign="top" >delete atom (requires set picking DELETE ATOM) </td ></tr >
<tr >
<td valign="top" >LEFT+click </td >
<td valign="top" >_deleteBond </td >
<td valign="top" >delete bond (requires set picking DELETE BOND) </td ></tr >
<tr >
<td valign="top" >CTRL+SHIFT+LEFT+double+drag</td >
<td valign="top" >_depth </td >
<td valign="top" >adjust depth (back plane; requires SLAB ON) </td ></tr >
<tr >
<td valign="top" >LEFT+drag </td >
<td valign="top" >_dragAtom </td >
<td valign="top" >move atom (requires set picking DRAGATOM) </td ></tr >
<tr >
<td valign="top" >SHIFT+LEFT+drag </td >
<td valign="top" >_dragDrawObject </td >
<td valign="top" >move whole DRAW object (requires set picking DRAW) </td ></tr >
<tr >
<td valign="top" >ALT+LEFT+drag </td >
<td valign="top" >_dragDrawPoint </td >
<td valign="top" >move specific DRAW point (requires set picking DRAW) </td ></tr >
<tr >
<td valign="top" >SHIFT+LEFT+drag </td >
<td valign="top" >_dragLabel </td >
<td valign="top" >move label (requires set picking LABEL) </td ></tr >
<tr >
<td valign="top" >LEFT+drag </td >
<td valign="top" >_dragMinimize </td >
<td valign="top" >move atom and minimize molecule (requires set picking DRAGMINIMIZE) </td ></tr >
<tr >
<td valign="top" >LEFT+drag </td >
<td valign="top" >_dragMinimizeMolecule </td >
<td valign="top" >move and minimize molecule (requires set picking DRAGMINIMIZEMOLECULE) </td ></tr >
<tr >
<td valign="top" >ALT+SHIFT+LEFT+drag </td >
<td valign="top" >_dragSelected </td >
<td valign="top" >move selected atoms (requires set DRAGSELECTED) </td ></tr >
<tr >
<td valign="top" >SHIFT+LEFT+drag </td >
<td valign="top" >_dragZ </td >
<td valign="top" >drag atoms in Z direction (requires set DRAGSELECTED) </td ></tr >
<tr >
<td valign="top" >LEFT+drag </td >
<td valign="top" >_navTranslate </td >
<td valign="top" >translate navigation point (requires set NAVIGATIONMODE and set picking NAVIGATE) </td ></tr >
<tr >
<td valign="top" >LEFT+click </td >
<td valign="top" >_pickAtom </td >
<td valign="top" >pick an atom </td ></tr >
<tr >
<td valign="top" >LEFT+click </td >
<td valign="top" >_pickIsosurface </td >
<td valign="top" >pick an ISOSURFACE point (requires set DRAWPICKING </td ></tr >
<tr >
<td valign="top" >LEFT+click </td >
<td valign="top" >_pickLabel </td >
<td valign="top" >pick a label to toggle it hidden/displayed (requires set picking LABEL) </td ></tr >
<tr >
<td valign="top" >LEFT+click </td >
<td valign="top" >_pickMeasure </td >
<td valign="top" >pick an atom to include it in a measurement (after starting a measurement or after set picking DISTANCE/ANGLE/TORSION) </td ></tr >
<tr >
<td valign="top" >CTRL+SHIFT+LEFT+click</td >
<td valign="top" >_pickNavigate </td >
<td valign="top" >pick a point or atom to navigate to (requires set NAVIGATIONMODE) </td ></tr >
<tr >
<td valign="top" >LEFT+click </td >
<td valign="top" >_pickPoint </td >
<td valign="top" >pick a DRAW point (for measurements) (requires set DRAWPICKING </td ></tr >
<tr >
<td valign="top" >CTRL+LEFT+down, RIGHT+down</td >
<td valign="top" >_popupMenu </td >
<td valign="top" >pop up the full context menu </td ></tr >
<tr >
<td valign="top" >SHIFT+LEFT+double+click, MIDDLE+double+click</td >
<td valign="top" >_reset </td >
<td valign="top" >reset (when clicked off the model) </td ></tr >
<tr >
<td valign="top" >LEFT+drag, LEFT+double+drag</td >
<td valign="top" >_rotate </td >
<td valign="top" >rotate </td ></tr >
<tr >
<td valign="top" >SHIFT+LEFT+drag </td >
<td valign="top" >_rotateBranch </td >
<td valign="top" >rotate branch around bond (requires set picking ROTATEBOND) </td ></tr >
<tr >
<td valign="top" >ALT+LEFT+drag </td >
<td valign="top" >_rotateSelected </td >
<td valign="top" >rotate selected atoms (requires set DRAGSELECTED) </td ></tr >
<tr >
<td valign="top" >ALT+LEFT+drag, SHIFT+RIGHT+drag</td >
<td valign="top" >_rotateZ </td >
<td valign="top" >rotate Z </td ></tr >
<tr >
<td valign="top" >SHIFT+LEFT+drag, MIDDLE+drag</td >
<td valign="top" >_rotateZorZoom </td >
<td valign="top" >rotate Z (horizontal motion of mouse) or zoom (vertical motion of mouse) </td ></tr >
<tr >
<td valign="top" >LEFT+double+click </td >
<td valign="top" >_select </td >
<td valign="top" >select an atom (requires set pickingStyle EXTENDEDSELECT) </td ></tr >
<tr >
<td valign="top" >LEFT+click </td >
<td valign="top" >_selectToggleOr </td >
<td valign="top" >if all are selected, unselect all, otherwise add this group of atoms to the set of selected atoms (requires set pickingStyle DRAG) </td ></tr >
<tr >
<td valign="top" >LEFT+double+click </td >
<td valign="top" >_setMeasure </td >
<td valign="top" >pick an atom to initiate or conclude a measurement </td ></tr >
<tr >
<td valign="top" >CTRL+SHIFT+LEFT+drag</td >
<td valign="top" >_slab </td >
<td valign="top" >adjust slab (front plane; requires SLAB ON) </td ></tr >
<tr >
<td valign="top" >CTRL+ALT+SHIFT+LEFT+drag</td >
<td valign="top" >_slabAndDepth </td >
<td valign="top" >move slab/depth window (both planes; requires SLAB ON) </td ></tr >
<tr >
<td valign="top" >LEFT+drag </td >
<td valign="top" >_slideZoom </td >
<td valign="top" >zoom (along right edge of window) </td ></tr >
<tr >
<td valign="top" >LEFT+drag </td >
<td valign="top" >_spinDrawObjectCCW </td >
<td valign="top" >click on two points to spin around axis counterclockwise (requires set picking SPIN) </td ></tr >
<tr >
<td valign="top" >SHIFT+LEFT+drag </td >
<td valign="top" >_spinDrawObjectCW </td >
<td valign="top" >click on two points to spin around axis clockwise (requires set picking SPIN) </td ></tr >
<tr >
<td valign="top" >LEFT+double+click </td >
<td valign="top" >_stopMotion </td >
<td valign="top" >stop motion (requires set waitForMoveTo FALSE) </td ></tr >
<tr >
<td valign="top" >LEFT+drag </td >
<td valign="top" >_swipe </td >
<td valign="top" >spin model (swipe and release button and stop motion simultaneously) </td ></tr >
<tr >
<td valign="top" >CTRL+ALT+LEFT+drag, CTRL+RIGHT+drag, SHIFT+LEFT+double+drag, MIDDLE+double+drag</td >
<td valign="top" >_translate </td >
<td valign="top" >translate </td ></tr >
<tr >
<td valign="top" >WHEEL </td >
<td valign="top" >_wheelZoom </td >
<td valign="top" >zoom </td ></tr ></table > 
<br />
<br /></i ></td></tr>
<tr name='tr_bind'>
<td valign="top">
<a name="bind__mouse_action_" id="k86"> </a>bind (mouse action) (Jmol action)</td ></tr>
<tr name='tr_bind'>
<td>
<blockquote>
<p >
<i >Ties a specific mouse action to a specific Jmol action.</i ></p ></blockquote></td></tr> 
<tr name='tr_bind'>
<td valign="top">
<a name="bind__mouse_action_" id="k87"> </a>bind (mouse action) "script"</td ></tr>
<tr name='tr_bind'>
<td>
<blockquote>
<p >
<i >Ties a specific mouse action to a script defined by the user, replacing its current Jmol action. </i ></p ></blockquote></td></tr> 
<tr name='tr_bind'>
<td valign="top">
<a name="bind__mouse_action_" id="k88"> </a>bind (mouse action) "+:script"</td ></tr>
<tr name='tr_bind'>
<td>
<blockquote>
<p >
<i >An added "+:" at the beginning of a user action indicates to add this action to the currently bound Jmol action, retaining the Jmol action. This allows creating "hooks" that allow detection of mouse actions.</i ></p ></blockquote></td></tr> 
<tr name='tr_bind'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_bind'>
<td>
<table cellpadding="10">
<tr>
<td class="example">bind "CTRL-ALT-LEFT" "_rotate";
<br />bind "CTRL-ALT-LEFT-DOUBLE" "spin @{!_spinning}"</td></tr></table></td></tr>
<tr name='tr_bind'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_bind'>
<td colspan="5">
<p>
<a class="xref" href="#unbind">unbind</a> </p></td></tr>
<tr name='tr_bind'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k85">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_bondorder'>
<td colspan="5">
<h3 >
<a id="bondorder" name="bondorder">bondorder</a>
<a id="k89"> </a></h3></td></tr>
<tr name='tr_bondorder'>
<td>
<i >Sets the bond order of the selected atoms or bonds. An alternative to the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#connect">connect</a> command.
<br />
<br /></i ></td></tr>
<tr name='tr_bondorder'>
<td valign="top">
<a name="bondorder_0.5,_1,_1.5,_2,_2.5,_3,_4,_-1,_-1.5,_-2.5" id="k91"> </a>bondorder 0.5, 1, 1.5, 2, 2.5, 3, 4, -1, -1.5, -2.5</td ></tr>
<tr name='tr_bondorder'>
<td>
<blockquote>
<p >
<i >Sets the bond order to the specified order. Values -1, -1.5, and -2.5 specify HBOND, PARTIALDOUBLE (reverse solid/dash of AROMATIC), and PARTIALTRIPLE2, respectively. </i ></p ></blockquote></td></tr> 
<tr name='tr_bondorder'>
<td valign="top">
<a name="bondorder_._connection_options" id="k93"> </a>bondorder 
<a class='def' href='#d92' title='is SINGLE, DOUBLE, TRIPLE, QUADRUPLE, AROMATIC, PARTIAL, PARTIALDOUBLE, PARTIALTRIPLE, PARTIALTRIPLE2, PARTIAL N.M, UNSPECIFIED, or HBOND'>[connection-options]</a></td ></tr>
<tr name='tr_bondorder'>
<td>
<blockquote>
<p >
<i >Sets the bond order to the specified type. See details at 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#connect">connect</a> for PARTIAL N.M .</i ></p ></blockquote></td></tr> 
<tr name='tr_bondorder'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_bondorder'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_bondorder'>
<td colspan="5">
<p>
<a class="xref" href="#connect">connect</a> 
<a class="xref" href="#hbonds">hbonds</a> 
<a class="xref" href="#setbondstyles">set (bond styles)</a> 
<a class="xref" href="#setfilesandscripts">set (files and scripts)</a> 
<a class="xref" href="#ssbonds">ssbonds</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_bondorder'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k90">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_boundbox'>
<td colspan="5">
<h3 >
<a id="boundbox" name="boundbox">boundbox or boundingBox</a>
<a id="k94"> </a></h3></td></tr>
<tr name='tr_boundbox'>
<td>
<i >Turns on or off a wire-frame box that contains the model or a designated subset of the model or a designated region of space, and determines the line style and line width (as a decimal number, in Angstroms) of that box. If the atom set is not indicated, the boundbox is drawn around the entire model set (including all models in frames). A decimal number specifies the boundbox line diameter in Angstroms; DOTTED specifies a fine dotted line. For an explanation of center, corners, and vectors, see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#show">show boundbox</a>.
<br />
<br /></i ></td></tr>
<tr name='tr_boundbox'>
<td valign="top">
<a name="boundbox_._axes_type{_on_}" id="k98"> </a>boundbox 
<a class='def' href='#d96' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>{default: *} 
<a class='def' href='#d97' title='a line width or type for a drawing object -- ON, OFF, DOTTED, (integer, 1 to 19), (decimal, &lt;2.0)'>[line-width-or-type]</a>{default: ON}</td ></tr>
<tr name='tr_boundbox'>
<td>
<blockquote>
<p >
<i >Turns the boundbox on or off around the specified set of atoms. In a multi-model context, if a set of atoms is specified and that set of atoms is within a subset of the models, then the boundbox is only displayed only when the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#model">model</a> command has made that subset of models displayable. </i ></p ></blockquote></td></tr> 
<tr name='tr_boundbox'>
<td valign="top">
<a name="boundbox_._atom_expression_or_coord" id="k101"> </a>boundbox 
<a class='def' href='#d99' title='is any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> surrounded by parentheses or braces, or any {x y z} coordinate '>[atom-expression-or-coordinate]</a> 
<a class='def' href='#d100' title='is an xyz coordinate in the form {x y z} '>[xyz-coordinate]</a> 
<a class='def' href='#d97' title='a line width or type for a drawing object -- ON, OFF, DOTTED, (integer, 1 to 19), (decimal, &lt;2.0)'>[line-width-or-type]</a>{default: unchanged}</td ></tr>
<tr name='tr_boundbox'>
<td>
<blockquote>
<p >
<i >Sets the boundbox to be centered on the atom set or coordinate given as the first parameter and extending by a vector to a corner specified by the second parameter. If the third parameter is not given, no change in the visibility of the boundbox or its line style is made.</i ></p ></blockquote></td></tr> 
<tr name='tr_boundbox'>
<td valign="top">
<a name="boundbox_corners" id="k102"> </a>boundbox CORNERS 
<a class='def' href='#d99' title='is any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> surrounded by parentheses or braces, or any {x y z} coordinate '>[atom-expression-or-coordinate]</a> 
<a class='def' href='#d99' title='is any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> surrounded by parentheses or braces, or any {x y z} coordinate '>[atom-expression-or-coordinate]</a> 
<a class='def' href='#d97' title='a line width or type for a drawing object -- ON, OFF, DOTTED, (integer, 1 to 19), (decimal, &lt;2.0)'>[line-width-or-type]</a>{default: unchanged}</td ></tr>
<tr name='tr_boundbox'>
<td>
<blockquote>
<p >
<i >Sets the boundbox based on two corners, each specified by the center off an atom set or a coordinate. If the fourth parameter is not given, no change in the visibility of the boundbox or its line style is made</i ></p ></blockquote></td></tr> 
<tr name='tr_boundbox'>
<td valign="top">
<a name="boundbox_ticks_x|y|z" id="k103"> </a>boundbox TICKS X|Y|Z {major,minor,subminor} FORMAT [%0.2f, ...] SCALE {scaleX, scaleY, scaleZ} | x.xx</td ></tr>
<tr name='tr_boundbox'>
<td>
<blockquote>
<p >
<i >Sets the parameters for ticks along the first three boundbox edges. The parameters are similar to those of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#axes">axes TICKS</a>, but unit cell scaling is not an option.</i ></p ></blockquote></td></tr> 
<tr name='tr_boundbox'>
<td valign="top">
<a name="boundbox_scale" id="k104"> </a>boundbox SCALE x.xx</td ></tr>
<tr name='tr_boundbox'>
<td>
<blockquote>
<p >
<i >With any of the above parameters, specifies to scale the boundbox by (a) multiplying by the scaling factor if positive or (b) adding to the size if negative. </i ></p ></blockquote></td></tr> 
<tr name='tr_boundbox'>
<td valign="top">
<a name="boundbox_$isosurfaceid" id="k105"> </a>boundbox $isosurfaceID</td ></tr>
<tr name='tr_boundbox'>
<td>
<blockquote>
<p >
<i >Sets the current boundbox to match the extent of a given isosurface. </i ></p ></blockquote></td></tr> 
<tr name='tr_boundbox'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_boundbox'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_boundbox'>
<td colspan="5">
<p>
<a class="xref" href="#axes">axes</a> 
<a class="xref" href="#getproperty">getProperty</a> 
<a class="xref" href="#measure">measure</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#show">show</a> 
<a class="xref" href="#unitcell">unitcell</a> </p></td></tr>
<tr name='tr_boundbox'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k95">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_break'>
<td colspan="5">
<h3 >
<a id="break" name="break">break</a>
<a id="k106"> </a></h3></td></tr>
<tr name='tr_break'>
<td>
<i >
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#while">while</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#for">for</a> loops may be exited using 
<b>break</b> and truncated using 
<b>continue</b>. A number following 
<b>break</b> or 
<b>continue</b> indicates how many levels of for/while loops beyond the innermost one to break out of or continue.
<br>
<br>n = {*}.length
<br>for (var i = 1; i 
<= n; i++) {
<br>  for (var j = i + 1;j 
<= n; j++) {
<br>      var dis = {*}[i].distance({*}[j]);
<br>      if (dis 
< 1.23) {
<br>              print "short i-j: " + i + "," + j + " " + dis%2
<br>              measure {atomno=i} {atomno=j}
<br>              continue;
<br>      } else if (dis 
< 1.77) {
<br>              print "medium i-j: " + i + "," + j + " " + dis%2
<br>              line = "line"+i+"_"+j
<br>              draw @line {atomno=i} {atomno=j}
<br>              break 1;
<br>      }
<br>      print "long";
<br>  }
<br>}
<br />
<br /></i ></td></tr> 
<tr name='tr_break'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_break'>
<td colspan="5">
<p>
<a class="xref" href="#case">case</a> 
<a class="xref" href="#catch">catch</a> 
<a class="xref" href="#continue">continue</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#else">else</a> 
<a class="xref" href="#elseif">elseIf</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#return">return</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#try">try</a> 
<a class="xref" href="#var">var</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_break'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k107">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_cache'>
<td colspan="5">
<h3 >
<a id="cache" name="cache">cache</a>
<a id="k108"> </a></h3></td></tr>
<tr name='tr_cache'>
<td>
<i >Establishes a memory-based cache of data. A summary of the contents of the cache can be obtained with 
<b>show cache</b>.
<br />
<br /></i ></td></tr>
<tr name='tr_cache'>
<td valign="top">
<a name="cache_add" id="k111"> </a>cache ADD "filename"</td ></tr>
<tr name='tr_cache'>
<td>
<blockquote>
<p >
<i >Adds a file to the memory cache as a set of bytes.</i ></p ></blockquote></td></tr> 
<tr name='tr_cache'>
<td valign="top">
<a name="cache_clear" id="k110"> </a>cache CLEAR</td ></tr>
<tr name='tr_cache'>
<td>
<blockquote>
<p >
<i >Clears the cache</i ></p ></blockquote></td></tr> 
<tr name='tr_cache'>
<td valign="top">
<a name="cache_remove" id="k112"> </a>cache REMOVE "filename"</td ></tr>
<tr name='tr_cache'>
<td>
<blockquote>
<p >
<i >Removes the specified file from the cache. 
<b>cache REMOVE ALL</b> is the same as 
<b>cache CLEAR</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_cache'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_cache'>
<td colspan="5">
<p>
<a class="xref" href="#jmol/jspecview/magresview">[Jmol/JSpecView/MagresView]</a> 
<a class="xref" href="#delete">delete</a> 
<a class="xref" href="#initialize">initialize</a> 
<a class="xref" href="#load">load</a> 
<a class="xref" href="#setfilesandscripts">set (files and scripts)</a> 
<a class="xref" href="#show">show</a> 
<a class="xref" href="#zap">zap</a> </p></td></tr>
<tr name='tr_cache'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k109">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_calculate'>
<td colspan="5">
<h3 class=h3newer>
<a id="calculate" name="calculate">calculate</a>
<a id="k113"> </a> 
<br />
<span class=newer>(v. 14.2 -- adds DSSR (Defining the Secondary Structures of RNA))</span></h3></td></tr>
<tr name='tr_calculate'>
<td>
<i >Calculates specific quantities.
<br />
<br /></i ></td></tr>
<tr name='tr_calculate'>
<td valign="top">
<a name="calculate_aromatic" id="k115"> </a>calculate AROMATIC</td ></tr>
<tr name='tr_calculate'>
<td>
<blockquote>
<p >
<i >Calculates alternating single and double aromatic bonds for all bonds of type AROMATIC. If just one bond of a conjugated system is specified as AROMATICSINGLE or AROMATICDOUBLE, then all bonds of that system will be consistent with that bond. . For example: 
<br>
<br>reset aromatic;
<br>connect (atomno=3) (atomno=4) AROMATICDOUBLE;
<br>calculate aromatic;
<br> 
<br>or
<br>
<br>select carbon and within(1.6, {0 0 0});
<br>connect (selected) aromatic modify;
<br>calculate aromatic;
<br>
<br></i ></p ></blockquote></td></tr> 
<tr name='tr_calculate'>
<td valign="top">
<a name="calculate_formalcharge" id="k116"> </a>calculate FORMALCHARGE</td ></tr>
<tr name='tr_calculate'>
<td>
<blockquote>
<p >
<i >Calculates formal charges based on hybridization and bonding.</i ></p ></blockquote></td></tr> 
<tr name='tr_calculate'>
<td valign="top">
<a name="calculate_hbonds" id="k118"> </a>calculate HBONDS 
<a class='def' href='#d117' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a> 
<a class='def' href='#d117' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_calculate'>
<td>
<blockquote>
<p >
<i >If no atom sets are indicated, performs the same as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#hbonds">hbonds calculate</a>. Three types of hydrogen bond calculation are available. 
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >RasMol-type pseudo-hbonds (PDB/mmCIF files only)</td >
<td valign="top" >
<b>select not hydrogen; set hbondsRasmol TRUE; calculate HBONDS</b> </td >
<td valign="top" > The default calculation when no hydrogen atoms are selected. Creates pseudo-hydrogen bonds only between protein amide and carbonyl groups or between nucleic acid base pairs using a RasMol-like (DSSP) calculation. Bonds can be differentiated using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#colorbondobject">color hbonds TYPE</a> (see 
<a class="xref" href="http://jmol.sourceforge.net/jscolors/#Hydrogen%20bonds" target="_blank">http://jmol.sourceforge.net/jscolors/#Hydrogen bonds</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#colorbondobject">color hbonds ENERGY</a> (red - high energy, less stable; blue - low energy, more stable). This energy is calculated according to the equation given at 
<a class="xref" href="http://en.wikipedia.org/wiki/DSSP_%28protein%29" target="_blank">http://en.wikipedia.org/wiki/DSSP_(protein)</a></td ></tr >
<tr >
<td valign="top" >Creates Jmol-type pseudo-hbonds</td >
<td valign="top" >
<b>select not hydrogen; set hbondsRasmol FALSE; calculate HBONDS </b> </td >
<td valign="top" > pseudo-hydrogen bonds between O or N atoms on proteins and nucleic acid (but not limited to backbone atoms), and other atoms, including water oxygens. Psuedo-hydrogen bonds are not calculated between two water molecules. Uses an algorithm developed for Jmol involving parameters (see below). These hbonds are not colorable by energy.</td ></tr >
<tr >
<td valign="top" > Standard hydrogen bonds</td >
<td valign="top" >all cases where hydrogens are selected followed by 
<b>calculate HBONDS</b></td >
<td valign="top" > Creates bonds from hydrogen atoms on O or N to other O and N atoms, regardless of whether they are in macromolecules. When two atom sets are used, hydrogen atoms must be present in the first set; other atoms in that set will be ignored. Coloring of standard hydrogen bonds by "energy" is possible, but the value associated with that color should be be taken as a true energy. Note that you can add hydrogen atoms to a PDB file using 
<b>set pdbAddHydrogens</b> prior to loading a PDB file.</td ></tr ></table > If two atom sets are provided, hydrogen bonds will be between atoms in the first atom set and atoms in the second atom set. These sets may overlap, and a common invocation of the command is simply 
<b>calculate HBONDS</b>, which uses the currently selected atoms for both sets. When the RasMol calculation is not used, the parameters 
<b>hbondsAngleMinimum</b> (default value 90) and 
<b>hbondsDistanceMaximum</b> (default 3.25 for pseudo-hydrogen bonds; 2.5 for standard hydrogen bonds) are used. The angle referred to is the bond angle between the candidate hydrogen (or pseudo-hydrogen) bond and the covalent bonds to the atoms involved. The idea is that all bond angles that include hydrogen bonds should be greater than some designated value. Note that the default value of 90 degrees may be too large for the general case. Values as low as 70 or 80 may be approriate in some cases, and experimentation may be necessary. The distance maximum is used only for pseudo-hydrogen bonds when its value is set larger than 2.5. </i ></p ></blockquote></td></tr> 
<tr name='tr_calculate'>
<td valign="top">
<a name="calculate_hbonds" id="k119"> </a>calculate HBONDS STRUCTURE</td ></tr>
<tr name='tr_calculate'>
<td>
<blockquote>
<p >
<i >Calculates the hydrogen bonds that define the DSSP structures generated with 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">calculate STRUCTURE</a>. These are not all of the "hydrogen bonds" identified by DSSP; rather they are just the ones that define the helixes, sheets, and bridges. </i ></p ></blockquote></td></tr> 
<tr name='tr_calculate'>
<td valign="top">
<a name="calculate_hydrogens" id="k120"> </a>calculate HYDROGENS 
<a class='def' href='#d117' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>{default: *}</td ></tr>
<tr name='tr_calculate'>
<td>
<blockquote>
<p >
<i >Adds hydrogens at calculated positions based on bonding patterns at the designated atoms or, if no atoms are specified, at all atoms. Note that this command is not intended to be used for the assignment of hydrogen atoms in standard PDB files. All atoms must have any formal charges already designated, and all multiple bonds must be in place. If you want to add hydogen atoms to a standard PDB structure, use 
<b>set pdbAddHydrogens</b> prior to loading the file. Jmol will then do a proper hydrogen atom addition, to proteins, nucleic acids, carbohydrates, and all ligands. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_pdbaddhydrogens">set pdbAddHydrogens</a>, below.</i ></p ></blockquote></td></tr> 
<tr name='tr_calculate'>
<td valign="top">
<a name="calculate_partialcharge" id="k121"> </a>calculate PARTIALCHARGE</td ></tr>
<tr name='tr_calculate'>
<td>
<blockquote>
<p >
<i >Calculates relatively reasonable partial charges using the MMFF94 charge model. Multiple bonding is required. The currently selected atom set is used or, if no atoms are selected, the currently visible atom set.</i ></p ></blockquote></td></tr> 
<tr name='tr_calculate'>
<td valign="top">
<a name="calculate_symmetry" id="k128"> </a>
<span class=newer>calculate SYMMETRY POLYHEDRA [
<b>Jmol 14.3.15</b>]</span></td ></tr>
<tr name='tr_calculate'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Sets values for getProperty("ShapeInfo.Polyhedra"), including .smiles, .smarts, and .pointGroup.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_calculate'>
<td valign="top">
<a name="calculate_pointgroup" id="k122"> </a>calculate POINTGROUP</td ></tr>
<tr name='tr_calculate'>
<td>
<blockquote>
<p >
<i >Calculates the point group symmetry for a symmetrical or nearly symmetrical molecule. The calculation is carried out only on the currently selected atoms and is limited to at most 100 selected atoms. The symmetry-determining algorithm looks for proper and improper rotation axes using a variety of methods. In each case, a test is made as to whether all atoms subjected to a specific rotation or reflection map onto the positions of some other atom.The extent to which imperfections in symmetry will be tolerated depends upon two adjustable paremeters. 
<b>pointGroupDistanceTolerance</b> (default 0.2 Angstroms) determines the maximum distance between a rotated atom and another atom in the molecule. 
<b>pointGroupLinearTolerance</b> (default 8.0 degrees) determines whether a potential axis matches one that has already been discovered. Setting these values to higher numbers allows more flexibility in terms of atom positions, but also may result in molecules being reported with higher symmetry than they really have.</i ></p ></blockquote></td></tr> 
<tr name='tr_calculate'>
<td valign="top">
<a name="calculate_straightness" id="k125"> </a>calculate STRAIGHTNESS</td ></tr>
<tr name='tr_calculate'>
<td>
<blockquote>
<p >
<i >Calculates a value for "straightness" (ranging from -1 to 1) within a biomolecular polymer (protein or nucleic) as defined by the following equation: 
<br> 
<br> straightness = 1 - 2 * (acos(q
<sub>i</sub> / q
<sub>i-1</sub> * q
<sub>i+1</sub> / q
<sub>i</sub>) / PI)
<br> 
<br>where q
<sub>i</sub> is the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#quaternion">quaternion</a> defining the frame of the i
<sup>th</sup> amino acid or nucleic acid. A value of 1 for straightness indicates that the three amino acids (i-1, i, i+1) are perfect rotations around the same helical axis. The straightness can then be displayed as part of a label using the %T format code or as a color using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#color">color straightness.</a></i ></p ></blockquote></td></tr> 
<tr name='tr_calculate'>
<td valign="top">
<a name="calculate_structure" id="k126"> </a>calculate STRUCTURE type 
<a class='def' href='#d117' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_calculate'>
<td>
<blockquote>
<p >
<i >Calculates the secondary structure of proteins or nucleic acids (
<span class="newv">Jmol 14.2</span>). Options are based on the 
<b>type</b> keyword. The calculation is performed for all models containing any of the indicated atoms or, if no atoms are specified, the set of currently selected atoms. For these models all cartoons and other biomolecular shapes are turned off. The next 
<b>cartoons on</b> command will then show a complete set of cartoons. This command also recalculates the polymer chains making up a protein or nucleic acid. The results are affected by any bonding that has changed via the
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#connect">connect</a> command. A typical use involves PDB files that load with incomplete bonding (because the author specified only a fraction of the bonds). After loading, one can issue 
<b>connect</b> to use Jmol's autobonding feature, then 
<b>calculate structure</b> to regenerate the secondary structure.
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>DSSP</b> </td >
<td valign="top" > Calculates the secondary structure of proteins based on Jmol's implementation of 
<a class="xref" href="http://en.wikipedia.org/wiki/Secondary_structure" target="_blank">DSSP</a>.</td ></tr >
<tr >
<td valign="top" > 
<b>RAMACHANDRAN</b> </td >
<td valign="top" > Calculates protein secondary structure using a Ramachandran-angle-based method original to Jmol. The default DSSP setting is to ignore any file-based backbone amide hydrogens, but this can be changed using 
<b>set dsspCalculateHydrogenAlways FALSE</b>.</td ></tr >
<tr >
<td valign="top" >
<b>DSSR</b> </td >
<td valign="top" > 
<a class="xref" href="http://x3dna.bio.columbia.edu" target="_blank">Defining the (Secondary) Structures of RNA</a>. The calculation works equally well with DNA. ...TO DO... </td ></tr >
<tr >
<td valign="top" >
<b></b> </td >
<td valign="top" > If no type is given, DSSP is assumed unless the global setting 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_defaultstructuredssp">set defaultStructureDSSP</a> is set FALSE, in which case RAMACHANDRAN is assumed.</td ></tr ></table ></i ></p ></blockquote></td></tr> 
<tr name='tr_calculate'>
<td valign="top">
<a name="calculate_struts" id="k127"> </a>calculate STRUTS</td ></tr>
<tr name='tr_calculate'>
<td>
<blockquote>
<p >
<i >Generates 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#struts">struts</a>. Three parameters are used (defaults given): 
<b>set strutSpacing 6</b> sets the minimum spacing between struts, 
<b>set strutLengthMaximum 7.0</b> sets the maximum length that is allowed for a strut, and 
<b>strutsMultiple</b> when set TRUE allows multiple struts on a given atom. In addition, 
<b>set strutDefaultRadius 0.3</b> sets the default radius for struts.</i ></p ></blockquote></td></tr> 
<tr name='tr_calculate'>
<td valign="top">
<a name="calculate_surfacedistance" id="k124"> </a>calculate SURFACEDISTANCE FROM 
<a class='def' href='#d117' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_calculate'>
<td>
<blockquote>
<p >
<i >Calculates for each atom the property surfaceDistance, which is the distance of the atom to a van der Waals surface surrounding the specified subset of atoms of the model. 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface sasurface map property surfaceDistance</a> then creates an isosurface colored by distance from the specified subset; or either 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#colorcolorscheme">color surfaceDistance</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#colorcolorscheme">color property surfaceDistance</a> colors the atoms along the same lines.</i ></p ></blockquote></td></tr> 
<tr name='tr_calculate'>
<td valign="top">
<a name="calculate_surfacedistance" id="k123"> </a>calculate SURFACEDISTANCE WITHIN 
<a class='def' href='#d117' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_calculate'>
<td>
<blockquote>
<p >
<i >Calculates for each atom the property surfaceDistance, which is the distance of the atom to a "shrink-wrap" surface surrounding the set of preselected atoms (usually the entire model, often without solvent molecules). Values for atoms OUTSIDE this surface are not generally valid due to the nature of the calculation. Use 
<b>calculate surfacedistance FROM {atom expression}</b> instead for calculating distances outside of a van der Waals surface surrounding a subset of atoms in a model. 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface sasurface map property surfaceDistance</a> then creates an isosurface colored by distance from the specified subset; or either 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#color">color surfaceDistance</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#color">color property surfaceDistance</a> colors the atoms along the same lines.</i ></p ></blockquote></td></tr> 
<tr name='tr_calculate'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_calculate'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_calculate'>
<td colspan="5">
<p>
<a class="xref" href="#delete">delete</a> 
<a class="xref" href="#hbonds">hbonds</a> 
<a class="xref" href="#setfilesandscripts">set (files and scripts)</a> </p></td></tr>
<tr name='tr_calculate'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k114">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_capture'>
<td colspan="5">
<h3 >
<a id="capture" name="capture">capture</a>
<a id="k129"> </a></h3></td></tr>
<tr name='tr_capture'>
<td>
<i >
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<img src=img/caffeine.png title='click to animate' onclick="this.src='img/caffeine.ani.gif'" /></td ></tr >
<tr >
<td valign="top" >click image to animate</td ></tr ></table > 
<br>
<br>Application and signed applet only. Captures animations and mouse action results as animated GIF files, sets of GIF files, or sets of PNG files. Which of these options is selected depends upon the form of the file name: 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >xxxx.gif</td >
<td valign="top" >Capture to an animated GIF file. By default, capturing will continue until the CAPTURE END command is issued. If the LOOP keyword is not given (see below), then whether the animation loops or not depends upon the value of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#animation">animation mode</a>: PALINDROME or LOOP results in a looping GIF (no distinction, as there is no PALINDROME option in GIF animation) or ONCE (no looping). Frame rate is determined by 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#animation">animation fps</a>, which has a maximum of 50 frames per second.</td ></tr >
<tr >
<td valign="top" >xxxx0000.gif</td >
<td valign="top" >Capture to a stream of GIF files starting with xxxx0001.gif. "0000" is required. (Jmol 14.3.8)</td ></tr >
<tr >
<td valign="top" >xxxx0000.png</td >
<td valign="top" >Capture to a stream of PNG files starting with xxxx0001.png. "0000" is not required and will be appended if absent. (Jmol 14.3.8)</td ></tr ></table >
<br />
<br /></i ></td></tr>
<tr name='tr_capture'>
<td valign="top">
<a name="capture_" id="k131"> </a>capture</td ></tr>
<tr name='tr_capture'>
<td>
<blockquote>
<p >
<i >CAPTURE alone closes the current capture file if open and stops capturing.</i ></p ></blockquote></td></tr> 
<tr name='tr_capture'>
<td valign="top">
<a name="capture_"filename"" id="k132"> </a>capture "filename" (decimal)</td ></tr>
<tr name='tr_capture'>
<td>
<blockquote>
<p >
<i >Starts capturing to the designated file or file set. Captures for the specified number of seconds. If this number is equal to 0 or absent, capturing is continued until 
<b>CAPTURE END</b> is issued. </i ></p ></blockquote></td></tr> 
<tr name='tr_capture'>
<td valign="top">
<a name="capture_transparent" id="k133"> </a>capture TRANSPARENT "filename" (decimal)</td ></tr>
<tr name='tr_capture'>
<td>
<blockquote>
<p >
<i >Starts capturing to the designated file or file set, creating images with transparent backgrounds. Alternatively, files may be given the extensions "GIFT" or "PNGT" as for the WRITE command. The "T" will be removed.</i ></p ></blockquote></td></tr> 
<tr name='tr_capture'>
<td valign="top">
<a name="capture_"filename"" id="k134"> </a>capture "filename" LOOP (decimal)</td ></tr>
<tr name='tr_capture'>
<td>
<blockquote>
<p >
<i >Starts capturing to the designated animated GIF file, overriding the setting of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#animation">animation mode</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_capture'>
<td valign="top">
<a name="capture_"filename"" id="k135"> </a>capture "filename" ROCK axis degrees</td ></tr>
<tr name='tr_capture'>
<td>
<blockquote>
<p >
<i >Creates a looping animated GIF or a file set that rocks around the specified axis (x, y, or z; default y) the specified number of degrees (default 5). Both the axis and degrees are optional. Rate of frame capture is controlled by setting of spinFPS. Set spinFPS to smaller values for fewer frames.</i ></p ></blockquote></td></tr> 
<tr name='tr_capture'>
<td valign="top">
<a name="capture_"filename"" id="k136"> </a>capture "filename" SPIN axis</td ></tr>
<tr name='tr_capture'>
<td>
<blockquote>
<p >
<i >Creates a looping animated GIF or a file set that spins around the specified axis (x, y, or z; default y). Rate of frame capture is controlled by setting of spinFPS (default 30). Set spinFPS to smaller values for fewer frames.</i ></p ></blockquote></td></tr> 
<tr name='tr_capture'>
<td valign="top">
<a name="capture_off" id="k137"> </a>capture OFF</td ></tr>
<tr name='tr_capture'>
<td>
<blockquote>
<p >
<i >Temporarily turns capturing off; file is still open at this point.</i ></p ></blockquote></td></tr> 
<tr name='tr_capture'>
<td valign="top">
<a name="capture_on" id="k138"> </a>capture ON</td ></tr>
<tr name='tr_capture'>
<td>
<blockquote>
<p >
<i >Re-starts capturing.</i ></p ></blockquote></td></tr> 
<tr name='tr_capture'>
<td valign="top">
<a name="capture_end" id="k139"> </a>capture END</td ></tr>
<tr name='tr_capture'>
<td>
<blockquote>
<p >
<i >Stops capture silently; same as CAPTURE by itself.</i ></p ></blockquote></td></tr> 
<tr name='tr_capture'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_capture'>
<td colspan="5">
<p>
<a class="xref" href="#animation">animation</a> 
<a class="xref" href="#setmisc">set (misc)</a> 
<a class="xref" href="#writeimagesandframes">write (images and frames)</a> </p></td></tr>
<tr name='tr_capture'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k130">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_cartoon'>
<td colspan="5">
<h3 >
<a id="cartoon" name="cartoon">cartoon or cartoons</a>
<a id="k140"> </a></h3></td></tr>
<tr name='tr_cartoon'>
<td>
<i >Cartoons are the classic shapes the are used to depict alpha helices and beta-pleated sheets. A combination of cartoons and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#rockets">rockets</a> can be displayed using cartoons along with 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_cartoonrockets">set cartoonRockets</a>. The 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_rocketbarrels">set rocketBarrels</a> option removes the arrow heads from cartoon rockets. In addition, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_cartoonladders">set cartoonLadders</a> removes the bases from nucleic acid cartoons but leaves the ladder "rungs". The 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_hermitelevel">hermite level</a> determines the overall cross-section of the helix and sheet renderings. Hermite levels 6 or higher produces a ribbon cross-section in the shape of an ellipse. Use 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_ribbonaspectratio">set ribbonAspectRatio 4</a> rather than the default value of 16 for a more rounded ellipse.
<br />
<br /></i ></td></tr>
<tr name='tr_cartoon'>
<td valign="top">
<a name="cartoon_" id="k142"> </a>cartoon ON/OFF{default: ON}</td ></tr> 
<tr name='tr_cartoon'>
<td valign="top">
<a name="cartoon_only" id="k143"> </a>cartoon ONLY</td ></tr>
<tr name='tr_cartoon'>
<td>
<blockquote>
<p >
<i >Turns cartoon rendering on and all other rendering (including labels) off.</i ></p ></blockquote></td></tr> 
<tr name='tr_cartoon'>
<td valign="top">
<a name="cartoon_._cartoon_radius" id="k145"> </a>cartoon 
<a class='def' href='#d144' title='the radius of the cartoon elements -- (decimal, &lt;=4.0)'>[cartoon-radius]</a></td ></tr>
<tr name='tr_cartoon'>
<td>
<blockquote>
<p >
<i >A negative number also implies 
<b>ONLY</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_cartoon'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_cartoon'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_cartoon'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples/structure.htm">structure.htm</a> </td></tr>
<tr name='tr_cartoon'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_cartoon'>
<td colspan="5">
<p>
<a class="xref" href="#backbone">backbone</a> 
<a class="xref" href="#background">background</a> 
<a class="xref" href="#dots">dots</a> 
<a class="xref" href="#ellipsoid">ellipsoid</a> 
<a class="xref" href="#geosurface">geoSurface</a> 
<a class="xref" href="#meshribbon">meshribbon</a> 
<a class="xref" href="#ribbon">ribbon</a> 
<a class="xref" href="#rocket">rocket</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlighting">set (lighting)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#strand">strand</a> 
<a class="xref" href="#trace">trace</a> 
<a class="xref" href="#vector">vector</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_cartoon'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k141">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_case'>
<td colspan="5">
<h3 >
<a id="case" name="case">CASE</a>
<a id="k146"> </a></h3>
<div class="chimenote">
<i>Note:</i> The CASE command does not require @{ ... } around Jmol math expressions.
<br />
<br /></div></td></tr>
<tr name='tr_case'>
<td>
<i >See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#switch">switch</a>.
<br />
<br /></i ></td></tr> 
<tr name='tr_case'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_case'>
<td colspan="5">
<p>
<a class="xref" href="#jmolcommandsyntax">[Jmol Command Syntax]</a> 
<a class="xref" href="#jmolmath">[Jmol Math]</a> 
<a class="xref" href="#jmolparameters">[Jmol Parameters]</a> 
<a class="xref" href="#atomexpressions">[atom expressions]</a> 
<a class="xref" href="#atomproperties">[atom properties]</a> 
<a class="xref" href="#functions">[functions]</a> 
<a class="xref" href="#break">break</a> 
<a class="xref" href="#catch">catch</a> 
<a class="xref" href="#continue">continue</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#else">else</a> 
<a class="xref" href="#elseif">elseIf</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#message">message</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#return">return</a> 
<a class="xref" href="#set">set</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#try">try</a> 
<a class="xref" href="#var">var</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_case'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k147">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_catch'>
<td colspan="5">
<h3 >
<a id="catch" name="catch">CATCH</a>
<a id="k148"> </a></h3>
<div class="chimenote">
<i>Note:</i> The CATCH command does not require @{ ... } around Jmol math expressions.
<br />
<br /></div></td></tr>
<tr name='tr_catch'>
<td>
<i >See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#try">try</a>.
<br />
<br /></i ></td></tr> 
<tr name='tr_catch'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_catch'>
<td colspan="5">
<p>
<a class="xref" href="#break">break</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#continue">continue</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#else">else</a> 
<a class="xref" href="#elseif">elseIf</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#return">return</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#try">try</a> 
<a class="xref" href="#var">var</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_catch'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k149">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_cd'>
<td colspan="5">
<h3 >
<a id="cd" name="cd">cd</a>
<a id="k150"> </a></h3></td></tr>
<tr name='tr_cd'>
<td>
<i >Changes the default directory or, with no parameters, displays the default directory. This command sets the Jmol parameter 
<b>defaultDirectory</b> and also, if a local directory, sets the default directory for writing files (application and signed applet). The directory can be local or it can have a URL prefix such as http:// or ftp://, and it may or may not be enclosed in quotes. Note that 
<b>x = file("") </b> sets x to the full path to the current default directory while 
<b>x = defaultDirectory</b> sets x to the current default directory as set by the user by the 
<b>cd</b> command (full path) or simply by setting the 
<b>defaultDirectory</b> parameter (which may or may not be the full path).
<br />
<br /></i ></td></tr>
<tr name='tr_cd'>
<td valign="top">
<a name="cd_" id="k152"> </a>cd</td ></tr>
<tr name='tr_cd'>
<td>
<blockquote>
<p >
<i >Displays the default directory.</i ></p ></blockquote></td></tr> 
<tr name='tr_cd'>
<td valign="top">
<a name="cd_""" id="k153"> </a>cd ""</td ></tr>
<tr name='tr_cd'>
<td>
<blockquote>
<p >
<i >Resets the default directory to the base directory of the application or applet.</i ></p ></blockquote></td></tr> 
<tr name='tr_cd'>
<td valign="top">
<a name="cd_"directoryname"" id="k154"> </a>cd "directoryName"</td ></tr>
<tr name='tr_cd'>
<td>
<blockquote>
<p >
<i >Changes the default directory to that specified in the directory name. Quotes are optional. The standard notation of two periods indicates "up one level" as in 
<b>cd ../temp</b>. Note that forward slash, not back slash, should be used to separate directory names along a path.</i ></p ></blockquote></td></tr> 
<tr name='tr_cd'>
<td valign="top">
<a name="cd_?" id="k155"> </a>cd ?</td ></tr>
<tr name='tr_cd'>
<td>
<blockquote>
<p >
<i >(signed applet or Jmol application only) Displays a file dialog box allowing for creating and changing directories on the local system.</i ></p ></blockquote></td></tr> 
<tr name='tr_cd'>
<td valign="top">
<a name="cd_=" id="k156"> </a>cd =</td ></tr>
<tr name='tr_cd'>
<td>
<blockquote>
<p >
<i >Changes the default directory to that specified in the URL directory specified in the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setfilesandscripts">loadFormat</a> variable.</i ></p ></blockquote></td></tr> 
<tr name='tr_cd'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_cd'>
<td colspan="5">
<p>
<a class="xref" href="#setfilesandscripts">set (files and scripts)</a> </p></td></tr>
<tr name='tr_cd'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k151">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_center'>
<td colspan="5">
<h3 >
<a id="center" name="center">center or centre</a>
<a id="k157"> </a></h3></td></tr>
<tr name='tr_center'>
<td>
<i >Sets the center of rotation to be the center of the set of atoms defined by the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions">atom expression</a>. This is calculated as the mean value of the coordinates of the selected atoms along each of the respective axes. If no atoms are selected then the center is set to the center of the bounding box (the default). The three values can be written using braces as a single coordinate, {x y z}, if desired.
<br />
<br /></i ></td></tr>
<tr name='tr_center'>
<td valign="top">
<a name="center_._atom_expression" id="k161"> </a>center 
<a class='def' href='#d160' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_center'>
<td>
<blockquote>
<p >
<i >Centers the model on the specified atom set. Along with 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#show">show center</a>, allows for the reading of the coordinated position of a specific atom using, for example, 
<b>center [CYS]4.O;show center;center</b>. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#centerat">centerAt</a></i ></p ></blockquote></td></tr> 
<tr name='tr_center'>
<td valign="top">
<a name="center_._coordxyz" id="k163"> </a>center 
<a class='def' href='#d162' title='is an xyz coordinate in the form {x y z} '>[xyz-coordinate]</a></td ></tr>
<tr name='tr_center'>
<td>
<blockquote>
<p >
<i >Centers the model on a specified model-frame coordinate</i ></p ></blockquote></td></tr> 
<tr name='tr_center'>
<td valign="top">
<a name="center_._draw_object" id="k165"> </a>center 
<a class='def' href='#d164' title='a drawn object -- $name'>[drawn-object]</a></td ></tr>
<tr name='tr_center'>
<td>
<blockquote>
<p >
<i >Centers the model on a specified 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a> object</i ></p ></blockquote></td></tr> 
<tr name='tr_center'>
<td valign="top">
<a name="center_" id="k159"> </a>center</td ></tr>
<tr name='tr_center'>
<td>
<blockquote>
<p >
<i >Recenters the model on the default center.</i ></p ></blockquote></td></tr> 
<tr name='tr_center'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_center'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('.center')">in new window using 1crn.pdb</td></tr>
<tr name='tr_center'>
<td>
<table cellpadding="10">
<tr>
<td class="example">select [CYS]32
<br />center selected
<br />select *
<br /></td></tr></table></td></tr>
<tr name='tr_center'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_center'>
<td colspan="5">
<p>
<a class="xref" href="#centerat">centerAt</a> 
<a class="xref" href="#show">show</a> </p></td></tr>
<tr name='tr_center'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k158">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_centerat'>
<td colspan="5">
<h3 >
<a id="centerat" name="centerat">centerAt</a>
<a id="k166"> </a></h3></td></tr>
<tr name='tr_centerat'>
<td>
<i >The 
<b>centerAt</b> command allows centering of the model in one of three different ways: based on an absolute coordinate position, based on an offset relative to the center of the boundbox (the overall application default), or based on an offset relative to the average position of the currently selected atoms. Centering on a specific atom or atom set without first selecting it is also available using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#center">center</a> command. If the three numerical values are omitted, they default to 0.0 0.0 0.0. The numbers can be in the form of a coordinate (with braces), {x y z}, if desired.
<br />
<br /></i ></td></tr>
<tr name='tr_centerat'>
<td valign="top">
<a name="centerat_absolute" id="k168"> </a>centerAt ABSOLUTE x y z {default: 0.0 0.0 0.0}</td ></tr>
<tr name='tr_centerat'>
<td>
<blockquote>
<p >
<i >specifies an absolute coordinate for the center, in Angstroms</i ></p ></blockquote></td></tr> 
<tr name='tr_centerat'>
<td valign="top">
<a name="centerat_average" id="k170"> </a>centerAt AVERAGE x y z {default: 0.0 0.0 0.0}</td ></tr>
<tr name='tr_centerat'>
<td>
<blockquote>
<p >
<i >relative to the average atom position (also known as the "unweighted center of gravity")</i ></p ></blockquote></td></tr> 
<tr name='tr_centerat'>
<td valign="top">
<a name="centerat_boundbox" id="k169"> </a>centerAt BOUNDBOX x y z {default: 0.0 0.0 0.0}</td ></tr>
<tr name='tr_centerat'>
<td>
<blockquote>
<p >
<i >relative to the center of the boundbox, which is defined by the minimum and maximum atom center coordinates along each of the cartesian axes</i ></p ></blockquote></td></tr> 
<tr name='tr_centerat'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_centerat'>
<td>
<table cellpadding="10">
<tr>
<td class="example">centerAt absolute 1.0 2.0 3.0
<br />centerAt boundbox 1.0 2.0 -3.0
<br />centerAt average 0.0 0.0 0.0
<br /></td></tr></table></td></tr>
<tr name='tr_centerat'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_centerat'>
<td colspan="5">
<p>
<a class="xref" href="#center">center</a> 
<a class="xref" href="#show">show</a> </p></td></tr>
<tr name='tr_centerat'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k167">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_cgo'>
<td colspan="5">
<h3 class=h3newer>
<a id="cgo" name="cgo">cgo</a>
<a id="k171"> </a> 
<br />
<span class=newer>(v. 14.4 -- NEW)</span></h3></td></tr>
<tr name='tr_cgo'>
<td>
<i >The CGO (Compiled Graphical Object) command, introduced in Jmol 14.4, allows the creation of relatively simple graphical objects similar to those used in PyMOL. 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > 
<b> cgo test1a [ 
<br> BEGIN LINES 
<br> VERTEX 0 0 0 VERTEX 2 2 2 
<br> VERTEX 2 2 2 VERTEX 3 2 0 
<br> END 
<br>]</b> </td >
<td valign="top" > The basic syntax consists of an ID name (test1a here) followed by an array of keywords and data bounded by BEGIN and END statements. In this case we are simply drawing two lines. </td ></tr >
<tr >
<td valign="top" > 
<b>cgo test1c [ 
<br> BEGIN LINE_STRIP 
<br> VERTEX 4 0 0 
<br> VERTEX 6 2 2 
<br> VERTEX 5 2 0 
<br> END 
<br>]</b> </td >
<td valign="top" > LINE_STRIP allows drawing of connected lines. </td ></tr >
<tr >
<td valign="top" > 
<b>cgo test1b [ 
<br> BEGIN LINE_LOOP 
<br> VERTEX 4 0 0 
<br> VERTEX 6 2 2 
<br> VERTEX 5 2 0 
<br> END 
<br>]</b> </td >
<td valign="top" > LINE_LOOP allows drawing of a polygon. </td ></tr >
<tr >
<td valign="top" > 
<b>cgo test2 [ 
<br> BEGIN POINTS 
<br> COLOR 255 0 0 
<br> LINE 0 0 3 0 0 3 2 2 
<br> COLOR 0 255 0 
<br> LINE 0 0 3 2 2 4 2 0 
<br> END 
<br>]</b> </td >
<td valign="top" > COLOR acts on the next line. Only the last six numbers are used in the LINE commands. COLOR can also be used between vertices in LINE_STRIP and LINE_LOOP blocks. </td ></tr >
<tr >
<td valign="top" > 
<b> 
<br>cgo test2b [ 
<br> BEGIN LINE_LOOP 
<br> DIAMETER 0.3 
<br> VERTEX 4 0 0 
<br> VERTEX 6 2 2 
<br> VERTEX 5 2 0 
<br> END 
<br>]</b> </td >
<td valign="top" >The diameter of the lines can be set. </td ></tr >
<tr >
<td valign="top" > 
<b> 
<br>cgo test2 [ SCREEN 20 
<br> BEGIN LINE_LOOP 
<br> VERTEX 10 10 
<br> VERTEX 90 10 
<br> VERTEX 90 90 
<br> VERTEX 10 90 
<br> END 
<br>]</b> </td >
<td valign="top" >Screen coordinates can also be used. [0 0] is in the top left corner. The syntax is 
<b>CGO [SCREEN z ...]</b>. CGO 2D VERTEX records are read as screen coordinates, with depth of z. z > 0 indicates a percent (0.01 far back; 100 front); z 
< 0 indicates an absolute screen z value as -z. Note that the VERTEX and other CGO point elements are 2D, not 3D. </td ></tr >
<tr >
<td valign="top" > 
<b>load $caffeine cgo test1a [ UVMAP @1 @6 @11 0 0 80 80 1 1 
<br> BEGIN LINE_LOOP 
<br> VERTEX 0 0 
<br> VERTEX 80 0 
<br> VERTEX 80 80 
<br> VERTEX 0 80 
<br> END 
<br>]</b> </td >
<td valign="top" > The UVMAP specifies origin and two 3D vectors, two 2D ranges, and two scaling factors: 
<b>CGO [UVMAP @origin @x @y x0 y0 x1 y1 scaleX scaleY ...]</b> 2D VERTEX records are scaled and mapped to a plane defined by @origin @x @y. Here we have a parallelogram based on atoms 1, 6, and 11. </td ></tr >
<tr >
<td valign="top" > 
<br>
<b> CGO[ PS @{point(-5,-5,0)} @{point(5,-5,0)} @{point(-5,5,0)}] data "PS" 
<br>%!PS-Adobe-2.0 EPSF-1.2 
<br>%%Creator: Bob Hanson (from NBO) 
<br>%%Title: nbo orbital slice 
<br>%%CreationDate: 1/26/2015 5:36 AM 
<br>%%DocumentFonts: Helvetica 
<br>%%BoundingBox: 211 300 428 518 
<br>%% note: above numbers are from 0.24*881 0.24*1781 0.24*1256 0.24*2156 
<br>%%EndComments 
<br>%%EndProlog 
<br> 0.2400 0.2400 scale 
<br> newpath 
<br> 3 setlinewidth 
<br> newpath 
<br> 881 1256 moveto 
<br> 1781 1256 lineto 
<br> 1781 2156 lineto 
<br> 881 2156 lineto 
<br> closepath 
<br> stroke 
<br> 1241 1717 moveto 
<br> 1250 1713 lineto 
<br>... 
<br> stroke 
<br>%%Trailer 
<br>showpage 
<br>end "PS" </b> </td >
<td valign="top" > TThe CGO PostScript option has the syntax 
<b>CGO [ PS @origin @x @y ] data "PS" [primitive encapsulated postscript data] end "PS"</b> It maps 2D EPS data onto a plane defined by an origin point, an x-axis point, and a y-axis point. This makes it somewhat similar to standard UV mapping of textures. It allows 2D data to be superimposed on a model. Only simple PS commands are available for drawing lines. (For example, it doesn not properly implement stroke. Allowed PS commands include moveto, lineto, newpath, closepath, setlinewidth, and scale. It does not implement PS fill, gsave, or grestore). The EPS %%BoundingBox x0 y0 x1 y1 prolog record is used to map [x0 y0] to @origin, [x1 0] to @x, and [0 y1] to @y. It is being used for NBO contour mapping. </td ></tr ></table >
<br />
<br /></i ></td></tr> 
<tr name='tr_cgo'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_cgo'>
<td colspan="5">
<p>
<a class="xref" href="#setmisc">set (misc)</a> </p></td></tr>
<tr name='tr_cgo'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k172">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_color'>
<td colspan="5">
<h3 >
<a id="color" name="color">color or colour</a>
<a id="k173"> </a></h3>   
<a class="textParam" href="#colorobject">[object]</a>
<br />   
<a class="textParam" href="#colortranslucent/opaque">[translucent/opaque]</a>
<br />   
<a class="textParam" href="#colorcolorschemesandcolorpropertyxxx">[color schemes and color PROPERTY xxx]</a>
<br />   
<a class="textParam" href="#colorcolorinheritance">Color Inheritance</a>
<br />
<br /></td></tr>
<tr name='tr_color'>
<td>
<i >In general, the color command takes the following syntax:
<br>
<br>
<b>color [object] [translucent/opaque] [color, property, or color scheme]</b>
<br> 
<br> Colors can be designated as one of the 
<a class="xref" href="http://jmol.sourceforge.net/jscolors/#JavaScript%20colors" target="_blank">[standard JavaScript colors]</a>, as a red-green-blue triplet in square brackets, [255, 0, 255], as a red-green-blue triplet expressed as a six-digit hexidecimal number in brackets, [xFF00FF], as a triplet expressed as a point in red-green-blue color space -- {255,0,255} or fractional {0.5, 0.5, 1} . To specifiy a set of atoms to color, you can either select them first -- 
<b>select *.N?; color green</b> -- or specify them using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions">atom expression</a> notation: 
<b>color {*.N?} green</b>.
<br />
<br />
<b>
<a name="colorobject">[object]</a></b>    
<a href="#color">back</a>
<br />
<br /> The color command takes several forms, depending upon the type of object being colored: an atom object, a bond object, a chemical element, or a model object. This section of the guide discusses each of these in turn:
<br>
<ul>
<li>
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#coloratomobject">color (atom object)</a></li>
<li>
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#colorbondobject">color (bond object)</a></li>
<li>
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#colorelement">color (element)</a></li>
<li>
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#colormodelobject">color (model object)</a></li>
<li>
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#colornamedobject">color (named object)</a></li>
<li>
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#colorscheme">color (scheme)</a></li></ul> Additional information external to this documentation can be found in relation to 
<a class="xref" href="http://jmol.sourceforge.net/jscolors/" target="_blank">[Jmol color schemes]</a> and 
<a class="xref" href="http://jmol.sourceforge.net/jscolors/#JavaScript colors" target="_blank">[standard JavaScript color names and codes]</a>. In addition, a page is available that lays out the 
<a class="xref" href="misc/color.htm" target="_blank">[Jmol color command matrix]</a>. Color schemes may be customized using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setusercolorscheme">set userColorScheme</a> command.
<br />
<br />
<b>
<a name="colortranslucent/opaque">[translucent/opaque]</a></b>    
<a href="#color">back</a>
<br />
<br /> The color command allows an optional color modifier of TRANSLUCENT or OPAQUE, which can be used with any object, either alone or with a color. TRANSLUCENT can take an integer in the range 0-8 (indicating eighths -- 0, 1/8, 2/8, etc.), 32-255 (indicating fraction of 256), or a decimal in the range 0.0 to 1.0. Larger numbers are more translucent -- dimmer. Currently implemented transclucencies are 0 (opaque), 0.125 (1, 32), 0.25 (2, 64), 0.375 (3, 96), 0.5 (4, 128), 0.625 (5, 160), 0.75 (6, 192), 0.875 (7, 224). Future versions of Jmol may include more options, so it is recommended that the decimal numbers be used. The default is TRANSLUCENT 0.5, which can be set using "defaultTranslucent = x.xx", where x.xx is a decimal number. For example:
<br>
<br> color atoms TRANSLUCENT orange
<br> color ribbons TRANSLUCENT 0.5 [255, 165, 0]
<br>select oxygen; color opaque. 
<br>
<br>If neither TRANSLUCENT nor OPAQUE is specified, OPAQUE is assumed. Thus, 
<b>color atoms red</b> and 
<b>color atoms OPAQUE red</b> are synonymous. 
<br />
<br />
<b>
<a name="colorcolorschemesandcolorpropertyxxx">[color schemes and color PROPERTY xxx]</a></b>    
<a href="#color">back</a>
<br />
<br /> Besides the standard ways of representing a color, Jmol allows coloring based on properties or by one of the known 
<a class="xref" href="http://jmol.sourceforge.net/jscolors/" target="_blank">Jmol color schemes</a>. If 
<b>color TEMPERATURE</b> is used, the color range will depend upon the setting of the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setrangeselected">rangeSelected</a> flag. Coloring can also be carried out by SURFACEDISTANCE. 
<br> 
<br>You can also color atom-based objects based on user-defined properties read from an external file or standard Jmol atom properties such as partialCharge that Jmol has read from the model file. In the case of Jmol 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomproperties">atom properties</a>, use the keyword PROPERTY followed by the name the property, as in 
<b>color atoms PROPERTY partialCharge</b>. In the case of user-defined properties (created using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#data">data</a> command), which always start with "PROPERTY_", simply give the property name: 
<b>x = load("mydata.txt");data "property_mydata @x";select model=2;color atoms property_mydata</b>. When using either PROPERTY or PROPERTY_xxx, you can set the absolute range of values that will span the full spectrum of colors of the propertyColorScheme you have chosen. Simply add the keyword ABSOLUTE followed by the minimum and maximum values you wish to use for the two ends of the spectrum. So, for example: 
<b>color atoms property temperature ABSOLUTE 0.0 30.0</b>. 
<br />
<br />
<b>
<a name="colorcolorinheritance">Color Inheritance</a></b>    
<a href="#color">back</a>
<br />
<br /> Many objects inherit both color and opacity from the underlying associated atom (which, themselves "inherit" their color by default from their associated chemical element). For example, by default a bond will inherit the two colors+translucencies of its endpoint atoms. If you simply 'color atoms translucent', then both the atoms and the bonds will be translucent. But if you 'color bonds opaque' or 'color bonds red' and also 'color atoms translucent' only the atoms will be translucent. 
<br>
<br>The level of 'translucent' can be controlled. The algorithm allows for proper mixing of colors for two translucent objects and approximately correct mixing for more than two overlapping translucent objects. 
<br />
<br /></i ></td></tr>
<tr name='tr_color'>
<td valign="top">
<a name="color_._color_name_or_scheme" id="k176"> </a>color 
<a class='def' href='#d175' title='to color based on a 
<a class=xref href=http://jmol.sourceforge.net/jscolors/ target=_blank>[Jmol color scheme]</a>. (CPK and NONE are synonymous here) -- (color name), [r, g, b], [xRRGGBB], ALTLOC, AMINO, CHAIN, CPK, FIXEDTEMPERATURE, FORMALCHARGE, GROUP, INSERTION, JMOL, MOLECULE, MONOMER, NONE, PARTIALCHARGE, RASMOL, RELATIVETEMPERATURE, SHAPELY, STRUCTURE, SURFACEDISTANCE'>[color-scheme]</a></td ></tr>
<tr name='tr_color'>
<td>
<blockquote>
<p >
<i >Sets the previously selected atom set to a color based on a color name or value or one of the 
<a class="xref" href="http://jmol.sourceforge.net/jscolors/" target="_blank">[Jmol color schemes]</a>, namely one of "roygb" (default rainbow), "bwr" (blue-white-red), "rwb" (red-white-blue), "low" (red-green), "high" (green-blue), "bw" (black-white), "wb" (white-black), or "friendly" (an accessibility option for color-blind users).</i ></p ></blockquote></td></tr>
<tr name='tr_color'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_color'>
<td>
<table cellpadding="10">
<tr>
<td class="example">define ~myset (*.N?)
<br />select ~myset
<br />color green
<br />select *
<br />color cartoons structure
<br />color rockets chain
<br />color backbone blue</td></tr></table></td></tr> 
<tr name='tr_color'>
<td valign="top">
<a name="color_._color_name_or_scheme" id="k177"> </a>color 
<a class='def' href='#d175' title='to color based on a 
<a class=xref href=http://jmol.sourceforge.net/jscolors/ target=_blank>[Jmol color scheme]</a>. (CPK and NONE are synonymous here) -- (color name), [r, g, b], [xRRGGBB], ALTLOC, AMINO, CHAIN, CPK, FIXEDTEMPERATURE, FORMALCHARGE, GROUP, INSERTION, JMOL, MOLECULE, MONOMER, NONE, PARTIALCHARGE, RASMOL, RELATIVETEMPERATURE, SHAPELY, STRUCTURE, SURFACEDISTANCE'>[color-scheme]</a> TRANSLUCENT</td ></tr>
<tr name='tr_color'>
<td>
<blockquote>
<p >
<i >The additional parameter TRANSLUCENT creates a gradient of translucency from transparent to opaque across the color scheme. </i ></p ></blockquote></td></tr>
<tr name='tr_color'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_color'>
<td>
<table cellpadding="10">
<tr>
<td class="example">define ~myset (*.N?)
<br />select ~myset
<br />color green
<br />select *
<br />color cartoons structure
<br />color rockets chain
<br />color backbone blue</td></tr></table></td></tr> 
<tr name='tr_color'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_color'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k174">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_coloratomobject'>
<td colspan="5">
<h3 >
<a id="coloratomobject" name="coloratomobject">color (atom object)</a>
<a id="k178"> </a></h3></td></tr>
<tr name='tr_coloratomobject'>
<td>
<i >Sets the color of atom-related objects (atoms, backbone, cartoons, dots, halos, labels, meshribbon, polyhedra, rockets, stars, strands, struts , trace, and vibration vectors).
<br />
<br /></i ></td></tr>
<tr name='tr_coloratomobject'>
<td valign="top">
<a name="color__atom_object__._atom_object" id="k182"> </a>color 
<a class='def' href='#d180' title='an object related to an atom -- ATOM, BACKBONE, CARTOON, DOTS, ELLIPSOID, HALOS, LABELS, MESHRIBBON, POLYHEDRA, RIBBONS, ROCKETS, SELECTIONHALOS, STARS, STRANDS, STRUTS, TRACE, VECTORS'>[atom-associated-object]</a> 
<a class='def' href='#d181' title='to color based on a 
<a class=xref href=http://jmol.sourceforge.net/jscolors/ target=_blank>[Jmol color scheme]</a>. (CPK and NONE are synonymous here) -- (color name), [r, g, b], [xRRGGBB], ALTLOC, AMINO, CHAIN, CPK, FIXEDTEMPERATURE, FORMALCHARGE, GROUP, INSERTION, JMOL, MOLECULE, MONOMER, NONE, PARTIALCHARGE, RASMOL, RELATIVETEMPERATURE, SHAPELY, STRUCTURE, SURFACEDISTANCE'>[color-scheme]</a></td ></tr>
<tr name='tr_coloratomobject'>
<td>
<blockquote>
<p >
<i >Sets the color of atom-related objects based on a previously selected atom set to a specific color, a color scheme, or back to its default color (CPK), or to inherit the color of its associated atom (NONE). In the case of "color atoms", CPK and NONE both revert to the default color. In the case of "color labels", coloring a label to the background color automatically uses the background contrast color, not the actual background color (white or black, depending upon the background color). If it is desired for some reason to color a label the background color, then the label should be colored instead a color very close to the background color but not it exactly. For instance, to color labels black with a black background, use [0,0,1] instead of [0,0,0].</i ></p ></blockquote></td></tr>
<tr name='tr_coloratomobject'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('coloratoms')">in new window using caffeine.xyz</td></tr>
<tr name='tr_coloratomobject'>
<td>
<table cellpadding="10">
<tr>
<td class="example">select oxygen;color atoms green
<br />select carbon;color atoms TRANSLUCENT white;color bonds green;
<br />select carbon;color bonds OPAQUE [255,196,196]</td></tr></table></td></tr>
<tr name='tr_coloratomobject'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples/atoms.htm">atoms.htm</a> 
<a target="_blank" href="examples/bonds.htm">bonds.htm</a> </td></tr> 
<tr name='tr_coloratomobject'>
<td valign="top">
<a name="color__atom_object__balls" id="k183"> </a>color BALLS 
<a class='def' href='#d181' title='to color based on a 
<a class=xref href=http://jmol.sourceforge.net/jscolors/ target=_blank>[Jmol color scheme]</a>. (CPK and NONE are synonymous here) -- (color name), [r, g, b], [xRRGGBB], ALTLOC, AMINO, CHAIN, CPK, FIXEDTEMPERATURE, FORMALCHARGE, GROUP, INSERTION, JMOL, MOLECULE, MONOMER, NONE, PARTIALCHARGE, RASMOL, RELATIVETEMPERATURE, SHAPELY, STRUCTURE, SURFACEDISTANCE'>[color-scheme]</a></td ></tr>
<tr name='tr_coloratomobject'>
<td>
<blockquote>
<p >
<i >Sets the color of the space-fill sphere of an atom without coloring the bonds leading to that atom or other atom-based objects such as stars and polyhedra.</i ></p ></blockquote></td></tr> 
<tr name='tr_coloratomobject'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_coloratomobject'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_coloratomobject'>
<td colspan="5">
<p>
<a class="xref" href="#background">background</a> 
<a class="xref" href="#colorbondobject">color (bond object)</a> 
<a class="xref" href="#colorelement">color (element)</a> 
<a class="xref" href="#colormodelobject">color (model object)</a> 
<a class="xref" href="#colorother">color (other)</a> 
<a class="xref" href="#colorscheme">color (scheme)</a> 
<a class="xref" href="#colormeasures">color measures</a> 
<a class="xref" href="#label">label</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#setusercolorscheme">set userColorScheme</a> 
<a class="xref" href="#show">show</a> </p></td></tr>
<tr name='tr_coloratomobject'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k179">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_colorbondobject'>
<td colspan="5">
<h3 >
<a id="colorbondobject" name="colorbondobject">color (bond object)</a>
<a id="k184"> </a></h3></td></tr>
<tr name='tr_colorbondobject'>
<td>
<i >Three types of bonds are distinguished by Jmol for coloring purposes: regular bonds, disulfide bonds, and hydrogen bonds. Each can be colored independently, and hydrogen bond colors in proteins can take on a special coloring scheme based on their connectivity.
<br />
<br /></i ></td></tr>
<tr name='tr_colorbondobject'>
<td valign="top">
<a name="color__bond_object__bonds" id="k187"> </a>color BONDS 
<a class='def' href='#d186' title='is (color name), [r, g, b], [xRRGGBB], CPK, NONE'>[color-none-CPK]</a></td ></tr>
<tr name='tr_colorbondobject'>
<td>
<blockquote>
<p >
<i >Colors selected bonds a specific color or resets them to inherit the color of their associated atoms.</i ></p ></blockquote></td></tr> 
<tr name='tr_colorbondobject'>
<td valign="top">
<a name="color__bond_object__ssbonds" id="k188"> </a>color SSBONDS 
<a class='def' href='#d186' title='is (color name), [r, g, b], [xRRGGBB], CPK, NONE'>[color-none-CPK]</a></td ></tr>
<tr name='tr_colorbondobject'>
<td>
<blockquote>
<p >
<i >Colors disulfide bonds a specific color or resets them to inherit their color from their associated atoms.</i ></p ></blockquote></td></tr> 
<tr name='tr_colorbondobject'>
<td valign="top">
<a name="color__bond_object__hbonds" id="k189"> </a>color HBONDS 
<a class='def' href='#d186' title='is (color name), [r, g, b], [xRRGGBB], CPK, NONE'>[color-none-CPK]</a></td ></tr>
<tr name='tr_colorbondobject'>
<td>
<blockquote>
<p >
<i >Colors hydrogen bonds a specific color or resets them to inherit their color from their associated atoms. Additional HBOND color options include TYPE and ENERGY</i ></p ></blockquote></td></tr> 
<tr name='tr_colorbondobject'>
<td valign="top">
<a name="color__bond_object__hbonds" id="k190"> </a>color HBONDS ENERGY</td ></tr>
<tr name='tr_colorbondobject'>
<td>
<blockquote>
<p >
<i >Colors hydrogen bonds based on DSSP "energy" (see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">calculate HBONDS</a> for details).</i ></p ></blockquote></td></tr> 
<tr name='tr_colorbondobject'>
<td valign="top">
<a name="color__bond_object__hbonds" id="k191"> </a>color HBONDS TYPE</td ></tr>
<tr name='tr_colorbondobject'>
<td>
<blockquote>
<p >
<i >Colors hydrogen bonds specifically in proteins based on how many residues one end is from the other. Note that to get this effect, one must first execute "hbonds ON" and then issue "color hbonds TYPE". The colors assigned are based on the number of redidues between the interacting H atoms. This TENDS to indicate secondary structure, but is not perfect.The correlation between color and offset are as follows:
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>Color</b></td >
<td valign="top" >
<b>Offset</b></td ></tr >
<tr >
<td valign="top" >green</td >
<td valign="top" >-4</td ></tr >
<tr >
<td valign="top" >cyan</td >
<td valign="top" >-3</td ></tr >
<tr >
<td valign="top" >white</td >
<td valign="top" >+2</td ></tr >
<tr >
<td valign="top" >magenta</td >
<td valign="top" >+3 (turns)</td ></tr >
<tr >
<td valign="top" >red</td >
<td valign="top" >+4 (alpha-helix)</td ></tr >
<tr >
<td valign="top" >orange</td >
<td valign="top" >+5</td ></tr >
<tr >
<td valign="top" >yellow</td >
<td valign="top" >other (e.g. beta-pleated sheet)</td ></tr ></table ></i ></p ></blockquote></td></tr> 
<tr name='tr_colorbondobject'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_colorbondobject'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_colorbondobject'>
<td colspan="5">
<p>
<a class="xref" href="#background">background</a> 
<a class="xref" href="#coloratomobject">color (atom object)</a> 
<a class="xref" href="#colorelement">color (element)</a> 
<a class="xref" href="#colormodelobject">color (model object)</a> 
<a class="xref" href="#colorother">color (other)</a> 
<a class="xref" href="#colorscheme">color (scheme)</a> 
<a class="xref" href="#colormeasures">color measures</a> 
<a class="xref" href="#hbonds">hbonds</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#setusercolorscheme">set userColorScheme</a> 
<a class="xref" href="#show">show</a> </p></td></tr>
<tr name='tr_colorbondobject'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k185">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_colorelement'>
<td colspan="5">
<h3 >
<a id="colorelement" name="colorelement">color (element)</a>
<a id="k192"> </a></h3></td></tr>
<tr name='tr_colorelement'>
<td>
<i >You can use the 'color' command to specify customized default colors that are used for elements. 
<a class="xref" href="http://jmol.sourceforge.net/jscolors/#Atoms%20('CPK%20colors')" target="_blank">[default Jmol element colors]</a> 
<br>
<br>
<b>color carbon limegreen
<br>color hydrogen [x32CD32];</b>
<br>
<br>These changes are not molecule-specific; they will continue in effect even if new molecules are loaded. However, in a page with multiple applets, each applet will have its own set of element colors.
<br>
<br>If you choose to use this feature, you should consider encapsulating your favorite colors into a script and then executing that script as a subroutine. For example:
<br>
<br>
<b>script LoadMyFavoriteColors.txt;
<br>load foo.xyz;
<br>load bar.xyz;</b>
<br>
<br>Note:
<br>
<ol>
<li>Custom element colors are independent of and are not affected by the currently selected set of atoms.</li>
<li>To reset custom element colors, use 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setdefaultcolorscheme">'set defaultColors Jmol'</a> or 'set defaultColors Rasmol'.</li>
<li>'translucent' or 'opaque' cannot be specified as part of the element color specification. (You cannot 'color carbon transparent green', for instance.)</li>
<li>At this time only elements can be custom colored. There is no support for customizing other color palettes such as those used for protein chains or groups.</li></ol>
<br />
<br /></i ></td></tr>
<tr name='tr_colorelement'>
<td valign="top">
<a name="color__element__._element_name" id="k196"> </a>color 
<a class='def' href='#d194' title='to color specific elements such as CARBON or HYDROGEN -- (element name)'>[element-name]</a> 
<a class='def' href='#d195' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a></td ></tr> 
<tr name='tr_colorelement'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_colorelement'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_colorelement'>
<td colspan="5">
<p>
<a class="xref" href="#background">background</a> 
<a class="xref" href="#coloratomobject">color (atom object)</a> 
<a class="xref" href="#colorbondobject">color (bond object)</a> 
<a class="xref" href="#colormodelobject">color (model object)</a> 
<a class="xref" href="#colorother">color (other)</a> 
<a class="xref" href="#colorscheme">color (scheme)</a> 
<a class="xref" href="#colormeasures">color measures</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#setusercolorscheme">set userColorScheme</a> 
<a class="xref" href="#show">show</a> </p></td></tr>
<tr name='tr_colorelement'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k193">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_colormodelobject'>
<td colspan="5">
<h3 >
<a id="colormodelobject" name="colormodelobject">color (model object)</a>
<a id="k197"> </a></h3></td></tr>
<tr name='tr_colormodelobject'>
<td>
<i >Sets the color of various model objects.
<br />
<br /></i ></td></tr>
<tr name='tr_colormodelobject'>
<td valign="top">
<a name="color__model_object__._model_object" id="k201"> </a>color 
<a class='def' href='#d199' title='is AXIS1*, AXIS2*, AXIS3*, AXES, BOUNDBOX, DRAW, ECHO, GEOSURFACE, HOVER, ISOSURFACE, LABEL, MEASUREMENTS, MO, PMESH, POLYHEDRA, SELECTIONHALOS, UNITCELL (*starting with Jmol 11.1.20)'>[model-object]</a> 
<a class='def' href='#d200' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a></td ></tr>
<tr name='tr_colormodelobject'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('colortext')">in new window using 1crn.pdb</td></tr>
<tr name='tr_colormodelobject'>
<td>
<table cellpadding="10">
<tr>
<td class="example">select [CYS]32 ;label %a: %x %y %z;color labels white;
<br />set axes on;color axes green
<br />set axes on;color axes [xFF00FF];</td></tr></table></td></tr> 
<tr name='tr_colormodelobject'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_colormodelobject'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('colortext')">in new window using 1crn.pdb</td></tr>
<tr name='tr_colormodelobject'>
<td>
<table cellpadding="10">
<tr>
<td class="example">select [CYS]32 ;label %a: %x %y %z;color labels white;
<br />set axes on;color axes green
<br />set axes on;color axes [xFF00FF];</td></tr></table></td></tr>
<tr name='tr_colormodelobject'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_colormodelobject'>
<td colspan="5">
<p>
<a class="xref" href="#background">background</a> 
<a class="xref" href="#coloratomobject">color (atom object)</a> 
<a class="xref" href="#colorbondobject">color (bond object)</a> 
<a class="xref" href="#colorelement">color (element)</a> 
<a class="xref" href="#colorother">color (other)</a> 
<a class="xref" href="#colorscheme">color (scheme)</a> 
<a class="xref" href="#colormeasures">color measures</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#setusercolorscheme">set userColorScheme</a> 
<a class="xref" href="#show">show</a> </p></td></tr>
<tr name='tr_colormodelobject'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k198">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_colorother'>
<td colspan="5">
<h3 >
<a id="colorother" name="colorother">color (other)</a>
<a id="k202"> </a></h3></td></tr>
<tr name='tr_colorother'>
<td>
<i >Additional colorable objects include selectionHalos, highlights , and objects that have IDs such as isosurfaces and objects created with the draw command.
<br />
<br /></i ></td></tr>
<tr name='tr_colorother'>
<td valign="top">
<a name="color__other__highlight" id="k205"> </a>color HIGHLIGHT 
<a class='def' href='#d204' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a></td ></tr>
<tr name='tr_colorother'>
<td>
<blockquote>
<p >
<i >Sets the color of the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#sethighlights">highlight</a> ring.</i ></p ></blockquote></td></tr> 
<tr name='tr_colorother'>
<td valign="top">
<a name="color__other__isosurface" id="k206"> </a>color ISOSURFACE {atomSet} 
<a class='def' href='#d204' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a></td ></tr>
<tr name='tr_colorother'>
<td>
<blockquote>
<p >
<i >Colors the section of the isosurface nearest the given atomSet with the given color. Similar to the PyMOL command "set surface_color, (color), (selection)". For example, 
<b>isosurface sasurface; color isosurface {hydrophobic} white</b></i ></p ></blockquote></td></tr> 
<tr name='tr_colorother'>
<td valign="top">
<a name="color__other__isosurface" id="k207"> </a>color ISOSURFACE 
<a class='def' href='#d204' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a> TO 
<a class='def' href='#d204' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a> (integer)</td ></tr>
<tr name='tr_colorother'>
<td>
<blockquote>
<p >
<i >Colors an isosurface with a range of 
<b>n</b> colors from one color to another color. For example, 
<b>color isosurface red to white 30</b>. For ranges that involve more than one hue, it is recommended to use the color() function with the HSL (hue/saturation/luminance) flag set TRUE instead: 
<b>isosurface map colorscheme @{color("yellow" "blue" 30,true)}</b>. Or, if the isosurface is already mapped, 
<b>color isosurface @{color("yellow" "blue" 30,true)}.</i ></p ></blockquote></td></tr> 
<tr name='tr_colorother'>
<td valign="top">
<a name="color__other__isosurface" id="k208"> </a>color ISOSURFACE PHASE 
<a class='def' href='#d204' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a> 
<a class='def' href='#d204' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a> (integer)</td ></tr>
<tr name='tr_colorother'>
<td>
<blockquote>
<p >
<i >Colors an isosurface such as an atomic or molecular orbital with two colors after it has been created. (Jmol 12.3.5)</i ></p ></blockquote></td></tr> 
<tr name='tr_colorother'>
<td valign="top">
<a name="color__other__selectionhalos" id="k210"> </a>color SELECTIONHALOS 
<a class='def' href='#d209' title='is (color name), [r, g, b], [xRRGGBB], NONE'>[color-none-CPK]</a></td ></tr>
<tr name='tr_colorother'>
<td>
<blockquote>
<p >
<i >Sets the default color of the halos displayed by 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#selectionhalos">selectionHalos</a>. The 
<i>default</i> default selection halo color is GOLD. To assign colors based on the underlying atoms, use 
<b>color selectionHalos NONE</b>. This command setting persists for the life of the applet or application, like element colors. If the atom's halo color has been set using 
<b>select ...; color halos ...</b>, then 
<b>color selectionHalo</b> has no effect until those colors are returned to their default settings with 
<b>color halos none</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_colorother'>
<td valign="top">
<a name="color__other__._draw_object" id="k212"> </a>color 
<a class='def' href='#d211' title='a drawn object -- $name'>[drawn-object]</a> 
<a class='def' href='#d204' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a></td ></tr>
<tr name='tr_colorother'>
<td>
<blockquote>
<p >
<i >Sets the color of an object created using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#pmesh">pmesh</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#polyhedra">polyhedra</a> using the name identifier preceded by a dollar sign ($). </i ></p ></blockquote></td></tr> 
<tr name='tr_colorother'>
<td valign="top">
<a name="color__other__polyhedra" id="k213"> </a>color POLYHEDRA 
<a class='def' href='#d204' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a> 
<a class='def' href='#d204' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a></td ></tr>
<tr name='tr_colorother'>
<td>
<blockquote>
<p >
<i >Colors a polyhedron differently for its surfaces (first parameter) and its edges (second parameter). </i ></p ></blockquote></td></tr> 
<tr name='tr_colorother'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_colorother'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_colorother'>
<td colspan="5">
<p>
<a class="xref" href="#background">background</a> 
<a class="xref" href="#coloratomobject">color (atom object)</a> 
<a class="xref" href="#colorbondobject">color (bond object)</a> 
<a class="xref" href="#colorelement">color (element)</a> 
<a class="xref" href="#colormodelobject">color (model object)</a> 
<a class="xref" href="#colorscheme">color (scheme)</a> 
<a class="xref" href="#colormeasures">color measures</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#setusercolorscheme">set userColorScheme</a> 
<a class="xref" href="#show">show</a> </p></td></tr>
<tr name='tr_colorother'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k203">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_colorscheme'>
<td colspan="5">
<h3 >
<a id="colorscheme" name="colorscheme">color (scheme)</a>
<a id="k214"> </a></h3></td></tr>
<tr name='tr_colorscheme'>
<td>
<i >Jmol uses a variety of 
<a class="xref" href="http://jmol.sourceforge.net/jscolors/" target="_blank">predefined</a> and user-defined color schemes. The following commands can be used to directly map those schemes to atoms and shapes based on a given range of values. In each case, the default property color scheme and range is set. So, for example, if 
<b>color {*} property temperature "rwb" range 0 100 </b> is issued, then after that one can use 
<b>color {*} property_xxx</b> , and color scheme RWB will be used again with the range 0 to 100. Note that using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#color__">color()</a> function you can design your own color schemes based on progressions of RGB or HSL (hue/saturation/lightness).
<br />
<br /></i ></td></tr>
<tr name='tr_colorscheme'>
<td valign="top">
<a name="color__scheme__"colorschemename"" id="k216"> </a>color "colorSchemeName" RANGE [min] [max]</td ></tr>
<tr name='tr_colorscheme'>
<td>
<blockquote>
<p >
<i >Sets the working color scheme and range for determining correlations between property values and color values. The names "user" and its reverse, "resu", refer to a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setusercolorscheme">user-defined color scheme</a>. The RANGE values indicate what parameter values correspond to the first and last color values. The range values are required unless they have been set already in a previous command such as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface</a>. Once set, calculations such as 
<b>x = {atomno=3}.partialcharge.color</b> return a color value based on this color scheme and range. You can implement any number of your own color schemes simply by including "=" after the name and adding a set of hexadecimal color values: 
<b>color "myScheme=[x00FF00] [xFFFF00] [x00FFFF] [x0000FF]"</b>, for example. Then, 
<b>color atoms property atomno "myScheme"</b> will do just that. You can redefine the Jmol coloring schemes as well simply by using "jmol=[x......]...." or "rasmol=[x......]...." as the name. To return these to their default values, include the equal sign but no values. Four additional built-in color schemes include "byElement_Jmol", "byElement_Rasmol", "byResidue_Jmol" (corresponding to 
<b>color shapely</b>), and "byResidue_Rasmol" (corresponding to 
<b>color amino</b>). Setting the range has no effect on these color schemes, as they are intended to correspond with specific elements (elemno) and residues (groupID). You can implement your own byElement or byResidue color schemes simply by using those keywords at the beginning of a color scheme definition. byElement color schemes start with "unknown", then run through the periodic table; byResidue color schemes start with "no group", then the amino acids and nucleic acids in order: ALA, ARG, ASN, ASP, CYS, GLN, GLU, GLY, HIS, ILE, LEU, LYS, MET, PHE, PRO, SER, THR, TRP, TYR, VAL, ASX, GLX, UNK, A, +A, G, +G, I, +I, C, +C, T, +T, U, +U.</i ></p ></blockquote></td></tr> 
<tr name='tr_colorscheme'>
<td valign="top">
<a name="color__scheme__range" id="k217"> </a>color {atomSet} PROPERTY x "colorSchemeName" RANGE [min] [max]</td ></tr>
<tr name='tr_colorscheme'>
<td>
<blockquote>
<p >
<i >Colors a selection of atoms based on a standard 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomproperties">atom property</a> such as temperature or occupancy using a specific color scheme and range.</i ></p ></blockquote></td></tr> 
<tr name='tr_colorscheme'>
<td valign="top">
<a name="color__scheme__range" id="k218"> </a>color {atomSet} PROPERTY_x "colorSchemeName" RANGE [min] [max]</td ></tr>
<tr name='tr_colorscheme'>
<td>
<blockquote>
<p >
<i >Colors a selection of atoms based on an assigned property using a specific color scheme and range.</i ></p ></blockquote></td></tr> 
<tr name='tr_colorscheme'>
<td valign="top">
<a name="color__scheme__shape_property_x_"colorschemename"" id="k219"> </a>color shape PROPERTY x "colorSchemeName" RANGE [min] [max]</td ></tr>
<tr name='tr_colorscheme'>
<td>
<blockquote>
<p >
<i >Colors a shape, either identified by type (CARTOON, ISOSURFACE, etc.) or ID ($isosurface1) based on a standard 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomproperties">atom property</a> such as temperature or occupancy using a specific color scheme and range. For shapes that inherit atom color, coloring is carried out on the currently selected set of atoms. (Note that for this command to work for an isosurface, it must already have been 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurfacemapcolormappingdataset">mapped</a>. It is better to use the 
<b>isosurface map</b> command for these purposes, as it does not depend upon the surface already having been mapped.)</i ></p ></blockquote></td></tr> 
<tr name='tr_colorscheme'>
<td valign="top">
<a name="color__scheme__shape_property_x_"colorschemename"" id="k220"> </a>color shape PROPERTY_x "colorSchemeName" RANGE [min] [max]</td ></tr>
<tr name='tr_colorscheme'>
<td>
<blockquote>
<p >
<i >Colors a shape, either identified by type (CARTOON, ISOSURFACE, etc.) or ID ($isosurface1) based on an assigned property using a specific color scheme and range. For shapes that inherit atom color, coloring is carried out on the currently selected set of atoms. (Note that for this command to work for an isosurface, it must already have been 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurfacemapcolormappingdataset">mapped</a>. It is better to use the 
<b>isosurface map</b> command for these purposes, as it does not depend upon the surface already having been mapped.)</i ></p ></blockquote></td></tr> 
<tr name='tr_colorscheme'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_colorscheme'>
<td colspan="5">
<p>
<a class="xref" href="#background">background</a> 
<a class="xref" href="#coloratomobject">color (atom object)</a> 
<a class="xref" href="#colorbondobject">color (bond object)</a> 
<a class="xref" href="#colorelement">color (element)</a> 
<a class="xref" href="#colormodelobject">color (model object)</a> 
<a class="xref" href="#colorother">color (other)</a> 
<a class="xref" href="#colormeasures">color measures</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#setusercolorscheme">set userColorScheme</a> 
<a class="xref" href="#show">show</a> </p></td></tr>
<tr name='tr_colorscheme'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k215">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_colormeasures'>
<td colspan="5">
<h3 >
<a id="colormeasures" name="colormeasures">color measures</a>
<a id="k221"> </a></h3></td></tr>
<tr name='tr_colormeasures'>
<td>
<i >Colors the measurement numbers and dotted lines. In Jmol 10.2, "color measures" change all measurement colors at once. In version 11.0, "color measures" acts on all future measures, allowing for selective coloring of measurements. Thus, "color measure" in 11.0 acts on (a) any measures currently with no color assigned and (b) on any future measures. If measurement colors have already been set, then "color measures NONE" needs to be invoked to turn off measurement colors prior to resetting them.
<br />
<br /></i ></td></tr>
<tr name='tr_colormeasures'>
<td valign="top">
<a name="color_measures_._colorrgb" id="k224"> </a>color measures 
<a class='def' href='#d223' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a></td ></tr> 
<tr name='tr_colormeasures'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_colormeasures'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_colormeasures'>
<td colspan="5">
<p>
<a class="xref" href="#background">background</a> 
<a class="xref" href="#coloratomobject">color (atom object)</a> 
<a class="xref" href="#colorbondobject">color (bond object)</a> 
<a class="xref" href="#colorelement">color (element)</a> 
<a class="xref" href="#colormodelobject">color (model object)</a> 
<a class="xref" href="#colorother">color (other)</a> 
<a class="xref" href="#colorscheme">color (scheme)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#setusercolorscheme">set userColorScheme</a> 
<a class="xref" href="#show">show</a> </p></td></tr>
<tr name='tr_colormeasures'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k222">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_compare'>
<td colspan="5">
<h3 class=h3new>
<a id="compare" name="compare">compare</a>
<a id="k225"> </a> 
<br />
<span class=new>(v. 12.0 -- new)</span></h3></td></tr>
<tr name='tr_compare'>
<td>
<i >Compares two models and optionally reorients the first model relative to the second based on a given atom-atom coordinate pairing or quaternion-based group-group orientation pairing. References to the atom-atom correlation algorithm can be found in the literature [1] and [2]. Quaternion-based orientation pairing is an unpublished technique specific to Jmol at this point. It minimizes the standard deviation of the correlated quaternion frames for groups in the two models using spherical averaging. (Quaternion comparison is based on minimizing the difference in 
<i>orientation</i>, not 
<i>position</i>. Results of this option depend upon the setting of 
<b>set quaternionFrame</b>).
<br>
<br>Except for the BONDS option, by default the command does not move any atoms and just reports RMSD. A return of "NaN" indicates that the specified atom sets could not be matched because there was not a 1:1 correlation of atoms. The independent options ROTATE and TRANSLATE allow the option to do just rotation, do just center-of-mass translation, or do both. An optional number of seconds can be added and can be 0 to effect no animation. (The default is 1 second.) For example:
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" style="width:500px"> 
<b>compare {2.1} {1.1} SUBSET {*.CA}</b> </td >
<td valign="top" > reports RMSD for the comparison of two models based on alpha carbons only. </td ></tr >
<tr >
<td valign="top" > 
<b>compare {2.1} {1.1} ROTATE TRANSLATE 2.0</b> </td >
<td valign="top" > Compares the second model to the first and rotates and translates it into superposition with the first model over the course of 2 seconds.</td ></tr >
<tr >
<td valign="top" >
<b>load files "$tyrosine" "$lysergamide";frame *;
<br>compare {1.1} {2.1} BONDS "c1ccccc1CCN" rotate translate</b> </td >
<td valign="top" > flexibly fits tyrosine onto lysergamide based on the aromatic ring and C-C-N atoms only, overlaying the structures over 1 second. Note that the required initial internal bond rotations are carried out even if ROTATION and TRANSLATION are not indicated.</td ></tr ></table > 
<br>
<br>See also the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#functionsx=fyfunctions">compare()</a> function. [1] 
<a class="xref" href="http://www.opticsinfobase.org/viewmedia.cfm?uri=josaa-4-4-629&seq=0" target="_blank">Berthold K. P. Horn, "Closed-form solution of absolute orientation using unit quaternions" J. Opt. Soc. Amer. A, 1987, Vol. 4, pp. 629-64.</a> [2] G. R. Kramer, "Superposition of Molecular Structures Using Quaternions" Molecular Simulation, 1991, Vol. 7, pp. 113-119.
<br />
<br /></i ></td></tr>
<tr name='tr_compare'>
<td valign="top">
<a name="compare_subset" id="k227"> </a>compare {model1} {model2} SUBSET {atomSet} ATOMS [paired atom list]</td ></tr>
<tr name='tr_compare'>
<td>
<blockquote>
<p >
<i >Compares the specified subset of atoms of two models, minimizing the RMSD of paired atom coordinates. If the SUBSET option is not specified, the models are matched atom-for-atom based on "SPINE" atoms (*.CA, *.N, *.C for proteins; *.P, *.O3*, *.O5*, *.C3*, *.C4*, *.C5 for nucleic acids). The keyword ATOMS is optional and may be followed by any number of specific pairs of atom sets to be correlated. For example, 
<b>compare {2.1} {1.1} SUBSET {*.CA} ATOMS {10-20} {50-60} {30-40} {20-30} ROTATE TRANSLATE</b> will correlate the positions of alpha carbon atoms in groups 10-20 and 30-40 of model 2.1 with corresponding atoms in groups 50-60 and 20-30 of model 1.1 and move all atoms in model 2.1 in the process. The result of this atom-atom pairing comparison is essentially the same as the PyMol pair_fit command, though easier to implement and using an exact form of the structure-structure correlation rather than an iterative process.</i ></p ></blockquote></td></tr> 
<tr name='tr_compare'>
<td valign="top">
<a name="compare_smarts_or_smiles" id="k230"> </a>compare {model1} {model2} SMARTS or SMILES "smartsString"</td ></tr>
<tr name='tr_compare'>
<td>
<blockquote>
<p >
<i >This option allows the alignment of two structures based on SMILES or SMARTS atom matching. The basic idea is to use a SMILES (whole molecule) or SMARTS (substructure) description to find the atoms in one structure that correlate one-for-one with atoms in the second structure, then find the rotation and translation that best aligns them. </i ></p ></blockquote></td></tr> 
<tr name='tr_compare'>
<td valign="top">
<a name="compare_[array_of_coordinates]" id="k231"> </a>compare {atomSet} [array of coordinates]</td ></tr>
<tr name='tr_compare'>
<td>
<blockquote>
<p >
<i >Compares a set of atom coordinates to a corresponding ordered set of points.</i ></p ></blockquote></td></tr> 
<tr name='tr_compare'>
<td valign="top">
<a name="compare_atoms" id="k232"> </a>compare {atomSet} ATOMS {subset1} [coords1] {subset2} [coords2]. . .</td ></tr>
<tr name='tr_compare'>
<td>
<blockquote>
<p >
<i >Compares a subset of atom coordinates to a corresponding ordered set of points.</i ></p ></blockquote></td></tr> 
<tr name='tr_compare'>
<td valign="top">
<a name="compare_bonds" id="k233"> </a>
<span class=new>compare {model1} {model2} BONDS "smartsString"</span></td ></tr>
<tr name='tr_compare'>
<td>
<blockquote>
<p >
<i >
<span class=new>The BONDS option does a flexible fit by first constructing a list of matching dihedrals based on the SMARTS (substructure) string, rotating the bonds into position, then doing a COMPARE operation based on the matching atoms. The preliminary rotation is carried out even if ROTATE and TRANSLATE are not present. In the case of 
<b>compare {1.1} {2.1} BONDS "c1ccccc1CCN"</b>, the initial internal rotation can be done in a prelminary step using the following command: 
<b>rotate branch @{compare({1.1},{2.1},"c1ccccc1CCN","BONDS")} 0</b>. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#rotate_branch">rotate BRANCH</a> for details.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_compare'>
<td valign="top">
<a name="compare_orientations" id="k228"> </a>compare {model1} {model2} ORIENTATIONS [paired atom list]</td ></tr>
<tr name='tr_compare'>
<td>
<blockquote>
<p >
<i >Compares the specified subset of atoms of two models, minimizing the RMSD of paired group quaternion orientations. If no other parameters are included, the models are matched group for group based on the current setting of 
<b>quaternionFrame</b>. The keyword ORIENTATIONS may be followed by any number of specific pairs of atom sets to be correlated. For example, 
<b>set quaternionFrame "C"; compare {2.1} {1.1} QUATERNIONS {10-20 or 30-40} {50-60 or 80-90} ROTATE TRANSLATE</b> will correlate the orientations of alpha carbon atoms in groups 10-20 and 30-40 of model 2.1 with corresponding orientations in groups 50-60 and 80-90 of model 1.1 and move all atoms in model 2.1 in the process. The result of this orientation pairing comparison gives the best fit of orientations and the best translation, but not necessarily the best rotation to fit coordinate positions. The ORIENTATION option has no corresponding PyMol command.</i ></p ></blockquote></td></tr> 
<tr name='tr_compare'>
<td valign="top">
<a name="compare_orientations" id="k229"> </a>compare {model1} {model2} ORIENTATIONS [paired quaternion array list]</td ></tr>
<tr name='tr_compare'>
<td>
<blockquote>
<p >
<i >The ORIENTATION option allows for explicit comparison of quaternion arrays rather than atom lists. The result is independent of the setting of 
<b>quaternionFrame</b>. These arrays can be specified in terms of variables. For example: 
<b>qset1 = quaternion({10-20:A/1.1}); qset2 = quaternion({20-30:D/2.1}); compare {2.1} {1.1} ORIENTATIONS @qset2 @qset1</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_compare'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k226">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_configuration'>
<td colspan="5">
<h3 >
<a id="configuration" name="configuration">configuration or conformation or config</a>
<a id="k234"> </a></h3></td></tr>
<tr name='tr_configuration'>
<td>
<i >File types PDB, mmCIF, and CIF allow for the designation of certain atoms to be in "alternative locations" or in "disorder groups". This leads to two or more possible structures. While full treatment of this issue is not possible, Jmol can display the different possible "configurations" described in these files. for PDB and mmCIF files. This command selects the speficied configration (but does not [#.restrict] or [#.display] it, and also resets all biomolecular shapes (cartoons, traces, etc.) to use the values of that configuration. See also the atom property 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomproperties">configuration</a>, which allows selection of configurations without updating shapes . 
<br />
<br /></i ></td></tr>
<tr name='tr_configuration'>
<td valign="top">
<a name="configuration_[configuration_number]" id="k236"> </a>configuration [configuration number]</td ></tr> 
<tr name='tr_configuration'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k235">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_connect'>
<td colspan="5">
<h3 class=h3new>
<a id="connect" name="connect">connect</a>
<a id="k237"> </a> 
<br />
<span class=new>(v. 14.2)</span></h3>   
<a class="textParam" href="#connectminimumandmaximumdistances">[minimum and maximum distances]</a>
<br />   
<a class="textParam" href="#connectsourceandtargetatomsets">[source and target atom sets]</a>
<br />   
<a class="textParam" href="#connectbondtype">[bond type]</a>
<br />   
<a class="textParam" href="#connectradiusoption">[radius option]</a>
<br />   
<a class="textParam" href="#connectcoloroption">[color option]</a>
<br />   
<a class="textParam" href="#connectmodify/createoption">[modify/create option]</a>
<br />
<br /></td></tr>
<tr name='tr_connect'>
<td>
<i >The 
<b>connect</b> command allows real-time bond manipulation, allowing the user or application to connect and disconnect specific atom sets. The general syntax is as follows: 
<br> 
<br>
<b>connect [minimum and maximum distances] [source and target atom sets] [bond type] [radius option] [color option] [modify/create option] </b> 
<br> 
<br>(
<b>connect</b> by itself deletes all bonds and then creates bonds based on Jmol default bond-generating algorithms, all as single bonds, without respect to what bonding patterns might have been indicated in the model file.)
<br />
<br />
<b>
<a name="connectminimumandmaximumdistances">[minimum and maximum distances]</a></b>    
<a href="#connect">back</a>
<br />
<br /> Distances are given in Angstroms, either as decimals or integers. If only one distance parameter is given, it represents a maximum distance. If neither the minimum nor the maximum distance parameter is given, all connections between the two atom sets are made, regardless of distance. The option to connect atoms based on ranges of percentage of bonding/ionic radii instead of fixed values can be specified using a % sign after a distance.
<br />
<br />
<b>
<a name="connectsourceandtargetatomsets">[source and target atom sets]</a></b>    
<a href="#connect">back</a>
<br />
<br /> The source and target atom sets are embedded 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions">atom expressions</a> and therefore must be enclosed in parentheses. If the source atom set is not given, it is taken to be the currently selected atom set, "(selected)". If neither atom set is given, "(selected) (selected)" is assumed. The atom expression "_1" in the second selection set signifies "the atom selected in the first set". Thus, it is possible to select something like 
<b>(_N) (_O and not within(chain, _1))</b> -- meaning "all nitrogens and all oxygens not in the same chain as the selected nitrogen." Of course, this would be used with a distance qualifier.
<br />
<br />
<b>
<a name="connectbondtype">[bond type]</a></b>    
<a href="#connect">back</a>
<br />
<br /> Unless otherwise specified, connections are automatically introduced as single bonds. Any one of the following bond types may be specified: SINGLE, DOUBLE, TRIPLE, QUADRUPLE, AROMATIC, PARTIAL, PARTIALDOUBLE, HBOND, STRUT or UNSPECIFIED. In appearance, AROMATIC and PARTIALDOUBLE are identical except for which side of the bond is represented by a dashed line. PARTIAL and HBOND are both dashed, but they have different patterns, and newly created hydrogen bonds are only thin lines. Additional bond types include PARTIALTRIPLE, PARTIALTRIPLE2, AROMATICSINGLE, AROMATICDOUBLE, numeric bond order (including -1 for PARTIAL, 1.5 for AROMATIC, -1.5 for PARTIALDOUBLE, 2.5 for PARTIALTRIPLE, and -2.5 for PARTIALTRIPLE2), as well as a fully generalized set of partial bonds indicated with 
<br>
<br>connect ... partial N.M
<br>
<br>where N is the number of lines (from 1 to 5) and M is a binary mask indicating which lines are dashed: 
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >M</td >
<td valign="top" >binary</td >
<td valign="top" >meaning</td ></tr >
<tr >
<td valign="top" >1</td >
<td valign="top" >00001</td >
<td valign="top" >first line dashed</td ></tr >
<tr >
<td valign="top" >2</td >
<td valign="top" >00010</td >
<td valign="top" >second line dashed</td ></tr >
<tr >
<td valign="top" >3</td >
<td valign="top" >00011</td >
<td valign="top" >first and second lines dashed</td ></tr >
<tr >
<td valign="top" >4</td >
<td valign="top" >00100</td >
<td valign="top" >third line dashed</td ></tr >
<tr >
<td valign="top" >...</td >
<td valign="top" >...</td >
<td valign="top" >...</td ></tr >
<tr >
<td valign="top" >31</td >
<td valign="top" >11111</td >
<td valign="top" >all lines dashed</td ></tr ></table > 
<br> 
<br>So, for example, we have: 
<br> 
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >partial 1.0</td >
<td valign="top" >single</td ></tr >
<tr >
<td valign="top" >partial 1.1</td >
<td valign="top" >same as "partial"</td ></tr >
<tr >
<td valign="top" >partial 2.0</td >
<td valign="top" >double</td ></tr >
<tr >
<td valign="top" >partial 2.1</td >
<td valign="top" >same appearance as "aromatic", though not "aromatic"</td ></tr >
<tr >
<td valign="top" >partial 2.2</td >
<td valign="top" >partialDouble</td ></tr >
<tr >
<td valign="top" >partial 3.0</td >
<td valign="top" >triple</td ></tr >
<tr >
<td valign="top" >partial 3.1</td >
<td valign="top" >partialTriple</td ></tr >
<tr >
<td valign="top" >partial 3.4</td >
<td valign="top" >parialTriple2</td ></tr ></table >
<br />
<br />
<b>
<a name="connectradiusoption">[radius option]</a></b>    
<a href="#connect">back</a>
<br />
<br /> Addition of the keyword "radius" followed by a distance in angstroms allows definition of the radius of a modified or newly created bond. If the modify/create option is absent, then "modify" is assumed; if the bond type is absent, then bonds of any type are set, but their bond type is not changed.
<br />
<br />
<b>
<a name="connectcoloroption">[color option]</a></b>    
<a href="#connect">back</a>
<br />
<br /> Addition of a color name or designation optionally along with the keyword "translucent" or "opaque" allows definition of the color and/or translucency of a modified or newly created bond. If the modify/create option is absent, then "modify" is assumed; if the bond type is absent, then bonds of any type are set.
<br />
<br />
<b>
<a name="connectmodify/createoption">[modify/create option]</a></b>    
<a href="#connect">back</a>
<br />
<br /> Four additional mutually exclusive options relate to what sort of connections are made. The default when a radius or color option is present is "Modify"; otherwise the default is "ModifyOrCreate". These include: 
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>Create</b> </td >
<td valign="top" > Only new bonds will be created. If a bond of any type already exists between two matching atoms, it will not be affected.</td ></tr >
<tr >
<td valign="top" >
<b>Modify</b> </td >
<td valign="top" > Only pre-existing bonds will be modified. No new bonds will be created. </td ></tr >
<tr >
<td valign="top" >
<b>ModifyOrCreate</b> </td >
<td valign="top" > If the connection fits the parameters, it will be made. Bonds already present between these atoms will be replaced.</td ></tr >
<tr >
<td valign="top" > 
<b>Delete</b> </td >
<td valign="top" > Delete the specified connections.</td ></tr ></table >
<br />
<br /></i ></td></tr> 
<tr name='tr_connect'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('.connect')">in new window using caffeine.xyz</td></tr>
<tr name='tr_connect'>
<td>
<table cellpadding="10">
<tr>
<td class="example"># two ways to link atom #1 with atom#2
<br /> connect (atomno=1) (atomno=2) DOUBLE 
<br /> select atomno=1,atomno=2; connect (selected)
<br /> 
<br /># connect all carbons with hydrogens that are within the range 1.0 to 1.2 angstroms and are not already connected
<br />connect 1.0 1.2 (carbon) (hydrogen) PARTIAL CREATE
<br /> 
<br /># change all bonds to single bonds
<br />connect (all) (all) SINGLE MODIFY
<br /> 
<br /># connect every atom with every other atom that is within 1.5 angstroms whether it is connected already or not
<br />connect 1.5 (all) (all) ModifyOrCreate
<br /> 
<br /># delete all bonds WITHIN a selected atom set
<br />connect (selected) (selected) DELETE 
<br /> 
<br /># delete all bonds TO a selected atom set
<br />connect (selected) (not selected) DELETE</td></tr></table></td></tr>
<tr name='tr_connect'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_connect'>
<td colspan="5">
<p>
<a class="xref" href="#bondorder">bondorder</a> 
<a class="xref" href="#hbonds">hbonds</a> 
<a class="xref" href="#setbondstyles">set (bond styles)</a> 
<a class="xref" href="#setfilesandscripts">set (files and scripts)</a> 
<a class="xref" href="#ssbonds">ssbonds</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_connect'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k238">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_console'>
<td colspan="5">
<h3 >
<a id="console" name="console">console</a>
<a id="k239"> </a></h3></td></tr>
<tr name='tr_console'>
<td>
<i >Throws up a console window from which a user can enter script commands and monitor the messages returned by Jmol as, for example, from the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#show">show</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#getproperty">getProperty</a> command. JSmol note: 
<b>&lt;div id=JmolApplet0_console>&lt;/div></b> sets a place on the page for the JSmol console.
<br />
<br /></i ></td></tr> 
<tr name='tr_console'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k240">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_contact'>
<td colspan="5">
<h3 >
<a id="contact" name="contact">contact</a>
<a id="k241"> </a></h3></td></tr>
<tr name='tr_contact'>
<td>
<i >The 
<b>contact</b> command is a powerful command capable of displaying a wide range of contact surfaces in stunning detail relating to van der Waals interactions, hydrogen bonds, and clashes. The general format of the 
<b>contact</b> command is 
<br>
<br>
<b>contact ID "id" {atomSet1} {atomSet2} [contactOptions] [colorOption]</b>
<br>
<br> The first atom set is the "target" atom set, typically a ligand or a subset of a protein. The target atom set is required. Its Van der Waals radius will be used. The second atom set is the interacting atom set and is optional, defaulting to "all other atoms". For example: 
<b>contact {ligand}</b> or 
<b>contact {ligand} {oxygen or nitrogen}</b>. The interacting atom set Van der Waals radius can be adjusted using absolute (
<b>1.2</b>), percentage (
<b>120%</b>), or Angstrom offset from 100% (
<b>+1.2</b>) relative to the Van der Waals radius of atomSet2. Several contact options are available and are listed below. Color options are similar to those available for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurfaces</a>. The 
<b>color density</b> option produces a result roughly similar to 
<a class="xref" href="http://kinemage.biochem.duke.edu/software/probe.php" target="_blank">Kinemage Probe</a>. Examples can be found at 
<a class="xref" href="http://stolaf.edu/people/hansonr/jmol/contact/gordon.htm" target="_blank">http://stolaf.edu/people/hansonr/jmol/contact/gordon.htm</a> and 
<a class="xref" href="http://stolaf.edu/people/hansonr/jmol/contact/ligand.htm" target="_blank">http://stolaf.edu/people/hansonr/jmol/contact/ligand.htm</a>. 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > </td >
<td valign="top" >
<center>
<img src="img/contact1b.jpg" alt="" /></center> </td >
<td valign="top" >
<center>
<img src="img/contact1.jpg" alt="" /></center> </td >
<td valign="top" >
<center>
<img src="img/contact2.jpg" alt="" /></center> </td ></tr >
<tr >
<td valign="top" > </td >
<td valign="top" >
<img src="img/contact3.jpg" alt="" /> </td >
<td valign="top" >
<img src="img/contact5.jpg" alt="" /> </td >
<td valign="top" >
<img src="img/contact4.jpg" alt="" /> </td ></tr ></table >
<br>
<br>
<b>contact options</b>
<br>
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > hbond, vdw, clash </td >
<td valign="top" > just hydrogen bonds, van der Waals near-misses, or van der Waals overlaps that are not hydrogen bonds (clashes). </td ></tr >
<tr >
<td valign="top" > NCI </td >
<td valign="top" > 
<a class="xref" href="http://pubs.acs.org/doi/abs/10.1021/ct100641a" target="_blank">NCIPlot</a> promolecular calculation results.</td ></tr >
<tr >
<td valign="top" > surface </td >
<td valign="top" > van der Waals surface around the atom set colored by contact proximity. </td ></tr >
<tr >
<td valign="top" > cap </td >
<td valign="top" > similar to 
<b>surface</b>, but with clashing sections capped off. (Specifically designed for prototyping.) </td ></tr >
<tr >
<td valign="top" > trim </td >
<td valign="top" > similar to 
<b>surface</b>, but trimmed to only display van der Waals radius overlaps. </td ></tr >
<tr >
<td valign="top" > full </td >
<td valign="top" > same as 
<b>trim</b> but with both overlapping van der Waals surfaces displayed. </td ></tr >
<tr >
<td valign="top" > plane (default) </td >
<td valign="top" > approximately planar circles of the voronoi surface between the groups trimmed to display only the desired area. Contacts are only generated for atoms in different molecules or more than three bonds apart.</td ></tr >
<tr >
<td valign="top" > connect </td >
<td valign="top" > cigar-shaped objects that connect one interacting atom with another. </td ></tr ></table >
<br />
<br /></i ></td></tr> 
<tr name='tr_contact'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k242">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_continue'>
<td colspan="5">
<h3 >
<a id="continue" name="continue">continue</a>
<a id="k243"> </a></h3></td></tr>
<tr name='tr_continue'>
<td>
<i >See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#break">break</a>.
<br />
<br /></i ></td></tr> 
<tr name='tr_continue'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_continue'>
<td colspan="5">
<p>
<a class="xref" href="#break">break</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#catch">catch</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#else">else</a> 
<a class="xref" href="#elseif">elseIf</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#return">return</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#try">try</a> 
<a class="xref" href="#var">var</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_continue'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k244">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_data'>
<td colspan="5">
<h3 >
<a id="data" name="data">data</a>
<a id="k245"> </a></h3>   
<a class="textParam" href="#datasettingatomproperties">Setting atom properties</a>
<br />
<br /></td></tr>
<tr name='tr_data'>
<td>
<i >The 
<b>data</b> command allows data to be introduced in-line or via a variable. The command consists of two statements, 
<b>data "label"</b> and 
<b>end "label"</b>, between which the data are presented on as many lines as desired. "label" may be any string, though strings starting with "property_" are special (see below). Quotes must be used in both the 
<b>data</b> line and the 
<b>end</b> line. The first word of the label defines the data type, but the label itself may be any number of words. If the data type is "model" as in the following example, then the data is interpreted as an in-line model (and loaded using the default lattice, if crystallographic). If the data type is "append", then the data is interpreted as a model, and the model is appended either into a new frame or into the last existing frame, based on the setting of 
<b>set appendNew</b>. Additional data types may be loaded and later 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#show">shown</a>, but they will be ignored by Jmol.
<b>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >background red;
<br>data "model example"
<br>2
<br>testing
<br>C 1 1 1
<br>O 2 2 2
<br>end "model example";show data</td ></tr ></table ></b>
<br>Note that the 
<b>data</b> statement itself should not include a semicolon at the end. In the specific case of a model file, if it is desired to use no new-line characters, you can start the data with | (vertical bar) and then use a vertical bar to separate all lines: 
<b>data "model example"|2|testing|C 1 1 1|O 2 2 2|end "model example";show data</b>. For this option you MUST start the data with a vertical bar immediately following the quotation mark closing the label or on the very next line. If the first character is a vertical bar or a new-line character, it is not part of the model. To include data representing more than one file, first define a data separator using 
<b>set dataSeparator</b>, for example, 
<b>set dataSeparator "~~~"</b>. Then use that separator between data sets. The 
<b>data</b> command thus provides an alternative to the JavaScript Jmol.js (applet-only) 
<b>loadInline()</b> function. It can be included in any 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#script">script</a>, and commands can come before and after it for further processing. Note that model data in the system clipboard can also be pasted into the applet console or endered into the application using Edit...Paste for direct introduction into Jmol. Using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loaddata">load data</a> instead of just 
<b>data</b> you can load model data with all of the loading options of the standard LOAD command. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#show">show data</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#getproperty">getProperty data</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#load">load "@x"</a>. 
<br />
<br />
<b>
<a name="datasettingatomproperties">Setting atom properties</a></b>    
<a href="#data">back</a>
<br />
<br /> Jmol 12 Note: If you just want to assign a set of properties to a set of atoms, and you have the properties in a file as a list of numbers, you do not need the DATA command. Simply load the values straight into an atom property directly from the file: 
<br>
<br>
<b>{*}.property_xxx = load("myfile.dat")</b>
<br>
<br>Atom property data may be loaded into Jmol using the DATA command. In addition, when reading some model file types (CRYSTAL, specifically) Jmol will create property_xxx data automatically -- check the Java console after file loading to see a report of what properties were assigned. To assign properties using the DATA command, first select the atoms to which data are to be assigned. Then, to assign the data, use 
<b>DATA "property_xxx"...end "property_xxx"</b>, where "xxx" is any alphanumeric string. Properties are assigned sequentially to the currently selected atom set, and will be assigned to atoms in the selection set one after another until either the data or the atom list is exhausted. If the data are exhausted before the selected atoms, then the value 0 is recorded for each of the remaining selected atoms. In this way, if only a few atoms need data, only a few can be selected and assigned values. Properties can be checked using atom labels: (
<b>label %[property_xxx]</b>). The following special values for xxx read data into Jmol exactly as though read from a model file: atomName, atomType, coord, element, formalCharge, occupancy (0 - 100), partialCharge, temperature, valence, vanDerWaals, and vibrationVector. Any other label will be saved simply under its property name. 
<br>
<br>To read selected data that is in tab- or space-separated format (for example, from a spreadsheet), specify which column the data is in using 
<b>set propertyDataField = n</b>, (n = 1 being the first column), prior to the data command. Lines having fewer than 
<b>n</b> tokens will be ignored. If the data is fixed-column format, then 
<b>n</b> is the starting column number, and set 
<b>propertyDataColumnCount</b> to be the number of columns to assign to this field. Lines shorter than the required number of characters will be ignored. Setting 
<b>propertyDataField</b> to 0 indicates that no data field is present, and data are to be read sequentially. 
<br>
<br>Atom selection need not be contiguous. If you want to associate specific data with specific atom numbers, a column containing these atom numbers (starting with 1 for each model loaded) can be specified using 
<b>propertyAtomNumberField = m</b>. If the data is fixed-column format, then 
<b>m</b> is the starting column number, and also set 
<b>propertyAtomColumnCount</b> to be the number of columns to assign to this field. Specifying 0 for 
<b>m</b> indicates that the set of currently selected atoms should be assigned values from the data.
<br>
<br>Atom property data may also be loaded from variables. To do this, use add "@x", where x is a variable name 
<i>within</i> the quotation marks defining the first parameter of the data command: 
<b>DATA "property_partialCharge @x"</b> or 
<b>DATA "property_mydata 66 3 @x"</b>. No 
<b>end</b> line is required. The variable x should already contain a list of numbers, perhaps from using the x = 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#functions">load</a>("myfile.dat"); perhaps just by creating a string of numbers: x = "2.3 3.4 5.6 7.8...". 
<br>
<br>The 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#functions">data()</a> function also allows direct conversion of data into arrays, which can be directly stored in an atom property using, for example, 
<br>
<br>
<b>{*.CA/2.1}.temperature = data(load("mydata.dat"),6,0,3)</b>
<br>
<br>meaning, "Read the file mydata.dat and store the sixth free-format field of each line starting from the third line as the temperature of the C-alpha carbons of model 2.1." 
<br />
<br /></i ></td></tr>
<tr name='tr_data'>
<td valign="top">
<a name="data_"label"" id="k247"> </a>data "label"</td ></tr>
<tr name='tr_data'>
<td>
<blockquote>
<p >
<i >Defines a set of data in line, ending with a matching 
<b>end "label"</b>, where "label" is any string. Quotes are required. Certain labels have special meaning and are described more fully below.</i ></p ></blockquote></td></tr> 
<tr name='tr_data'>
<td valign="top">
<a name="data_"label_@x"" id="k250"> </a>data "label @x"</td ></tr>
<tr name='tr_data'>
<td>
<blockquote>
<p >
<i >Defines a set of data with the given label from a variable (variable 
<b>x</b> in this case). Quotes are required, but no 
<b>end</b> command is required.</i ></p ></blockquote></td></tr> 
<tr name='tr_data'>
<td valign="top">
<a name="data_"data2d_xxx"" id="k251"> </a>data "data2d_xxx"</td ></tr>
<tr name='tr_data'>
<td>
<blockquote>
<p >
<i >Defines a data set to be paired x,y data inline and ending with 
<b>end data2d_xxx</b>, where xxx can be any alphanumeric string.</i ></p ></blockquote></td></tr> 
<tr name='tr_data'>
<td valign="top">
<a name="data_"property_xxx_propertyatomfield_propertydatafield"" id="k253"> </a>data "property_xxx propertyAtomField propertyDataField"</td ></tr>
<tr name='tr_data'>
<td>
<blockquote>
<p >
<i >Defines an atom property based on data provided next inline and ending with 
<b>end property_xxx</b>, where xxx can be any alphanumeric string. 
<b>propertyAtomField</b> and 
<b>propertyDataField</b> are optional, and if provided override the set values for 
<b>propertyAtomField</b> and 
<b>propertyDataField</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_data'>
<td valign="top">
<a name="data_"property_xxx_propertyatomfield_propertyatomcolumncount_propertydatafield_propertydatacolumncount"" id="k252"> </a>data "property_xxx propertyAtomField propertyAtomColumnCount propertyDataField propertyDataColumnCount"</td ></tr>
<tr name='tr_data'>
<td>
<blockquote>
<p >
<i >Defines an atom property based on data provided next inline and ending with 
<b>end property_xxx</b>, where xxx can be any alphanumeric string. 
<b>propertyAtomField</b>, 
<b>propertyAtomColumnCount</b>, 
<b>propertyDataField</b>, and 
<b>propertyDataColumnCount</b> override set values for these parameters.</i ></p ></blockquote></td></tr> 
<tr name='tr_data'>
<td valign="top">
<a name="data_clear" id="k248"> </a>data CLEAR</td ></tr>
<tr name='tr_data'>
<td>
<blockquote>
<p >
<i >Clears the data table.</i ></p ></blockquote></td></tr> 
<tr name='tr_data'>
<td valign="top">
<a name="data_"element_vdw"_6_1.7;_7_1.8_end_"element_vdw"" id="k249"> </a>data "element_vdw" 6 1.7; 7 1.8 END "element_vdw"</td ></tr>
<tr name='tr_data'>
<td>
<blockquote>
<p >
<i >Defines the USER set of van der Waals radii on an element-by element basis. Entries may be separated by semicolons or entered one per line. . In the example given here, carbon (atomic number 6) is given a radius of 1.7, and nitrogen (atomic number 7) is given a radius of 1.8. </i ></p ></blockquote></td></tr> 
<tr name='tr_data'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_data'>
<td colspan="5">
<p>
<a class="xref" href="#setmisc">set (misc)</a> 
<a class="xref" href="#spacefill">spacefill</a> </p></td></tr>
<tr name='tr_data'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k246">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_default'>
<td colspan="5">
<h3 >
<a id="default" name="default">default</a>
<a id="k254"> </a></h3></td></tr>
<tr name='tr_default'>
<td>
<i >See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#switch">switch</a>.
<br />
<br /></i ></td></tr> 
<tr name='tr_default'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_default'>
<td colspan="5">
<p>
<a class="xref" href="#jmolcommandsyntax">[Jmol Command Syntax]</a> 
<a class="xref" href="#jmolmath">[Jmol Math]</a> 
<a class="xref" href="#jmolparameters">[Jmol Parameters]</a> 
<a class="xref" href="#atomexpressions">[atom expressions]</a> 
<a class="xref" href="#atomproperties">[atom properties]</a> 
<a class="xref" href="#functions">[functions]</a> 
<a class="xref" href="#break">break</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#catch">catch</a> 
<a class="xref" href="#continue">continue</a> 
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#else">else</a> 
<a class="xref" href="#elseif">elseIf</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#message">message</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#return">return</a> 
<a class="xref" href="#set">set</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#try">try</a> 
<a class="xref" href="#var">var</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_default'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k255">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_define'>
<td colspan="5">
<h3 >
<a id="define" name="define">define or @</a>
<a id="k256"> </a></h3></td></tr>
<tr name='tr_define'>
<td>
<i >Defines the specified variable to the the atoms selected by the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions">atom expression</a>. In general, definitions are "static" in the sense that when they are generated with the 
<b>define</b> command, they represent the matching set of atoms indefinitely. However, if "DYNAMIC_" is at the beginning of the variable name, as, for example, "DYNAMIC_myatoms", then whenever that variable is used it is recalculated. (When used, the prefix "DYNAMIC_" should be dropped.) 
<br>
<br>IMPORTANT NOTE: The 
<b>define</b> command should be used with some discretion. If you should define a term that later becomes a reserved keyword to any command in any future version of Jmol, your page may not be compatible with that future version. A simple way to avoid this situation is to put a tilde (~) in front of any definition you make. 
<b>Do not use a leading underscore (_)</b>, as there are many "hidden" reserved definitions that start with that character. 
<br />
<br /></i ></td></tr>
<tr name='tr_define'>
<td valign="top">
<a name="define_._variablename" id="k260"> </a>define 
<a class='def' href='#d258' title='a (string)'>[variable-name]</a> 
<a class='def' href='#d259' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr> 
<tr name='tr_define'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_define'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('.define')">in new window using 1blu.pdb</td></tr>
<tr name='tr_define'>
<td>
<table cellpadding="10">
<tr>
<td class="example">define ~mygroup within(5.0,[FS4]102)
<br />select ~mygroup
<br />color atoms white</td></tr></table></td></tr>
<tr name='tr_define'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples/select.htm">select.htm</a> </td></tr>
<tr name='tr_define'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_define'>
<td colspan="5">
<p>
<a class="xref" href="#initialize">initialize</a> 
<a class="xref" href="#refresh">refresh</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#restore">restore</a> 
<a class="xref" href="#save">save</a> 
<a class="xref" href="#unset">unset</a> 
<a class="xref" href="#zap">zap</a> </p></td></tr>
<tr name='tr_define'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k257">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_delay'>
<td colspan="5">
<h3 >
<a id="delay" name="delay">delay</a>
<a id="k261"> </a></h3></td></tr>
<tr name='tr_delay'>
<td>
<i >Causes the screen to refresh and the script to stop executing for the specified number of seconds. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_delaymaximumms">set delayMaximumMs</a>. Note that the delay command is skipped when executed within a function that is returning a value to a variable, as in 
<br>
<br>
<b>function d() { delay 1 }
<br>print d()
<br></b>
<br>
<br />
<br /></i ></td></tr>
<tr name='tr_delay'>
<td valign="top">
<a name="delay_._time_delay" id="k265"> </a>delay 
<a class='def' href='#d264' title='in seconds -- (integer|decimal, >=0)'>[time-delay]</a></td ></tr> 
<tr name='tr_delay'>
<td valign="top">
<a name="delay_.on" id="k263"> </a>delay on</td ></tr> 
<tr name='tr_delay'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_delay'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_delay'>
<td colspan="5">
<p>
<a class="xref" href="#immediate!">[immediate (!)]</a> 
<a class="xref" href="#exit">exit</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#loop">loop</a> 
<a class="xref" href="#pause">pause</a> 
<a class="xref" href="#quit">quit</a> 
<a class="xref" href="#resume">resume</a> 
<a class="xref" href="#step">step</a> </p></td></tr>
<tr name='tr_delay'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k262">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_delete'>
<td colspan="5">
<h3 class=h3new>
<a id="delete" name="delete">delete</a>
<a id="k266"> </a> 
<br />
<span class=new>(v. 14.2)</span></h3>
<div class="chimenote">
<i>Note:</i> The delete command does not require { ... } around Jmol atom expressions.
<br />
<br /></div></td></tr>
<tr name='tr_delete'>
<td>
<i >The DELETE command deletes atoms or identified objects. 
<b>DELETE</b> by itself deletes all atoms, similarly to the way 
<b>select</b> by itself selects all atoms.
<br />
<br /></i ></td></tr>
<tr name='tr_delete'>
<td valign="top">
<a name="delete_$" id="k270"> </a>delete $ [object id]</td ></tr>
<tr name='tr_delete'>
<td>
<blockquote>
<p >
<i >Deletes the specified objects (from 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface</a>, etc. using the ID parameter). Wildcards may used. For example, 
<b>delete $d*</b> will delete all identified objects starting with the letter d. 
<b>delete $*</b> deletes all such objects.</i ></p ></blockquote></td></tr> 
<tr name='tr_delete'>
<td valign="top">
<a name="delete_$" id="k271"> </a>delete $ [save id]</td ></tr>
<tr name='tr_delete'>
<td>
<blockquote>
<p >
<i >Deletes the specified information saved with the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#save">save</a> command, such as "Orientation_o1". All information matching either at the beginning (delete $Orientation_) or the general name (delete $o1) will be deleted from memory. (
<span class="newv">Jmol 14.2</span>)</i ></p ></blockquote></td></tr> 
<tr name='tr_delete'>
<td valign="top">
<a name="delete_._atom_expression" id="k269"> </a>delete 
<a class='def' href='#d268' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_delete'>
<td>
<blockquote>
<p >
<i >Deletes the specified atoms. For example: 
<b>DELETE hydrogen</b> or 
<b> DELETE atomno > 30 </b>. Note that 
<b>delete</b> by itself deletes all atoms, similarly to the way 
<b>select</b> by itself selects all atoms.</i ></p ></blockquote></td></tr> 
<tr name='tr_delete'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_delete'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_delete'>
<td colspan="5">
<p>
<a class="xref" href="#cache">cache</a> 
<a class="xref" href="#calculate">calculate</a> 
<a class="xref" href="#hbonds">hbonds</a> 
<a class="xref" href="#setfilesandscripts">set (files and scripts)</a> 
<a class="xref" href="#show">show</a> </p></td></tr>
<tr name='tr_delete'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k267">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_depth'>
<td colspan="5">
<h3 >
<a id="depth" name="depth">depth</a>
<a id="k272"> </a></h3></td></tr>
<tr name='tr_depth'>
<td>
<i > Slab and Depth together control the percentage of the molecule to be displayed based on clipping planes. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#slab">slab</a>.
<br />
<br /></i ></td></tr> 
<tr name='tr_depth'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('.depth')">in new window using 1crn.pdb</td></tr>
<tr name='tr_depth'>
<td>
<table cellpadding="10">
<tr>
<td class="example">slab 50; depth 0;slab on; # show the back half of the molecule
<br />slab 100;depth 50; slab on;# show the front half of the molecule
<br />slab 75; depth 25;slab on; # show middle 50% of the molecule
<br />slab 50;depth 50;slab on; # show a plane that is 1 pixel deep</td></tr></table></td></tr>
<tr name='tr_depth'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_depth'>
<td colspan="5">
<p>
<a class="xref" href="#slab">slab</a> </p></td></tr>
<tr name='tr_depth'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k273">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_dipole'>
<td colspan="5">
<h3 class=h3new>
<a id="dipole" name="dipole">dipole or dipoles</a>
<a id="k274"> </a> 
<br />
<span class=new>(v. 11.0 -- NEW)</span></h3>   
<a class="textParam" href="#dipoleidobjectid">ID [object id]</a>
<br />   
<a class="textParam" href="#dipolemodifyingparameters">[modifying parameters]</a>
<br />   
<a class="textParam" href="#dipolepositions">[positions]</a>
<br />
<br /></td></tr>
<tr name='tr_dipole'>
<td>
<i >The 
<b>dipole</b> command allows for the drawing of a bond or molecular dipole arrow with or without a cross near the tail. Note that without the cross, since it can be drawn from any point in molecular space to any other, a "dipole" can be used by a web page developer for a simple arrow in order point to some particular aspect of the model having nothing to do whatsoever with dipole moments.The values of each dipole can be set by the user or will be estimated using partial charge data or molecular dipole information if available in the loaded model file. Only a very crude calculation is used to estimate at least the direction of all bond dipoles. The general syntax of the
<b>dipole</b> command is as follows: 
<br> 
<br>
<b>dipole [objectID] [modifying parameters] [positions] </b> 
<br> 
<br>
<br />
<br />
<b>
<a name="dipoleidobjectid">ID [object id]</a></b>    
<a href="#dipole">back</a>
<br />
<br /> The optional identifier such as "bond1" that can be referred to in later scripts as $bond1. These words are arbitrary and if preceded by the optional keyword ID may be any string. The special identifier 
<b>BONDS</b> (without the keyword ID) refers to the entire collection of bond dipoles -- those dipoled defined specifically as between two atoms. Similarly, the special identifier 
<b>MOLECULAR</b> (without the keyword ID) is primarily for files for which molecular dipole information is available. The value and placement of this dipole can also be set using the 
<b>dipole</b> command.
<br />
<br />
<b>
<a name="dipolemodifyingparameters">[modifying parameters]</a></b>    
<a href="#dipole">back</a>
<br />
<br /> The dipole is defined using a small set of parameters. These include:
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>CROSS</b>
<br>
<b>NOCROSS</b></td >
<td valign="top" > include (default) or do not include a 3D cross near the tail of the arrow. </td ></tr >
<tr >
<td valign="top" >
<b>DELETE</b></td >
<td valign="top" >Deletes the specified dipole if an identifier is given or all dipoles if no identifier is given; not used with any other parameters.</td ></tr >
<tr >
<td valign="top" >
<b>WIDTH x.xx</b></td >
<td valign="top" >The width of the dipole in Angstroms. The default value is 0.005 Angstroms.</td ></tr >
<tr >
<td valign="top" >
<b>OFFSET x.xx</b>
<br>
<b>OFFSET n</b> </td >
<td valign="top" > Dipoles are by default centered between the two endpoints. The OFFSET value sets the offset of the dipole from this position along the axis of its endpoints. In Angstroms if a decimal number is given; in percent of the distance between the two endpoints if an integer is used. </td ></tr >
<tr >
<td valign="top" >
<b>OFFSETSIDE x.xx</b></td >
<td valign="top" >The offset of the dipole in Angstroms perpendicular to the axis of its endpoints. The default value is 0.4 Angstroms for atom-based dipoles and 0 for the molecular dipole.</td ></tr >
<tr >
<td valign="top" >
<b>VALUE x.xxx</b> </td >
<td valign="top" > A decimal number indicates the value of the dipole. Overall scaling is accomplished either by setting this number or using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setmisc">set dipoleScale</a>. The VALUE keyword is optional.</td ></tr ></table >
<br />
<br />
<b>
<a name="dipolepositions">[positions]</a></b>    
<a href="#dipole">back</a>
<br />
<br /> The positions of the endpoints of the dipole are set either using embedded atom expressions in parentheses, such as (atomno=1), or using a specific point in molecular space, {x y z}, either as a cartesian coordinate or a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#fractionalcoordinates">fractional unit cell coordinate</a>. If two atoms are designated, then the dipole becomes a member of the "bonds" dipole collection and can be colored with that group. If a set of atoms is indicated, the geometric center is used. Thus, (*) indicates the geometric center of the molecule.
<br />
<br /></i ></td></tr>
<tr name='tr_dipole'>
<td valign="top">
<a name="dipole_id_[object_id]" id="k277"> </a>
<span class=new>dipole ID [object id] ALL 
<a class='def' href='#d276' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></span></td ></tr>
<tr name='tr_dipole'>
<td>
<blockquote>
<p >
<i >
<span class=new>Defines a dipole based on the given subset of atoms.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_dipole'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_dipole'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_dipole'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples-11/dipole.htm">examples-11/dipole.htm</a> </td></tr>
<tr name='tr_dipole'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k275">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_display'>
<td colspan="5">
<h3 >
<a id="display" name="display">display</a>
<a id="k278"> </a></h3>
<div class="chimenote">
<i>Note:</i> The display command does not require { ... } around Jmol atom expressions.
<br />
<br /></div></td></tr>
<tr name='tr_display'>
<td>
<i >The opposite of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#hide">hide</a>. 
<b>Display</b> is similar to 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#restrict">restrict</a> in its action, but it is far more flexible. Atoms can be added to the displayed set using 
<b>display displayed or ...</b> or removed from the hidden set using 
<b>display displayed and not ...</b>. Unlike 
<b>restrict</b>, the 
<b>display</b> command does not delete the hidden shapes. Thus, after 
<b>restrict none</b> all cartoons, traces, spacefill spheres, and bond sticks are effectively deleted. In contrast, 
<b>display none</b> is easily reversed using 
<b>display all</b>. or deselected with 
<b>select not hidden</b>. Atoms can be added to the hidden set using 
<b>hide hidden or ...</b> or removed from the hidden set using 
<b>hide hidden and not ....</b>. In addition, bonds can be hidden or displayed.
<br />
<br /></i ></td></tr>
<tr name='tr_display'>
<td valign="top">
<a name="display_._atom_expression" id="k281"> </a>display 
<a class='def' href='#d280' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_display'>
<td>
<blockquote>
<p >
<i >Displays a set of atoms. Displays atoms and associated structures (bonds, halos, stars, cartoons, etc.) and hides all others. The optional parameters ADD and REMOVE prior to the atom expression allow quick alternatives to "displayed or..." and "displayed and not...". </i ></p ></blockquote></td></tr> 
<tr name='tr_display'>
<td valign="top">
<a name="display_" id="k282"> </a>display [{...}]</td ></tr>
<tr name='tr_display'>
<td>
<blockquote>
<p >
<i >Displays a set of bonds using bondset notation. For example, 
<b>display [{3:4 5:9 10 13}]. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#jmolmathjmolmathvariabletypes">Jmol Math Variable Types</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_display'>
<td valign="top">
<a name="display_bonds" id="k283"> </a>display BONDS</td ></tr>
<tr name='tr_display'>
<td>
<blockquote>
<p >
<i >Displays all bonds.</i ></p ></blockquote></td></tr> 
<tr name='tr_display'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_display'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('.display')">in new window using 1blu.pdb</td></tr>
<tr name='tr_display'>
<td>
<table cellpadding="10">
<tr>
<td class="example">display protein
<br />display not solvent
<br />display within(3.0,[FS4]102)</td></tr></table></td></tr>
<tr name='tr_display'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_display'>
<td colspan="5">
<p>
<a class="xref" href="#hide">hide</a> 
<a class="xref" href="#restrict">restrict</a> 
<a class="xref" href="#select">select</a> 
<a class="xref" href="#subset">subset</a> </p></td></tr>
<tr name='tr_display'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k279">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_dots'>
<td colspan="5">
<h3 >
<a id="dots" name="dots">dots</a>
<a id="k284"> </a></h3></td></tr>
<tr name='tr_dots'>
<td>
<i >Turns a dotted surface around the currently selected atoms. See also the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#geosurface">geoSurface</a> command and the settings 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_dotdensity">set dotDensity</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_dotscale">set dotScale</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_dotsselectedonly">set dotsSelectedOnly</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_dotsurface">set dotSurface</a>.
<br />
<br /></i ></td></tr>
<tr name='tr_dots'>
<td valign="top">
<a name="dots_" id="k286"> </a>dots ON/OFF{default: ON}</td ></tr> 
<tr name='tr_dots'>
<td valign="top">
<a name="dots_only" id="k287"> </a>dots ONLY</td ></tr>
<tr name='tr_dots'>
<td>
<blockquote>
<p >
<i >Turns dot rendering on and all other rendering (including labels) off.</i ></p ></blockquote></td></tr> 
<tr name='tr_dots'>
<td valign="top">
<a name="dots_vanderwaals" id="k288"> </a>dots VANDERWAALS</td ></tr>
<tr name='tr_dots'>
<td>
<blockquote>
<p >
<i >Draws dots at the van der Waals radius for the selected atoms. See 
<a class="xref" href="misc/radii.xls" target="_blank">radii.xls</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_dots'>
<td valign="top">
<a name="dots_ionic" id="k289"> </a>dots IONIC</td ></tr>
<tr name='tr_dots'>
<td>
<blockquote>
<p >
<i >Draws dots at the (nominal) ionic radius for the selected atoms if the atom's formal charge has been read and is nonzero; uses the nominal covalent bonding radius otherwise (
<a class="xref" href="misc/radii.xls" target="_blank">radii.xls</a>).</i ></p ></blockquote></td></tr> 
<tr name='tr_dots'>
<td valign="top">
<a name="dots_nn%" id="k290"> </a>dots nn%</td ></tr>
<tr name='tr_dots'>
<td>
<blockquote>
<p >
<i >Draws dots at the indicated percent of the van der Waals radius for each atom (maximum value 1000%).</i ></p ></blockquote></td></tr> 
<tr name='tr_dots'>
<td valign="top">
<a name="dots__decimal_" id="k291"> </a>dots (decimal)</td ></tr>
<tr name='tr_dots'>
<td>
<blockquote>
<p >
<i >Draws dots at the indicated radius in Angstroms for each atom (maximum value 10.0 Angstroms). A negative number also implies 
<b>ONLY</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_dots'>
<td valign="top">
<a name="dots_+_decimal_" id="k292"> </a>dots +(decimal)</td ></tr>
<tr name='tr_dots'>
<td>
<blockquote>
<p >
<i >Draws dots at the indicated distance in Angstroms beyond the van der Waals radius for each atom (maximum value 10.0 Angstroms). The "+" sign is required.</i ></p ></blockquote></td></tr> 
<tr name='tr_dots'>
<td valign="top">
<a name="dots_adpmin" id="k293"> </a>dots ADPMIN n%</td ></tr>
<tr name='tr_dots'>
<td>
<blockquote>
<p >
<i >Draws dots at the radius corresponding to the minimum anisotropic displacement parameter for the selected atoms factored by the given percentage. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#ellipsoid">ellipsoid</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_dots'>
<td valign="top">
<a name="dots_adpmax" id="k294"> </a>dots ADPMAX n%</td ></tr>
<tr name='tr_dots'>
<td>
<blockquote>
<p >
<i >Draws dots at the radius corresponding to the maximum anisotropic displacement parameter for the selected atoms factored by the given percentage. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#ellipsoid">ellipsoid</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_dots'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_dots'>
<td colspan="5">
<p>
<a class="xref" href="#backbone">backbone</a> 
<a class="xref" href="#background">background</a> 
<a class="xref" href="#cartoon">cartoon</a> 
<a class="xref" href="#ellipsoid">ellipsoid</a> 
<a class="xref" href="#geosurface">geoSurface</a> 
<a class="xref" href="#meshribbon">meshribbon</a> 
<a class="xref" href="#ribbon">ribbon</a> 
<a class="xref" href="#rocket">rocket</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlighting">set (lighting)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#strand">strand</a> 
<a class="xref" href="#trace">trace</a> 
<a class="xref" href="#vector">vector</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_dots'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k285">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_draw'>
<td colspan="5">
<h3 class=h3newer>
<a id="draw" name="draw">draw</a>
<a id="k295"> </a></h3>   
<a class="textParam" href="#drawidobjectid">ID [object id]</a>
<br />   
<a class="textParam" href="#drawmodifyingparameters">[modifying parameters]</a>
<br />   
<a class="textParam" href="#drawpositions">[positions]</a>
<br />   
<a class="textParam" href="#drawdisplayoptions">[display options]</a>
<br />
<br /></td></tr>
<tr name='tr_draw'>
<td>
<i >The 
<b>draw</b> command allows for the insertion of points, lines, and planes to a model. The general syntax of the 
<b>draw</b> command is as follows: 
<br> 
<br>
<b>draw [objectID] [modifying parameters] [positions] </b> 
<br> 
<br>
<br />
<br />
<b>
<a name="drawidobjectid">ID [object id]</a></b>    
<a href="#draw">back</a>
<br />
<br /> The optional identifier such as "line1" or "plane2" that can be referred to in later scripts as $line1 or $plane2. These words are arbitrary and if preceded by the optional keyword ID may be any string. Specifically for the options ON, OFF, and DELETE, the id may include a wildcard character (asterisk). Thus, 
<b>draw v* off</b> turns off all drawn objects having an ID starting with the letter "v".
<br />
<br />
<b>
<a name="drawmodifyingparameters">[modifying parameters]</a></b>    
<a href="#draw">back</a>
<br />
<br /> Several options allow for modifications of some or all of the object types described below. These include:
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>COLOR (color)</b></td >
<td valign="top" >Sets the color of the drawn object at the time it is created. (The 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#colormodelobject">color</a> command can be used retroactively as well.) </td ></tr >
<tr >
<td valign="top" >
<b>CROSSED</b></td >
<td valign="top" >Two lines (already drawn objects) specified next are crossed; switch the order of vertices for defining a plane.</td ></tr >
<tr >
<td valign="top" >
<b>DELETE</b></td >
<td valign="top" >Deletes the object if an identifier is given or all drawn objects if none is given; not used with any other parameters. "*" can be used as a wild card either at the beginning or end of the identifier. For example, 
<b>DRAW pt* DELETE</b>.</td ></tr >
<tr >
<td valign="top" >
<b>DIAMETER n</b></td >
<td valign="top" >Sets the number of pixels for the diameter of points, lines, arrows, and curves. Note that this means that zooming of the model does not change the width of these objects. 
<b>n</b> may be a decimal value x.x, same as 
<b>WIDTH x.x</b>.</td ></tr >
<tr >
<td valign="top" >
<b>FIXED/MODELBASED</b></td >
<td valign="top" >Sets whether the surface generated is to be associated with the fixed window -- and thus appear with all frames/models -- or is to be associated with the currently displayed model (the default).</td ></tr >
<tr >
<td valign="top" >
<b>LIST</b></td >
<td valign="top" >Lists all DRAW objects. Not used with any other parameters.</td ></tr >
<tr >
<td valign="top" >
<b>ON/OFF</b></td >
<td valign="top" >Turns on or off the identified object or all drawn objects if no identifier is given; not used with any other parameters.</td ></tr >
<tr >
<td valign="top" >
<b>PERP</b> 
<br>
<b>PERPENDICULAR</b></td >
<td valign="top" >Draw this object perpendicular to the next indicated object.</td ></tr >
<tr >
<td valign="top" >
<b>REVERSE</b></td >
<td valign="top" >Reverse the order of vertices used if the next object listed is a line.</td ></tr >
<tr >
<td valign="top" >
<b>ROTATE45</b></td >
<td valign="top" >Rotate a perpendicular plane to a line by 45 degrees.</td ></tr >
<tr >
<td valign="top" >
<b>LENGTH (decimal)</b></td >
<td valign="top" >The length for a line/axis in Angstroms. The keyword LENGTH is optional.</td ></tr >
<tr >
<td valign="top" >
<b>OFFSET {x y z}</b></td >
<td valign="top" > offsets the object by the given x, y, and z distances.</td ></tr >
<tr >
<td valign="top" >
<b>SCALE (decimal)
<br>SCALE (integer)</b></td >
<td valign="top" >SCALE with a decimal value indicates a scaling factor for the drawn object. For example, 
<b>draw SCALE 1.5 (atomno=1) (atomno=2)</b> draws a line with length 1.5 times the distance from atom 1 to atom 2. The line is centered on the two atoms. The keyword SCALE is required in this case. Note that a draw command can consist of just an identifier and a scale. Thus, if $line1 is already defined, 
<b>draw line1 SCALE 1.3</b> will rescale that line to 130% of the distance between its defining points. SCALE with an integer number indicates a percent scale. The keyword SCALE is optional in this case.</td ></tr >
<tr >
<td valign="top" >
<b>VERTICES</b></td >
<td valign="top" > Generally the geometric center of an atom expression or drawn object is used for positioning. Added just before the atom set or object name reference, VERTICES indicates to use all vertices, not just the center point of the atoms in the expression or the points in the object.</td ></tr >
<tr >
<td valign="top" >
<b>WIDTH x.x</b></td >
<td valign="top" >Sets the diameter of points, lines, arrows, and curves to a given width in Angstroms. Objects drawn will be scaled based on perspective and zoom setting.</td ></tr >
<tr >
<td valign="top" >
<b>"text"</b></td >
<td valign="top" > A simple text label can accompany drawn objects. The text appears near the first point. Text starting with ">" will be associated with the last point instead of the first. The ">" character will be stripped before the text is displayed. If 
<b>set drawHover TRUE</b> has been issued, this text will appear only when the object is hovered over.</td ></tr ></table >
<br />
<br />
<b>
<a name="drawpositions">[positions]</a></b>    
<a href="#draw">back</a>
<br />
<br /> Positions define position of the point, the endpoints of the line/axis, or the corners of a plane. Positions can be indicated in any combination of any of the following four ways. Mixed types are processed in the order given on the command line. 
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >{x, y, z}</td >
<td valign="top" >a model-frame cartesian coordinate, in braces, </td ></tr >
<tr >
<td valign="top" >{x, y, z/}</td >
<td valign="top" >for crystal structures, a unit-cell 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#fractionalcoordinates">fractional coordinate</a>, in braces, </td ></tr >
<tr >
<td valign="top" >$object</td >
<td valign="top" >a previously defined drawing object such as $line1 or $plane2, preceded by "$". </td ></tr >
<tr >
<td valign="top" >(atom expression)</td >
<td valign="top" >an atom expression, in parentheses.</td ></tr >
<tr >
<td valign="top" >@{ {atomExpression}.split()} </td >
<td valign="top" > atom expressions split based on model index .</td ></tr ></table > In addition, if two parameters are given, where the first evaluates to a point and the second is a four-vector {a b c d}, a line is drawn from the point to the nearest point on the plane defined by 
<b>ax + by + cz + d = 0</b>. (Note that because quaternions and axisAngle are stored in quaternion format, which is internally the same as that used for planes, if a quaternion or axisAngle is used in this context, the line will be along the axis of rotation represented by the quaternion or axisAngle 
<b>q</b> to a point on a plane defined by 
<b>d = q.w = cos(theta/2)</b>, where 
<b>theta</b> is the rotation angle).
<br />
<br />
<b>
<a name="drawdisplayoptions">[display options]</a></b>    
<a href="#draw">back</a>
<br />
<br /> Display options for DRAW are indicated in the following table. These may be given at the end of the definition or in a later command having just these keywords and the identifier (or "ALL") of the desired draw object. 
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>FILL/NOFILL</b></td >
<td valign="top" > Display the drawn opject as a smoothly filled surface.</td ></tr >
<tr >
<td valign="top" >
<b>FRONTONLY/NOTFRONTONLY</b></td >
<td valign="top" > Display only the front half of the surface. This can be useful when the options 
<b>mesh nofill</b> are used. </td ></tr >
<tr >
<td valign="top" >
<b>FRONTLIT /BACKLIT /FULLYLIT</b></td >
<td valign="top" > In some cases the object may appear flat. Using BACKLIT will fix this; FULLYLIT makes exterior and interior surfaces bright; FRONTLIT is the default setting. </td ></tr >
<tr >
<td valign="top" >
<b>MESH/NOMESH</b></td >
<td valign="top" > Display a mesh of lines intersecting at the vertexes used to construct the object. For cylinders, the combination 
<b>MESH NOFILL</b> creates a cylinder with no end caps. </td ></tr >
<tr >
<td valign="top" >
<b>ON/OFF</b></td >
<td valign="top" > Turn the object ON or OFF, but do not delete it. </td ></tr >
<tr >
<td valign="top" >
<b>OPAQUE/TRANSLUCENT n</b></td >
<td valign="top" > Display the object as an opaque or translucent object. Several translucent options are available; see the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#color">color</a> command. </td ></tr ></table >
<br />
<br /></i ></td></tr>
<tr name='tr_draw'>
<td valign="top">
<a name="draw_arc" id="k297"> </a>draw ARC {pt1} {pt2} {ptRef} {nDegreesOffset theta fractionalOffset} </td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draws a theta-degree arc in a plane perpendicular to the line pt1--pt2 starting at nDegreesOffset degrees rotation from reference point {ptRef} at a point fractionalOffset from pt1 to pt2. The SCALE parameter is used to set the diameter of the overall circle containing the arc; the DIAMETER parameter sets the diameter of the curved arc line itself. 
<b>ARROW ARC</b> adds an arrow head.</i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_" id="k298"> </a>draw ARC {pt1} {plane} {ptRef} {nDegreesOffset theta fractionalOffset}</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >As above, but uses the plane as a reference to define a perpendicular axis. </i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_arrow" id="k299"> </a>draw ARROW {pt1} {pt2} {pt3} ...</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draws a straight (two-point) or curve (more than two-point) arrow. The keyword BARB indicates "fish-hook" half-arrows as for organic chemistry mechanisms involving radicals. </i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_arrow" id="k300"> </a>draw ARROW [array of points]</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draws an ARROW based on an array of points. </i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_arrow" id="k301"> </a>draw ARROW ATOM/BOND</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >The 
<b>DRAW</b> command can be used to draw organic "mechanistic arrows." You need to specify two atoms, two bonds, an atom and a bond, or a bond and an atom. Atoms are identified using the keyword ATOM followed by an atom expression; bonds are identified using the keyword BOND followed by two atom expressions. For example: 
<b>draw ID "arrow1" ARROW ATOM @1 BOND @1 @2</b>, which draws a curved arrow from atom 1 (atomno=1) to the middle of the bond connecting that atom to atom 2. These drawn objects are then "connected" to the atoms, so if the atoms are not displayed, the arrow is not displayed either. Of course, individual arrows can be hidden independently of their associated atoms as well. </i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_boundbox" id="k302"> </a>draw BOUNDBOX</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draws the currently defined 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#boundbox">boundbox</a>. Note that by default this is a solid. To show just edges, use options 
<b>MESH NOFILL</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_circle" id="k303"> </a>draw CIRCLE {pt1} {pt2}</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draws a circle with center at pt1 (which may be an atom expression) in the plane perpendicular to the line between pt1 and pt2. If pt2 is not specified, the circle appears in 2D and remains in the plane of the screen when the model is manipulated. Together, the SCALE and DIAMETER parameters set the overall size of the circle. If no DIAMETER is given and an atom expression is given for pt1, the default diameter is one that includes those atoms; otherwise the default diameter is 1.0 Angstrom. The circle will be filled to form a solid disk unless the MESH NOFILL option is given.</i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_circle" id="k304"> </a>draw CIRCLE {pt1} {plane}</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draws a circle around pt1 in the indicated plane.</i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_curve" id="k305"> </a>draw CURVE {pt1} {pt2} {pt3} ...</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draws a smooth curve through the given positions. </i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_curve" id="k306"> </a>
<span class=newer>draw CURVE [array of points] [
<b>Jmol 14.3.16</b>]</span></td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Draws a curve based on the array of points.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_cylinder" id="k307"> </a>draw CYLINDER {pt1} {pt2}</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draw CYLINDER creates a cylinder of the designated diameter. End caps can be set to closed/flat (FILL, the default) or open (MESH NOFILL).</i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_frame" id="k309"> </a>draw FRAME 
<a class='def' href='#d308' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a> {quaternion}</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draws a frame (an x,y,z axis set) at the given center with the given quaternion orientation. Quaternions are expressed using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#functions">quaternion()</a> function within a math @{...} wrapper. For example, 
<b>draw ID "q1" frame {0 0 0} @{quaternion(1,0,1,0)}</b> draws a frame at the origin that has been rotated 90 degrees relative to the Y axis. (Jmol automatically normalizes the quaternion to q0=0.70710677, q1=0, q2=0.70710677, q4=0, which represents a 90-degree rotation about the Y axis.)</i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_helix_axis" id="k310"> </a>draw HELIX AXIS</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draws a vector representing the local helical axis for the selected amino acid or nucleic acid residue, connecting it to the previous residue in its chain. The length of the arrow is the vertical height per residue. </i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_intersection" id="k311"> </a>draw INTERSECTION BOUNDBOX (plane expression)</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draws the portion of a plane that intersects the current 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#boundbox">boundbox</a> based on a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#planeexpressions">plane expression</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_intersection" id="k312"> </a>draw INTERSECTION UNITCELL (plane expression)</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draws the portion of a plane that intersects the current 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#unitcell">unit cell</a> based on a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#planeexpressions">plane expression</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_line" id="k313"> </a>draw LINE [array of points]</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draws a set of line segments through the points. See also DRAW VERTICES.</i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_plane" id="k314"> </a>draw PLANE {pt1} {pt2} {pt3}</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Creates a four-vertex quadrilateral even if only three points are given.</i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_pointgroup" id="k315"> </a>draw POINTGROUP [parameters]</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Calculates and draws point group symmetry planes and axes for a symmetrical or nearly symmetrical molecule. As for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">calculate pointgroup</a>, the calculation is carried out only on the currently selected atoms and is limited to at most 100 selected atoms. Parameters include specification of a subset to draw (Cn, C2, C3, C4, C5, C6, C8, Sn, S3, S4, S5, S6, S8, S10, S12, Cs, Ci) optionally followed by an index (for example, 
<b>draw POINTGROUP C3 2</b> draws the second C3 axis only). A second option, SCALE x, allows adjusting the scale of the drawn planes and axes. The default scale of 1 puts the edge of planes directly through the outermost atoms. This command automatically sets 
<b>perspectiveMode OFF</b> so as to properly represent the planes and axes. </i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_pointgroup" id="k316"> </a>
<span class=newer>draw POINTGROUP POLYHEDRON [
<b>Jmol 14.3.15</b>]</span></td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Calculates and draws point group symmetry planes and axes for a polyhedron. One atom (one polyhedron) should be selected prior to this command. </span></i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_polygon" id="k317"> </a>draw POLYGON [polygon definition]</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >The POLYGON option allows the ability to draw polygons based on a set of vertices and a set of faces. This capability allows drawing any number of flat triangular (not quadrilateral, but read on...) faces with or without edges around each face. The description is somewhat like that for PMESH files and involves (a) giving the number of vertices, (b) listing those vertices, (c) giving the number of faces, and (d) listing the faces with a special array syntax. Each face is described as an array indicating the three (0-based) vertex indices followed by a number from 0 to 7 indicating which edges to show a border on when the 
<b>mesh</b> option is given: 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > 0 </td >
<td valign="top" > no edge</td ></tr >
<tr >
<td valign="top" > 1</td >
<td valign="top" > edge between first and second vertex</td ></tr >
<tr >
<td valign="top" > 2 </td >
<td valign="top" > edge between second and third vertex</td ></tr >
<tr >
<td valign="top" >4 </td >
<td valign="top" > edge between third and first vertex </td ></tr >
<tr >
<td valign="top" > 3, 5, 6, 7 </td >
<td valign="top" > combinations of the above.</td ></tr ></table > For example: 
<b>draw POLYGON 4 {0 0 0} {1 1 1} {1 2 1} {0 5 0} 2 [0 1 2 6] [0 3 2 6] mesh nofill</b>. The points and faces can be provided as arrays: 
<b>draw POLYGON @x @y mesh nofill</b>, where in this example, x is an array of the four points, and y is [[0 1 2 6] [0 3 2 6]].</i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_points" id="k318"> </a>
<span class=newer>draw POINTS [array of points] [
<b>Jmol 14.4.0</b>]</span></td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >
<span class=newer>The POINTS option creates a set of points. For example, 
<b>load $caffeine; draw POINTS [@5 @7 @12 @13 @1 @3]</b>.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_polygon" id="k319"> </a>
<span class=newer>draw POLYGON [array of points] [
<b>Jmol 14.3.13</b>]</span></td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >
<span class=newer>This simple POLYGON option creates a polygon from a list of points. For example, 
<b>load $caffeine; draw polygon [@5 @7 @12 @13 @1 @3]</b>.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_quaternion" id="k320"> </a>draw QUATERNION [parameters]</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draws vectors for the previously selected residues representing the quaternion frame and rotational axis for each residue. The parameters for this command are the same as for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#plot">plot quaternion</a> or the 
<b>quaternion</b> command. Vectors are named based on the axis (x, y, z, q), residue number, and chain. </i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_ramachandran" id="k321"> </a>draw RAMACHANDRAN</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draws curved arrows marked with PHI and PSI angles in planes perpendicular to the N-CA and CA-C bonds of the selected amino acids, respectively.</i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_slab" id="k322"> </a>draw SLAB $id PLANE (plane expression)</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Creates a DRAW object based on DRAW object $id, which must be of POLYGON type, that is slabbed based on a plane definition. For example: 
<b>draw p4 polygon 4 {0 0 0} {0 3 0} {3 3 0} {0 3 3} 2 [0 1 2 0] [2 3 0 0]; draw p4 slab $p4 PLANE @{plane({0 0 0}, {5 0 0})}</b></i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_symop" id="k323"> </a>draw SYMOP [n or "x,y,z"] {atom expression}</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draws a graphic representation of a crystallographic space group symmetry operation. Operations include simple rotations, screw rotations, rotation-inversions, mirror planes, and glide planes, Either a number (for one of the model's symmetry operations) or a string indicating a Jones-Faithful operation may be used. The position may be an atom expression may be a point. If a point, it can be expressed either as a cartesian coordinate or a fractional coordinate (using a "/" in at least one position -- for example, { 1/2 0 0}. The ID of the draw command is prepended to the drawn object IDs. For example, 
<b> draw ID "s1" SYMOP "x,1/2-y,z" {1/2 1/2 1/2}</b>. See also the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/examples-11/showsym.htm" target="_blank">Jmol Crystal Symmetry Explorer</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_symop" id="k324"> </a>draw SYMOP {atom expression} {atom expression}</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draws the symmetry relations between any two atoms or groups or any two positions in space. For example, 
<b>draw SYMOP {molecule=1} {molecule=2}</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_symop" id="k325"> </a>draw SYMOP (integer) {atom expression} {atom expression}</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draws the symmetry relation associated with the specified symmetry operator between any two atoms or groups or any two positions in space. For example, 
<b>draw SYMOP {molecule=1} {molecule=2}</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_symop" id="k326"> </a>draw SYMOP [matrix]</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draws the symmetry operation associated with the given 4x4 matrix, which most likely comes from a variable, for example here the symmetry operation that is the product of two other symmetry operations: 
<b>draw SYMOP @{symop(11)*symop(14)}</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_unitcell" id="k327"> </a>draw UNITCELL</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >Draws the currently defined 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#unitcell">unitcell</a>. Note that by default this is a solid. To show just edges, use options 
<b>MESH NOFILL</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td valign="top">
<a name="draw_vector" id="k328"> </a>draw VECTOR {pt1} {pt2}</td ></tr>
<tr name='tr_draw'>
<td>
<blockquote>
<p >
<i >This option is similar to ARROW, and accepts two points. The first point is the origin; the second is of the form {dx,dy,dz}, indicating a vector to the next point rather than the point itself.</i ></p ></blockquote></td></tr> 
<tr name='tr_draw'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_draw'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_draw'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples-11/draw.htm">examples-11/draw.htm</a> </td></tr>
<tr name='tr_draw'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_draw'>
<td colspan="5">
<p>
<a class="xref" href="#planeexpressions">[plane expressions]</a> 
<a class="xref" href="#isosurface">isosurface</a> 
<a class="xref" href="#lcaocartoon">lcaoCartoon</a> 
<a class="xref" href="#mo">mo</a> 
<a class="xref" href="#plot">plot</a> 
<a class="xref" href="#pmesh">pmesh</a> 
<a class="xref" href="#quaternion">quaternion</a> 
<a class="xref" href="#ramachandran">ramachandran</a> 
<a class="xref" href="#setmisc">set (misc)</a> 
<a class="xref" href="#show">show</a> 
<a class="xref" href="#writeobject">write (object)</a> </p></td></tr>
<tr name='tr_draw'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k296">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_echo'>
<td colspan="5">
<h3 >
<a id="echo" name="echo">echo</a>
<a id="k329"> </a></h3></td></tr>
<tr name='tr_echo'>
<td>
<i >In Jmol, models can be annotated in one of three ways. Text can be associated with a specific atom using a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#label">label</a>, text can appear when the user hovers the mouse over an atom or other user-defined point in space for a designated period of time (
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#hover">hover</a>), and text can be placed at a specified position on the window (2D 
<b>echo</b>) or at a point in space (3D 
<b>echo</b>). In addition, the text is echoed in the Java console, the Jmol 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#console">console</a>, and the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_messagecallback">set messageCallback</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_echocallback">set echoCallback</a> function, if defined. Multi-line text can be generated using a vertical bar as a line separator.
<br>
<br> See also the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#message">message</a> command for variable-displaying capabilities that send information to the consoles and callback functions without displaying text. One can also place JPEG, PNG, or GIF images at either a 2D screen position or a 3D molecular position. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setecho">set echo</a> for details. 
<br />
<br /></i ></td></tr>
<tr name='tr_echo'>
<td valign="top">
<a name="echo__string_" id="k331"> </a>echo (string)</td ></tr>
<tr name='tr_echo'>
<td>
<blockquote>
<p >
<i >Sends text to the console, callbacks, and, depending upon the setting of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setecho">set echo</a>, to a position in the Jmol window. Echos can contain variables such as @x. If in an echo is one that is displayed and the string contains a variable expression in quotes, such as 
<b>set echo top center; echo "@{_modelNumber}"</b>, the echo is updated dynamically every time the screen is refreshed. Variable substitution can be prevented using \@ instead of @.</i ></p ></blockquote></td></tr> 
<tr name='tr_echo'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('.echo')">in new window using caffeine.xyz</td></tr>
<tr name='tr_echo'>
<td>
<table cellpadding="10">
<tr>
<td class="example">set echo top left;font echo 20 serif bolditalic;color echo green
<br />echo "I am green top left|20 serif bolditalic"
<br />set echo myecho 350 150
<br />echo this is|myecho; set echo myecho center
<br />echo this|is|a|test
<br />set echo myecho right
<br />set echo myecho left
<br /> set echo top center
<br /> set echo top right
<br />set echo top 70 320</td></tr></table></td></tr>
<tr name='tr_echo'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_echo'>
<td colspan="5">
<p>
<a class="xref" href="#jmolcommandsyntax">[Jmol Command Syntax]</a> 
<a class="xref" href="#jmolmath">[Jmol Math]</a> 
<a class="xref" href="#jmolparameters">[Jmol Parameters]</a> 
<a class="xref" href="#atomexpressions">[atom expressions]</a> 
<a class="xref" href="#atomproperties">[atom properties]</a> 
<a class="xref" href="#functions">[functions]</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#font">font</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#hover">hover</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#label">label</a> 
<a class="xref" href="#message">message</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#set">set</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlabels">set (labels)</a> 
<a class="xref" href="#setecho">set echo</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_echo'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k330">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_ellipsoid'>
<td colspan="5">
<h3 >
<a id="ellipsoid" name="ellipsoid">ellipsoid or ellipsoids</a>
<a id="k332"> </a></h3></td></tr>
<tr name='tr_ellipsoid'>
<td>
<i >The 
<b>ellipsoid</b> command displays anisotropic displacement parameters (thermal ellipsoids) based on crystallographic Uij data in CIF or PDB files and tensor quantities found in CRYSTAL files. (For PDB files, you must specify a lattice, for example, 
<b>load =1a6g {1 1 1}</b>, in order to have Jmol read the ANISOU records.) The resulting ellipsoids have three mutually perpendicular axes that are not necessarily the same length. Overall ellipsoid size can be set to a percentage value (default 50%). Rendering styles are set globally using the 
<b>set</b> command and one or more of the settings described below. The diameter of the axis and arc lines can be set using 
<b>set ellipsoidAxisDiameter x.x</b> where x.x is a distance in Angstroms (default 0.02). Note that the Uij data when read from CIF files are also stored in the .temperature value for atoms as 100 times the geometric mean of the diagonal U-factor parameters, 100 * (U11 * U22 * U33)^0.3333. 
<br>
<br> User-defined ellipsoids can also be created by specifying the keyword ID followed by a user-named ID. These parameters may be indicated in any order, but the ellipsoid is not defined until the AXES parameter is specified.
<br>
<br> 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>set ellipsoidAxes</b></td >
<td valign="top" >
<img align="right" src="img/ellipsoidaxes.jpg">This option may be combined with any other option. When combined with balls, the color of the axes are set to white or black in order to contrast with the background.</td ></tr >
<tr >
<td valign="top" >
<b>set ellipsoidArcs</b></td >
<td valign="top" >
<img align="right" src="img/ellipsoidarcs.jpg">When combined with balls, the color of the arcs are set to white or black in order to contrast with the background. This option is ignored when dots are displayed.</td ></tr >
<tr >
<td valign="top" >
<b>set ellipsoidBall</b></td >
<td valign="top" >
<img align="right" src="img/ellipsoidball.jpg">This option is the default option and may be combined with ellipsoidAxes, ellipsoidArcs, or ellipsoidFill (which displays a cut-out octant).</td ></tr >
<tr >
<td valign="top" >
<b>set ellipsoidFill</b></td >
<td valign="top" >
<img align="right" src="img/ellipsoidfillarcs.jpg">
<img align="right" src="img/ellipsoidfillball.jpg">
<img align="right" src="img/ellipsoidfillspace.jpg">This option affects the rendering of arcs and balls. In the case of arcs, it fills in the arcs to form a set of three elliptical planes; in the case of balls, it provides a cut-out octant. When combined with 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#spacefill">spacefill ADPMIN n%</a>, where n is the current percentage size of the ellipsoid, the combination of fill and arcs provides a strikingly unique rendering of the anisotropic displacement parameters for an atom. </td ></tr >
<tr >
<td valign="top" >
<b>set ellipsoidDots</b></td >
<td valign="top" >
<img align="right" src="img/ellipsoiddots.jpg">This option renders a random set of dots defining the ellipsoid that sparkle as the model is manipulated. The number of dots can be set using 
<b>set ellipsoidDotCount n</b> where n is an integer (default 200). This option is ignored when ellipsoid balls are displayed.</td ></tr ></table >
<br />
<br /></i ></td></tr>
<tr name='tr_ellipsoid'>
<td valign="top">
<a name="ellipsoid_" id="k334"> </a>ellipsoid ON/OFF{default: ON}</td ></tr>
<tr name='tr_ellipsoid'>
<td>
<blockquote>
<p >
<i >Turns ellipsoids on or off for the currently selected atoms.</i ></p ></blockquote></td></tr> 
<tr name='tr_ellipsoid'>
<td valign="top">
<a name="ellipsoid_nn%" id="k335"> </a>ellipsoid nn%</td ></tr>
<tr name='tr_ellipsoid'>
<td>
<blockquote>
<p >
<i >Sets the size of the ellipsoids for the currently selected atoms.</i ></p ></blockquote></td></tr> 
<tr name='tr_ellipsoid'>
<td valign="top">
<a name="ellipsoid_id" id="k344"> </a>ellipsoid ID [object id] ON</td ></tr>
<tr name='tr_ellipsoid'>
<td>
<blockquote>
<p >
<i >Turns this ellipsoid on.</i ></p ></blockquote></td></tr> 
<tr name='tr_ellipsoid'>
<td valign="top">
<a name="ellipsoid_id" id="k345"> </a>ellipsoid ID [object id] OFF</td ></tr>
<tr name='tr_ellipsoid'>
<td>
<blockquote>
<p >
<i >Turns this ellipsoid off.</i ></p ></blockquote></td></tr> 
<tr name='tr_ellipsoid'>
<td valign="top">
<a name="ellipsoid_id" id="k336"> </a>ellipsoid ID [object id] AXES {ax ay az} {bx by bz} {cx cy cz}</td ></tr>
<tr name='tr_ellipsoid'>
<td>
<blockquote>
<p >
<i >Sets the three perpendicular axes for the ellipsoid. These axes should be perpendicular. If they are not, the ellipsoid may not be rendered, or its shape will be unpredictable. The ellipsoid is not displayed until this parameter is set.</i ></p ></blockquote></td></tr> 
<tr name='tr_ellipsoid'>
<td valign="top">
<a name="ellipsoid_id" id="k341"> </a>ellipsoid ID [object id] CENTER {x y z}</td ></tr>
<tr name='tr_ellipsoid'>
<td>
<blockquote>
<p >
<i >Sets the center for this ellipsoid the specified point (which may be fractional).</i ></p ></blockquote></td></tr> 
<tr name='tr_ellipsoid'>
<td valign="top">
<a name="ellipsoid_id" id="k342"> </a>ellipsoid ID [object id] CENTER { atom expression }</td ></tr>
<tr name='tr_ellipsoid'>
<td>
<blockquote>
<p >
<i >Sets the center for this ellipsoid to the center of the specified atoms.</i ></p ></blockquote></td></tr> 
<tr name='tr_ellipsoid'>
<td valign="top">
<a name="ellipsoid_id" id="k343"> </a>ellipsoid ID [object id] CENTER $object</td ></tr>
<tr name='tr_ellipsoid'>
<td>
<blockquote>
<p >
<i >Sets the center for this ellipsoid to the point specified by the object name (draw or ellipsoid)</i ></p ></blockquote></td></tr> 
<tr name='tr_ellipsoid'>
<td valign="top">
<a name="ellipsoid_id" id="k337"> </a>ellipsoid ID [object id] COLOR [color parameters]</td ></tr>
<tr name='tr_ellipsoid'>
<td>
<blockquote>
<p >
<i >Sets the color of the ellipsoid using parameters described in the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#color">color</a> command. </i ></p ></blockquote></td></tr> 
<tr name='tr_ellipsoid'>
<td valign="top">
<a name="ellipsoid_id" id="k339"> </a>ellipsoid ID [object id] DELETE</td ></tr>
<tr name='tr_ellipsoid'>
<td>
<blockquote>
<p >
<i >Deletes the specified ellipsoid.</i ></p ></blockquote></td></tr> 
<tr name='tr_ellipsoid'>
<td valign="top">
<a name="ellipsoid_id" id="k340"> </a>ellipsoid ID [object id] OPTIONS "options"</td ></tr>
<tr name='tr_ellipsoid'>
<td>
<blockquote>
<p >
<i >Sets one or more options separated by semicolon: "arcs;arrows;axes;ball;dots;fill;wireframe" with optional "no" in front of one or more. This option overrides the settings of 
<b>set_ellipsoidball</b> and related settings.</i ></p ></blockquote></td></tr> 
<tr name='tr_ellipsoid'>
<td valign="top">
<a name="ellipsoid_id" id="k338"> </a>ellipsoid ID [object id] SCALE (decimal)</td ></tr>
<tr name='tr_ellipsoid'>
<td>
<blockquote>
<p >
<i >Sets the scale of the ellipsoid relative to its axes lengths.</i ></p ></blockquote></td></tr> 
<tr name='tr_ellipsoid'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_ellipsoid'>
<td colspan="5">
<p>
<a class="xref" href="#backbone">backbone</a> 
<a class="xref" href="#background">background</a> 
<a class="xref" href="#cartoon">cartoon</a> 
<a class="xref" href="#dots">dots</a> 
<a class="xref" href="#geosurface">geoSurface</a> 
<a class="xref" href="#meshribbon">meshribbon</a> 
<a class="xref" href="#ribbon">ribbon</a> 
<a class="xref" href="#rocket">rocket</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlighting">set (lighting)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#strand">strand</a> 
<a class="xref" href="#trace">trace</a> 
<a class="xref" href="#vector">vector</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_ellipsoid'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k333">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_else'>
<td colspan="5">
<h3 >
<a id="else" name="else">else</a>
<a id="k346"> </a></h3></td></tr>
<tr name='tr_else'>
<td>
<i >See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#if">if</a>.
<br />
<br /></i ></td></tr> 
<tr name='tr_else'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_else'>
<td colspan="5">
<p>
<a class="xref" href="#break">break</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#catch">catch</a> 
<a class="xref" href="#continue">continue</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#elseif">elseIf</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#return">return</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#try">try</a> 
<a class="xref" href="#var">var</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_else'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k347">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_elseif'>
<td colspan="5">
<h3 >
<a id="elseif" name="elseif">elseIf</a>
<a id="k348"> </a></h3></td></tr>
<tr name='tr_elseif'>
<td>
<i >See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#if">if</a>.
<br />
<br /></i ></td></tr> 
<tr name='tr_elseif'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_elseif'>
<td colspan="5">
<p>
<a class="xref" href="#break">break</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#catch">catch</a> 
<a class="xref" href="#continue">continue</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#else">else</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#return">return</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#try">try</a> 
<a class="xref" href="#var">var</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_elseif'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k349">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_exit'>
<td colspan="5">
<h3 >
<a id="exit" name="exit">exit</a>
<a id="k350"> </a></h3></td></tr>
<tr name='tr_exit'>
<td>
<i >When the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_scriptqueue">set scriptQueue</a> is turned on, each script waits for the previous to complete. Either 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#quit">quit</a> or 
<b>exit</b> at the very beginning of a script command halts any previous still-running script. Processing then continues with the second command on the line. Anywhere else in the command, 
<b>quit</b> and 
<b>exit</b> abort that script only. In addition, 
<b>exit</b> clears the script queue of any remaining scripts, thus stopping all script processing.
<br />
<br /></i ></td></tr> 
<tr name='tr_exit'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_exit'>
<td colspan="5">
<p>
<a class="xref" href="#immediate!">[immediate (!)]</a> 
<a class="xref" href="#delay">delay</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#loop">loop</a> 
<a class="xref" href="#pause">pause</a> 
<a class="xref" href="#quit">quit</a> 
<a class="xref" href="#resume">resume</a> 
<a class="xref" href="#setfilesandscripts">set (files and scripts)</a> 
<a class="xref" href="#step">step</a> </p></td></tr>
<tr name='tr_exit'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k351">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_file'>
<td colspan="5">
<h3 >
<a id="file" name="file">file</a>
<a id="k352"> </a></h3></td></tr>
<tr name='tr_file'>
<td>
<i >Carries out a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frame">frame</a> command bringing into frame all models in the specified file number.
<br />
<br /></i ></td></tr>
<tr name='tr_file'>
<td valign="top">
<a name="file__integer_" id="k354"> </a>file (integer)</td ></tr> 
<tr name='tr_file'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_file'>
<td colspan="5">
<p>
<a class="xref" href="#animation">animation</a> 
<a class="xref" href="#frame">frame</a> 
<a class="xref" href="#invertselected">invertSelected</a> 
<a class="xref" href="#move">move</a> 
<a class="xref" href="#moveto">moveto</a> 
<a class="xref" href="#rotateselected">rotateSelected</a> 
<a class="xref" href="#setmisc">set (misc)</a> 
<a class="xref" href="#spin">spin</a> 
<a class="xref" href="#translate">translate</a> 
<a class="xref" href="#translateselected">translateSelected</a> 
<a class="xref" href="#zoom">zoom</a> 
<a class="xref" href="#zoomto">zoomto</a> </p></td></tr>
<tr name='tr_file'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k353">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_fix'>
<td colspan="5">
<h3 >
<a id="fix" name="fix">fix</a>
<a id="k355"> </a></h3>
<div class="chimenote">
<i>Note:</i> The fix command does not require { ... } around Jmol atom expressions.
<br />
<br /></div></td></tr>
<tr name='tr_fix'>
<td>
<i >The 
<b>fix</b> command takes argument like display or select. But ensures no atoms of this set will be moved or dragged anywhere accidentally.
<br />
<br /></i ></td></tr>
<tr name='tr_fix'>
<td valign="top">
<a name="fix_._atom_expression" id="k358"> </a>fix 
<a class='def' href='#d357' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr> 
<tr name='tr_fix'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_fix'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k356">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_font'>
<td colspan="5">
<h3 >
<a id="font" name="font">font</a>
<a id="k359"> </a></h3></td></tr>
<tr name='tr_font'>
<td>
<i >Sets font size, face (serif, sansSerif), and style (plain, italic, bold, bolditalic) in labels and other text-bearing elements. If only a font size is given and the object is a label, then only the size of the font is changed, not the font face or style. For all other objects, if only a font size is given, the font face and style are changed to sansSerif. For 
<b>font ECHO</b> you can apply a scaling factor that allows the font to scale with zoom. This scaling factor, in "pixels per micron", determines the absolute size of the font relative to a "standard" window size. (Scaled 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#echo">echo</a> fonts can also be created using 
<b>set fontscaling TRUE</b>, then defining the echo text. The scaling factor also applies to images added with the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setechoimage">set echo</a> command.
<br />
<br /></i ></td></tr>
<tr name='tr_font'>
<td valign="top">
<a name="font_._object_with_text" id="k365"> </a>font 
<a class='def' href='#d361' title='is AXES, ECHO, HOVER, LABEL, or MEASURE'>[object-with-text]</a> 
<a class='def' href='#d362' title='approximately the same as Rasmol -- (integer, 6 to 63)'>[font-size]</a> 
<a class='def' href='#d363' title='is SERIF, SANSSERIF, or MONOSPACED '>[font-face]</a>{default: SansSerif} 
<a class='def' href='#d364' title='is PLAIN, BOLD, ITALIC, or BOLDITALIC'>[font-style]</a>{default: Plain} [scaling factor]</td ></tr> 
<tr name='tr_font'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_font'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_font'>
<td colspan="5">
<p>
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#hover">hover</a> 
<a class="xref" href="#label">label</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlabels">set (labels)</a> 
<a class="xref" href="#setecho">set echo</a> </p></td></tr>
<tr name='tr_font'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k360">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_for'>
<td colspan="5">
<h3 class=h3newer>
<a id="for" name="for">FOR</a>
<a id="k366"> </a></h3>   
<a class="textParam" href="#forforvari=1;i
<ni++{{}}">for (var i = 1; i 
< n i++) {{...}}</a>
<br />   
<a class="textParam" href="#forforvarifroma,b{{}}">for (var i FROM [a,b]) {{...}}</a>
<br />   
<a class="textParam" href="#forforvariinatom-expressionorarray{{}}">for (var i IN [atom-expression or array]) {{...}}</a>
<br />   
<a class="textParam" href="#forin-linefor">in-line FOR</a>
<br />
<br />
<div class="chimenote">
<i>Note:</i> The FOR command does not require @{ ... } around Jmol math expressions.
<br />
<br /></div></td></tr>
<tr name='tr_for'>
<td>
<i >Jmol supports both the standard 
<b>for</b> statement as well as a specialized in-line FOR construct that provides a powerful way to work with atom data.
<br />
<br />
<b>
<a name="forforvari=1;i
<ni++{{}}">for (var i = 1; i 
< n i++) {{...}}</a></b>    
<a href="#for">back</a>
<br />
<br /> 
<b>for</b> takes three aguments in parentheses and separated by a semicolon. The loop may be exited using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#break">break</a> and truncated using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#break">continue</a>. For example, 
<b>for(var i=1; i 
<= 10; i++){...}</b> loops through a block of script ten times, incrementing the variable 
<b>i</b> by one each time. Any variables created with the VAR keyword are local to the 
<b>for</b> block.
<br />
<br />
<b>
<a name="forforvarifroma,b{{}}">for (var i FROM [a,b]) {{...}}</a></b>    
<a href="#for">back</a>
<br />
<br /> A second form of 
<b>for</b> takes two arguments -- a variable name and a two-element array defining the integer range to loop over. For example, 
<b>for (var i FROM [1,n]) {. . .}</b>. This allows for faster loop processing. Variable b can be larger or smaller than a, allowing the loop variable to increase or decrease each loop, respectively.
<br />
<br />
<b>
<a name="forforvariinatom-expressionorarray{{}}">for (var i IN [atom-expression or array]) {{...}}</a></b>    
<a href="#for">back</a>
<br />
<br /> A third form of 
<b>for</b> takes just two arguments -- a variable name and either an atom set or an array. For example, 
<b>for(var i IN {selected}) {print i.label()}</b> loops through all atoms that have been selected, assigning 
<b>i</b> to each one in turn, printing its default label, and 
<b>var a = [100,150,200]; for(var i IN a) {print i + 5}</b> prints a list that is five more than the array values. The loop may be exited using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#break">break</a> and truncated using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#break">continue</a>. If the looping variable (
<b>i</b> in this case) is assigned any value during the process, the for loop will exit at the end of the current loop. Thus, for example, 
<b>i = 0</b> is a way of saying: "Continue to the end of this loop and then exit."
<br />
<br />
<b>
<a name="forin-linefor">in-line FOR</a></b>    
<a href="#for">back</a>
<br />
<br /> You can create lists of values using a form of inline FOR function. The syntax is simply 
<b>xxx = for(dummyVariable;{atom expression};math expression)</b>. For example, 
<br>
<br>    aniso = for(x;{*};x.adpmax - x.adpmin)</br></br>creates an array containing differences between the maximum and minimum anisotropic density parameters for a set of atoms. Arrays such as these can be used to assign properties to atoms or to color them. So, for example, we might want to set the radius of atoms based on temperature, but not the exact value of the temperature: 
<br>
<br>    {*}.radius = for(x;{*};x.temperature/20)
<br>
<br>Combined with the inline IF function, the inline FOR can be quite useful. For example:
<br>
<br>   {*}.color = for(x;{*};if(x.temperature > 10;"red";if(x.temperature 
< 2;"blue";"white")))
<br .>
<br>See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#functions">functions</a> for how to define a function that operates on atoms one at a time with the syntax </b>{*}.myFunction(a, b)</b>.
<br />
<br /></i ></td></tr> 
<tr name='tr_for'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_for'>
<td colspan="5">
<p>
<a class="xref" href="#jmolcommandsyntax">[Jmol Command Syntax]</a> 
<a class="xref" href="#jmolmath">[Jmol Math]</a> 
<a class="xref" href="#jmolparameters">[Jmol Parameters]</a> 
<a class="xref" href="#atomexpressions">[atom expressions]</a> 
<a class="xref" href="#atomproperties">[atom properties]</a> 
<a class="xref" href="#functions">[functions]</a> 
<a class="xref" href="#break">break</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#catch">catch</a> 
<a class="xref" href="#continue">continue</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#else">else</a> 
<a class="xref" href="#elseif">elseIf</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#message">message</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#return">return</a> 
<a class="xref" href="#set">set</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#try">try</a> 
<a class="xref" href="#var">var</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_for'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k367">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_frame'>
<td colspan="5">
<h3 class=h3newer>
<a id="frame" name="frame">frame or frames</a>
<a id="k368"> </a></h3></td></tr>
<tr name='tr_frame'>
<td>
<i >Sets the current frame or frame set. Numbers refer to the physical position of the model in the file or set of files (1 being the first). Same as the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#animation">animation frame</a> command. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#model">model</a>. Note that you can show specific pairs or sets of frames or models by using 
<b>frame all</b> followed by 
<b>display (*/n,*/m,*/p)</b>, where n, m, and p are frame numbers. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_backgroundmodel">set backgroundModel</a>. For the applet, if 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_animframecallback">AnimFrameCallback</a> is enabled, a message indicating the frame change is sent to the associated JavaScript function. The simple command 
<b>frame</b> has no observable effect but forces an animFrameCallback message to be sent, which also serves to update the pop-up context menu. This is sometimes useful if scripting has changed something in the structure such as the addition of vibration vectors that would alter menu options . 
<br />
<br /></i ></td></tr>
<tr name='tr_frame'>
<td valign="top">
<a name="frame__integer_>=_1_" id="k370"> </a>frame (integer >= 1)</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Go to a specific model in the case of loading a single file with multiple models. The number used here is the sequential index of the model in the file, starting with 1. If more than one file is loaded, the number indicates the file, and all models in that file are overlaid.</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame__positive_decimal_" id="k371"> </a>frame (positive decimal)</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Go to a specific model in a specific file when one or more files are loaded. The format for specifying which model to go to is the same as for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#select">select</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#display">display</a>: file.model. For example, 
<b>frame 2.3</b> goes to the third model in the second file listed in the most recent 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#load">load</a> command. Note that atoms in models chosen with the 
<b>frame</b> command must also be in the current 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#display">display</a> set in order to be visible. So, for example, 
<b>display 2.1;frame 2.2</b> will display nothing; 
<b>display connected(hbond);frame 2.2</b> will display only the hydrogen-bonded atoms in model 2.2. </i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame__decimal_" id="k373"> </a>frame (decimal) - (decimal)</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Sets the animation range and displays a range of models, possibly spanning multiple files. The hyphen is optional. If the hyphen is present but the second model number is missing, then all models from the designated model forward are assumed.</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame__negative_decimal_" id="k372"> </a>frame (negative decimal)</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Using a negative decimal indicates that one of the linear morphs between trajectory frames is to be shown. Files must have been loaded using the TRAJECTORY option.</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_0" id="k378"> </a>frame 0</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Overlay all frames of the current frame range set. Note that this may not be all the models if the frame range has been set to a subset of the models or if multiple files are loaded and only models within one file have been specified with a previous 
<b>frame</b> command.</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_0.0" id="k374"> </a>frame 0.0</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Same as 
<b>frame ALL</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_[_array_of_model_numbers_]" id="k376"> </a>frame [ array of model numbers ]</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Sets the current frame set; same as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#anim">anim frames [ ... ]</a> followed by 
<b>frame *</b>. Ranges of frames can be written with hyphenes: [ 1-5 7-11]. The atom selector 
<b>thisModel</b> selects for atoms in the current frame set. Note that these models can be in any order.</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_" id="k375"> </a>frame {atomSet}</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >This syntax allows setting of a model by an atom set. The first atom in the set determines which model is displayed. For example, 
<b>model {within(smarts,"[r3]")}</b> would bring into frame the first model with a 3-membered ring. </i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_"id"" id="k377"> </a>frame "id"</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Recalls a frame with the given ID assigned with the 
<b>frame ID</b> command option.</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_align" id="k380"> </a>frame ALIGN 
<a class='def' href='#d379' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Provides a way to align structures across a set of frames. This is important for certain animations. The atom expression is evaluated per frame, and the resultant point is aligned in each case.</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_align" id="k381"> </a>
<span class=newer>frame ALIGN 
<a class='def' href='#d379' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a> FIXED [
<b>Jmol 14.3.13</b>]</span></td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Addition of FIXED ensures that atom alignment continues even when multiple models are showing. Note, however, that in this first implementation, objects such as isosurfaces and drawn objects are not shifted (as they would be when TRUE is not present). </span></i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_modelid" id="k382"> </a>
<span class=newer>frame modelID ALIGN {x y z} [
<b>Jmol 14.3.13</b>]</span></td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >
<span class=newer>aligns a model at a specific coordinate rather than at an atom. TRUE is assumed; the same issues as above involving objects are the case here.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_all" id="k383"> </a>frame ALL</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Resets the frame range to all models and overlays them.</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_create" id="k384"> </a>frame CREATE (integer)</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Creates one or more "empty" models. If no parameter is given, 1 is assumed.</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_id" id="k385"> </a>frame ID "id"</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Assigns an ID to a frame that can later be used to recall the frame using 
<b>FRAME "xxx"</b> where 
<b>xxx</b> is a frame ID.</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_last" id="k386"> </a>frame LAST</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Go to the last frame in the frame range set.</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_next" id="k387"> </a>frame NEXT</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Go to next frame in the frame range set.</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_pause" id="k388"> </a>frame PAUSE</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Pause animation at the current frame.</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_play" id="k389"> </a>frame PLAY (starting frame)</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Start playing at the specified frame number (current frame if number is omitted). Direction, speed of play, and mode of animation (ONCE, LOOP, or PALINDROME) are set using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#animation">animation mode</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_playrev" id="k390"> </a>frame PLAYREV (starting frame)</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Start playing at the specified frame number (current frame if number is omitted), reversing the direction.</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_previous" id="k391"> </a>frame PREVIOUS</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Go to previous frame in the current frame set.</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_range" id="k392"> </a>frame RANGE (starting frame) (ending frame)</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Sets the range of frames to play as an animation and sets the current frame to the first number given. If the starting frame number is larger than the ending frame number, then play is in reverse. If only one number is given, then the range is set from that frame through the last frame in the file. If both numbers are omitted, then the range is set to include all frames in the file.</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_resume" id="k393"> </a>frame RESUME</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Resume playing from the current frame. (Same as PLAY.)</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_rewind" id="k394"> </a>frame REWIND</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Return to the first frame in the frame range set. </i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_title" id="k395"> </a>frame TITLE "title"</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Sets a title for all frames currently visible, which appears in the bottom left corner of the applet or application. If the title includes an expression such as "@{_modelName}", then that expression is evaluated whenever the model is rendered (for example, when the frame is changed). To set all titles at once, first make all frames visible. with 
<b>frame all</b>, then issue the 
<b>frame title</b> command.</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td valign="top">
<a name="frame_title" id="k396"> </a>frame TITLE (array)</td ></tr>
<tr name='tr_frame'>
<td>
<blockquote>
<p >
<i >Sets the title for all visible frames at once using an array of strings. For example, this sequence might give each frame title that shows the minimum energy for the files, converting energies to kJ/mol in the process: 
<br>
<br> x = getproperty("modelinfo.models.energy")
<br> y = x.sub(x.min).mul(2625.5) # relative energies, in kJ
<br>frame *;frame title @y</i ></p ></blockquote></td></tr> 
<tr name='tr_frame'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_frame'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('models')">in new window using cyclohexane_movie.xyz</td></tr>
<tr name='tr_frame'>
<td>
<table cellpadding="10">
<tr>
<td class="example">model 1
<br />model NEXT
<br />model PREVIOUS
<br />model 0;select *;wireframe 0.1;spacefill 0.2
<br />anim on
<br />model 0;select *;wireframe off;spacefill off;
<br />select 1.1 # in Jmol10 use */1
<br />wireframe 0.1;spacefill 0.2;color atoms red;
<br />select 1.35;wireframe 0.1;spacefill 0.2;color atoms blue</td></tr></table></td></tr>
<tr name='tr_frame'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples/animation.htm">animation.htm</a> </td></tr>
<tr name='tr_frame'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_frame'>
<td colspan="5">
<p>
<a class="xref" href="#animation">animation</a> 
<a class="xref" href="#file">file</a> 
<a class="xref" href="#invertselected">invertSelected</a> 
<a class="xref" href="#model">model</a> 
<a class="xref" href="#move">move</a> 
<a class="xref" href="#moveto">moveto</a> 
<a class="xref" href="#rotateselected">rotateSelected</a> 
<a class="xref" href="#setmisc">set (misc)</a> 
<a class="xref" href="#spin">spin</a> 
<a class="xref" href="#translate">translate</a> 
<a class="xref" href="#translateselected">translateSelected</a> 
<a class="xref" href="#zoom">zoom</a> 
<a class="xref" href="#zoomto">zoomto</a> </p></td></tr>
<tr name='tr_frame'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k369">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_frank'>
<td colspan="5">
<h3 >
<a id="frank" name="frank">frank</a>
<a id="k397"> </a></h3></td></tr>
<tr name='tr_frank'>
<td>
<i >Determines whether or not "Jmol" is indicated in the bottom right corner of the window.
<br />
<br /></i ></td></tr>
<tr name='tr_frank'>
<td valign="top">
<a name="frank_._on_off" id="k399"> </a>frank ON/OFF</td ></tr>
<tr name='tr_frank'>
<td>
<blockquote>
<p >
<i >Turning the frank off is disabled for the signed applet running on a web server.</i ></p ></blockquote></td></tr> 
<tr name='tr_frank'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k398">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_geosurface'>
<td colspan="5">
<h3 >
<a id="geosurface" name="geosurface">geoSurface</a>
<a id="k400"> </a></h3></td></tr>
<tr name='tr_geosurface'>
<td>
<i >Turns a crude geodesic molecular surface on or off around the currently selected atoms. If a decimal with an explicit "+" sign is given, or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_solvent">set solvent ON</a>) is in effect, the resultant surface is a crude solvent-accessible surface. This command has the same syntax as the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#dots">dots</a> command. To color the surface, use 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#colormodelobject">color geosurface</a>. For a smoother surface, use 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface SASURFACE 1.2</a>.
<br />
<br /></i ></td></tr>
<tr name='tr_geosurface'>
<td valign="top">
<a name="geosurface_" id="k402"> </a>geoSurface ON/OFF{default: ON}</td ></tr> 
<tr name='tr_geosurface'>
<td valign="top">
<a name="geosurface_only" id="k403"> </a>geoSurface ONLY</td ></tr>
<tr name='tr_geosurface'>
<td>
<blockquote>
<p >
<i >Turns geosurface rendering on and all other rendering (including labels) off.</i ></p ></blockquote></td></tr> 
<tr name='tr_geosurface'>
<td valign="top">
<a name="geosurface_vanderwaals" id="k404"> </a>geoSurface VANDERWAALS</td ></tr>
<tr name='tr_geosurface'>
<td>
<blockquote>
<p >
<i >Draws a geodesic surface at the van der Waals radius for the selected atoms. See 
<a class="xref" href="misc/radii.xls" target="_blank">radii.xls</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_geosurface'>
<td valign="top">
<a name="geosurface_ionic" id="k405"> </a>geoSurface IONIC</td ></tr>
<tr name='tr_geosurface'>
<td>
<blockquote>
<p >
<i >Draws a geodesic surface at the (nominal) ionic radius for the selected atoms if the atom's charge has been read and is nonzero; uses the nominal covalent bonding radius otherwise (
<a class="xref" href="misc/radii.xls" target="_blank">radii.xls</a>).</i ></p ></blockquote></td></tr> 
<tr name='tr_geosurface'>
<td valign="top">
<a name="geosurface__integer_" id="k406"> </a>geoSurface (integer)</td ></tr>
<tr name='tr_geosurface'>
<td>
<blockquote>
<p >
<i >Draws a geodesic surface at the indicated percent of the van der Waals radius for each atom (maximum value 1000%).</i ></p ></blockquote></td></tr> 
<tr name='tr_geosurface'>
<td valign="top">
<a name="geosurface__decimal_" id="k407"> </a>geoSurface (decimal)</td ></tr>
<tr name='tr_geosurface'>
<td>
<blockquote>
<p >
<i >Draws a geodesic surface at the indicated radius in Angstroms for each atom (maximum value 10.0 Angstroms).</i ></p ></blockquote></td></tr> 
<tr name='tr_geosurface'>
<td valign="top">
<a name="geosurface_+_decimal_" id="k408"> </a>geoSurface +(decimal)</td ></tr>
<tr name='tr_geosurface'>
<td>
<blockquote>
<p >
<i >Draws a geodesic surface at the indicated distance in Angstroms beyond the van der Waals radius for each atom (maximum value 10.0 Angstroms). The "+" sign is required. This surface approximates the solvent-accessible surface with the indicated solvent probe radius. Typically this number is +1.2 or +1.4. This command overrides the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_solvent">set solvent/set radius</a> method of defining the solvent-accessible surface.</i ></p ></blockquote></td></tr> 
<tr name='tr_geosurface'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_geosurface'>
<td colspan="5">
<p>
<a class="xref" href="#backbone">backbone</a> 
<a class="xref" href="#background">background</a> 
<a class="xref" href="#cartoon">cartoon</a> 
<a class="xref" href="#dots">dots</a> 
<a class="xref" href="#ellipsoid">ellipsoid</a> 
<a class="xref" href="#meshribbon">meshribbon</a> 
<a class="xref" href="#ribbon">ribbon</a> 
<a class="xref" href="#rocket">rocket</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlighting">set (lighting)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#strand">strand</a> 
<a class="xref" href="#trace">trace</a> 
<a class="xref" href="#vector">vector</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_geosurface'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k401">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_getproperty'>
<td colspan="5">
<h3 class=h3new>
<a id="getproperty" name="getproperty">getProperty</a>
<a id="k409"> </a> 
<br />
<span class=new>(v. 11.0 NEW)</span></h3></td></tr>
<tr name='tr_getproperty'>
<td>
<i >The 
<b>getProperty</b> command sends information to the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#console">Jmol console</a> or message callback function defined for a Jmol applet using the jmolSetCallback("messageCallback", funcName) function in Jmol.js or via the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setcallback">set</a> command. Either a simple text string in the case of a file property or a valid JSON (JavaScript Object Notation) string in the case of a molecular property is returned. Such callbacks are asynchronous, meaning they do not return a value immediately. An alternative synchronous method for the applet is to use one of the JSmol built-in JavaScript commands Jmol.getPropertyAsArray(), Jmol.getPropertyAsString(), Jmol.getPropertyAsJSON(), or Jmol.getPropertyAsJavaObject(), all of which take three parameters: applet, infoType, and params. For example, in JavaScript:
<code>
<br>
<br>var modelInfo = Jmol.getPropertyAsArray(jmolApplet0, "modelInfo")
<br>alert(modelInfo.modelCount)
<br>for (int i = 0; i &lt; modelInfo.modelCount; i++)
<br>  alert(modelInfo.models[i].name)</code>. 
<br>
<br>In addition, when using the Jmol application, see the note at 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#show">show</a> regarding setting the output to go directly into a file on your system. 
<br>
<br>This information is also available using the Jmol math 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#functions">getProperty()</a> function.
<br />
<br /></i ></td></tr>
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_animationinfo" id="k411"> </a>getProperty animationInfo</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >Structure describing the current state of animation. See 
<a class="xref" href="misc/animationInfo.txt" target="_blank">animationInfo.txt</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_appletinfo" id="k412"> </a>getProperty appletInfo</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >Structure describing the applet, including, for example, the applet version, compile date, Java version, and name of the applet object. See 
<a class="xref" href="misc/appletInfo.txt" target="_blank">appletInfo.txt</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_atominfo" id="k414"> </a>getProperty atomInfo 
<a class='def' href='#d413' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >Structure describing the atoms in the model. A second (optional) parameter specifies a subset of the atoms. The default is (visible). Parentheses are required. See 
<a class="xref" href="misc/atomInfo.txt" target="_blank">atomInfo.txt</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_auxiliaryinfo" id="k415"> </a>getProperty auxiliaryInfo</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >Structure describing auxiliary information that is in the loaded file. This information is file-dependent and might include, for example, symmetry information, molecular orbital coefficients, dipole moments, partial charges, and/or vibrational modes. See 
<a class="xref" href="misc/auxiliaryInfo.txt" target="_blank">auxiliaryInfo.txt</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_bondinfo" id="k416"> </a>getProperty bondInfo 
<a class='def' href='#d413' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >Structure describing the bonds in the model. A second (optional) parameter specifies a subset of the atoms that are involved in the bonds. The default is (visible). Parentheses are required. See 
<a class="xref" href="misc/bondInfo.txt" target="_blank">bondInfo.txt</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_boundboxinfo" id="k417"> </a>getProperty boundBoxInfo</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >A simple JSON array containing the coordinates of the center and corner of the volume containing the molecule. See 
<a class="xref" href="misc/boundBoxInfo.txt" target="_blank">bondBoxInfo.txt</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_centerinfo" id="k418"> </a>getProperty centerInfo</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >A single JSON array giving the current center coordinate. See 
<a class="xref" href="misc/centerInfo.txt" target="_blank">centerInfo.txt</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_chaininfo" id="k419"> </a>getProperty chainInfo 
<a class='def' href='#d413' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >Structure describing the chains in a biomodel (PDB or mmCIF, for example). Information for each residue of the chain is provided. A second (optional) parameter specifies a subset of the atoms. The default is (visible). Parentheses are required. See 
<a class="xref" href="misc/chainInfo.txt" target="_blank">chainInfo.txt</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_datainfo" id="k420"> </a>getProperty dataInfo type</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >Returns an array having two elements. Generally the first element is the data label, and the second element is the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#data">data</a> itself. 
<b>getProperty data TYPES</b> returns a first element that is the string "types" and a second element that is a comma-separated list of the available data types. </i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_extractmodel" id="k421"> </a>getProperty extractModel 
<a class='def' href='#d413' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >The extractModel keyword delivers text in the form of a MOL file, allowing up to 999 atoms and 999 bonds to be "extracted" from the model as an independent structure. </i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_filecontents" id="k422"> </a>getProperty fileContents</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >The contents of the currently loaded file.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_filecontents" id="k423"> </a>getProperty fileContents filepath</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >The contents of ANY file on the web or, if operating locally, any file on the hard drive in the directory containing the JAR file or any directory below that.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_fileheader" id="k424"> </a>getProperty fileHeader</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >The file header for the file. This will depend upon the file format; some file formats may not have file headers.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_filename" id="k425"> </a>getProperty fileName</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >The file name of the currently loaded file.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_fileinfo" id="k426"> </a>getProperty fileInfo type</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >An associative array of file information. For most files this is simply the file header lines. In the case of PDB files, this array associates PDB header information with its resource name. For example, 
<b>getProperty fileInfo.SHEET</b> reports SHEET information from the PDB header. In the case of CIF files, this information is the entire contents of the file in array format. (See also the function 
<b>getProperty("fileInfo")</b>, which allows direct access to file information as a Jmol variable. For example, 
<b>x = getProperty("fileInfo.REMARK800")</b>. </i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_image" id="k427"> </a>getProperty image</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >A base-64 encoded JPEG suitable for writing by the applet to an image tag using a dataURI. For example, in JavaScript on the page using JSmol.min.js, with an applet named jmolApplet0: 
<b>var img = new Image(); img.src="data:image/jpeg;base64," + Jmol.getPropertyAsString(jmolApplet0,"image");$("body").append(img)</b> .</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_isosurfacedata" id="k428"> </a>getProperty isosurfaceData</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >Returns information about an isosurface of 
<b>getProperty isosurfaceInfo</b> along with vertices, vertex values, and polygons.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_isosurfaceinfo" id="k429"> </a>getProperty isosurfaceInfo</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >Returns information about an isosurface, including haveQuads, haveValues, id, polygonCount, and vertexCount.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_ligandinfo" id="k430"> </a>getProperty ligandInfo</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >Structure indicating ligand information, including and array of "ligands", each containing items "reslist", "atoms", and "groupNames".</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_measurementinfo" id="k431"> </a>getProperty measurementInfo</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >Structure describing the currently-defined measurements for the model, including the atoms involved, the measurement type, and the value of the measurement in decimal and in string formats. See 
<a class="xref" href="misc/measurementInfo.txt" target="_blank">measurementInfo.txt</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_menu" id="k432"> </a>getProperty menu</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >A tab-separated string defining the current Jmol menu, including what options are currently enabled. See, for example, 
<a class="xref" href="misc/menu.tab" target="_blank">misc/menu.tab</a>. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#show">show MENU</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_minimizationinfo" id="k433"> </a>getProperty minimizationInfo</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >A summary of the minimization that was carried out. See 
<a class="xref" href="misc/minimizationInfo.txt" target="_blank">minimizationInfo.txt</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_modelinfo" id="k434"> </a>getProperty modelInfo</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >Structure describing each model in the loaded model collection. See 
<a class="xref" href="misc/modelInfo.txt" target="_blank">modelInfo.txt</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_moleculeinfo" id="k435"> </a>getProperty moleculeInfo 
<a class='def' href='#d413' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >Structure describing each molecule (covalent set of atoms) in the model, including the number of atoms, the number of elements, and the molecular formula. A second (optional) parameter specifies a subset of the atoms. The default is (visible). Parentheses are required. See 
<a class="xref" href="misc/moleculeInfo.txt" target="_blank">moleculeInfo.txt</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_nmrinfo" id="k436"> </a>getProperty nmrinfo</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >Structure describing NMR calculation data including (a) a table of isotope masses (negative if these are default parameters for a nucleus), gyromagnetic ratio, and quadrapolar coupling constant, and (b) assigned shift references in PPM. See 
<a class="xref" href="misc/nmrInfo.txt" target="_blank">nmrInfo.txt</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_orientationinfo" id="k437"> </a>getProperty orientationInfo</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >Structure describing the moveTo command required to return to the currently displayed orientation. See 
<a class="xref" href="misc/orientationInfo.txt" target="_blank">orientationInfo.txt</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_polymerinfo" id="k438"> </a>getProperty polymerInfo 
<a class='def' href='#d413' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >Structure similar to chainInfo describing the residues in a biomodel. A second (optional) parameter specifies a subset of the atoms. The default is (visible). Parentheses are required. See 
<a class="xref" href="misc/polymerInfo.txt" target="_blank">polymerInfo.txt</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_shapeinfo" id="k439"> </a>getProperty shapeInfo</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >Structure listing a small amount of information relating to shapes displayed with the model (molecular orbitals, isosurfaces, cartoons, rockents, dipoles, etc.) See 
<a class="xref" href="misc/shapeInfo.txt" target="_blank">shapeInfo.txt</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_stateinfo" id="k440"> </a>getProperty stateInfo</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >The same report as 
<b>SHOW STATE</b>; useful especiall as 
<b>x = getProperty("stateInfo")</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_transforminfo" id="k441"> </a>getProperty transformInfo</td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >Structure representing the current transformation matrix describinng the current orientation of the model. See 
<a class="xref" href="misc/transformInfo.txt" target="_blank">transformInfo.txt</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td valign="top">
<a name="getproperty_variableinfo" id="k442"> </a>
<span class=new>getProperty variableInfo (math expression)</span></td ></tr>
<tr name='tr_getproperty'>
<td>
<blockquote>
<p >
<i >
<span class=new>Evaluates a variable. This option is most likely used in association with JavaScript. The JSmol API includes 
<b>Jmol.evaluateVar(app,expr)</b> where app is an applet object and expr is a string containing a Jmol math expression (anything that work with the print command). For example, "
<a class="xref" href="atomno 
< 3" target="_blank">" or "at.join(af)".</a></span></i ></p ></blockquote></td></tr> 
<tr name='tr_getproperty'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_getproperty'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_getproperty'>
<td colspan="5">
<p>
<a class="xref" href="#boundbox">boundbox</a> 
<a class="xref" href="#javascript">javascript</a> 
<a class="xref" href="#script">script</a> 
<a class="xref" href="#setcallback">set (callback)</a> 
<a class="xref" href="#show">show</a> </p></td></tr>
<tr name='tr_getproperty'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k410">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_goto'>
<td colspan="5">
<h3 >
<a id="goto" name="goto">goto</a>
<a id="k443"> </a></h3></td></tr>
<tr name='tr_goto'>
<td>
<i >Transfers script execution to the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#message">message</a> command having the matching text. If an underscore is at the beginning of the text, then the text is not displayed, otherwise the message text is displayed in the console as usual for that command.
<br>
<br>message _test
<br>...
<br>...
<br>goto _test
<br>
<br>
<br>The 
<b>goto</b> command is largely deprecated by 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#if_while_for">
<b>if</b>, 
<b>while</b>, and 
<b>for</b></a>. These alternative commands are recommended.
<br />
<br /></i ></td></tr> 
<tr name='tr_goto'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_goto'>
<td colspan="5">
<p>
<a class="xref" href="#immediate!">[immediate (!)]</a> 
<a class="xref" href="#break">break</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#catch">catch</a> 
<a class="xref" href="#continue">continue</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#delay">delay</a> 
<a class="xref" href="#else">else</a> 
<a class="xref" href="#elseif">elseIf</a> 
<a class="xref" href="#exit">exit</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#loop">loop</a> 
<a class="xref" href="#pause">pause</a> 
<a class="xref" href="#quit">quit</a> 
<a class="xref" href="#resume">resume</a> 
<a class="xref" href="#return">return</a> 
<a class="xref" href="#step">step</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#try">try</a> 
<a class="xref" href="#var">var</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_goto'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k444">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_halos'>
<td colspan="5">
<h3 >
<a id="halos" name="halos">halos</a>
<a id="k445"> </a></h3></td></tr>
<tr name='tr_halos'>
<td>
<i >Displays a translucent two-dimensional ring around an atom. Halos are similar to 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#star">stars</a>, except halos may also be used for automatically displaying which atoms are currently selected. (This option is enabled using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#selectionhalos">selectionHalos</a>.) The radius can be set using the same options as for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#spacefill">spacefill</a>, but the actual radius of the halo will always be from 4 to 10 pixels larger then the nominal radius. 
<br />
<br /></i ></td></tr>
<tr name='tr_halos'>
<td valign="top">
<a name="halos_only" id="k448"> </a>halos ONLY</td ></tr>
<tr name='tr_halos'>
<td>
<blockquote>
<p >
<i >Turns halo rendering on and all other rendering (including labels) off.</i ></p ></blockquote></td></tr> 
<tr name='tr_halos'>
<td valign="top">
<a name="halos_" id="k447"> </a>halos ON/OFF{default: ON}</td ></tr>
<tr name='tr_halos'>
<td>
<blockquote>
<p >
<i >Turn halos on or off. The radius will change with the current spacefill setting.</i ></p ></blockquote></td></tr> 
<tr name='tr_halos'>
<td valign="top">
<a name="halos_reset" id="k449"> </a>halos reset</td ></tr>
<tr name='tr_halos'>
<td>
<blockquote>
<p >
<i >Resets the radius of the halo to the default 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#spacefill">spacefill</a> radius.</i ></p ></blockquote></td></tr> 
<tr name='tr_halos'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k446">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_hbonds'>
<td colspan="5">
<h3 >
<a id="hbonds" name="hbonds">hbonds</a>
<a id="k450"> </a></h3></td></tr>
<tr name='tr_hbonds'>
<td>
<i >Hydrogen bonds can be turned on or off, given custom widths in Angstroms, or colored (see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#colorbondobject">color hbonds</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setbondstyles">set HBONDS</a> ). In addition, Jmol allows calculation of actual hydrogen bonds (when hydrogen atoms are present in the selected set) or "pseudo" hydrogen bonds if hydrogen atoms are not present.
<br />
<br /></i ></td></tr>
<tr name='tr_hbonds'>
<td valign="top">
<a name="hbonds_" id="k452"> </a>hbonds ON/OFF{default: ON}</td ></tr> 
<tr name='tr_hbonds'>
<td valign="top">
<a name="hbonds_._hbond_width_angstroms" id="k454"> </a>hbonds 
<a class='def' href='#d453' title='a (decimal, &lt;2.0)'>[width-in-angstroms]</a></td ></tr> 
<tr name='tr_hbonds'>
<td valign="top">
<a name="hbonds_calculate" id="k455"> </a>hbonds CALCULATE</td ></tr>
<tr name='tr_hbonds'>
<td>
<blockquote>
<p >
<i >Calculates hydrogen bonds involving atoms currently selected and displays them. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">calculate HBONDS</a> for details.</i ></p ></blockquote></td></tr> 
<tr name='tr_hbonds'>
<td valign="top">
<a name="hbonds_delete" id="k456"> </a>hbonds DELETE</td ></tr>
<tr name='tr_hbonds'>
<td>
<blockquote>
<p >
<i >Deletes hydrogen bonds between atoms in the currently selected set of atoms. Both atoms of a given hydrogen bond need to be selected. </i ></p ></blockquote></td></tr> 
<tr name='tr_hbonds'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_hbonds'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_hbonds'>
<td colspan="5">
<p>
<a class="xref" href="#bondorder">bondorder</a> 
<a class="xref" href="#calculate">calculate</a> 
<a class="xref" href="#colorbondobject">color (bond object)</a> 
<a class="xref" href="#connect">connect</a> 
<a class="xref" href="#delete">delete</a> 
<a class="xref" href="#setbondstyles">set (bond styles)</a> 
<a class="xref" href="#setfilesandscripts">set (files and scripts)</a> 
<a class="xref" href="#ssbonds">ssbonds</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_hbonds'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k451">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_help'>
<td colspan="5">
<h3 >
<a id="help" name="help">help</a>
<a id="k457"> </a></h3></td></tr>
<tr name='tr_help'>
<td>
<i >Opens a new browser window to the interactive help page. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setmisc">set helpPath</a>. Currently for the applet only; the query will be searched as an exact, complete phrase (applet only).
<br />
<br /></i ></td></tr>
<tr name='tr_help'>
<td valign="top">
<a name="help_query" id="k459"> </a>help query</td ></tr> 
<tr name='tr_help'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k458">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_hide'>
<td colspan="5">
<h3 >
<a id="hide" name="hide">hide</a>
<a id="k460"> </a></h3>
<div class="chimenote">
<i>Note:</i> The hide command does not require { ... } around Jmol atom expressions.
<br />
<br /></div></td></tr>
<tr name='tr_hide'>
<td>
<i >The opposite of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#display">display</a>. Hides atoms and associated structures (bonds, halos, stars, cartoons, etc.). 
<b>Hide</b> is similar to 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#select">select</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#restrict">restrict</a> in its syntax. Unlike 
<b>restrict</b>, though, 
<b>hide</b> is completely reversible using 
<b>hide none</b>. (
<b>Restrict</b> acts by setting the "size" of the object to 0; 
<b>hide</b> leaves the size the same, but just hides the object until unhidden. Group-based structures such as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#cartoon">cartoons</a> and traces are hidden whenever their lead atom (the one that determines their position in space) is hidden. Hidden atoms can be selected with 
<b>select hidden</b> or deselected with 
<b>select not hidden</b>. Atoms can be added to the hidden set using 
<b>hide hidden or ...</b> or removed from the hidden set using 
<b>hide hidden and not ....</b>. In addition, bonds can be hidden or displayed.
<br />
<br /></i ></td></tr>
<tr name='tr_hide'>
<td valign="top">
<a name="hide_._atom_expression" id="k463"> </a>hide 
<a class='def' href='#d462' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_hide'>
<td>
<blockquote>
<p >
<i >Hides a set of atoms. Displays atoms and associated structures (bonds, halos, stars, cartoons, etc.) and hides all others. The optional parameters ADD and REMOVE prior to the atom expression allow quick alternatives to "hidden or..." and "hidden and not..." In addition, the keyword GROUP prior to the atom expression provides a quick alternative to "within(group, ...)".</i ></p ></blockquote></td></tr> 
<tr name='tr_hide'>
<td valign="top">
<a name="hide_bonds" id="k465"> </a>hide BONDS</td ></tr>
<tr name='tr_hide'>
<td>
<blockquote>
<p >
<i >Hides all bonds.</i ></p ></blockquote></td></tr> 
<tr name='tr_hide'>
<td valign="top">
<a name="hide_" id="k464"> </a>hide [{...}]</td ></tr>
<tr name='tr_hide'>
<td>
<blockquote>
<p >
<i >Hides a set of bonds.</i ></p ></blockquote></td></tr> 
<tr name='tr_hide'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_hide'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_hide'>
<td colspan="5">
<p>
<a class="xref" href="#display">display</a> 
<a class="xref" href="#restrict">restrict</a> 
<a class="xref" href="#select">select</a> 
<a class="xref" href="#subset">subset</a> </p></td></tr>
<tr name='tr_hide'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k461">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_history'>
<td colspan="5">
<h3 >
<a id="history" name="history">history</a>
<a id="k466"> </a></h3></td></tr>
<tr name='tr_history'>
<td>
<i >The 
<b>history</b> command turns command history recording on and off. Each time it is invoked, the command history list is cleared. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setfilesandscripts">set history</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#show">show history</a>.
<br />
<br /></i ></td></tr>
<tr name='tr_history'>
<td valign="top">
<a name="history_" id="k468"> </a>history ON/OFF{default: ON}</td ></tr> 
<tr name='tr_history'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k467">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_hover'>
<td colspan="5">
<h3 >
<a id="hover" name="hover">hover</a>
<a id="k469"> </a></h3></td></tr>
<tr name='tr_hover'>
<td>
<i >Turns on and off pop-up labels that appear when the user "hovers" the mouse over the atom or a point associated with a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a> object. 
<b>hover off</b> disables the hover message; 
<b>hover on</b> enables it again. Any other parameter or string is used as the label, which can contain atom property fields such as %a or %U and will apply to all atoms in the model. To set a specific hover label for one atom, select the atom(s) and then use 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_hoverlabel">set hoverLabel</a>. To change the delay time prior to the label appearing, use 
<b>set hoverDelay x.x</b> where 
<b>x.x</b> is the delay time in seconds. Setting this time to 0.001 seconds effectively makes the hover label appear immediately. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#label">label</a>. Multiple lines can be indicated using | (vertical bar). In the Jmol applet version 11.0, even with 
<b>hover OFF</b>, the hover message can be sent to a JavaScript function on the applet's page using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_hovercallback">set hoverCallback</a>.
<br />
<br /></i ></td></tr> 
<tr name='tr_hover'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_hover'>
<td colspan="5">
<p>
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#font">font</a> 
<a class="xref" href="#label">label</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlabels">set (labels)</a> 
<a class="xref" href="#setecho">set echo</a> </p></td></tr>
<tr name='tr_hover'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k470">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_if'>
<td colspan="5">
<h3 >
<a id="if" name="if">IF</a>
<a id="k471"> </a></h3>   
<a class="textParam" href="#ifif/else/elseif">if/else/elseif</a>
<br />   
<a class="textParam" href="#ifin-lineif">in-line IF</a>
<br />
<br />
<div class="chimenote">
<i>Note:</i> The IF command does not require @{ ... } around Jmol math expressions.
<br />
<br /></div></td></tr>
<tr name='tr_if'>
<td>
<i >Jmol scripting allows for both the standard 
<b>if/else/elseif</b> statement set as well as the standard Java/JavaScript-like inline 
<b>(ifThis ? thenThis : elseThis)</b> construct.
<br />
<br />
<b>
<a name="ifif/else/elseif">if/else/elseif</a></b>    
<a href="#if">back</a>
<br />
<br /> The 
<b>if</b> statement takes a logical expression of variables and evaluates it either as TRUE or FALSE. Tests include a wide variety of flags that can be set using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set">set</a> command as well as any 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#jmolmath">user-defined variables</a>. The standard commands 
<b>elseif</b> (or 
<b>else if</b>) and 
<b>else</b> are supported. 
<b>If</b> blocks are defined by matched pairs of braces:
<br>
<br>
<br>if (doSpacefill) {
<br>  spacefill only
<br>} elseif (doWireframe) {
<br>  wireframe only
<br>} else {
<br>  wireframe 0.15;spacefill 20%
<br>}
<br> 
<br>These constructs are compatible with 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#goto">goto</a>. However, using 
<b>goto</b> to jump into the middle of an 
<b>if</b>, 
<b>while</b>, or 
<b>for</b> block is considered bad form and is not recommended. 
<br> 
<br>Note that with the Jmol application multiline scripts are not allowed on the script window command line. Either separate commands by semicolon and introduce them all on the same line, or store the script in a file and run it using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#script">script</a> command. This is not an issue with the applet.
<br>
<br> 
<b>if/else/endif</b> syntax is also supported. If/else/endif syntax can be entered on a single line without unnecessary semicolons: 
<br>
<br>    if (this) print "this" else print "that"
<br>    if (this) { print "this" } else { print "that" } 
<br>    if (this); print "this"; else; print "that"; endif;
<br>
<br>are all identical.
<br />
<br />
<b>
<a name="ifin-lineif">in-line IF</a></b>    
<a href="#if">back</a>
<br />
<br /> You can use a similar construct to Java's/JavaScript's 
<b>(ifTrue ? thisValue : orThisTrue ? thatValue : otherValue)</b>. Jmol accepts this format and also allows for a syntax that uses semicolons: 
<br>
<br>    xxx = if(ifTrue; thisValue; thatValue)
<br>
<br>For example, 
<br>
<br>    set echo top left;echo @{(_modelnumber > 1.1 ? "previous" : "next")}
<br>
<br> or, equivalently, 
<br>
<br>    set echo top left;echo @{if(_modelnumber > 1.1;"previous" ; "next")}
<br>
<br>. Used in conjunction with inline FOR, the inline IF provides a powerful and concise way to work with molecular data.
<br />
<br /></i ></td></tr> 
<tr name='tr_if'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_if'>
<td colspan="5">
<p>
<a class="xref" href="#jmolcommandsyntax">[Jmol Command Syntax]</a> 
<a class="xref" href="#jmolmath">[Jmol Math]</a> 
<a class="xref" href="#jmolparameters">[Jmol Parameters]</a> 
<a class="xref" href="#atomexpressions">[atom expressions]</a> 
<a class="xref" href="#atomproperties">[atom properties]</a> 
<a class="xref" href="#functions">[functions]</a> 
<a class="xref" href="#break">break</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#catch">catch</a> 
<a class="xref" href="#continue">continue</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#else">else</a> 
<a class="xref" href="#elseif">elseIf</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#message">message</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#return">return</a> 
<a class="xref" href="#set">set</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#try">try</a> 
<a class="xref" href="#var">var</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_if'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k472">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_image'>
<td colspan="5">
<h3 class=h3newer>
<a id="image" name="image">image</a>
<a id="k473"> </a> 
<br />
<span class=newer>(v. 14.4)</span></h3></td></tr>
<tr name='tr_image'>
<td>
<i >The IMAGE command can be used to display arbitrary 2D images. In Java, these images are brought up in their own windows; in HTML5, you have the option to open a new floating div or to designate page-based divs in which to hold specific images. In HTML5, the image will be placed in (a) a div with id (appletID)_Image_(id)_holder or, if that does not exist, (b) a div with id (appletID)_Image_holder, or if that does not exist, (c) a floating image div with ID (appletID)_Image_(id) that contains the div (appletID)_Image_(id)_holder. (appletID) is the applet id, for example, jmolApplet0; (id) is from the specified ID, or the file name if that is given, or "app" if it is not. This ID is "cleaned" by removing the path of a file name and replacing all nonalphanumeric characters with "_". 
<br />
<br /></i ></td></tr>
<tr name='tr_image'>
<td valign="top">
<a name="image_id" id="k475"> </a>image ID id</td ></tr>
<tr name='tr_image'>
<td>
<blockquote>
<p >
<i >Displays the current image. Specifying an ID is optional, defaulting to "app". </i ></p ></blockquote></td></tr> 
<tr name='tr_image'>
<td valign="top">
<a name="image_id" id="k476"> </a>image ID id width height</td ></tr>
<tr name='tr_image'>
<td>
<blockquote>
<p >
<i >Allows display of the current image at a different width or height</i ></p ></blockquote></td></tr> 
<tr name='tr_image'>
<td valign="top">
<a name="image_id" id="k477"> </a>image ID id "filename"</td ></tr>
<tr name='tr_image'>
<td>
<blockquote>
<p >
<i >Displays a file-based image.</i ></p ></blockquote></td></tr> 
<tr name='tr_image'>
<td valign="top">
<a name="image_id" id="k478"> </a>image ID id close</td ></tr>
<tr name='tr_image'>
<td>
<blockquote>
<p >
<i >Closes the specified image window.</i ></p ></blockquote></td></tr> 
<tr name='tr_image'>
<td valign="top">
<a name="image_"filename"" id="k479"> </a>image "filename" close</td ></tr>
<tr name='tr_image'>
<td>
<blockquote>
<p >
<i >Closes the image window associated with the given file, assuming an ID has not been specified.</i ></p ></blockquote></td></tr> 
<tr name='tr_image'>
<td valign="top">
<a name="image_close" id="k480"> </a>image close</td ></tr>
<tr name='tr_image'>
<td>
<blockquote>
<p >
<i >Closes all image windows.</i ></p ></blockquote></td></tr> 
<tr name='tr_image'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k474">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_initialize'>
<td colspan="5">
<h3 >
<a id="initialize" name="initialize">initialize</a>
<a id="k481"> </a></h3></td></tr>
<tr name='tr_initialize'>
<td>
<i >The 
<b>initialize</b> command is a specialized script command only intended for use within a state script created using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write state</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#save">save state</a> commands. It deletes user variables and resets most settings to original Jmol values in an anticipation of those settings being set in the state. It does not do a full reset to Jmol's initial state, however. If that capability is desired, one should save the initial state and then 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#restore">restore</a> it. Settings specifically NOT set include: allowGestures, allowKeyStrokes, allowModelkit, allowMultiTouch, debugScript, defaultDirectory, disablePopupMenu, legacyAutoBonding, messageStyleChime, useScriptQueue.
<br />
<br /></i ></td></tr> 
<tr name='tr_initialize'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_initialize'>
<td colspan="5">
<p>
<a class="xref" href="#jmol/jspecview/magresview">[Jmol/JSpecView/MagresView]</a> 
<a class="xref" href="#cache">cache</a> 
<a class="xref" href="#define">define</a> 
<a class="xref" href="#load">load</a> 
<a class="xref" href="#refresh">refresh</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#restore">restore</a> 
<a class="xref" href="#save">save</a> 
<a class="xref" href="#setfilesandscripts">set (files and scripts)</a> 
<a class="xref" href="#unset">unset</a> 
<a class="xref" href="#zap">zap</a> </p></td></tr>
<tr name='tr_initialize'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k482">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_invertselected'>
<td colspan="5">
<h3 >
<a id="invertselected" name="invertselected">invertSelected</a>
<a id="k483"> </a></h3></td></tr>
<tr name='tr_invertselected'>
<td>
<i >This command allows inversion of the selected atoms through a point or across a plane. With no parameters, the model is inverted through its geometric center.
<br />
<br /></i ></td></tr>
<tr name='tr_invertselected'>
<td valign="top">
<a name="invertselected_point" id="k485"> </a>invertSelected POINT point_definition</td ></tr>
<tr name='tr_invertselected'>
<td>
<blockquote>
<p >
<i >Following the POINT keyword may be any expression that can be evaluated to give a point, including {x y z} (cartesian or fractional), a draw object identifier, $xxx, or an atom expression in parentheses, which will be evaluated as an average position.</i ></p ></blockquote></td></tr> 
<tr name='tr_invertselected'>
<td valign="top">
<a name="invertselected_plane" id="k486"> </a>invertSelected PLANE plane_expression</td ></tr>
<tr name='tr_invertselected'>
<td>
<blockquote>
<p >
<i >inverts the selected atoms across a plane defined using any valid 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#planeexpressions">plane expression</a>. </i ></p ></blockquote></td></tr> 
<tr name='tr_invertselected'>
<td valign="top">
<a name="invertselected_hkl" id="k487"> </a>invertSelected HKL {h k l}</td ></tr>
<tr name='tr_invertselected'>
<td>
<blockquote>
<p >
<i >Specifies that the coordinates are the Miller indices of the plane to be used for the inversion.</i ></p ></blockquote></td></tr> 
<tr name='tr_invertselected'>
<td valign="top">
<a name="invertselected_stereo" id="k488"> </a>invertSelected STEREO {center} {atomsToInvert}</td ></tr>
<tr name='tr_invertselected'>
<td>
<blockquote>
<p >
<i >Carries out a rotation of 180 degrees around a center about a line connecting the center and the geometric center of any connected atoms not in the list to invert. The results is the standard organic chemist's "stereochemical inversion" at that point -- which does not invert stereochemistry along the branches. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setpicking">set picking invertStereo</a></i ></p ></blockquote></td></tr> 
<tr name='tr_invertselected'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_invertselected'>
<td colspan="5">
<p>
<a class="xref" href="#animation">animation</a> 
<a class="xref" href="#file">file</a> 
<a class="xref" href="#frame">frame</a> 
<a class="xref" href="#move">move</a> 
<a class="xref" href="#moveto">moveto</a> 
<a class="xref" href="#rotateselected">rotateSelected</a> 
<a class="xref" href="#setmisc">set (misc)</a> 
<a class="xref" href="#spin">spin</a> 
<a class="xref" href="#translate">translate</a> 
<a class="xref" href="#translateselected">translateSelected</a> 
<a class="xref" href="#zoom">zoom</a> 
<a class="xref" href="#zoomto">zoomto</a> </p></td></tr>
<tr name='tr_invertselected'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k484">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_isosurface'>
<td colspan="5">
<h3 class=h3newer>
<a id="isosurface" name="isosurface">isosurface</a>
<a id="k489"> </a></h3>   
<a class="textParam" href="#isosurfaceidobjectid">ID [object id]</a>
<br />   
<a class="textParam" href="#isosurfaceconstruction/mappingparameters--molecular/solventsurfaces">[construction/mapping parameters] -- molecular/solvent surfaces</a>
<br />   
<a class="textParam" href="#isosurfaceconstruction/mappingparameters--molecularorbitals">[construction/mapping parameters] -- molecular orbitals</a>
<br />   
<a class="textParam" href="#isosurfaceconstruction/mappingparameters--generalshapesandvolumetriccubefiledata">[construction/mapping parameters] -- general shapes and volumetric (cube file) data</a>
<br />   
<a class="textParam" href="#isosurfaceconstruction/mappingparameters--generalfileloading">[construction/mapping parameters] -- general file loading</a>
<br />   
<a class="textParam" href="#isosurfacecolorandcontouroptions">[color and contour options]</a>
<br />   
<a class="textParam" href="#isosurfacesurfaceobject--molecular/solventsurfaces">[surface object] -- molecular/solvent surfaces</a>
<br />   
<a class="textParam" href="#isosurfacesurfaceobject--atomicandmolecularorbitals">[surface object] -- atomic and molecular orbitals</a>
<br />   
<a class="textParam" href="#isosurfacesurfaceobject--generalshapes">[surface object] -- general shapes</a>
<br />   
<a class="textParam" href="#isosurfacesurfaceobject--file-derivedisosurfaces">[surface object] -- file-derived isosurfaces</a>
<br />   
<a class="textParam" href="#isosurfacesurfaceobject--volumefile-derivedisosurfaces">[surface object] -- volume file-derived isosurfaces</a>
<br />   
<a class="textParam" href="#isosurfacesurfaceobject--surfacedata-derivedisosurfaces">[surface object] -- surface data-derived isosurfaces</a>
<br />   
<a class="textParam" href="#isosurfacesurfaceobject--additionalsurfacesources">[surface object] -- additional surface sources</a>
<br />   
<a class="textParam" href="#isosurfaceadditionalmapping-onlyparameters">[additional mapping-only parameters]</a>
<br />   
<a class="textParam" href="#isosurfacemapcolormappingdataset">MAP [color mapping dataset]</a>
<br />   
<a class="textParam" href="#isosurfacedisplayoptions">[display options] </a>
<br />
<br /></td></tr>
<tr name='tr_isosurface'>
<td>
<i >
<img style="clear:right" src="img/straightness.png" width="250" height="250" alt="" />Jmol can generate a large variety of objects using the method of isosurfaces. Many of these surfaces can be color-mapped. Two Jmol commands (
<b>isosurface</b> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#mo">mo</a>) render isosurfaces. The 
<b>isosurface</b> command itself provides ultimate control over these surface renderings. Before using the 
<b>isosurface</b> command, if you are interested in rendering molecular orbitals, you should first take a look at the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#mo">mo</a> command. 
<br>
<br>The general syntax of the 
<b>isosurface</b> command is as follows: 
<br> 
<br>
<b>isosurface ID [object id] [construction/mapping parameters] [surface object] [additional mapping-only parameters] MAP [color mapping dataset] [display options] </b>.
<br>
<br>The 
<b>isosurface</b> command is complex, and while the order of parameters is flexible 
<i>within these groups</i>, parameters in different groups should not be swapped in terms of order within the command, or the result is unpredictable or will cause an error message to be displayed. While the id is optional, it is highly recommended. Specifically for the options ON, OFF, and DELETE, the id may include a wildcard character (asterisk). Thus, 
<b>isosurface pl* on</b> turns on all isosurface objects having an ID starting with "pl". 
<br> 
<br> Data for these surfaces can be from several sources (see below). In addition, atom-based data from a variety of sources can be mapped onto an isosurface. 
<br>
<br>The isosurface itself represents the points in space where scalar values cross a specified "cutoff" value. Inside the surface, values are greater or equal to a specified positive cutoff or less than or equal to a specified negative cutoff. The default cutoff depends upon the type of object displayed. Note that positive and negative surfaces may be created separately, or, using the SIGN keyword, they can be generated together. 
<br>
<br>Color mapping of one object onto another is a simple as listing both an object and a dataset within the same isosurface command. Several keywords affecting the mapping are allowed. The default color scheme uses a red-->orange-->yellow-->green-->blue rainbow, where red represents minimum values and blue represents maximum values, but several other schemes are available (see below). Mapped data can be expressed as a series of contour lines.
<br />
<br />
<b>
<a name="isosurfaceidobjectid">ID [object id]</a></b>    
<a href="#isosurface">back</a>
<br />
<br /> The optional identifier allows you to refer back to this isosurface later for turning the surface on or off, deleting the surface, or changing display options. It must be either the first parameter or the second, just after DELETE. If the identifier is missing, behavior depends upon version. The ID keyword is optional but recommended, because then one can use any name for the ID; otherwise the name must not be one of the many Jmol command or keyword names. Leaving off the ID when creating an isosurface 
<i>replaces</i> the current isosurface with the new one.
<br />
<br />
<b>
<a name="isosurfaceconstruction/mappingparameters--molecular/solventsurfaces">[construction/mapping parameters] -- molecular/solvent surfaces</a></b>    
<a href="#isosurface">back</a>
<br />
<br /> 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>ADDHYDROGENS</b></td >
<td valign="top" >For a solvent or sasurface object, accounts for missing hydrogens on carbon atoms only just prior to generating the surface. A simple sp3 model is used, and for that reason this option is not recommended. Instead, use 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_pdbaddhydrogens">set pdbAddHydrogens</a> to load a PDB file and automatically add hydrogen atoms to ATOM and HETATM records. </td ></tr >
<tr >
<td valign="top" >
<b>IGNORE {atom expression}</b></td >
<td valign="top" >Specifies a set of atoms to completely ignore when generating a solvent-related surface (
<b>SOLVENT</b> or 
<b>SASURFACE</b>). Typically these might be solvent molecules or atoms: 
<b>IGNORE {solvent}</b>. Note that SASURFACE and SOLVENT surfaces by default ignore solvent molecules; VDW and MOLECULAR do not. </td ></tr >
<tr >
<td valign="top" >
<b>IONIC radius</b></td >
<td valign="top" >Atom radius relative to the ionic radius. Options include: 
<br> 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > x.x </td >
<td valign="top" > specific absolute number of Angstroms for every atom </td ></tr >
<tr >
<td valign="top" > +/-x.x </td >
<td valign="top" > offset greater(+) or less(-) than the ionic radius </td ></tr >
<tr >
<td valign="top" > nn% </td >
<td valign="top" > percent of the ionic radius </td ></tr >
<tr >
<td valign="top" > +/-nn% </td >
<td valign="top" > percent offset from the ionic radius </td ></tr ></table > </td ></tr >
<tr >
<td valign="top" >
<b>SELECT {atom_exp}</b></td >
<td valign="top" >Selects a specific subset of the atoms for this surface. Same as 
<b>select atom_exp; isosurface....</b> except the atoms are selected only within the isosurface command, not the overall script. </td ></tr >
<tr >
<td valign="top" >
<b>SELECT {atom_exp} ONLY</b></td >
<td valign="top" >Selects a specific subset of the atoms for this surface and also applies 
<b>IGNORE {not atom_exp}</b>. </td ></tr >
<tr >
<td valign="top" >
<b>SET n</b></td >
<td valign="top" >If an isosurface is fragmented, this option allows visualization of only the set of triangles composing one specific surface fragment. </td ></tr >
<tr >
<td valign="top" >
<b>VDW radius</b></td >
<td valign="top" >Atom radius relative to the van der Waals radius. Options include: 
<br> 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > x.x </td >
<td valign="top" > specific absolute number of Angstroms for every atom </td ></tr >
<tr >
<td valign="top" > +/-x.x </td >
<td valign="top" > offset greater(+) or less(-) than the van der Waals radius </td ></tr >
<tr >
<td valign="top" > nn% </td >
<td valign="top" > percent of the van der Waals radius </td ></tr >
<tr >
<td valign="top" > +/-nn% </td >
<td valign="top" > percent offset from the van der Waals radius </td ></tr ></table > </td ></tr >
<tr >
<td valign="top" > 
<b>WITHIN x.xx {atomExpression or point}</b></td >
<td valign="top" > only creates a surface within the specified distance in Angstroms from the specified atoms or point. </td ></tr ></table >
<br />
<br />
<b>
<a name="isosurfaceconstruction/mappingparameters--molecularorbitals">[construction/mapping parameters] -- molecular orbitals</a></b>    
<a href="#isosurface">back</a>
<br />
<br /> 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>IGNORE {atom expression}</b></td >
<td valign="top" >Specifies a set of atoms to completely ignore when generating a molecular orbital, thus showing only selected atomic contributions.</td ></tr >
<tr >
<td valign="top" >
<b>SCALE x.xxx </b></td >
<td valign="top" >In the case of molecular orbitals, scales the volume around the orbital. It may be useful in cases where Jmol misjudges the full extent of an orbital, thus truncating it.</td ></tr >
<tr >
<td valign="top" >
<b>SELECT {atom expression}</b></td >
<td valign="top" >Selects a specific subset of the atoms for this molecular orbital. (Essentially the opposite of IGNORE.)</td ></tr >
<tr >
<td valign="top" >
<b>SIGN</b></td >
<td valign="top" >For molecular orbitals derived from cube files, indicates that the data have both positive and negative values and that they should both be displayed.</td ></tr >
<tr >
<td valign="top" >
<b>SQUARED</b> </td >
<td valign="top" > Data are to be squared prior to surface generation. </td ></tr ></table >
<br />
<br />
<b>
<a name="isosurfaceconstruction/mappingparameters--generalshapesandvolumetriccubefiledata">[construction/mapping parameters] -- general shapes and volumetric (cube file) data</a></b>    
<a href="#isosurface">back</a>
<br />
<br /> 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>ANISOTROPY {a b c}</b></td >
<td valign="top" >Sets the anisotropic distortion of an object in the x, y, and z directions.</td ></tr >
<tr >
<td valign="top" >
<b>CACHE</b> </td >
<td valign="top" > Caches the isosurface in memory and replaces it with its JVXL equivalent. The 
<b>CACHE</b> option along with isosurface creation or alone instructs Jmol to immediately create JVXL data for the specified surface and to load that data instead. The surface remains in memory and can be used again, even after a new file is loaded using cache://isosurface_
<ID> where 
<ID> is the isosurface ID such as "isosurface1". The command ISOSURFACE CACHE alone will cache the current isosurface. If the cache is no longer needed, then RESET CACHE will release the memory used to hold the JVXL data for the isosurface. The result should be essentially equivalent to the original command. (It is recommended that the original be a relatively simple command, because not all nuances of an isosurface may be stored in the JVXL data.) Note that 
<b>this option is not compatible with saving the state as an SPT file.</b> Instead, use 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">WRITE PNGJ</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">WRITE JMOL</a>, in which case the cached isosurface will be saved in JVXL format within the PNGJ or JMOL zip directory. </td ></tr >
<tr >
<td valign="top" >
<b>CAP</b> </td >
<td valign="top" > See 
<b>SLAB</b>. The distinction between SLAB and CAP is that SLAB leaves the isosurface open at the boundaries, whereas CAP closes it off. </td ></tr >
<tr >
<td valign="top" >
<b>CENTER {x y z}</b></td >
<td valign="top" >Centers an atomic orbital, sphere, ellipsoid, or lobe at a specific point in molecular space. In the case of crystal structures, these may be 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#fractionalcoordinates">fractional coordinates</a>.</td ></tr >
<tr >
<td valign="top" >
<b>CENTER (atom_exp)</b></td >
<td valign="top" >Centers an atomic orbital, sphere, ellipsoid, or lobe on a certain atom or at the geometric center of this set of atoms.</td ></tr >
<tr >
<td valign="top" >
<b>CENTER $object</b></td >
<td valign="top" >Centers an atomic orbital, sphere, ellipsoid, or lobe on a certain drawn object such as a point, line, or plane.</td ></tr >
<tr >
<td valign="top" >
<b>ECCENTRICITY 
<br>{cx cy cz f_ab}</b></td >
<td valign="top" >Sets the eccentricity of a sphere, ellipsoid, atomic orbital, or lobe. The first three numbers define the "principal" axis; the fourth parameter defines the ratio of the other two perpendicular axes to this main axis.</td ></tr >
<tr >
<td valign="top" >
<b>PHASE "type"</b></td >
<td valign="top" >Indicates that an orbital or other object is to be colored based on the position of the voxel in space. With an atomic orbital and no parameters, indicates regions of (+) and (-) oribital value with different colors. Valid types include "x", "y", "z", "xy", "xz", "yz", "z2", and "x2-y2".</td ></tr >
<tr >
<td valign="top" >
<b>SCALE x.xxx </b></td >
<td valign="top" >In the case of objects for which eccentricity can apply (spheres, ellipsoids, atomic orbitals, lobes, and volumetric data), scales the object (default 1.0).</td ></tr >
<tr >
<td valign="top" >
<b>SLAB [plane definition]</b>
<br>
<b>SLAB BOUNDBOX</b>
<br>
<b>SLAB UNITCELL</b>
<br>
<b>SLAB within x.y {point}</b></td >
<td valign="top" > Clean slabbing of an isosurface based on a plane definition such as x=3 or {1 0 0 -3} or the currently defined unitcell or boundbox. A negative sign prior to a plane definition indicates "the opposite-facing plane". The distinction between SLAB and CAP is that SLAB leaves the isosurface open at the boundaries, whereas CAP closes it off. Smooth spherical slabbing based on distance x.y from a point is also possible. A negative distance implies "not within" and creates a circular hole at this position. </td ></tr ></table >
<br />
<br />
<b>
<a name="isosurfaceconstruction/mappingparameters--generalfileloading">[construction/mapping parameters] -- general file loading</a></b>    
<a href="#isosurface">back</a>
<br />
<br /> 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>ANGSTROMS</b></td >
<td valign="top" >For a cube file or user-defined function f(x,y), indicates that the volumetric definitions are in Angstroms instead of Bohr (default).</td ></tr >
<tr >
<td valign="top" >
<b>BLOCKDATA</b></td >
<td valign="top" >Indicates that data for surfaces in multiple-surface CUBE files are in sequential blocks rather than the Gaussian standard of being interspersed, where all data values for a coordinate point are listed together.</td ></tr >
<tr >
<td valign="top" >
<b> BOUNDBOX </b></td >
<td valign="top" > Specifies that the surface to be generated must be within the currently defined 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#boundbox">boundbox</a>. </td ></tr >
<tr >
<td valign="top" >
<b> BOUNDBOX {atomExpression or point} {atomExpression or point}</b></td >
<td valign="top" > Specifies that the surface to be generated must be within a volume defined by the specified two diagonal end points. </td ></tr >
<tr >
<td valign="top" >
<b> COLOR DENSITY</b></td >
<td valign="top" > Allowing rendering of the actual grid of numbers (volume rendering) of the data rather than an isosurface. With 
<b>CUTOFF 0.0</b>, this setting delivers the entire set of data points. It is recommended that the BOUNDBOX parameter be used with a relatively small boundbox setting or the WITHIN parameter is used in order to not have an out-of-memory condition resulting from this option. For example: 
<b>boundbox scale 1.2 {tyr};isosurface color density cutoff 1.6 boundbox "3hyd_map.ccp4.gz" mesh nofill</b> If a range of values is desired, use 
<b>CUTOFF [min, max]</b> to indicate the minimum and the maximum values to be included; for example: 
<b>isosurface color density cutoff [-5,10] within 4.0 {*} "apbs.dx"</b>. </td ></tr >
<tr >
<td valign="top" > 
<b> CUTOFF x.xxx</b></td >
<td valign="top" >Sets the cutoff value defining an isosurface. Typically, smaller values correspond to a larger object. Cutoffs can be either positive or negative. In the case of a molecular orbital, a positive number indicates to use both positive and negative cutoffs. Adding an explicit "+" sign before the number indicates that only the positive part of the surface is desired. (See also RMSD, below.)</td ></tr >
<tr >
<td valign="top" > 
<b> CUTOFF [min,max]</b></td >
<td valign="top" >see COLOR DENSITY, above</td ></tr >
<tr >
<td valign="top" >
<b>DEBUG</b></td >
<td valign="top" >Produces voluminous detail for program debugging.</td ></tr >
<tr >
<td valign="top" >
<b>DOWNSAMPLE n
<b></td >
<td valign="top" >"Downsampling" is the process by which an image or other data set is selectively sampled, producing a result that is grainier and has less resolution than the original data set. This option for the 
<b>isosurface</b> command indicates that only a portion of the data for a file should be used for the surface, creating an isosurface with lower resolution but with the full range of the original data. 
<b>n</b> is an integer -- 
<b>downSample 2</b> uses only every other data point; 
<b>downSample 3</b> takes only every third data point, etc. Supported for cube-based data sets only. </td ></tr >
<tr >
<td valign="top" >
<b>FIXED/MODELBASED</b></td >
<td valign="top" >Sets whether the surface generated is to be associated with the fixed window -- and thus appear with all frames/models -- or is to be associated with the currently displayed model (the default).</td ></tr >
<tr >
<td valign="top" >
<b>FULLPLANE</b></td >
<td valign="top" > for PLANE objects, indicates that color mapping should be extended to complete the plane. </td ></tr >
<tr >
<td valign="top" > 
<b>GRIDPOINTS</b></td >
<td valign="top" >Adds the specific gridpoints used by the "marching cubes" algorithm for the calculation of the isosurface. Primarily for discussion and debugging of the isosurface algorithm.</td ></tr >
<tr >
<td valign="top" > 
<b>INSIDEOUT</b></td >
<td valign="top" >For certain datasets it sometimes happens that the surface rendered appears inside-out (dark on the outside and bright on the inside). If this is the case, add 
<b>INSIDEOUT</b> to the isosurface command prior to specification of the file to load. Jmol will reverse the sense of what is inside and what is outside the surface. This flag only affects rendering in Jmol, not export to PovRay. </td ></tr >
<tr >
<td valign="top" >
<b>MODEL n</b></td >
<td valign="top" >Sets the identity of the model with which this isosurface is to be associated. (Defaults to the currently displayed model.)</td ></tr >
<tr >
<td valign="top" >
<b>RESOLUTION x.x</b></td >
<td valign="top" >Sets the resolution of a constructed isosurface three-dimensional grid of "voxels", in points per Angstrom. Does not apply to CUBE or JVXL files, which have a resolution defined by internal file parameters.</td ></tr >
<tr >
<td valign="top" >
<b>RMSD x.x</b></td >
<td valign="top" >Sets the cutoff based on the root mean square deviation of the data. (MRC/CCP4 file format; equivalent to SIGMA in Jmol 14.4; previous versions require SIGMA instead of RMSD, which is technically not a correct term.) </td ></tr >
<tr >
<td valign="top" >
<b>SIGN c1 c2</b></td >
<td valign="top" >Indicates that cube data have both positive and negative values, and that they should both be displayed using the value given for CUTOFF and its negative. The two colors to use may be given optionally.</td ></tr >
<tr >
<td valign="top" >
<b>SIGMA x.x</b> </td >
<td valign="top" > See RMSD, above.</td ></tr >
<tr >
<td valign="top" > 
<b>SQUARED</b> </td >
<td valign="top" > Data are to be squared prior to surface generation. </td ></tr >
<tr >
<td valign="top" >
<b>SYMMETRY</b> </td >
<td valign="top" > Applies file-based symmetry operators to isosurface creation, resulting in more efficient creation and rendering. The default selection is 
<b>{symop=1} ONLY</b>, and default coloring is to color by symop based on the current setting of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_propertycolorscheme">propertyColorScheme</a>. For example: 
<b>load =1stp filter "biomolecule 1";color property symop;isosurface ID sa RESOLUTION 0.8 SYMMETRY SASURFACE 0</b>. (Jmol 14.0) </td ></tr >
<tr >
<td valign="top" >
<b>WITHIN x.xx {atomExpression or point}</b></td >
<td valign="top" > only creates the portion of the surface within the specified distance in Angstroms of the specified atoms or point. </td ></tr >
<tr >
<td valign="top" >
<b>WITHIN x.xx {atomExpression or point}</b></td >
<td valign="top" > only creates a surface within the specified distance in Angstroms from the specified atoms or point. </td ></tr >
<tr >
<td valign="top" >
<b>WITHIN -x.xx {atomExpression or point}</b></td >
<td valign="top" > a negative value for the WITHIN distance indicates 
<b>not</b> within x.xx Angstroms of the specified atoms or point.</td ></tr ></table >
<br />
<br />
<b>
<a name="isosurfacecolorandcontouroptions">[color and contour options]</a></b>    
<a href="#isosurface">back</a>
<br />
<br /> Jmol can color isosurfaces in a wide variety of ways, from simple single colors to mapped contours based on a second data set. See also the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#colorother">color ISOSURFACE</a> command for additional options and changing the color of an isosurface after creation. 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>COLOR &lt;color></b></td >
<td valign="top" >Colors an isosurface the specified color name or value, such as 
<b>[xFF0000]</b>. </td ></tr >
<tr >
<td valign="top" >
<b>COLOR "c1 c2 c3..."</b></td >
<td valign="top" >Where c1, c2, etc. are color names or values, such as 
<b>red</b> or 
<b>[xFF0000]</b> within double quotes, this option allows specification of descrete colors to be used for contour mapping. </td ></tr >
<tr >
<td valign="top" >
<b>COLOR c1 TO c2 n</td >
<td valign="top" > (also 
<b>color isosurface ......</b>) colors an isosurface with a range of 
<b>n</b> colors from color c1 to color c2. For example, 
<b>color isosurface red to white 30</b>. </td ></tr >
<tr >
<td valign="top" >
<b>COLOR RANGE 
<br>x.xxx y.yyy</b></td >
<td valign="top" >(or 
<i>color absolute</i>) Indicates to color the specified range of value from one end to the other end of the color scheme. If numbers are not included or COLOR RANGE ALL is specified, then the minimum and maximum data values in the file are used.</td ></tr >
<tr >
<td valign="top" >
<b>COLORSCHEME "xxx" </b></td >
<td valign="top" >Sets the color scheme to one of "roygb" (default rainbow), "bw" (black/white), "bwr" (blue-white-red), "rwb" (red-white-blue), "wb" (white/black), "low" (red-green), or "high" (green-blue). An optional parameter TRANSLUCENT prior to the color scheme name creates a gradient of translucency from transparent to opaque across the color scheme. An additional scheme "sets" colors the isosurface different colors for different surface fragments (for example, internal cavities).</td ></tr >
<tr >
<td valign="top" >
<b>CONTOUR n</b></td >
<td valign="top" >Specifies to display the object as a set of contour lines. Then number of lines is optional; 9 contour lines are shown by default. Using the CONTOUR keyword sets the default display to be CONTOURLINES NOFILL. Note that 
<b>isosurface contour 0 "t.jvxl"</b> will override contour selected in JVXL file.</td ></tr >
<tr >
<td valign="top" >
<b>CONTOUR n i</b></td >
<td valign="top" >Same as 
<b>CONTOUR n</b> but draws only the 
<em>i</em>th contour line.</td ></tr >
<tr >
<td valign="top" >
<b>CONTOUR -n</b></td >
<td valign="top" >With a negative number, specifies for a plane or f(x,y) object the specific single contour to depict.</td ></tr >
<tr >
<td valign="top" >
<b>CONTOUR DISCRETE</b>
<br> [a,b,c,d,e,...]</td >
<td valign="top" >Sets the contour levels to discrete values. In addition, see the COLOR option, above, for the discrete coloring option.</td ></tr >
<tr >
<td valign="top" >
<b>CONTOUR INCREMENT 
<br>{from,to,step}</b> </td >
<td valign="top" >Sets the contour values starting with the 
<b>from</b> value to the 
<b>to</b> value in increments of 
<b>step</b>. In addition, see the COLOR option, above, for the discrete coloring option. </td ></tr >
<tr >
<td valign="top" >
<b>REVERSECOLOR</b></td >
<td valign="top" >For colorschemes in particular, the REVERSECOLOR option switches the direction of the color scheme. This parameter should be given just prior to the COLORSCHEME parameter.</td ></tr >
<tr >
<td valign="top" >
<b>SCALE3D x.x</b></td >
<td valign="top" >generates a 3D plot of the desired scale from a mapped plane. It can be introduced either with the original definition of the isosurface or later, after the plane has been created and displayed. Negative numbers invert the graph (forming valleys instead of mountains); 0 removes the 3D scaling. Note that this rendering can be combined with CONTOUR to form a 3D "topo map". </td ></tr ></table >
<br />
<br />
<b>
<a name="isosurfacesurfaceobject--molecular/solventsurfaces">[surface object] -- molecular/solvent surfaces</a></b>    
<a href="#isosurface">back</a>
<br />
<br /> Several isosurface options relate specifically to molecular or solvent-related surfaces. 
<br>
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>CAVITY
<br>cr er</b></td >
<td valign="top" > Renders a depiction of a molecular cavity. The optional parameters cr and er determine the overall properties of the cavity. cr (cavity radius, default 1.2) sets the radius in Angstroms of the "probe" molecule that would fit into the cavity. er (envelope radius, default 10) sets the radius of the probe used to define the outer limits of the molecule. Smaller numbers for the cavity radius lead to more detailed cavities; smaller numbers for the envelope radius lead to cavities that are more internal and extend less toward the outer edge of the molecule. Qualifier 
<b>INTERIOR CAVITY</b> creates isosurfaces only for cavities that do not extend to the outer surface of the molecule. Qualifier 
<b>POCKET CAVITY</b> creates isosurfaces only for pockets that extend to the outer surface of the model, showing them more as troughs or open "pockets". Qualifiers 
<b>MINSET n</b> and 
<b>MAXSET n</b> prior to CAVITY set limits to the number of faces involved. For example, 
<b>isosurface MINSET 1000 POCKET CAVITY</b> will only create isosurface cavities that involve at least 1000 triangular faces. </td ></tr >
<tr >
<td valign="top" >
<b>MEP</b></td >
<td valign="top" >Depicts the molecular electrostatic potential, as calculated by SUM(q_i/r_i), where q_i is the partial charge on atom i (as found in the loaded model file) and r_i is the distance from atom i to a particular point in space. The molecular electrostatic potential is not typically displayed itself. Rather, it is usually mapped onto a molecular surface. For example: 
<b>isosurface resolution 6 SOLVENT map MEP</b> produces a smooth surface at the van der Waals distance around the molecule colored by the molecular electrostatic potential.</td ></tr >
<tr >
<td valign="top" >
<b>MOLECULAR</b></td >
<td valign="top" >Same as 
<b>SOLVENT 1.4</b>, but solvent moleules are not ignored.</td ></tr >
<tr >
<td valign="top" >
<b >SASURFACE radius</b ></td >
<td valign="top" >Depicts the "solvent-accessible" surface based on the currently selected atom set. This surface is described by the 
<i >center</i > of the solvent probe as it rolls along the surface. It is larger than the "molecular" surface. The radius is optional. Solvent molecules are ignored by default. If either the 
<b>VDW</b> or the 
<b>IONIC</b> keywords are present, 
<i>sasurface 0</i> is assumed, but solvent is not ignored.</td ></tr >
<tr >
<td valign="top" >
<b >SOLVENT radius</b ></td >
<td valign="top" >Depicts the "solvent-excluded" or "molecular" surface around the currently selected atoms (or the entire model if no atoms are selected). If only a subset of the atoms is selected, then only the corresponding subset of the molecular surface is depicted. This surface is defined as the surface formed by rolling a spherical solvent "probe" around the molecule at the distance of the van der Waals radii of the atoms. The specification of the radius of this probe is optional; its default setting is determined by the 
<b >set radius</b > command (Jmol default 1.2). Solvent molecules are ignored by default.</td ></tr ></table >
<br />
<br />
<b>
<a name="isosurfacesurfaceobject--atomicandmolecularorbitals">[surface object] -- atomic and molecular orbitals</a></b>    
<a href="#isosurface">back</a>
<br />
<br /> Both atomic orbitals and molecular orbitals can be displayed in Jmol. Note that molecular orbitals in particular can be generated more effectively using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#mo">mo</a> command rather than the 
<b>isosurface</b> command. Alternatively, the "LCAO cartoon" option creates the sort of dumbbell-shaped cartoonish orbitals seen in textbooks in discussion of pi bonding and hybridization. 
<br>
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > 
<b >ATOMICORBITAL 
<br>n l m Zeff</b ></td >
<td valign="top" >The Schroedinger solution to the hydrogen atom wavefunction. The three quantum numbers n, l, and m, must be such that abs(m) &lt;= l &lt; n. For solutions with imaginary roots, the two m values simply designate the two real linear combinations of these imaginary solutions. The optional effective nuclear charge, Zeff, determines the overall size of the orbital (default is 6, carbon). Add the keyword PHASE for a two-color orbital, which can be colored using the SIGN keyword followed by two color names or values.</td ></tr >
<tr >
<td valign="top" >
<b >ATOMICORBITAL 
<br>n l m Zeff POINTS nPoints radius seed</b ></td >
<td valign="top" >Creates a "pointilist" probability-based visualization of an atomic orbital using the specified number of points and optional radius extent and random seed. The radius parameter, if present, must be a decimal number. </td ></tr >
<tr >
<td valign="top" >
<b >LCAOCARTOON 
<br>"type" (atom_exp)</b ></td >
<td valign="top" >Draws a lobe or p orbital (two lobes) centered at the FIRST atom of the specified expression. (Typically this would be an expression for a single, specific atom, such as 
<b >atomno=3</b >). See the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#lcaocartoon">lcaoCartoon</a> command for a discussion of the possible types of LCAO cartoons (as well as a simpler way to create them).</td ></tr >
<tr >
<td valign="top" >
<b >LOBE 
<br>{cx cy cz f_ab}</b ></td >
<td valign="top" >Draws a single tear-drop shaped object (an xy-compressed center lobe of a dz2 orbital) anywhere at any size in any direction with any amount of distortion. The first three numbers define the axis of the lobe; the fourth parameter defines its eccentricity -- the ratio of the other two perpendicular axes to this main axis.</td ></tr >
<tr >
<td valign="top" >
<b >MO n</b ></td >
<td valign="top" >Denotes the n-th molecular orbital described in the file that is currently loaded. Adjusting the CUTOFF to suit the situation is recommended. Molecular orbitals are automatically bicolor; color them one specific color using COLOR and just one color name or value. RESOLUTION can be used to good effect to increase or decrease the precision of the rendering. 
<b >Note that only the atom-based orbitals for the currently selected atoms are utilized</b >. (Although, if no atoms are selected, all atomic orbitals are used in the calculation.) Thus, one can selectively see how atomic orbitals from each atom in the molecule are contributing to any given molecular orbital.</td ></tr >
<tr >
<td valign="top" >
<b>MO HOMO/LUMO +/-n</b></td >
<td valign="top" >Selects for display a molecular orbital based on energy-proximity to the highest-occupied or lowest-unoccupied molecular orbital. For example, 
<b>isosurface MO HOMO</b> or 
<b>isosurface MO LUMO +3</b>.</td ></tr >
<tr >
<td valign="top" > 
<b>MO ... POINTS nPoints seed</b></td >
<td valign="top" > Produces a "pointilist" probability-based visualization of a molecular orbital using the specified number of points and an optional random seed. </td ></tr ></table >
<br />
<br />
<b>
<a name="isosurfacesurfaceobject--generalshapes">[surface object] -- general shapes</a></b>    
<a href="#isosurface">back</a>
<br />
<br /> There are several general shapes that can be created as "isosurfaces". These include: 
<br>
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b >ELLIPSOID 
<br>{cx cy cz f_ab}</b ></td >
<td valign="top" >Draws an ellipsoid having a single unique axis. The first three numbers define the "principal" axis; the fourth parameter defines the eccentricity of the ellipsoid -- the ratio of the other two perpendicular axes to this main axis.</td ></tr >
<tr >
<td valign="top" >
<b>HKL {h k l}</b></td >
<td valign="top" >Creates a plane through a crystal based on the Miller indices 
<i>hkl</i>. Adding 
<b>map molecular</b> creates a slice through the crystal highlighting atomic positions.</td ></tr >
<tr >
<td valign="top" >
<b>PLANE</b></td >
<td valign="top" >Indicates that what is desired is not really an isosurface but rather a planar slice through the data set. Using COLOR RANGE, the range of mapped values can be changed. The range -0.008 0.008 is recommended for molecular orbitals. Planes, like other surface objects, can be mapped or left unmapped and just colored. Planes are designated using one of the methods for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#planeexpressions">plane expressions</a>. If a BOUNDBOX keyword is given prior to PLANE (see above), then the plane will be created within that box.</td ></tr >
<tr >
<td valign="top" >
<b >SPHERE radius</b ></td >
<td valign="top" >Draws a sphere of the given radius in Angstroms.</td ></tr ></table >
<br />
<br />
<b>
<a name="isosurfacesurfaceobject--file-derivedisosurfaces">[surface object] -- file-derived isosurfaces</a></b>    
<a href="#isosurface">back</a>
<br />
<br /> Isosurfaces can be created in Jmol using external file-based "volume" or "polygon" data. Note that any of the formats that are volume data (APBS, CUBE, Chem3D, DSN6/OMAP, MRC/CCP4, XPLOR/CNS) can all be used either to generate the surface itself or (after the MAP keyword) to color a surface.
<br>
<br>
<b>FILE "filename" n</b> can be used in either case to depict the n-th isosurface from the specified file. Empty quotes indicate that the loaded structure file already has surface data present (CUBE files, for example, contain coordinates), and that that data should be used for construction of the surface. Thus, for example, 
<b >load test.cube.gz;isosurface FILE ""</b > will load the coordinates from the GZIPped cube file, then display its first isosurface. A default directory can be set using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setmisc">set defaultDirectory</a>, and for applets a proxy server can be set for non-host file loading using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setmisc">set appletProxy</a>. The keyword FILE is not required. The optional number "n" specifies which volume or surface should be used in the case of a CUBE file with multiple orbitals with multiple surfaces. All files read by Jmol may be gzip-compressed.
<br />
<br />
<b>
<a name="isosurfacesurfaceobject--volumefile-derivedisosurfaces">[surface object] -- volume file-derived isosurfaces</a></b>    
<a href="#isosurface">back</a>
<br />
<br /> Current volume file formats supported include:
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > APBS </td >
<td valign="top" > 
<a class="xref" href="http://apbs.sourceforge.net" target="_blank">APBS DX</a> volume data files </td ></tr >
<tr >
<td valign="top" > CASTEP </td >
<td valign="top" > 
<a class="xref" href="http://www.castep.org/" target="_blank">CASTEP</a> density files</td ></tr >
<tr >
<td valign="top" > CUBE</td >
<td valign="top" >
<a class="xref" href="http://www.gaussian.com" target="_blank">Gaussian</a> 
<a class="xref" href="http://www.nersc.gov/nusers/resources/software/apps/chemistry/gaussian/g98/00000430.htm" target="_blank">cube</a> format volume data files. Units of Bohr are assumed unless the keyword ANGSTROMS precedes the FILE keyword. </td ></tr >
<tr >
<td valign="top" > Chem3D </td >
<td valign="top" > 
<a class="xref" href="http://www.adeptscience.co.uk/download/dldcat/24/0/All/Chem3D.html" target="_blank">chem3d</a> 3dxml structure files may contain volume data </td ></tr >
<tr >
<td valign="top" > DSN6/OMAP </td >
<td valign="top" > binary files created by the 
<a class="xref" href="http://eds.bmc.uu.se/eds/" target="_blank">Uppsala Electron Density Server</a> These files can be read directly from the server into Jmol (application and signed applet) using an "=" sign and the PDB ID, 
<b>isosurface "=XXXX"</b>, for 2fo-fc maps and 
<b>isosurface "==XXXX"</b> for fo-fc difference maps. (Note that quotes are required, as for all filenames given in an isosurface command.) Default RMSD (sigma) values are +1.0 for 2fo-fc maps and +/-3.0 for fo-fc maps. The difference map option automatically sets the SIGN option, returning positive and negative differences in two colors. Supporting this are the global variables 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_edsurlcutoff">edsUrlCutoff</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_edsurlformat">edsUrlFormat</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_edsurlformatdiff">edsUrlFormatDiff</a>, which set the file URLs for getting sigma values, 2fo-fc file, and fo-fc file, respectively, from the electron density server (Jmol 14.3.10). The BOUNDBOX isosurface option is automatically applied in this case. </td ></tr >
<tr >
<td valign="top" >GRASP/DELPHI</td >
<td valign="top" > 
<a class="xref" href="http://www.msg.ucsf.edu/local/programs/grasp/html/Appendix%20A.html" target="_blank">GRASP</a> grid files.</td ></tr >
<tr >
<td valign="top" >Jaguar PLT </td >
<td valign="top" > 
<a class="xref" href="https://www.schrodinger.com/products/14/7/" target="_blank">Jaguar</a> plt orbital files </td ></tr >
<tr >
<td valign="top" > NCI</td >
<td valign="top" >Jmol has support for displaying results of NCIPLOT "noncovalent interactions" calculations. See 
<i>"Revealing Noncovalent Interactions", Erin R. Johnson, Shahar Keinan, Paula Mori-Sanchez, Julia Contreras-Garcia, Aron J. Cohen, and Weitao Yang, J. Am. Chem. Soc., 2010, 132, 6498-6506</i> and 
<i>"NCIPLOT: A Program for Plotting Noncovalent Interaction Regions" Julia Contreras-Garcia, Erin R. Johnson, Shahar Keinan, Robin Chaudret, Jean-Philip Piquemal, David N. Beratan, and Weitao Yang, J. of Chemical Theory and Computation, 2011, 7, 625-632</i>. For consistency with the mapping colors of these articles, the specific color scheme shown below is recommended. Without reading any files, the 
<b>NCI</b> keyword specifies to carry out an NCI 
<i>promolecular</i> calculation. However, if the output files from 
<a class="xref" href="http://www.chem.duke.edu/˜yang/Software/softwareNCI.html" target="_blank">NCIPLOT</a> are available, they can be used as well, for example: 
<b>isosurface parameters [0 0 0 0 0 0.01] NCI dens.cube</b>. Note that only the density file is required; Jmol can generate the reduced density gradient data from that density file alone. Any CUBEGEN or other format density file that Jmol can read can be used here. (The 0.01 parameter is required only when reading the density file created by NCIPLOT, because that file is scaled up by a factor of 100 relative to standard density files. If using both NCIPLOT output files, then the command is simply: 
<b>isosurface parameters [0.5] grad.cube MAP dens.cube fullylit</b>.Parameters are [cutoff, p1, p2, p3, p4, p5], described below. Zero for any parameter specifies to use the default value. 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >p1 </td >
<td valign="top" > -2 to 2</td >
<td valign="top" >0(all, default), 1(intramolecular), 2(intermolecular), -1(intramolecular NCIPLOT grad/dens filtering), -2(intermolecular NCIPLOT grad/dens filtering).</td ></tr >
<tr >
<td valign="top" >p2 </td >
<td valign="top" >rhoMin </td >
<td valign="top" >(min rho cutoff to remove very low density points)</td ></tr >
<tr >
<td valign="top" >p3 </td >
<td valign="top" >rhoPlot </td >
<td valign="top" >(cutoff used to remove covalent density, default 0.07 for promolecular, 0.05 for SCF)</td ></tr >
<tr >
<td valign="top" >p4 </td >
<td valign="top" >rhoParam </td >
<td valign="top" >(fraction of total rho that defines intramolecular, default 0.95)</td ></tr >
<tr >
<td valign="top" >p5 </td >
<td valign="top" >dataScaling </td >
<td valign="top" >(default 1, but set to 0.01 to read back in NCIPLOT -dens.cube file)</td ></tr ></table > For more information, see 
<a class="xref" href="misc/iso-nci.txt" target="_blank">misc/iso-nci.txt</a>. </td ></tr >
<tr >
<td valign="top" > MRC/CCP4 </td >
<td valign="top" > binary 
<a class="xref" href="http://ami.scripps.edu/software/mrctools/mrc_specification.php" target="_blank">AMI MAP</a> files have the advantage that they contain information about the root mean square deviation for the data set, allowing use of the SIGMA keyword . In some cases the keyword 
<b>MRC</b> just precede the FILE keyword in order to force MRC format reading because the file does not have the expected identifying characters M A P in the proper location.</td ></tr >
<tr >
<td valign="top" > NFF </td >
<td valign="top" > 
<a class="xref" href="http://paulbourke.net/dataformats/nff/nff1.html" target="_blank">neutral file format</a> for electron microscopy data exported from IMOD using the ISOSURFACE command </td ></tr >
<tr >
<td valign="top" > UHBD </td >
<td valign="top" > 
<a class="xref" href="http://web.archive.org/web/20100701074459/http://adrik.bchs.uh.edu/uhbd.html" target="_blank">University of Houston Brownian Dynamics</a> files.</td ></tr >
<tr >
<td valign="top" > XPLOR/CNS </td >
<td valign="top" > 
<a class="xref" href="http://cci.lbl.gov/~rwgk/shortcuts/htdocs/current/python/iotbx.xplor.map.html" target="_blank">XPLOR MAP</a> files </td ></tr ></table >
<br />
<br />
<b>
<a name="isosurfacesurfaceobject--surfacedata-derivedisosurfaces">[surface object] -- surface data-derived isosurfaces</a></b>    
<a href="#isosurface">back</a>
<br />
<br /> Current surface file formats supported include:
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > EFVET </td >
<td valign="top" > 
<a class="xref" href="http://ef-site.hgc.jp/eF-site/about.html" target="_blank">
<i>e</i>F-site EFVET</a> format surface files. Indicating a number from 0-5 after the file name specifies which type of data to map onto the surface: 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >0 </td >
<td valign="top" > color indicated in file</td ></tr >
<tr >
<td valign="top" >1 </td >
<td valign="top" > electrostatic_potential</td ></tr >
<tr >
<td valign="top" >2 </td >
<td valign="top" > hydrophobicity</td ></tr >
<tr >
<td valign="top" >3 </td >
<td valign="top" > temperature_factor</td ></tr >
<tr >
<td valign="top" >4 </td >
<td valign="top" > minimum_curvature</td ></tr >
<tr >
<td valign="top" >5 </td >
<td valign="top" > maximum_curvature </td ></tr ></table > </td ></tr >
<tr >
<td valign="top" > JVXL </td >
<td valign="top" > 
<a class="xref" href="misc/JVXL-format.pdf" target="_blank">Jmol Voxel</a> format files are highly compressed surface files created by Jmol using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write</a> command. The JVXL format allows for saving the data for a selection of a specific surface cutoff from a volume file in a way that can be delivered very efficiently over the web and loaded very quickly into Jmol. </td ></tr >
<tr >
<td valign="top" > KINEMAGE </td >
<td valign="top" > Jmol reads contact-point Kinemage files created by 
<a class="xref" href="http://molprobity.biochem.duke.edu" target="_blank">MolProbity</a> See 
<a class="xref" href="misc/kinemage.txt" target="_blank">misc/kinemage.txt</a> for details.</td ></tr >
<tr >
<td valign="top" > MSMS </td >
<td valign="top" > Jmol can read an isosurface from a set of 
<a class="xref" href="http://mgltools.scripps.edu/packages/MSMS" target="_blank">MSMS</a> output files. Both the .vert and the .face files must be in the same directory, or only dots will be generated. The keyword MSMS must precede the FILE keyword -- 
<b>MSMS FILE "xxx.vert"</b> -- because these files do not contain identifying information.</td ></tr >
<tr >
<td valign="top" > OBJ </td >
<td valign="top" > 
<a class="xref" href="http://autodesk.com" target="_blank">AutoDesk Wavefront Advanced Visualizer</a> 
<a class="xref" href="http://www.eg-models.de/formats/Format_Obj.html" target="_blank">OBJ</a> surface data files. (See also 
<a class="xref" href="http://www.fileformat.info/format/wavefrontobj/" target="_blank">Wavefront Object format.</a> In this case the keyword OBJ must precede the FILE keyword. Jmol uses the 
<b>v</b>ertex and 
<b>f</b>ace records of this file in order to create a set of polygons that are colored using the name of the 
<b>g</b>roup record, which is assumed to have the hexidecimal format 
<b>g kRRGGBB</b>. Note that Jmol does not read material (.mtl) files and so instead relies on this simpler method of assigning colors. Polygons are limited to triangles and quadrilaterals. An optional number after the file name --
<b>OBJ FILE "filename" n</b> -- specifies a group from the OBJ file. 
<b>isosurface OBJ "sample.obj" 3</b>, for instance, reads only the third group of faces. </td ></tr >
<tr >
<td valign="top" > PMESH </td >
<td valign="top" > Jmol can read both ASCII and binary pmesh surface formats. A "pmesh" is a surface data set consisting of a set of vertices and a set of polygons defining the "facets" of the surface. Polygons are limited to triangles and quadrilaterals. See also 
<b>PMESH INLINE</b>, below. File formats readable by Jmol include:
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>numeric pmesh</b></td >
<td valign="top" >This relatively simple format can be found in 
<a class="xref" href="misc/10x10pmesh.txt" target="_blank">10x10pmesh.txt</a>. Jmol reads this file in free format -- values simply need to be separated by some sort of white space.
<pre>100 3.0000 3.0000 1.0000 2.3333 3.0000 1.0000 ...(98 more like this) 81 5 0 10 11 1 0 ...(80 more sets like this) </pre>
<ul> 
<li>The first line defines the number of grid points defining the surface (integer, n)</li>
<li>The next n lines define the Cartesian coordinates of each of the grid points (n lines of x, y, z floating point data points)</li>
<li>The next line specifies the number of polygons, m, to be drawn (81 in this case).</li>
<li>The next m sets of numbers, one number per line, define the polygons. In each set, the first number, p, specifies the number of points in each set. Currently this number must be either 4 (for triangles) or 5 (for quadrilaterals). The next p numbers specify indexes into the list of data points (starting with 0). The first and last of these numbers must be identical in order to "close" the polygon.</li></ul></td ></tr >
<tr >
<td valign="top" >
<b>binary pmesh</b></td >
<td valign="top" >A more compact binary pmesh format is described in 
<a class="xref" href="misc/pmesh.bin.txt" target="_blank">pmesh.bin.txt</a>. In this case the PMESH keyword is optional, as Jmol can discern the data type from the first four bytes of the file contents. The format has the following specification:
<pre> 4 bytes: P M \1 \0 4 bytes: (int) 1 (test for bigEndian) 4 bytes: (int) vertexCount 4 bytes: (int) polygonCount 64 bytes: reserved ---then for each vertex: 12 bytes: (float) x,(float) y,(float) z ---then for each polyhedron, the number of vertices (from 1 to 4) followed by the index of the vertex in the vertex list, starting with 0: [(int)nVertices,(int)v1,(int)v2,...,(int)vn] </pre></td ></tr ></table > </td ></tr ></table > 
<br />
<br />
<b>
<a name="isosurfacesurfaceobject--additionalsurfacesources">[surface object] -- additional surface sources</a></b>    
<a href="#isosurface">back</a>
<br />
<br /> 
<img style="clear:right" src="img/fxyz.png" alt="" />Several additional sources of surfaces besides external files are available. For 
<b>functionXY</b> and 
<b>functionXYZ</b>, the extent and resolution of the grid can be set using the keywords ORIGIN, STEPS, and POINTS. For example, 
<b>isosurface origin {-5 -5 -5} steps {0.2 0.2 0.2} points {50 50 50} functionxy = "x * y * cos(x * 100)"</b> or 
<b>isosurface cutoff 2.0 origin {-5 -5 -5} steps {0.2 0.2 0.2} points {50 50 50} functionxyz = "x * y * cos(z*100)" map functionxy = "x * y"</b> (shown here on the right. 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>FUNCTIONXY = "..."</b></td >
<td valign="top" > graphs a function of x and y with a default range in x and y from -10 to 10 every 0.25 Angstroms. For example, 
<b>isosurface functionXY = "x * y"</td ></tr >
<tr >
<td valign="top" >
<b >FUNCTIONXY 
<br>"functionName" 
<br>{originXYZ} 
<br>{ni xi yi zi}
<br> {nj xj yj zj}
<br> {nk xk yk zk} </b ></td >
<td valign="top" >The FUNCTIONXY keyword specifies that the Z-value at a given X,Y coordinate will be provided via a JavaScript function in the case of the applet or via a JmolStatusListener call in an application or, if the function name begins with 
<b>file:</b>, the numbers will be read from that file (relative to the current directory). The parameters mirror the parameters in the header of a CUBE file. Units of ANGSTROMS are assumed. Thus, we require an origin of the voxel space and for each nominal direction x, y, and z, the number of grid points and the direction of the unit vector along that edge. These four quantities must be in braces. In the case of the Jmol applet, there are three reading options. 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >ni>0 and nj>0</td >
<td valign="top" >functionName(app, ix, iy)</td >
<td valign="top" > one point is returned for each call to the function.</td ></tr >
<tr >
<td valign="top" >ni&lt;0 and nj>0 </td >
<td valign="top" > functionName(app, ni, nj)</td >
<td valign="top" >an entire set of z values separated by white space will be returned as a string. Data are read from low to high coordinates, with X changing in the outer loop (slowly) and Y changing in the inner loop: a11, a12, a13,...,a21, a22, a23,..., etc. </td ></tr >
<tr >
<td valign="top" >ni&lt;0 and nj&lt;0</td >
<td valign="top" >functionName(app, ni, nj, Fxy)</td >
<td valign="top" > the Fxy[-ni][-nj] array will be filled with z values in the case of the applet or functionXY(functionName, ni, nj, Fxy) will be called in the case of the application. </td ></tr ></table > 
<br>If the functionName starts with the string "file:", then Z value data will be loaded from a file instead of a JavaScript function in the order described above for reading data from a returned string.</td ></tr >
<tr >
<td valign="top" >
<b>FUNCTIONXYZ = "..."</b></td >
<td valign="top" > Graphs an isosurface through a block of data defaulting to -10 to 10 Angstroms range in x, y, and z with step every 0.25 Angstroms. For example: FUNCTIONXYZ = "x * x + y + z" </b>.</td ></tr >
<tr >
<td valign="top" > 
<b >FUNCTIONXYZ 
<br>"functionName" 
<br>{originXYZ} 
<br>{ni xi yi zi}
<br> {nj xj yj zj}
<br> {nk xk yk zk} </b ></td >
<td valign="top" > Similar to FUNCTIONXY, except that in this case the X,Y,Z cube data will be provided in the order (for x = 1 to ni)(for y = 1 to nj)(for z = 1 to nk). The first two options listed for FUNCTIONXY are not available, and the signs of ni and nj are ignored. The data structure Fxyz[ni][nj][nk] must be filled with data by the function call functionName(app, ni, nj, nk, Fxyz) in the case of the applet or functionXYZ(functionName, ni, nj, nz, Fxyz) in the case of the application.</td ></tr >
<tr >
<td valign="top" >
<b>INLINE @varName</b></td >
<td valign="top" > The isosurface data may be in a variable already. For example: 
<b>x = load("mydata.dat"); isosurface INLINE @x</b> first loads the data into the variable x, then displays the isosurface from that data, possibly giving the opportunity to peek at the data first. It is advisable to reset the variable after use to improve performance, however note that the state will only be preserved if the value of the variable is left unchanged. </td ></tr >
<tr >
<td valign="top" >
<b>PMESH INLINE "pmesh-data"</b></td >
<td valign="top" > The INLINE keyword can be used with PMESH to directly create a small isosurface. Numeric pmesh data may be specified "in-line" without reference to a separate file. This is particularly useful for pmesh objects with few vertices. Note that the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a> command also can be used for this purpose.</td ></tr ></table >
<br />
<br />
<b>
<a name="isosurfaceadditionalmapping-onlyparameters">[additional mapping-only parameters]</a></b>    
<a href="#isosurface">back</a>
<br />
<br /> If any parameters spefically relate to the mapping of the surface, not the generation of it, then they can come after the specification of the surface object. Keywords such as COLOR RANGE, CONTOUR, DEBUG, FIXED, FULLPLANE, MODELBASED, MAP, REVERSECOLOR, SCALE3D, and SELECT (when it relates to the color mapping) fall into this category. 
<br />
<br />
<b>
<a name="isosurfacemapcolormappingdataset">MAP [color mapping dataset]</a></b>    
<a href="#isosurface">back</a>
<br />
<br /> Except for SPHERE, ELLIPSOID, LOBE, and LCAOCARTOON, which have no CUBE-file equivalent, all the other surface types (including FUNCTIONXY) can be used as CUBE-type data sets in order to color map another surface, because they all involve the intermediate generation of voxel data within Jmol. Used with PLANE as a surface object, a slice through a set of data can be color-contoured.The keyword MAP is optional, recommended for readability. The 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setisosurfacekey">set isosurfacekey</a> option displays a vertical color key that can be hovered over with the mouse to display the values associated with mapped colors and contours. Existing isosurfaces can be mapped or remapped. To do this, simply start the 
<b>isosurface</b> command with the MAP keyword (with optional ID). The keyword set MAP SQUARED indicates that the values should be squared prior to mapping . The Jmol parameter 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setmisc">isosurfacePropertySmoothing</a> (default TRUE) determines whether the property is smoothed out over the isourface or assigned specifically to the nearest atom. 
<br>
<br>Atom based-properties can be mapped onto a surface using one of the following options. If 
<b>MEP</b> or 
<b>MEP functionType</b> is followed by 
<b>PROPERTY xxx</b> or 
<b>property_xxx</b> or 
<b>variable...</b>, that data will be used instead of partialCharge data. 
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>MEP</b></td >
<td valign="top" >molecular electrostatic potential, using partial charge data within the file or assigned to atoms using the 
<b>{...}.partialCharge = ...</b> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#datasettingatomproperties">data</a> command syntax. A standard Coulomb function is used (1/d). </td ></tr >
<tr >
<td valign="top" >
<b>MEP functionType</b></td >
<td valign="top" > allows setting the function used for the mapping as for 
<a class="xref" href="http://www.symyx.com/support/developer/chime/developer_tools/chimerasmol.jsp#set_mep_mlp_function" target="_blank">Chime</a>, where functionType is the number 0, 1, 2, or 3: 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > 0</td >
<td valign="top" >1/d</td >
<td valign="top" >Coulomb's law distance function (same as rasmol potential distance function)</td ></tr >
<tr >
<td valign="top" >1</td >
<td valign="top" >e^(-d/2)</td >
<td valign="top" >Gaillard, P., Carrupt, P.A., Testa, B. and Boudon, A., J.Comput.Aided Mol.Des. 8, 83-96 (1994)</td ></tr >
<tr >
<td valign="top" >2</td >
<td valign="top" >1/(1+d)</td >
<td valign="top" >Audry, E.; Dubost, J. P.; Colleter, J. C.; Dallet, P. A new approach to structure-activity relations: the "molecular lipophilicity potential". Eur. J. Med. Chem. 1986, 21, 71-72</td ></tr >
<tr >
<td valign="top" >3</td >
<td valign="top" >e^(-d)</td >
<td valign="top" >Fauchere, J. L.; Quarendon, P.; Kaetterer, L. Estimating and representing hydrophobicity potential. J. Mol. Graphics 1988, 6, 203-206.</td ></tr ></table > These additional functions thus allow Jmol to use 
<b>isosurface...MAP MEP</b> to visualize molecular lipophilic potential (MLP) as well. </td ></tr >
<tr >
<td valign="top" >
<b>PROPERTY xxx</b> </td >
<td valign="top" > where xxx is an atom-based property value such as partialCharge or temperature or vanderwaals. The COLOR option applies atom-based color to an isosurface, as commonly done in PyMOL. </td ></tr >
<tr >
<td valign="top" > 
<b>property_xxxx</b> </td >
<td valign="top" > The linking underscore signifies that the property was provided separately using the DATA command and is not model-file based. A previous SELECT ...; DATA "property_xxxx"....end "property_xxxx" or, if the data are from a variable, SELECT...; DATA "property_xxxx @x", must have already been issued. Note that when data is created in this way, only the selected atoms are assigned data values. Atoms thus selected need not be contiguous, but the data will be read from the variable or DATA command line contiguously, disregarding spaces, tabs, line ends, and any string that would not evaluate to a number. This allows for targeting just a specific set of atoms for an isosurface and associated data. After the property name the keyword 
<b>WITHIN</b> and a distance in Angstroms can be added to speed the calculation. The default for 
<b>set isosurfacePropertySmoothing FALSE</b> is 5.0 Angstroms. </td ></tr >
<tr >
<td valign="top" >
<b>VARIABLE x</b></td >
<td valign="top" > The property is in a varible named "x", possibly from a command such as 
<b>x = load("mydata.txt")</b>. In this case, the variable must contain a value for every atom in the model, even if only a subset of the atoms is being used for the surface. </td ></tr ></table > 
<br />
<br />
<b>
<a name="isosurfacedisplayoptions">[display options] </a></b>    
<a href="#isosurface">back</a>
<br />
<br /> Display options are indicated in the following table. These may be given at the end of the definition of the surface or in a later command having just these keywords and the identifier (or "ALL") of the desired isosurface. 
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>CONTOURLINES/NOCONTOURLINES</b></td >
<td valign="top" > turns on and off contour lines generated using the CONTOUR option (see bove). </td ></tr >
<tr >
<td valign="top" >
<b>DOTS/NODOTS</b></td >
<td valign="top" > Display dots at each mesh vertex point. </td ></tr >
<tr >
<td valign="top" >
<b>FILL/NOFILL</b></td >
<td valign="top" > Display the isosurface as a smoothly filled surface.</td ></tr >
<tr >
<td valign="top" >
<b>FRONTONLY/NOTFRONTONLY</b></td >
<td valign="top" > Display only the front half of the surface. This can be useful when the options 
<b>mesh nofill</b> are used. </td ></tr >
<tr >
<td valign="top" >
<b>FRONTLIT /BACKLIT /FULLYLIT</b></td >
<td valign="top" > In some cases the isosurface may appear flat. Using BACKLIT will fix this; FULLYLIT makes exterior and interior surfaces bright; FRONTLIT is the default setting. </td ></tr >
<tr >
<td valign="top" >
<b>MESH/NOMESH</b></td >
<td valign="top" > Display a mesh of lines intersecting at the vertexes used to construct the isosurface. </td ></tr >
<tr >
<td valign="top" >
<b>OFFSET {x y z}</b></td >
<td valign="top" > Offset the isosurface by the specified absolute amount. </td ></tr >
<tr >
<td valign="top" >
<b>ROTATE quaternion/NONE</td >
<td valign="top" ></b> Rotate the isosurface by a given amount around a given axis. Rotations are about {0 0 0} and are cumulative; ROTATE NONE returns the isosurface to its original orientation. For example: 
<b>isosurface s1 ROTATE @{quaternion({1 0 0}, 90)}</b> </td ></tr >
<tr >
<td valign="top" >
<b>ON/OFF</b></td >
<td valign="top" > Turn the isosurface ON or OFF, but do not delete it. </td ></tr >
<tr >
<td valign="top" >
<b>OPAQUE/TRANSLUCENT n</b></td >
<td valign="top" > Display the isosurface as an opaque or translucent object. Several translucent options are available; see the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#color">color</a> command. </td ></tr >
<tr >
<td valign="top" >
<b>TRIANGLES/NOTRIANGLES</b></td >
<td valign="top" > Display separated triangles (primarily for debugging purposes).</td ></tr ></table >
<br />
<br /></i ></td></tr>
<tr name='tr_isosurface'>
<td valign="top">
<a name="isosurface_area" id="k491"> </a>isosurface AREA SET (integer)</td ></tr>
<tr name='tr_isosurface'>
<td>
<blockquote>
<p >
<i >Calculates the area of the current isosurface and stores that value in the 
<b>isosurfaceArea</b> variable. The AREA parameter may also accompany any other parameters in the construction of an isosurface. The result is an array unless the optional specific surface set has been specified., in which case it is a decimal number. Sets are ordered from largest to smallest. SET 0 gives the sum of all areas. SET -1 returns the calculation to report the full array.</i ></p ></blockquote></td></tr> 
<tr name='tr_isosurface'>
<td valign="top">
<a name="isosurface_connect" id="k493"> </a>isosurface CONNECT 
<a class='def' href='#d492' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_isosurface'>
<td>
<blockquote>
<p >
<i >Connects an isosurface to a specific atom so that if that atom is moved or hidden, the isosurface moves or is hidden with it. Use 
<b>isosurface connect {none}</b> to disconnect an isosurface from its atom. </i ></p ></blockquote></td></tr> 
<tr name='tr_isosurface'>
<td valign="top">
<a name="isosurface_delete" id="k494"> </a>isosurface DELETE</td ></tr>
<tr name='tr_isosurface'>
<td>
<blockquote>
<p >
<i >Deletes all isosurfaces. </i ></p ></blockquote></td></tr> 
<tr name='tr_isosurface'>
<td valign="top">
<a name="isosurface_lattice" id="k495"> </a>isosurface LATTICE {a b c}</td ></tr>
<tr name='tr_isosurface'>
<td>
<blockquote>
<p >
<i >You can duplicate isosurface areas based on the unit cell lattice. This is a rendering option, so it can be applied any time after an isosurface is created. It is best done with packed unit cells and slabbed isosurfaces. For example: 
<b>load quartz.cif {1 1 1}; isosurface slab unitcell vdw; isosurface lattice {3 3 3}</b> creates an isosurface that spans nine unit cells. The LATTICE keyword may also appear after the MAP keyword, indicating that the mapped data is periodic and should be mapped for multiple unit cells.</i ></p ></blockquote></td></tr> 
<tr name='tr_isosurface'>
<td valign="top">
<a name="isosurface_lattice" id="k496"> </a>
<span class=newer>isosurface LATTICE {a b c} FIXED [
<b>Jmol 14.3.10</b>]</span></td ></tr>
<tr name='tr_isosurface'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Creates an isosurface from periodic volumetric data with the specified number of unit cells. The FIXED option "fixes" the isosurface in the sense that the operation is at load time not at rendering, allowing slabbing and use of WITHIN. You can duplicate isosurface areas based on the unit cell lattice. This is a rendering option, so it can be applied any time after an isosurface is created. It is best done with packed unit cells and slabbed isosurfaces. For example: 
<b>load quartz.cif {1 1 1}; isosurface slab unitcell vdw; isosurface lattice {3 3 3}</b> creates an isosurface that spans nine unit cells. The LATTICE keyword may also appear after the MAP keyword, indicating that the mapped data is periodic and should be mapped for multiple unit cells.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_isosurface'>
<td valign="top">
<a name="isosurface_list" id="k497"> </a>isosurface LIST</td ></tr>
<tr name='tr_isosurface'>
<td>
<blockquote>
<p >
<i >Lists all isosurfaces</i ></p ></blockquote></td></tr> 
<tr name='tr_isosurface'>
<td valign="top">
<a name="isosurface_set" id="k498"> </a>isosurface SET (integer)</td ></tr>
<tr name='tr_isosurface'>
<td>
<blockquote>
<p >
<i >When an isosurface consists of more than one set of surfaces (perhaps from 
<b>isosurface internal cavity</b>), specifying a SET displays just that single subset of the overall isosurface. SET 0 returns the display to all sets. Sets are ordered from largest to smallest.</i ></p ></blockquote></td></tr> 
<tr name='tr_isosurface'>
<td valign="top">
<a name="isosurface_slab" id="k499"> </a>isosurface SLAB (parameters)</td ></tr>
<tr name='tr_isosurface'>
<td>
<blockquote>
<p >
<i >Isosurface 
<b>SLAB</b> provides an extensive mechanism allowing for the trimming of an isosurface using a wide variety of methods. Isosurfaces can be "slabbed" based on planes, spheres, bounding boxes, unit cells, proximity to a set of atoms, a range of mapped values, or a dynamic z-plane relative to the user (as in Rasmol slabbing of models, but with isosurfaces instead). The section removed can be removed completely or, using 
<b>isosurface SLAB TRANSLUCENT</b>, left as a translucent "ghost" surface. An isosurface may be slabbed any number of times in any number of ways. The slabbing is reversible using 
<b>isosurface SLAB NONE</b> for general slabbing and 
<b>isosurface SLAB OFF</b> for dynamic z-plane slabbing. Options include: 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#planeexpression">(plane expression)</a> </td >
<td valign="top" > a plane. Note that plane definitions starting with "-" switch sides of the plane </td ></tr >
<tr >
<td valign="top" >BOUNDBOX </td >
<td valign="top" > within the currently defined 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#boundbox">bounding box</a> </td ></tr >
<tr >
<td valign="top" >UNITCELL </td >
<td valign="top" > within the currently defined 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#unitcell">unit cell</a> </td ></tr >
<tr >
<td valign="top" >WITHIN x.y {atom expression} </td >
<td valign="top" > within the given distance of the specified atom set </td ></tr >
<tr >
<td valign="top" >WITHIN x.y (point) </td >
<td valign="top" > within the given distance of the specified point (a spherical slab) </td ></tr >
<tr >
<td valign="top" >WITHIN RANGE x.x y.y </td >
<td valign="top" > within the mapped value range x.x and y.y. </td ></tr ></table ></i ></p ></blockquote></td></tr> 
<tr name='tr_isosurface'>
<td valign="top">
<a name="isosurface_unitcell" id="k500"> </a>
<span class=newer>isosurface UNITCELL (fraction) [
<b>Jmol 14.3.10</b>]</span></td ></tr>
<tr name='tr_isosurface'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Isosurface 
<b>UNITCELL x.x</b> is for periodic lattices only. It adjusting the grid by x.x in fractional coordinates. Caution is advised, as the grid is expanded in this process, leading to more grid points and more memory required. Negative x.x results in a selection of a subset of the data centered on the center of the unit cell.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_isosurface'>
<td valign="top">
<a name="isosurface_volume" id="k501"> </a>isosurface VOLUME SET (integer)</td ></tr>
<tr name='tr_isosurface'>
<td>
<blockquote>
<p >
<i >Calculates the volume of the current isosurface and stores that value in the 
<b>isosurfaceVolume</b> variable. The VOLUME parameter may also accompany any other parameters in the construction of an isosurface. The result is an array unless the optional specific surface set has been specified., in which case it is a decimal number. Sets are ordered from largest to smallest. SET 0 gives the sum of all volumes. SET -1 returns the calculation to report the full array.</i ></p ></blockquote></td></tr> 
<tr name='tr_isosurface'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_isosurface'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('.isosurface')">in new window using ethene-HOMO.cub.gz</td></tr>
<tr name='tr_isosurface'>
<td>
<table cellpadding="10">
<tr>
<td class="example">isosurface pos05 0.05 "ethene-HOMO.cub.gz";isosurface neg05 -0.05 "ethene-HOMO.cub.gz";
<br /># now load some other surface further out;
<br />isosurface pos01 0.01 "ethene-HOMO.cub.gz";isosurface neg01 -0.01 "ethene-HOMO.cub.gz";color isosurface translucent; # make neg01 translucent
<br />isosurface pos01 nofill mesh; # make pos01 a mesh;
<br />color isosurface translucent; # make the pos01 mesh translucent, too
<br />isosurface neg01 dots; # make neg01 show dots, too
<br />isosurface neg01 nofill; # only dots
<br />isosurface nodots nomesh fill; #everybody is back to a solid ...;color isosurface opaque; # ... and opaque
<br />isosurface neg01; #select neg01;
<br />color isosurface green;
<br />isosurface pos01;color isosurface violet;
<br />slab on; slab 50; # slab in order to see the inside
<br />slab off; # all done!</td></tr></table></td></tr>
<tr name='tr_isosurface'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples-11/isosurface.htm">examples-11/isosurface.htm</a> </td></tr>
<tr name='tr_isosurface'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_isosurface'>
<td colspan="5">
<p>
<a class="xref" href="#planeexpressions">[plane expressions]</a> 
<a class="xref" href="#lcaocartoon">lcaoCartoon</a> 
<a class="xref" href="#mo">mo</a> 
<a class="xref" href="#pmesh">pmesh</a> </p></td></tr>
<tr name='tr_isosurface'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k490">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_javascript'>
<td colspan="5">
<h3 >
<a id="javascript" name="javascript">javascript</a>
<a id="k502"> </a></h3></td></tr>
<tr name='tr_javascript'>
<td>
<i >Executes the specified javascript command. Applet only; may be disallowed by setting 
<b>_jmol.noEval = true</b> within the web page. Note that double quotes or no quotes are required; single quotes are not appropriate in this context.
<br />
<br /></i ></td></tr> 
<tr name='tr_javascript'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_javascript'>
<td colspan="5">
<p>
<a class="xref" href="#getproperty">getProperty</a> 
<a class="xref" href="#script">script</a> 
<a class="xref" href="#setcallback">set (callback)</a> </p></td></tr>
<tr name='tr_javascript'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k503">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_label'>
<td colspan="5">
<h3 >
<a id="label" name="label">label or labels</a>
<a id="k504"> </a></h3>   
<a class="textParam" href="#labelatomlabelparameters">Atom label parameters</a>
<br />   
<a class="textParam" href="#labelcolumnformattingandscientificnotation">Column formatting and scientific notation</a>
<br />   
<a class="textParam" href="#labellabelapplications">Label applications</a>
<br />   
<a class="textParam" href="#labellabelpositioning">Label positioning</a>
<br />   
<a class="textParam" href="#labelsettinglabelsandturningthemonandoff">Setting Labels and Turning Them On and Off</a>
<br />
<br /></td></tr>
<tr name='tr_label'>
<td>
<i >Turns on and off atom labels based on a previous selection. If a string is given, it is used as the label. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#hover">hover</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#echo">echo</a>. Additional options include setting the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#font">font</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#color">color</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#background">background</a>, x- and y-
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_labeloffset">offsets</a>, and the text 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_labelalignment">alignment</a> (left, center, or right). Default settings for these characteristics can be set by first issuing 
<b>select none</b>, so that no real label is set. Note that commands such as 
<b>cartoons ONLY</b> with the ONLY keyword turn off labels. To use ONLY and preserve labels, simply assign a variable to the labels to be kept and then restore them -- for example, 
<b>Var x = {*}.labels; cartoons ONLY; {*}.labels = x</b>.
<br />
<br />
<b>
<a name="labelatomlabelparameters">Atom label parameters</a></b>    
<a href="#label">back</a>
<br />
<br /> You can specify atom parameters two different ways. You can use the older notation consisting of a percent sign followed by a single character, or you can use a new notation that is more flexible and easier to remember consisting of a percent sign followed by a keyword in brackets. For instance, you can use 
<b>select *.ca;label "%n%R"</b> or 
<b>select *.ca;label "%[group]%[resno]"</b>. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomproperties">atom properties</a> for a detailed list of atom properties that can be included in labels. In addition, you can read string data into labels from a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#data">data "mydata"</a> command using 
<b>label %{mydata}</b>. If data of name "mydata" is not found, the model's auxiliaryInfo will be checked. For example, with P2N files, which add "altName" information for an atom, one can then use 
<b>label %{altName}</b> to label atoms using that alternative name.
<br />
<br />
<b>
<a name="labelcolumnformattingandscientificnotation">Column formatting and scientific notation</a></b>    
<a href="#label">back</a>
<br />
<br /> The sign of the digit x in %x.y determines the column formatting, and the digit y determines decimal places for decimal numbers or maximum number of characters for strings. In addition, if y is negative, for numbers, the number is expressed in scientific notation, and for strings, the string is truncated from the right instead of from the left. In the table below are two examples, one numeric and one a string. Leading and trailing periods represent space characters. 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > 
<b>%x.y</b> </td >
<td valign="top" > 
<b>123.4</b> </td >
<td valign="top" > 
<b>"tetrahedral"</b> </td ></tr >
<tr >
<td valign="top" > %10.3 </td >
<td valign="top" > ...123.400</td >
<td valign="top" > .......tet </td ></tr >
<tr >
<td valign="top" > %-10.3 </td >
<td valign="top" > 123.400... </td >
<td valign="top" > tet....... </td ></tr >
<tr >
<td valign="top" > %10.-3 </td >
<td valign="top" > ..1.234E+2 </td >
<td valign="top" > .......ral </td ></tr >
<tr >
<td valign="top" > %-10.-3 </td >
<td valign="top" > 1.234E+2.. </td >
<td valign="top" > ral....... </td ></tr ></table > Note that both x and y are independently optional. 
<b>%6[temperature]</b> would be the unrounded temperature value placed in a 6-character field (and allowed to run over); 
<b>%.3[shape]</b> would be the first three letters of the the shape of the atom. 
<br />
<br />
<b>
<a name="labellabelapplications">Label applications</a></b>    
<a href="#label">back</a>
<br />
<br /> You can use labels for more than just labeling atoms. Using the .label() function you can create variables and save them to files or deliver them to a webpage using JavaScript, thus producing customized output of your choice. For example, the commands
<br>
<br>x = {*.ca}.label("%5[group] %7[resno] %10.2phi %10.2psi");
<br>write VAR x "phipsi.xls" 
<br>
<br>creates a file that lists phi and psi Ramachandran angles for a protein. (A similar output can be obtained using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write Ramachandran</a> command.) From a web page, the following JavaScript retrieves bond information for the first silicon atom from an applet: 
<br>
<br>var x = jmolEvaluate('print {_Si}[1].bonds.label("%6a1 %6a2 %ORDER %4.2LENGTH")')
<br>
<br>Note that the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write</a> command can be used with the signed applet from the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#console">console</a> to save data on a local drive even if the applet is from another source, such as 
<a class="xref" href="http://www.rcsb.org" target="_blank">http://www.rcsb.org</a>. 
<br />
<br />
<b>
<a name="labellabelpositioning">Label positioning</a></b>    
<a href="#label">back</a>
<br />
<br /> Each label is associated with a specific atom center (a label is an atom property). Labels for all atoms that are 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#select">selected</a> are affected by any label command. You can position a label relative to the center of its associated atom using -
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_labeloffset">set labelOffset</a>, and align the text using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_labelalignment">set labelAlignment</a> (LEFT, CENTER, or RIGHT). If you want to position text at the average position of a group of atoms (or drawn objects, or an arbitrary x,y,z position), use 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#echo">echo</a> instead. For example: 
<b>set echo pt1 {20.0 30.0 23.0};echo "HERE";</b> or 
<b>set echo group1 {[ala]120};echo ALA;</b>.
<br />
<br />
<b>
<a name="labelsettinglabelsandturningthemonandoff">Setting Labels and Turning Them On and Off</a></b>    
<a href="#label">back</a>
<br />
<br /> The basic commands for turning labels on and off are 
<b>label xxx</b>, where xxx is the text or format for the label, 
<b>label ON</b>, 
<b>label OFF</b>, 
<b>label DISPLAY</b>, and 
<b>label HIDE</b>. Setting a label to the empty string "" turns it off. In addition, the following SELECT commands allow selection of atoms based on their labels:
<b>
<br>
<br>select label == ""
<br>select label != ""
<br>select label = "N" (not case specific)
<br>select label like "A*" (case specific; allows wildcard)</b>
<br>
<br>See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_labeltoggle">set labelToggle</a>. 
<br />
<br /></i ></td></tr>
<tr name='tr_label'>
<td valign="top">
<a name="label_"text"" id="k507"> </a>label "text"</td ></tr>
<tr name='tr_label'>
<td>
<blockquote>
<p >
<i >The label command followed by the desired text in quotes creates and displays that label for the currently selected atoms. The quotes are recommended but not necessary if no special characters such as semicolon, braces, or pound sign are present. Use | (vertical bar) or 
<b>\n</b> as a line separator for multiline labels. A limited amount of HTML-like formatting can be used: 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >&lt;sub> &lt;/sub></td >
<td valign="top" >subscript</td ></tr >
<tr >
<td valign="top" >&lt;sup> &lt;/sup></td >
<td valign="top" >superscript</td ></tr >
<tr >
<td valign="top" >&lt;color COLOR> &lt;/color></td >
<td valign="top" >font color; for example 
<b>label "%i &lt;color red>%a&lt;/color></b> or 
<b>label "%i &lt;color #ff0000>%a&lt;/color>"</b>. </td ></tr ></table >Single quotes do not count as quotes in this context, but the text may be a simple variable: 
<b>x = "testing";label @x</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_label'>
<td valign="top">
<a name="label_display" id="k508"> </a>label DISPLAY</td ></tr>
<tr name='tr_label'>
<td>
<blockquote>
<p >
<i >
<b>Labels DISPLAY</b> ensures that a label is displayed, creating a new default label if need be.</i ></p ></blockquote></td></tr> 
<tr name='tr_label'>
<td valign="top">
<a name="label_hide" id="k509"> </a>label HIDE</td ></tr>
<tr name='tr_label'>
<td>
<blockquote>
<p >
<i >
<b>Labels HIDE</b> hides labels for the currently selected atoms without deleting them or changing their text.</i ></p ></blockquote></td></tr> 
<tr name='tr_label'>
<td valign="top">
<a name="label_" id="k506"> </a>label ON/OFF{default: ON}</td ></tr>
<tr name='tr_label'>
<td>
<blockquote>
<p >
<i >
<b>Labels on</b> delivers a default label to the currently selected atoms. The default for this label (
<b>%[identify]</b>) depends upon the file type and whether more than one file is loaded:
<br> 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > single model, non-PDB data</td >
<td valign="top" > 
<b>%[atomName] #%[atomNo]</b></td ></tr >
<tr >
<td valign="top" >mutiple model, non-PDB data</td >
<td valign="top" > 
<b>%[atomName]/%[model #%[atomNo]</b>. Note that the model will be displayed in "file.model" notation. For example, 
<b>C12/3.2 #10</b> would be an atom in the third model of the second file loaded.</td ></tr >
<tr >
<td valign="top" > single model, PDB data</td >
<td valign="top" > 
<b>%[group]%[sequence]:%[chain].%[atomName]%%%[altloc] #%[atomNo]</b>. (Not all residues will show the chain or altloc, in which case the preceding colon or percent sign, respectively, is not displayed. For example: 
<b>[MET]1:C.N #608</b>.)</td ></tr >
<tr >
<td valign="top" >mutiple model, PDB data</td >
<td valign="top" > 
<b>%[group]%[sequence]:%[chain].%[atomName]%%%[altloc]/%[model] #%[atomNo]</b></td ></tr ></table >
<br>
<br>Note that 
<b>labels off</b> deletes the current formatting, and 
<b>labels on</b> always restores the default label. </i ></p ></blockquote></td></tr> 
<tr name='tr_label'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('.label')">in new window using 1crn.pdb</td></tr>
<tr name='tr_label'>
<td>
<table cellpadding="10">
<tr>
<td class="example">select nitrogen
<br />label %a: %x %y %z</td></tr></table></td></tr>
<tr name='tr_label'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples/labels.htm">labels.htm</a> </td></tr>
<tr name='tr_label'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_label'>
<td colspan="5">
<p>
<a class="xref" href="#coloratomobject">color (atom object)</a> 
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#font">font</a> 
<a class="xref" href="#hover">hover</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlabels">set (labels)</a> 
<a class="xref" href="#setecho">set echo</a> </p></td></tr>
<tr name='tr_label'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k505">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_lcaocartoon'>
<td colspan="5">
<h3 >
<a id="lcaocartoon" name="lcaocartoon">lcaoCartoon</a>
<a id="k510"> </a></h3></td></tr>
<tr name='tr_lcaocartoon'>
<td>
<i >
<img src="img/lcao.jpg" height="100" width="100" alt="LCAO Cartoons" />The 
<b>lcaoCartoon</b> command displays cartoonish atomic p and hybrid sp, sp2, sp3, sp3d, and sp3d2 orbitals like those commonly seen in textbooks in discussions of the method of linear combination of atomic orbitals. 
<br>
<br>Any number of the following options may be strung together in the same command. The 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface</a> command can also be used for the creation of LCAO cartoons. Selections for scale, color, and translucency are "persistent" -- carrying over from one command to the next -- and thus need only to be given once per model loading if they are not to be changed. Note that these options must be given prior to or along with the actual command creating the cartoon; they do not act on lcaocartoons that have already been made. The CREATE keyword and its associated orbital type, optionally with the added keyword MOLECULAR, must be the very last keyword when multiple keywords are involved.
<br />
<br /></i ></td></tr>
<tr name='tr_lcaocartoon'>
<td valign="top">
<a name="lcaocartoon_" id="k512"> </a>lcaoCartoon ON/OFF{default: ON}</td ></tr>
<tr name='tr_lcaocartoon'>
<td>
<blockquote>
<p >
<i >Turn on/off the selected LCAO cartoon.</i ></p ></blockquote></td></tr> 
<tr name='tr_lcaocartoon'>
<td valign="top">
<a name="lcaocartoon_create" id="k513"> </a>lcaoCartoon CREATE "[type]"</td ></tr>
<tr name='tr_lcaocartoon'>
<td>
<blockquote>
<p >
<i >Creates a new LCAO cartoon (a tear-shaped lobe) of the given type at the currently selected atoms. Of the selected atoms, only atoms with compatible sigma hybridization are used. The CREATE keyword is optional. Other options include LONEPAIR (two small dots) and RADICAL (one small dot) instead of CREATE . Valid types include are shown below. In addition to those listed, adding a "-" sign prior to the designation -- "-sp2" for example -- denotes the position 180 degrees rotated from the described position. For sp2, sp3, sp3d, and sp3d2 hybridizations, the order a-f starts with bonds present in the model in order of atomIndex and continues to unoccupied locations. (Note: Previous versions of Jmol were inconsistent in terms of this ordering.)
<br>
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >"cpk"</td >
<td valign="top" > Creates a sphere at the current spacefill radius. The reason this could be useful is that such spheres, though associated with an atom, can be slabbed and capped like an isosurface. This allows for a useful "unit cell only" rendering of spacefill models, for example, using 
<b>spacefill ionic;lcaocartoon scale 1.0 CAP unitcell "cpk";spacefill off</b>. (We turn the spacefill off -- it was just to provide the reference sizes.)</td ></tr >
<tr >
<td valign="top" >"lp"</td >
<td valign="top" >a lobe at the "lone pair" position at an AX3E center such as the N atom in NH3, with three bonds in sp3 sigma hybridization, or the sp2-hybridized lone pair in an AX2E bent center such as the unprotonated N atom in histidine. (For two dots, use LONEPAIR instead of CREATE.) </td ></tr >
<tr >
<td valign="top" >"lpa", "lpb"</td >
<td valign="top" >a lobe at one of the two sp3 sigma-hybridized lone pair positions at an AX2E2 bent center, such as that in H2O. (For two dots, use LONEPAIR instead of CREATE.)</td ></tr >
<tr >
<td valign="top" >"px" "py" "pz"</td >
<td valign="top" >Standard p orbitals at an sp or sp2 sigma-hybridized center. Both lobes "a" and "b" are produced unless LONEPAIR or RADICAL is being used instead of CREATE.</td ></tr >
<tr >
<td valign="top" >"s"</td >
<td valign="top" >standard spherical s orbital at any center.</td ></tr >
<tr >
<td valign="top" >"spa" "spb"</td >
<td valign="top" >the two sigma bonding/nonbonding positions around a linear sp sigma-hybridized center.</td ></tr >
<tr >
<td valign="top" >"sp2a" "sp2b" "sp2c"</td >
<td valign="top" >the three sigma bonding/nonbonding positions around a trigonal planar or bent center.</td ></tr >
<tr >
<td valign="top" >"sp3a" "sp3b" "sp3c" "sp3d"</td >
<td valign="top" >the four sp3 sigma-hybridized positions at any center with a geometry consistent with a tetrahedral electron configuration (bent, trigonal pyramidal, tetrahedral).</td ></tr >
<tr >
<td valign="top" >"sp3da" "sp3db" "sp3dc" "sp3dd" "sp3de"</td >
<td valign="top" >the five sp3d sigma-hybridized positions at any center that has at least three bonds and is consistent with a trigonal bipyramidal electron configuration (for example, T-shaped or see-saw). </td ></tr >
<tr >
<td valign="top" >"sp3d2a" "sp3d2b" "sp3d2c" "sp3d2d" "sp3d2e" "sp3d2f"</td >
<td valign="top" >the six sp3d2 sigma-hybridized positions at any center that has at least three bonds and is consistent with an octahedral electron configuration. </td ></tr ></table ></i ></p ></blockquote></td></tr> 
<tr name='tr_lcaocartoon'>
<td valign="top">
<a name="lcaocartoon_lonepair" id="k514"> </a>lcaoCartoon LONEPAIR "[type]"</td ></tr>
<tr name='tr_lcaocartoon'>
<td>
<blockquote>
<p >
<i >Sets two small dots instead of a lobe at the given position.</i ></p ></blockquote></td></tr> 
<tr name='tr_lcaocartoon'>
<td valign="top">
<a name="lcaocartoon_radical" id="k515"> </a>lcaoCartoon RADICAL "[type]"</td ></tr>
<tr name='tr_lcaocartoon'>
<td>
<blockquote>
<p >
<i >Sets one small dot instead of a lobe at the given position.</i ></p ></blockquote></td></tr> 
<tr name='tr_lcaocartoon'>
<td valign="top">
<a name="lcaocartoon_create" id="k516"> </a>lcaoCartoon CREATE "[type]" MOLECULAR</td ></tr>
<tr name='tr_lcaocartoon'>
<td>
<blockquote>
<p >
<i >Creates a new LCAO cartoon of the given type using the molecular axes system as reference. Applicable only for "px", "py", "pz", "-px", "-py", and "-pz". </i ></p ></blockquote></td></tr> 
<tr name='tr_lcaocartoon'>
<td valign="top">
<a name="lcaocartoon_color" id="k518"> </a>lcaoCartoon COLOR 
<a class='def' href='#d517' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a></td ></tr>
<tr name='tr_lcaocartoon'>
<td>
<blockquote>
<p >
<i >Colors the orbital one specific color for the lcaocartoon being created with that command or future lcaocartoons.</i ></p ></blockquote></td></tr> 
<tr name='tr_lcaocartoon'>
<td valign="top">
<a name="lcaocartoon_color" id="k520"> </a>lcaoCartoon COLOR 
<a class='def' href='#d517' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a> 
<a class='def' href='#d517' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a></td ></tr>
<tr name='tr_lcaocartoon'>
<td>
<blockquote>
<p >
<i >If this is a p orbital, colors the two lobes different colors for the lcaocartoon being created with that command or future lcaocartoons.</i ></p ></blockquote></td></tr> 
<tr name='tr_lcaocartoon'>
<td valign="top">
<a name="lcaocartoon_delete" id="k521"> </a>lcaoCartoon DELETE</td ></tr>
<tr name='tr_lcaocartoon'>
<td>
<blockquote>
<p >
<i >Delete the LCAO cartoons on the currently selected set of atoms.</i ></p ></blockquote></td></tr> 
<tr name='tr_lcaocartoon'>
<td valign="top">
<a name="lcaocartoon_list" id="k522"> </a>lcaoCartoon LIST</td ></tr>
<tr name='tr_lcaocartoon'>
<td>
<blockquote>
<p >
<i >Lists all LCAO cartoons</i ></p ></blockquote></td></tr> 
<tr name='tr_lcaocartoon'>
<td valign="top">
<a name="lcaocartoon_scale" id="k523"> </a>lcaoCartoon SCALE (decimal)</td ></tr>
<tr name='tr_lcaocartoon'>
<td>
<blockquote>
<p >
<i >Sets the scale of the LCAO cartoon for the lcaocartoon being created with that command or future lcaocartoons.</i ></p ></blockquote></td></tr> 
<tr name='tr_lcaocartoon'>
<td valign="top">
<a name="lcaocartoon_select" id="k526"> </a>lcaoCartoon SELECT 
<a class='def' href='#d525' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_lcaocartoon'>
<td>
<blockquote>
<p >
<i >Selects a set of atoms. In the absence of this keyword, the previously selected atom set is used.</i ></p ></blockquote></td></tr> 
<tr name='tr_lcaocartoon'>
<td valign="top">
<a name="lcaocartoon_select" id="k524"> </a>lcaoCartoon SELECT "[type]"</td ></tr>
<tr name='tr_lcaocartoon'>
<td>
<blockquote>
<p >
<i >For the already selected atom set, selects what type of orbital for an on/off/delete operation.</i ></p ></blockquote></td></tr> 
<tr name='tr_lcaocartoon'>
<td valign="top">
<a name="lcaocartoon_translucent_or_opaque" id="k519"> </a>lcaoCartoon TRANSLUCENT or OPAQUE</td ></tr>
<tr name='tr_lcaocartoon'>
<td>
<blockquote>
<p >
<i >Allows for translucent or opaque lobes for the lcaocartoon being created with that command or future lcaocartoons. For translucency options, see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#color">color</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_lcaocartoon'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_lcaocartoon'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_lcaocartoon'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples-11/lcao.htm">examples-11/lcao.htm</a> </td></tr>
<tr name='tr_lcaocartoon'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_lcaocartoon'>
<td colspan="5">
<p>
<a class="xref" href="#planeexpressions">[plane expressions]</a> 
<a class="xref" href="#isosurface">isosurface</a> 
<a class="xref" href="#mo">mo</a> 
<a class="xref" href="#pmesh">pmesh</a> </p></td></tr>
<tr name='tr_lcaocartoon'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k511">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_load'>
<td colspan="5">
<h3 class=h3newer>
<a id="load" name="load">load</a>
<a id="k527"> </a> 
<br />
<span class=newer>(v. 13.0 adds capability to load from PubChem and to read JCAMP-DX (JDX) files (IR, NMR, UV/VIS, GC/MS) and to correlate atoms with peak assignments or molecules and MS fragments)</span></h3>   
<a class="textParam" href="#loadfiletypes">[File types]</a>
<br />   
<a class="textParam" href="#loadzip/jarfilesandjmolmanifest">[ZIP/JAR files and JmolManifest]</a>
<br />   
<a class="textParam" href="#loadgeneraloptions">[General Options]</a>
<br />   
<a class="textParam" href="#loadcrystallographicoptions">[Crystallographic Options]</a>
<br />
<br /></td></tr>
<tr name='tr_load'>
<td>
<i >Loads the specified file or URL. A wide variety of file types are supported. In general, resolution of file type is based on internal file cues, not the filename or file extension. However, this resolution process can be overridden by specifying a prefix to the file name consisting of the file type followed by two colon characters: 
<b>load "molpro(xml)::myfile"</b>. 
<b>PDB-type files can be loaded with automatic addition of hydrogen atoms and multiple bonds using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_pdbaddhydrogens">SET pdbAddHydrogens</a>.</b> For PDB, PQR, and mmCIF files that contain HELIX, SHEET, or TURN records provided by the author, those structures are created (though not initially displayed); for PDB, PQR, and mmCIF files that do not contain this information, Jmol will generate secondary structure using DSSP (W. Kabsch and C. Sander, Biopolymers, vol 22, 1983, pp 2577-2637; 
<a class="xref" href="http://swift.cmbi.ru.nl/gv/dssp" target="_blank">http://swift.cmbi.ru.nl/gv/dssp</a>) for chains that contain backbone atoms and the method of Levitt and Greer [J.Mol.Biol.(1977) 114, 181-293] for alpha-carbon-only chains. (See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">calculate STRUCTURE</a>.) 
<br>
<br>Multiple files and a selected model from a multi-model file can be read as well. Files may be Gzipped, and multiple files can be read from compressed ZIP and JAR collections. A default directory can be set using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_defaultdirectory">set defaultDirectory</a>, and for applets a proxy server can be set for non-host file loading using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_appletproxy">set appletProxy</a>. After the filename, the options listed below are available. These options must appear in the order given in the table below. In addition, the load command can take parameters that specify the number of unit cells to generate, the the space group or Jones-Faithful operators to use, and the unit cell dimensions. Using these parameters, the space group and unit cell information within a file can be overridded, and even simple XYZ data files can be turned into crystallographic data sets. The FILTER keyword allows selective loading of atoms as well as construction of the biologically relevant molecule (PDB "BIOMOLECULE" records. See also the headings 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loadappend">load APPEND</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loadfiles">load FILES</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loadmenu">load MENU</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loadmodels">load MODELS</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loadtrajectory">load TRAJECTORY</a>. Note that with the Jmol application (not the applet) you can also use Edit...Paste to load molecular coordinate from the system clipboard. The same capability for the applet can be had using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#data">data "model"</a>. 
<br />
<br />
<b>
<a name="loadfiletypes">[File types]</a></b>    
<a href="#load">back</a>
<br />
<br /> Jmol reads a wide variety of data formats. Example files can be found at 
<a class="xref" href="http://jmol.svn.sourceforge.net/viewvc/jmol/trunk/Jmol-datafiles" target="_blank">http://jmol.svn.sourceforge.net/viewvc/jmol/trunk/Jmol-datafiles</a>. Supported file types include: 
<br>
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >$identifier</td >
<td valign="top" >Jmol can utilized the SMILES-to-3D and database service at the 
<a class="xref" href="http://cactus.nci.nih.gov" target="_blank">NIH Cactus server</a> to load 3D models based simply on 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#jmolsmarts/smiles">SMILES</a> strings or chemical identifiers such as chemical names, CAS registry numbers, and InChI keys. For example, 
<b>load $CCC</b> loads the structure of propane, 
<b>load $C1CCCCC1</b> loads a chair cyclohexane model, and 
<b>load $tylenol</b> loads a model of acetaminophen. </td ></tr >
<tr >
<td valign="top" > :name</td >
<td valign="top" >The signed applet and application can load a model directly from PubChem. A name or a PubChem ID may be given. For example, 
<b>load ":tylenol"</b> or 
<b>load ":1983"</b> loads a model of acetaminophen. More specifically the syntax 
<b>load :xxx:yyyy</b>, where xxx is CAS, CID, NAME, INCHI or SMILES, specifies the exact sort of compound identifier yyyy that follows the second colon. Note that INCHI must be a standard inchi key, as perhaps generated using 
<b>{*}.find("chemical", "stdinchikey")</b></td ></tr >
<tr >
<td valign="top" >=XXXX</td >
<td valign="top" >a PDB file directly from RCSB. For example, 
<b>load "=1crn"</b>.</td ></tr >
<tr >
<td valign="top" >==XXX</td >
<td valign="top" >a ligand from RCSB. For example, 
<b>load ==hem</b>.</td ></tr >
<tr >
<td valign="top" >=XXXX/dssr</td >
<td valign="top" >Adding 
<b>/DSSR</b> instructs Jmol to also obtain the nucleic acid secondary structure 
<a class="xref" href="http://x3dna.bio.columbia.edu/" target="_blank">3DNA</a> from Columbia University. </td ></tr >
<tr >
<td valign="top" >=XXXX/rna3d</td >
<td valign="top" >loads mmCIF data from RCSB, also fetching RNA secondary structure annotations from 
<a class="xref" href="http://rna.bgsu.edu/rna3dhub" target="_blank">http://rna.bgsu.edu/rna3dhub</a> indicating hairpinLoops, internalLoops, and junctions. Allows for such constructs as
<br>
<br> 
<b>  select within(rna3d,"hairpinLoops") 
<br>   select within(rna3d,"hairpinLoops where index=5")
<br>   x = getproperty("auxiliaryInfo.models[1].rna3d.internalLoops.5")
<br>   x = getproperty("auxiliaryInfo.models[1].rna3d.internalLoops")[5]
<br>   print x
<br>   {
<br>    _atoms : ({3023:3062 3639:3706})
<br>    _isres : true
<br>    _path : "internalLoops"
<br>    index : 5
<br>    units : "1S72|1|0|C|153,1S72|1|0|C|154,1S72|1|0|G|182,1S72|1|0|A|183,1S72|1|0|G|184"
<br>   }
<br>   y = x._atoms
<br>   select y</td ></tr >
<tr >
<td valign="top" >=XXXX/dom </td >
<td valign="top" > see *XXXX/dom; mmCIF data retrieved from RCSB</td ></tr >
<tr >
<td valign="top" >=XXXX/val </td >
<td valign="top" > see *XXXX/val; mmCIF data retrieved from RCSB</td ></tr >
<tr >
<td valign="top" > *XXXX </td >
<td valign="top" > Similar to =XXXX, but retrieving data from 
<a class="xref" href="http://www.ebi.ac.uk/pdbe" target="_blank">http://www.ebi.ac.uk/pdbe</a>. (
<span class="newv">Jmol 14.2</span>.3) </td ></tr >
<tr >
<td valign="top" > *XXXX/dssr </td >
<td valign="top" > see =XXXX/dssr; mmCIF data retrieved from PDBe</td ></tr >
<tr >
<td valign="top" > *XXXX/rna3d </td >
<td valign="top" > see =XXXX/rna3d; mmCIF data retrieved from PDBe</td ></tr >
<tr >
<td valign="top" > *XXXX/dom </td >
<td valign="top" > mmCIF + domain annotations from PDBe.</td ></tr >
<tr >
<td valign="top" > *XXXX/val </td >
<td valign="top" > mmCIF + validation annotations from PDBe.</td ></tr >
<tr >
<td valign="top" > ADF</td >
<td valign="top" >
<a class="xref" href="http://www.scm.com/" target="_blank">Amsterdam Density Functional</a> output file</td ></tr >
<tr >
<td valign="top" >=cod/number</td >
<td valign="top" >For example, 
<b>load =cod/1000041</b>. Loads 
<a class="xref" href="http://www.crystallography.net" target="_blank">Crystallographic Open Database</a> files by number</td ></tr >
<tr >
<td valign="top" >AFLOW</td >
<td valign="top" >
<a class="xref" href="http://www.aflowlib.org" target="_blank">AFLOW</a> binary alloy files. </td ></tr >
<tr >
<td valign="top" >AIMS</td >
<td valign="top" >
<a class="xref" href="https://aimsclub.fhi-berlin.mpg.de/" target="_blank">Ab Initio Molecular Simulation Package</a> (input files only) </td ></tr >
<tr >
<td valign="top" >AMPAC</td >
<td valign="top" >
<a class="xref" href="http://www.semichem.com/ampac/" target="_blank">AMPAC</a> file </td ></tr >
<tr >
<td valign="top" >Argus(XML)</td >
<td valign="top" >
<a class="xref" href="http://www.planaria-software.com/" target="_blank">ArgusLab</a> AGL file</td ></tr >
<tr >
<td valign="top" >Bilbao(BCS)</td >
<td valign="top" >
<a class="xref" href="http://cryst.ehu.es" target="_blank">Bilbao Crystallographic Server</a> file format. This simple format is similar to XYZ file format, but including International Tables space group number (first line), the unit cell parameters (second line), an atom count (third line), and then a list of atom names and positions. (
<a class="xref" href="http://sourceforge.net/p/jmol/code/HEAD/tree/trunk/Jmol-datafiles/bcs/" target="_blank">examples</a>)</td ></tr >
<tr >
<td valign="top" >CGD</td >
<td valign="top" >
<a class="xref" href="http://gavrog.org/Systre-Help.html#file_formats" target="_blank">Gavrog Systre</a> Crystal Graph Data file format, as produced by 
<a class="xref" href="http://www.topos.samsu.ru" target="_blank">TOPOS</a> topological analysis of crystal structures.</td ></tr >
<tr >
<td valign="top" >Chem3D(XML)</td >
<td valign="top" >CambridgeSoft 
<a class="xref" href="http://www.cambridgesoft.com/software/details/?ds=3" target="_blank">Chem3D</a> C3XML file</td ></tr >
<tr >
<td valign="top" >CASTEP</td >
<td valign="top" >
<a class="xref" href="http://www.castep.org" target="_blank">CASTEP</a> input, .md, .geom, .phonon, and .magres file formats. .phonon files are read as trajectories -- see the FILTER specifications, below, to load specific q-point mode sets.</td ></tr >
<tr >
<td valign="top" >CIF</td >
<td valign="top" >International Union of Crystallography 
<a class="xref" href="http://www.iucr.org/iucr-top/cif/home.html" target="_blank">Crystallographic Information File</a>, including Macromolecular Crystallographic Information files (mmCIF), Modulated Structure files (msCIF), and Bilbao Magnetic structure files (
<a class="xref" href="http://158.227.5.82/magndata/" target="_blank">mCIF</a>). NOTE: Jmol 12.2 changes the default for loading CIF files that have GEOM_BOND records to make loading more similar to the way Mercury opens files. Such files are now loaded as full molecules based on the idea that a "molecule" is "symop=1 or connected(symop=1)". The model is displayed WITHOUT a unit cell, and no unit cell information is made available. The standard 
<b>load xxx.cif {1 1 1}</b> is still available if a unit cell is desired.</td ></tr >
<tr >
<td valign="top" >CML(XML)</td >
<td valign="top" >
<a class="xref" href="http://cml.sourceforge.net/" target="_blank">Chemical Markup Language</a> files. </td ></tr >
<tr >
<td valign="top" >CRYSTAL</td >
<td valign="top" > 
<a class="xref" href="http://www.crystal.unito.it/" target="_blank">Crystal09</a> solid state computation output, including support for 1D (polymer) and 2D (slab) periodicity. This file format creates the atom properties 
<b>property_spin</b> and 
<b>property_magneticMoment</b> . </td ></tr >
<tr >
<td valign="top" >CSF</td >
<td valign="top" >Fujitsu 
<a class="xref" href="http://www.computers.us.fujitsu.com/www/products_bioscience.shtml?products/bioscience/cache" target="_blank">Sygress Explorer</a> (formerly CAChe) chemical structure file, including the reading of ab initio, semiemperical, gaussian, and density functional molecular orbitals</td ></tr >
<tr >
<td valign="top" >CUBE</td >
<td valign="top" >Gaussian 
<a class="xref" href="http://www.gaussian.com/g_ur/u_cubegen.htm" target="_blank">cubegen</a> output file</td ></tr >
<tr >
<td valign="top" >DCD</td >
<td valign="top" > single precision binary (FORTRAN unformatted) 
<a class="xref" href="http://www.ks.uiuc.edu/Research/vmd/plugins/molfile/dcdplugin.html" target="_blank">DCD</a> trajectory files (Jmol 12). These files require the COORD keyword and a file giving atom information, such as a PDB file. For example: 
<b>load trajectory "t.pdb" coord "t.dcd"</b></td ></tr >
<tr >
<td valign="top" >DGRID</td >
<td valign="top" >
<a class="xref" href="http://www.scm.com/News/DGrid.html" target="_blank">DGRID</a> file reader (Jmol 12). These files are generalized representations of output from a variety of quantum mechanical calculation packages, including especially 
<a class="xref" href="http://www.scm.com/Doc/Doc2009.01/ADF/ADFUsersGuide/page430.html" target="_blank">ADF</a>.</td ></tr >
<tr >
<td valign="top" >FCHK</td >
<td valign="top" >Gaussian formatted check-point file format</td ></tr >
<tr >
<td valign="top" >FoldingXYZ</td >
<td valign="top" >XYZ file created by the 
<a class="xref" href="http://fahwiki.net" target="_blank">Folding@home project</a></td ></tr >
<tr >
<td valign="top" >GAMESS</td >
<td valign="top" >
<a class="xref" href="http://www.msg.chem.iastate.edu/gamess/" target="_blank">General Atomic and Molecular Electronic Structure System</a> output file</td ></tr >
<tr >
<td valign="top" >Gaussian</td >
<td valign="top" >
<a class="xref" href="http://www.gaussian.com/" target="_blank">Gaussian</a> output file. spin density will be read into an atoms's property_spin property (Jmol 14.4).</td ></tr >
<tr >
<td valign="top" >GhemicalMM</td >
<td valign="top" >
<a class="xref" href="http://en.wikipedia.org/wiki/Ghemical" target="_blank">Ghemical</a> molecular mechanics file (MM1GP)</td ></tr >
<tr >
<td valign="top" >GRO</td >
<td valign="top" >
<a class="xref" href="http://www.gromacs.org" target="_blank">GROMACS</a> .gro file format </td ></tr >
<tr >
<td valign="top" >GULP</td >
<td valign="top" >
<a class="xref" href="https://projects.ivec.org/gulp" target="_blank">GULP</a> file format</td ></tr >
<tr >
<td valign="top" >HIN</td >
<td valign="top" >
<a class="xref" href="http://www.hyper.com/" target="_blank">HyperChem</a> native file</td ></tr >
<tr >
<td valign="top" >Jaguar</td >
<td valign="top" >National Center for Supercomputing Applications Jaguar output file </td ></tr >
<tr >
<td valign="top" >JANA2006</td >
<td valign="top" > Jana2006 M40/M50 files can be read, and incommensurate structures can be displayed. Commensurately and incommensureately modulated structures can be read. Not supported to date: X-harmonic and Legendre polynomial modulation specifications, crenel-orthogonalized Fourier modulation functions.</td ></tr >
<tr >
<td valign="top" >JSON</td >
<td valign="top" > Starting with Jmol 14.0, Jmol can read (and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#writemodel">writemodel</a>) 
<a class="xref" href="http://www.ietf.org/rfc/rfc4627.txt" target="_blank">JavaScript Object Notation</a>-formatted data. The format is compatible with that developed for 
<a class="xref" href="http://web.chemdoodle.com/docs/chemdoodle-json-format" target="_blank">ChemDoodle</a>, specifically implementing the "a" and "b" keys, but also adding optional keys "_is2D" and "_scale" (see below). Data must be wrapped in a JSON object named "mol": 
<b>{"mol":{ "a":[...], "b":[...]} }</b>. White space is allowed, but only after the opening seven characters, which identify the file type as JSON. 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>_is2D</b></td >
<td valign="top" >true if data are to be converted to 3D automatically</td ></tr >
<tr >
<td valign="top" >
<b>_scale</b></td >
<td valign="top" >scale of data in x, y, and z directions. {"x":20,"y":-20,"z":20}, for example, indicates that the data need to be scaled down by a factor of 20, and the y axis needs to be reversed.</td ></tr >
<tr >
<td valign="top" >
<b>a</b></td >
<td valign="top" >an array of atom records of the format {"l":atomSymbol,"x":xCoord,"y":yCoord,"z":zCoord}, where "z" and "l" (the lower-case letter "L", for "label"; defaulting to "C") are optional.</td ></tr >
<tr >
<td valign="top" >
<b>b</b></td >
<td valign="top" >an array of bond records of the format {"b":atomIndex,"e":atomIndex,"o":order}, for "begin", "end", and optional "order" (defaults to 1). atom indexes are 0-based.</td ></tr ></table ></td ></tr >
<tr >
<td valign="top" >JCAMP-DX</td >
<td valign="top" > Jmol can read specialized JCAMP-DX files containing ##$MODELS records and automatically sychronize user picking actions based on ##$PEAKS record information. See 
<a class="xref" href="misc/Jmol-JSpecView-specs.pdf" target="_blank">Jmol-JSpecView-specs.pdf</a>. </td ></tr >
<tr >
<td valign="top" >JME</td >
<td valign="top" >
<a class="xref" href="http://www.molinspiration.com/jme/" target="_blank">Java Molecular Editor</a> file format (a 2D, not a 3D, format)</td ></tr >
<tr >
<td valign="top" >MAGRES</td >
<td valign="top" >
<a class="xref" href="http://www.ccpnc.ac.uk/pmwiki.php/CCPNC/MagresView" target="_blank">Magres</a> files </td ></tr >
<tr >
<td valign="top" >MDTOP, MDCRD</td >
<td valign="top" >
<a class="xref" href="http://amber.scripts.edu" target="_blank">AMBER</a> Molecular dynamics topology files and associated coordinate files. </td ></tr >
<tr >
<td valign="top" >MOL, MOL2</td >
<td valign="top" >Accelrys (formerly Symyx, formerly Molecular Design) 
<a class="xref" href="http://www.mdli.com/downloads/public/ctfile/ctfile.jsp" target="_blank">structure data files</a>, including SDF and CTAB V2000 files. Starting with 
<span class="newv">Jmol 14.1.1</span>2, using the forcing prefix MOL3D, as in load "MOL3D::xxx.mol" one can cause Jmol to throw an error if a 2D MOL file is attempted to be read. </td ></tr >
<tr >
<td valign="top" >MOLDEN</td >
<td valign="top" >
<a class="xref" href="http://www.cmbi.ru.nl/molden/molden_format.html" target="_blank">Molden</a> data file. Jmol 14.4 allows an extended version of MOLDEN files to be read that contains crystallographic information (from CASTEP), specifically [SpaceGroup], [Operators], and [Cell] or [CellAxes] (but not both). For example:
<br>
<br>[SpaceGroup] (Number)
<br>1
<br>
<br>[Operators]
<br>x, y, z
<br>
<br>[Cell] (Angs)
<br> 2.96340697 6.51358688 -1 90.0000 90.0000 90.0000
<br>
<br>(or)
<br>
<br>[CellAxes] (Angs)
<br>2.963407 0.0 0.0
<br>0.0 6.513587 0.0
<br>0.0 0.0 0.0
<br>
<br>...
<br></td ></tr >
<tr >
<td valign="top" >MOLPRO(XML)</td >
<td valign="top" >
<a class="xref" href="http://www.molpro.net/" target="_blank">Molpro</a> structure file</td ></tr >
<tr >
<td valign="top" >Mopac</td >
<td valign="top" >
<a class="xref" href="http://openmopac.net" target="_blank">OpenMopac</a> output file (MOPOUT)</td ></tr >
<tr >
<td valign="top" >MopacGraphF</td >
<td valign="top" >
<a class="xref" href="http://openmopac.net" target="_blank">OpenMopac</a> GRAPHF output file (for molecular orbitals)</td ></tr >
<tr >
<td valign="top" >NWCHEM</td >
<td valign="top" >Pacific Northwest National Laboratory 
<a class="xref" href="http://www.emsl.pnl.gov/docs/nwchem/nwchem.html" target="_blank">NWChem</a> output file</td ></tr >
<tr >
<td valign="top" >Odyssey</td >
<td valign="top" >WaveFunction 
<a class="xref" href="http://www.wavefun.com/products/odyssey/odyssey.html" target="_blank">Odyssey</a> data file (ODYDATA)</td ></tr >
<tr >
<td valign="top" >Odyssey(XML)</td >
<td valign="top" >WaveFunction 
<a class="xref" href="http://www.wavefun.com/products/odyssey/odyssey.html" target="_blank">Odyssey</a> XODYDATA file</td ></tr >
<tr >
<td valign="top" >PDB</td >
<td valign="top" >
<a class="xref" href="http://www.wwpdb.org/docs.html" target="_blank">Protein Data Bank</a> files. PDB reading of X-PLOR using hybrid-36 and NAMD files using hex is also supported. See 
<a class="xref" href="http://www.schrodinger.com/AcrobatFile.php?type=supportdocs&type2=&ident=530" target="_blank">http://www.schrodinger.com/AcrobatFile.php?type=supportdocs&type2=&ident=530</a> and 
<a class="xref" href="http://cci.lbl.gov/cctbx_sources/iotbx/pdb/hybrid_36.py" target="_blank">http://cci.lbl.gov/cctbx_sources/iotbx/pdb/hybrid_36.py</a>. </td ></tr >
<tr >
<td valign="top" >PQR</td >
<td valign="top" >Position/Charge/Radius data file produced by the 
<a class="xref" href="http://apbs.sourceforge.net/" target="_blank">Adaptive Poisson-Boltzmann Solver</a> project</td ></tr >
<tr >
<td valign="top" >P2N</td >
<td valign="top" >
<a class="xref" href="http://q4md-forcefieldtools.org/Tutorial/Tutorial-1.php#3" target="_blank">R.E.D. input files</a>, also reading the AltName field and allowing 
<b>label %[altName]</b></td ></tr >
<tr >
<td valign="top" >PSI</td >
<td valign="top" >
<a class="xref" href="http://www.psicode.org/" target="_blank">PSI3</a> output reader (coordinates only)</td ></tr >
<tr >
<td valign="top" >PyMOL PSE</td >
<td valign="top" >
<a class="xref" href="http://pymol.org" target="_blank">PyMOL</a> session files. Jmol will read most PyMOL session files, creating a very close representation of the view as seen in PyMOL 1.6. This ongoing project aims to faithfully reproduce the key features of PyMOL sessions. A representative sampling of how well this works can be found at 
<a class="xref" href="http://ispcbck.weizmann.ac.il/a2jmolb/browse" target="_blank">http://ispcbck.weizmann.ac.il/a2jmolb/browse</a> and 
<a class="xref" href="misc/PyMOL2Jmol_browse.pdf" target="_blank">misc/PyMOL2Jmol_browse.pdf</a>. FILTER options "nosurface" and "docache" are explained below. </td ></tr >
<tr >
<td valign="top" >QCHEM</td >
<td valign="top" >
<a class="xref" href="http://www.q-chem.com/" target="_blank">Q-Chem</a> output file</td ></tr >
<tr >
<td valign="top" >QuantumEspresso</td >
<td valign="top" >see 
<a class="xref" href="http://www.quantum-espresso.org" target="_blank">http://www.quantum-espresso.org</a>; XML files readable in Jmol.</td ></tr >
<tr >
<td valign="top" >SHELX</td >
<td valign="top" >
<a class="xref" href="http://shelx.uni-ac.gwdg.de/SHELX/" target="_blank">SHELX</a> output file</td ></tr >
<tr >
<td valign="top" >Spartan</td >
<td valign="top" >WaveFunction 
<a class="xref" href="http://www.wavefun.com/p+I515roducts/spartan.html" target="_blank">Spartan</a> data file</td ></tr >
<tr >
<td valign="top" >SMILES</td >
<td valign="top" >See $smilesString, above. </td ></tr >
<tr >
<td valign="top" >SpartanSmol</td >
<td valign="top" >WaveFunction binary 
<a class="xref" href="http://www.wavefun.com/products/spartan.html" target="_blank">Spartan</a> SMOL data file, including full MacSpartan Spartan directories in ZIP format</td ></tr >
<tr >
<td valign="top" >Tinker</td >
<td valign="top" > 
<a class="xref" href="http://dasher.wustl.edu/tinker/" target="_blank">tinker</a> files are simple coordinate files similar to XYZ format files, but including atom type and bonding information. If the first line only contains an atom count then the filename must be preceded by 
<b>tinker::</b>.</td ></tr >
<tr >
<td valign="top" >V3000</td >
<td valign="top" >Symyx (formerly Molecular Design) 
<a class="xref" href="http://www.mdli.com/downloads/public/ctfile/ctfile.jsp" target="_blank">V3000 Connection Table</a> (CTAB or SDF) data file. Starting with 
<span class="newv">Jmol 14.2</span>, Jmol supports DATA Sgroups for reading atom properties:
<br>
<br>   M V30 BEGIN SGROUP
<br>   M V30 1 DAT 0 ATOMS=(1 1) FIELDNAME=pc FIELDDATA=-0.2344 
<br>   M V30 1 DAT 0 ATOMS=(1 2) FIELDNAME=pc FIELDDATA=0.3344 
<br>   M V30 1 DAT 0 ATOMS=(1 3) FIELDNAME=pc FIELDDATA=-0.4344 
<br>   M V30 END SGROUP
<br>
<br>If the field name contains "partial" then Jmol will assign atom partial charges directly. Other properties will be read as {*}.property_xxx, where xxx is the field name.</td ></tr >
<tr >
<td valign="top" >WebMO</td >
<td valign="top" >
<a class="xref" href="http://www.webmo.net/" target="_blank">WebMO</a> molecular orbital file reader</td ></tr >
<tr >
<td valign="top" >VASP</td >
<td valign="top" >Vienna Ab Initio Simulation Package 
<a class="xref" href="http://cms.mpi.univie.a+I502c.at/vasp/" target="_blank">VASP</a> vasprun.xml and VASP OUTCAR files. </td ></tr >
<tr >
<td valign="top" >Wien2k</td >
<td valign="top" >
<a class="xref" href="http://www.wien2k.at" target="_blank">Wien2k</a> data files. WIEN2k performs electronic structure calculations for solids using density functional theory. Using the option 
<b>spacegroup "none"</b> disregards symmetry information given in the file and simply reads the atom coordinates given in the file, including MULT atom records. For example, 
<b>load t.struct {1 1 1} spacegroup "none"</b> </td ></tr >
<tr >
<td valign="top" >XYZ</td >
<td valign="top" >Minnesota Supercomputer Institute XMol file format. Various extensions to this file format allow reading of the following information separated by whitespace:
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >element </td >
<td valign="top" > x </td >
<td valign="top" > y </td >
<td valign="top" > z </td ></tr >
<tr >
<td valign="top" > element </td >
<td valign="top" > x </td >
<td valign="top" > y </td >
<td valign="top" > z </td >
<td valign="top" > vibX </td >
<td valign="top" > vibY </td >
<td valign="top" > vibZ </td ></tr >
<tr >
<td valign="top" > element </td >
<td valign="top" > x </td >
<td valign="top" > y </td >
<td valign="top" > z </td >
<td valign="top" > charge </td >
<td valign="top" > </td >
<td valign="top" > </td >
<td valign="top" > </td >
<td valign="top" > </td >
<td valign="top" > (Jmol 12)</td ></tr >
<tr >
<td valign="top" > element </td >
<td valign="top" > x </td >
<td valign="top" > y </td >
<td valign="top" > z </td >
<td valign="top" > charge </td >
<td valign="top" > radius </td >
<td valign="top" > </td >
<td valign="top" > </td >
<td valign="top" > </td >
<td valign="top" > (Jmol 12)</td ></tr >
<tr >
<td valign="top" > element </td >
<td valign="top" > x </td >
<td valign="top" > y </td >
<td valign="top" > z </td >
<td valign="top" > charge </td >
<td valign="top" > vibX </td >
<td valign="top" > vibY </td >
<td valign="top" > vibZ </td >
<td valign="top" > </td >
<td valign="top" > (Jmol 12)</td ></tr >
<tr >
<td valign="top" > element </td >
<td valign="top" > x </td >
<td valign="top" > y </td >
<td valign="top" > z </td >
<td valign="top" > charge </td >
<td valign="top" > vibX </td >
<td valign="top" > vibY </td >
<td valign="top" > vibZ </td >
<td valign="top" > atomNumber</td >
<td valign="top" > (Jmol 12)</td ></tr ></table > If the charge is an integer, it is read as 
<b>formalCharge</b>; if it is decimal, then as 
<b>partialCharge</b>. Any information past x y z is optional, and if missing or uninterpretable as a number (for example, "X" or "--") will be ignored. The element may be either an atomic symbol or an isotope symbol such as 13C or an atomic number such as 6. </td ></tr >
<tr >
<td valign="top" >ZMatrix</td >
<td valign="top" >The Z-Matrix format allows for molecules to be described by internal coordinates (distances, angles, and dihedrals) rather than in terms of actual Cartesian coordinates. Jmol can read several forms of Z-matrix data, including 
<a class="xref" href="http://openmopac.net/manual/gaussian_z.html" target="_blank">MOPAC</a> and 
<a class="xref" href="http://www.gaussian.com/g_tech/g_ur/c_zmat.htm" target="_blank">Gaussian</a> format as well as a format designed for Jmol that allows also the simple introduction of bond order. Details are given in the 
<a class="xref" href="http://jmol.svn.sourceforge.net/viewvc/jmol/trunk/Jmol/src/org/jmol/adapter/readers/simple/ZMatrixReader.java?view=markup" target="_blank">Z-Matrix reader code</a> itself. The reader supports dummy atoms, atom labels, symbolic variable definitions, Cartesian coordinates or a mix of Cartesian and internal coordinates, alternative distance + two angles rather than distance + angle + dihedral, and specification of bond order. (Jmol 12.3.8). Gaussian and MOPAC file names must be preceded with 
<b>ZMATRIX::</b> to bypass attempted format identification, as those file formats have no easily recognizable internal characteristics. </td ></tr ></table >
<br />
<br />
<b>
<a name="loadzip/jarfilesandjmolmanifest">[ZIP/JAR files and JmolManifest]</a></b>    
<a href="#load">back</a>
<br />
<br /> Jmol can read specific files within compressed 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#readingzip/jarfiles">ZIP and JAR collections</a>. In addition, for the 
<b>load</b> command specifically, Jmol will look for a file within the collection with the name 
<b>JmolManifest</b> and follow the directives within it. These directives may be as simple as a list of files to be loaded, one filename per line (which will be read in the order listed). Lines starting with # are comment lines, which may contain any text, but also may contain one or more of the following keywords: 
<br>
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>#EXCEPT_FILES</b></td >
<td valign="top" >The list of files specifies files to ignore, not files to load; all other files will be loaded.</td ></tr >
<tr >
<td valign="top" >
<b>#IGNORE_ERRORS</b></td >
<td valign="top" >Try to read files, but ignore errors when a file is not recognized as a valid model format that Jmol can read. This option allows easy "mining" of ZIP collections for files that Jmol can recognize, ignoring all others. </td ></tr >
<tr >
<td valign="top" >
<b>#IGNORE_MANIFEST</b></td >
<td valign="top" >Ignore this manifest in its entirety -- simply read all files in the order retrieved by the ZIP file iterator.</td ></tr ></table >
<br />
<br />
<b>
<a name="loadgeneraloptions">[General Options]</a></b>    
<a href="#load">back</a>
<br />
<br /> The following options may be indicated after specifying the filename. Each is optional, but if more than one option is indicated, options must be given in the order listed in this table. 
<br>
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>MANIFEST "manifestOptions"</b></td >
<td valign="top" > If the file being loaded is a ZIP or JAR file, Jmol will search for a file in that compressed file collection with the name "JmolManifest" and process it accordingly (see above). However, in the 
<b>load</b> command, if the keyword 
<b>MANIFEST</b> and a quoted string follows the filename, then Jmol will use this string as the manifest instead, with lines of the manifest separated by vertical bar "|" characters. In this way, standard ZIP collections can be read, and the order of file loading can be specified. For example: 
<b>load "test.zip" manifest "CH3CL.MOL|CH4.MOL"</b> reads only these two files from the ZIP collection, in this order. If the file contains a manifest and that manifest is simply to be ignored, the quoted string should read "IGNORE_MANIFEST". </td ></tr >
<tr >
<td valign="top" >
<b> (integer) </b> </td >
<td valign="top" > Loads only the specified model number (if positive) or vibration number (if negative), skipping the others. For PDB files, the number indicated is the number specified in the MODEL record. (Not supported by all file types.) See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loadmodels">load MODELS</a>. </td ></tr >
<tr >
<td valign="top" >
<b>{unitCell(s)}</b> </td >
<td valign="top" > see 
<i>Crystallographic Options</i>, below</td ></tr >
<tr >
<td valign="top" >
<b>OFFSET {x y z}</b></td >
<td valign="top" > You can offset atoms in a file by a given amount at load time. The offset can be expressed in fractional coordinates, such as {1/2 1/2 1/2}, and although primarily intended for CIF file reading, can be applied to any file type. If a space group and/or unit cell are specified, the OFFSET parameter must follow that specification.</td ></tr >
<tr >
<td valign="top" >
<b>FILTER</b> </td >
<td valign="top" > The FILTER parameter specifies file-type specific load options (see below). Options should be separated by commas. For atom selection, more than one specification may be made using a comma between specifications: *:1,*:2, but * and ! may not be mixed within any one type (atom name, group name, or chain ID). "|" indicates OR in a broader context: 
<b>load 1blu.pdb filter "*.CA | HETATM,![HOH]"</b> selects for alpha carbons OR (HETATM and not HOH).</td ></tr ></table >
<br />
<br />
<b>
<a name="loadcrystallographicoptions">[Crystallographic Options]</a></b>    
<a href="#load">back</a>
<br />
<br /> The following crystallographic options may be indicated, starting with the specification of the unit cell. If more than one option is indicated, options must be given in the order listed in this table. 
<br>
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>{lattice}</b> </td >
<td valign="top" > Jmol can read unit cell and symmetry information from selected file types (for example, CIF, PDB, or SHELX). The specific set of unit cells to load can be specified one of two ways -- either using the notation {i j k} or the notation {ijk i'j'k' n}. 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>{i j k}</b> </td >
<td valign="top" > Loads a block of unit cells between the origin, {0 0 0} and the specified unit cell system coordinate. Used alone, {i j k} is only for working with files containing both unit cell and space group information (CIF, SHELX, CML, for example). The particular choice {3 3 3} is significant, in that it loads 27 unit cells, forming a solid block around a central cell. The unit cell display can then be moved to the origin of this central cell using 
<b>unitcell {1 1 1}</b>, and the display of atoms can be restricted to that center cell using 
<b>restrict cell=666</b> or 
<b>restrict cell={2 2 2}</b>. Multiple unit cell loading can be combined with the single-model loading by indicating the model number first, then the number of unit cells: 
<b>load "myfile.cif" 15 {3 3 3}</b>. Quotes are not required. There is no restriction other than memory on the size of i, j, and k (except that all must be positive). </td ></tr >
<tr >
<td valign="top" >
<b>{ijk i'j'k' -1}</b> </td >
<td valign="top" > 
<img src="img/loadunitcell-1.jpg" align="right" />Loads a block of unit cells within the range ijk and i'j'k' (which should include 555) and packs all atoms into the designated set of cells. If atoms are on faces, those atoms will be duplicated at each equivalent face.</td ></tr >
<tr >
<td valign="top" >
<b>{ijk i'j'k' 0}</b> </td >
<td valign="top" > 
<img src="img/loadunitcell0.jpg" align="right" />Loads a block of unit cells within the range ijk and i'j'k' (which should include 555) WITHOUT normalizing the operators. All symmetry-generated atoms are placed based on the exact definition of the symmetry operations found in the file or designated using the 
<b>spacegroup</b> keyword (see option below). Note, however, that if explicit operations are not provided and therefor must be generated from a spacegroup name, they will be normalized. The list of operations used can be obtained using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#show">show symmetry</a>.</td ></tr >
<tr >
<td valign="top" >
<b>{ijk i'j'k' 1}</b> </td >
<td valign="top" > 
<img src="img/loadunitcell1.jpg" align="right" />Loads a block of unit cells within the range ijk and i'j'k' (which should include 555), normalizing the operators to move the geometric center of the generated set of atoms into cell 555, then applying the lattice translation. Thus, 
<b>load "filename" {555 555 1}</b> is equivalent to 
<b>load "filename" {1 1 1}</b>. For example, 
<b>load "myfile.cif" {444 666 1}</b> loads a block of 27 unit cells, with the geometric center of all units with the bounds of the fractional coordinate range {-1 -1 -1/} to {2 2 2/}.</td ></tr ></table > </td ></tr >
<tr >
<td valign="top" >
<b>PACKED x.x</b></td >
<td valign="top" > The keyword 
<b>PACKED</b> may be used in place of 
<b>{555 555 -1}</b> or after a designated set of cells: 
<b>load t.struct {2 2 2} PACKED</b> in order to load a set of atoms packed into the unit cell. If atoms are on faces, those atoms will be duplicated at each equivalent face. An optional range in fractional coordinates can be specified for including atoms that are outside the specified unit cell (default 0.02). </td ></tr >
<tr >
<td valign="top" >
<b>SUPERCELL {na nb nc}</b></td >
<td valign="top" > The SUPERCELL option allows reassigning the unit cell as any multiple of the actual unit cell. If this option is used, the final loaded symmetry is automatically set to P1, and cell parameters 
<b>a</b>, 
<b>b</b>, and 
<b>c</b> will be modified. A larger lattice can still be indicated, in which case they refer to how many supercells will be loaded. For example: 
<b>load "quartz.cif" {2 2 2} supercell {5 5 1}</b> will create a supercell that is 5x5x1 standard unit cells in size and then load a set of eight of those. </td ></tr >
<tr >
<td valign="top" >
<b>SUPERCELL "axisFormula"</b></td >
<td valign="top" > This supercell option allows creating a supercell using a linear combination of the x, y, and z vectors of the file-based unit cell. If this option is used, the final loaded symmetry is automatically set to P1, and cell parameters 
<b>a</b>, 
<b>b</b>, 
<b>c</b>, 
<b>alpha</b>, 
<b>beta</b>, 
<b>gamma</b> will be modified. For example, 
<b>load "quartz.cif" packed supercell "2x, x + 2y, z"</b> will load a rectangular unit cell instead of the hexagonal cell indicated in the file. You can add an origin offset to this specification as well: 
<b>load quartz.cif supercell "2a,2b+a,c;1/2,0,0"</b> allows adjusting origin without changing symmetry operations. The supercell option is equivalent to FILTER with cell=: 
<b>load quartz.cif filter "cell=2a,2b+a,c;1/2,0,0"</b>. Note that the default lattice is set to {555 555 -1} (i.e., PACKED) with a range based on the supercell dimensions. To indicate a specific range for packing that is not the default of 0.02, simply indicate that explicitly: 
<b>load quartz.cif PACKED 0.10 supercell "2a,2b+a,c;1/2,0,0"</b>.</td ></tr >
<tr >
<td valign="top" >
<b>RANGE x.x</b> </td >
<td valign="top" > Restricts the atoms loaded to those within a given range in angstroms. If x.x is positive, then this range is relative to the entire set of atoms that would be generated using 
<b>load "filename" {1 1 1}</b>, and all atoms within the given distance from ANY atom in that set is loaded; if x.x is negative, then the range is relative to the atoms that would be generated using just 
<b>load</b> itself (the base x,y,z symmetry set), and the atoms loaded are all those 
<b>within a box</b> that is the designated distance larger than that needed to just contain the set of atoms. Then, to later select atoms actually within a given distance from the base set, use 
<b>within</b> with 
<b>select</b> or 
<b>display</b>: 
<b>load 1crn.pdb {1 1 1} range -4; display within(4.0, symop=1555)</b>. (This two-step sequence is very efficient.) Note that Jmol will expand the load box by one number in each direction in order to find atoms that are outside of {i j k} but still within the designated range: 
<b>load {555 555 1} range 2</b> actually checks all atoms within the 27-cell range 444 through 666. </td ></tr >
<tr >
<td valign="top" >
<b>FILL</b></td >
<td valign="top" > Fills (packs) a 10x10x10 Angstrom box (bounded by {0 0 0} and {10 10 10}) with atoms, regardless of the unit cell. This option allows comparing and visualizing crystal structures in a common range of space.</td ></tr >
<tr >
<td valign="top" >
<b>FILL x.y</b></td >
<td valign="top" > fills cubic box of the specified dimension. For example, 
<b>load quartz.cif FILE 20.0</b>.</td ></tr >
<tr >
<td valign="top" >
<b>FILL BOUNDBOX</b></td >
<td valign="top" > Fill the space defined by the 
<em>current</em> boundbox.</td ></tr >
<tr >
<td valign="top" >
<b>FILL UNITCELL</b></td >
<td valign="top" > Fill the space defined by the 
<em>current</em> unit cell.</td ></tr >
<tr >
<td valign="top" >
<b>FILL [o vabc]</b></td >
<td valign="top" > Fill a rectangular space bounded by two corners of a diagonal. For example, 
<b>load quartz.cif FILL [ {0 0 0} {10 10 10} ]</b>. Note that the parameter after FILL is an array, not just two coordinates. Fractional coordinates are allowed, and if present refer to the current unit cell, not the one being loaded. </td ></tr >
<tr >
<td valign="top" >
<b>FILL [o va vb vc]</b></td >
<td valign="top" > Fill an arbitrary unit cell defined by an origin and three crystallographic axis vectors. (Jmol 14.4)</td ></tr >
<tr >
<td valign="top" >
<b>SPACEGROUP "name"</b></td >
<td valign="top" > Loads a block of unit cells between the origin, {0 0 0} and the specified unit cell system coordinate. If the name is empty quotes, the space group of the currently loaded file will be used. In addition, the symmetry inherent in the file is ignored, and the specified space group is applied. Quotes are required around the space group name. If the space group name itself includes double quotes, use two single quotes or an "escaped double quote" (\") instead. For example: P 32 2" (single quotes here) or P 32 2\", not P 32 2". Generally Jmol reads the Jones-Faithful operators from a file, however if the spacegroup name is specified as "ignoreOperators", Jmol will ignore any explict file-based Jones-Faithful operators and instead create the symmetry based on parsing of the space group symbol in the file (Hermann-Mauguin, Hall, or international table number). If the name is a semicolon-separated list of Jones-Faithful operators, such as "x,y,z;x+1/2,y,z", Jmol will ignore any explict file-based operators and instead create the symmetry based on the list provided. </td ></tr >
<tr >
<td valign="top" > 
<b>UNITCELL [a,b,c,alpha,beta, gamma]</b></td >
<td valign="top" > Specifies the unit cell to use for models in this file. If a unit cell is specified in a file, then this option allows overriding that specification. A 0 for b implies polymer (1D) periodicity (and c is ignored), otheriwse a 0 for c indicated slab (2D) periodicity. When both SPACEGROUP and UNITCELL are provided, Jmol can display molecules found in standard Cartesian coordinate files (XYZ, MOL, PDB) as packed unit cells. .</td ></tr >
<tr >
<td valign="top" > 
<b>UNITCELL [ax, ay, az, bx, by, bz, cx, cy, cz]</b></td >
<td valign="top" >Specifies the unit cell in terms of the XYZ coordinates for the vectors a, b, and c. If bx = by = bz = 0, then cx, cy, and cz are ignored, and polymer (1D) periodicity is implied; otherwise, if cx = cy = cz = 0, then slab (2D) periodicity is implied. 
<b>UNITCELL ""</b> uses the unit cell of the currently loaded file. This allows, for example, adding of atoms to a crystal model using fractional coordinates:
<br>
<br>set appendNew false 
<br> LOAD DATA "append"
<br> 1
<br> testing
<br> Na 0.5 0 0.5 
<br> end "append" {1 1 1} spacegroup "" unitcell ""
<br></td ></tr ></table >
<br />
<br /></i ></td></tr>
<tr name='tr_load'>
<td valign="top">
<a name="load_" id="k529"> </a>load</td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >The load command by itself reloads the current file.</i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_keyword" id="k547"> </a>load keyword "filename"</td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >An optional keyword, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loadappend">APPEND</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loaddata">DATA</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loadfiles">FILES</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loadmenu">MENU</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loadmodels">MODELS</a>, or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loadtrajectory">TRAJECTORY</a>, may be supplied prior to the quoted filename. Other keywords are ignored. (Jmol does not use the Chime-style keyword to specify "file format". Rather, file format can be forced by prefixing a filename with "xxxx::" where "xxxx" is a Jmol file type. However, this should not be necessary in most cases, since Jmol determines file type by scanning the first lines of a file for file-type-specific content. (In certain cases, where there are extensive comments at the beginning of a file, it is possible for Jmol to fail to discover the file type or to misassign it. In that case, xxxx:: should be used.)</i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_"filename"" id="k530"> </a>load "filename" (integer)</td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >Jmol automatically determines file type based upon the contents of the file. Quotes are recommended. Files containing fractional coordinates are displayed with their unit cell visible. 
<b>load ""</b> reloads the current file. For files containing multiple models, an optional integer after the file name will load only the specified model. If this number is negative, it refers to a specific vibrational mode in files that contain that information . If this number is 0, it refers to the last model in the set . In the case of PDB and mmCIF files, this number refers to the model number specied in the MODEL record or _atom_site.pdbx_PDB_model_num field, respectively.</i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_"filename"" id="k531"> </a>load "filename" [i j k l m...]</td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >An additional way to load a specific set of models involes using an array just after the file name, starting with model 1 for the first. The order of models is not significant. Thus, [1 2 3] is the same as [3 2 1] and loads the first three models only. (Note that if you want to display models in a different sequence then they appear in a file, you can do that with the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frame">frame</a> command.) In the case of PDB and mmCIF files, these numbers refer to the model number specied in the MODEL record or _atom_site.pdbx_PDB_model_num field, respectively. A comparison of load options using just a model number or an array is given below:
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>load ""</b> </td >
<td valign="top" >loads the first model in a file when not PDB or mmCIF or the model with MODEL 1 record for a PDB file or the model with _atom_site.pdbx_PDB_model_num = 1 for an mmCIF file.</td ></tr >
<tr >
<td valign="top" >
<b>load "" [1]
<b> </td >
<td valign="top" >same as 
<b>load "" 1</b>; brackets allow for more than one model.</td ></tr >
<tr >
<td valign="top" >
<b>load MODELS ({1}) ""
<b></td >
<td valign="top" >(see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loadmodels">load MODELS</a>) always loads the SECOND model in a file, regardless of its indicated model number.</td ></tr ></table ></i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_"filetype::filename"" id="k532"> </a>load "filetype::filename"</td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >File format can be forced by prefixing a filename with "xxxx::" where "xxxx" is a Jmol file type. This should not be necessary in most cases, since Jmol determines file type by scanning the first lines of a file for file-type-specific content. In certain cases, however, where there are extensive comments at the beginning of a file, or a file type (such as MDCRD) does not have any distinguishing characteristics, it is possible for Jmol to fail to discover the file type or to misassign it. In that case, adding "xxxx::" is necessary. </i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_"remotefilename"" id="k550"> </a>load "remoteFilename" AS "localFileName"</td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >Loads a remote file and then also saves it locally. For use with the Jmol application and signed applet only. </i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_@variablename" id="k533"> </a>load @variableName</td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >Loads the file with the name specified by variable 
<b>variableName</b>. You can load a set of files that are defined in an array variable.</i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_inline" id="k534"> </a>load INLINE "fileData"</td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >Loads the file data given in quotes. Generally this would be a small molecule in JME or XYZ format.</i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_"@variablename"" id="k535"> </a>load "@variableName"</td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >You can load a model from data contained in a variable. This allows modification of the data prior to display, for example. Quotes are necessary, as without them -- load @x -- it is the file name that is expected in variable x, not the file contents. For example: 
<b>x = load("quartz.cif");load "@x" {2 2 2};reset x</b>. Note that to save memory, it is a good idea to clear the variable using 
<b>reset x</b> just after loading. An interesting aspect of this option is that it allows data from a remote file to be saved in the state. This means that if you use 
<b>write state "somefile.spt"</b>, then that single state script will contain the full file data in a DATA statement. It will be "transportable" and no additional model file will be required. (See also the PNGJ format for the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write</a> command, which is even better.)</i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_var" id="k536"> </a>
<span class=newer>load VAR x [
<b>Jmol 14.3.16</b>]</span></td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Loads the file data given in variable x; same as 
<b>load "@x"</b> but in the same syntax as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write VAR x</a>.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_*xxxx" id="k537"> </a>
<span class=newer>load *XXXX [
<b>
<span class="newv">Jmol 14.2</span>.6</b>]</span></td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >
<span class=newer>You can load mmCIF files directly from 
<a class="xref" href="http://www.ebi.ac.uk/pdbe" target="_blank">http://www.ebi.ac.uk/pdbe</a>. Simply preface the four-letter PDB id code with "*", and Jmol will load the file. As for other file laoding, you can adding "AS ." ("as" with a period) you can save that file automatically in the default directory (as xxxx.cif), and using, for example, 
<b>load *1crn AS "myfile.cif"</b>, you can save it to some other local file name. Starting with Jmol 14.4, you can add "/dssr" to the PDB id to also read RNA/DNA secondary structure information from Columbia University, "/rna3d" for RNA secondary structure annotations from 
<a class="xref" href="http://rna.bgsu.edu/rna3dhub" target="_blank">http://rna.bgsu.edu/rna3dhub</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#domainssequencedomainannotations">sequence domain annotations</a> using "/dom", and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#domainsstructurevalidationannotations">structure validation annotations</a> using "/val".</span></i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_*xxxx*" id="k538"> </a>
<span class=newer>load *XXXX* [
<b>Jmol 14.3.16</b>]</span></td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Appending a * to a PDBe ID loads a PDBe "updated" CIF file, which allows PDB CONECT-like bond creation. An example of such a file can be found 
<a class="xref" href="http://www.ebi.ac.uk/pdbe/static/entry/1h68_updated.cif" target="_blank"> here</a>. This is a suitable replacement for PDB CONECT, integrating information found in 
<a class="xref" href="http://mmcif.wwpdb.org/dictionaries/mmcif_mdb.dic/Items/" target="_blank">_chem_comp_bond</a> and 
<a class="xref" href="http://mmcif.wwpdb.org/dictionaries/mmcif_mdb.dic/Items/_struct_conn.conn_type_id.html" target="_blank">_struct_conn</a> categories. Note that the presence of _chem_comp_bond records in these files will enable processing of _struct_conn as well, regardless of filter "addbonds".</span></i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_=xxxx" id="k539"> </a>load =XXXX</td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >You can load PDB files directly from 
<a class="xref" href="http://www.rcsb.org" target="_blank">http://www.rcsb.org</a> or another server of your choice. (This depends upon the setting of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setfilesandscripts">set loadFormat</a>). Simply preface the four-letter PDB id code with "=", and Jmol will load the file. Adding "AS ." ("as" with a period) you can save that file automatically in the default directory (as xxxx.pdb.gz), and using, for example, 
<b>load =1crn AS "myfile.pdb"</b>, you can save it to some other local file name. The default is to transfer the file in g-zipped format; If you add ".pdb" to the expression -- 
<b>load =1crn.pdb</b>, for example -- then Jmol will transfer and save the uncompressed PDB file. Starting with 
<span class="newv">Jmol 14.2</span>, you can add "/dssr" to the PDB id to also read RNA/DNA secondary structure information from Columbia University. Starting with Jmol 14.4, you can load "/rna3d" for RNA secondary structure annotations from 
<a class="xref" href="http://rna.bgsu.edu/rna3dhub" target="_blank">http://rna.bgsu.edu/rna3dhub</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#domainssequencedomainannotations">sequence domain annotations</a> using "/dom", and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#domainsstructurevalidationannotations">structure validation annotations</a> using "/val".</i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_==xxx" id="k540"> </a>load ==XXX</td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >You can load PDB ligand (chemical component) files directly from 
<a class="xref" href="http://www.rcsb.org" target="_blank">http://www.rcsb.org</a> or another server of your choice. (This depends upon the setting of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setfilesandscripts">set loadLigandFormat</a>). Simply preface the three-letter PDB id code with "==", and Jmol will load the file. </i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_=database/id" id="k541"> </a>load =database/id</td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >You can load files from a named database. Options (Jmol.4.6) include:
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > 
<b>mp</b> </td >
<td valign="top" >load =mp/24972</td >
<td valign="top" > loads a file from 
<a class="xref" href="http://www.materialsproject.org" target="_blank">http://www.materialsproject.org</a></td ></tr >
<tr >
<td valign="top" > 
<b>ligand</b> </td >
<td valign="top" > load =ligand/hem </td >
<td valign="top" > RCSB chemical component file</td ></tr >
<tr >
<td valign="top" > 
<b>nci</b> </td >
<td valign="top" > load =nci/CC </td >
<td valign="top" > NCI CACTVS Resolver</td ></tr >
<tr >
<td valign="top" > 
<b>pdb</b> </td >
<td valign="top" > load =pdb/1crn </td >
<td valign="top" > RCSB pdb files</td ></tr >
<tr >
<td valign="top" > 
<b>iucr</b></td >
<td valign="top" > load =iucr/wf5113sup1 </td >
<td valign="top" > IUCr Acta Cryst B supplemental files</td ></tr >
<tr >
<td valign="top" > 
<b>cod</b></td >
<td valign="top" > load =cod/1000002 </td >
<td valign="top" > 
<a class="xref" href="http://www.crystallography.net/cod" target="_blank">Crystallography Open Database</a></td ></tr >
<tr >
<td valign="top" > 
<b>iucr</b></td >
<td valign="top" > load =pdbe/1crn </td >
<td valign="top" > CIF file from 
<a class="xref" href="http://www.ebi.ac.uk/pdbe" target="_blank">PDBe</a></td ></tr >
<tr >
<td valign="top" > 
<b>iucr</b></td >
<td valign="top" > load =pdbe2/1crn </td >
<td valign="top" > CIF file from 
<a class="xref" href="http://www.ebi.ac.uk/pdbe" target="_blank">PDBe</a> (alternative)</td ></tr >
<tr >
<td valign="top" > 
<b>aflow</b></td >
<td valign="top" > load =aflow/AgAu </td >
<td valign="top" > 
<a class="xref" href="http://aflowlib.org" target="_blank">AFLOW</a> binary metal alloy file</td ></tr >
<tr >
<td valign="top" > 
<b>magndata</b></td >
<td valign="top" > load =magndata/1.1.3 </td >
<td valign="top" >
<a class="xref" href="http://webbdcrista1.ehu.es/magndata" target="_blank">MAGNDATA</a> magnetic crystal database (Bilbao Crystallographic Server</td ></tr >
<tr >
<td valign="top" > 
<b>ams</b></td >
<td valign="top" > load =ams/quartz </td >
<td valign="top" > 
<a class="xref" href="http://rruff.geo.arizona.edu/AMS" target="_blank">American Mineralogist</a> Crystal Structure Database</td ></tr ></table ></i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_":chemical_name"" id="k542"> </a>load ":chemical name"</td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >You can load models from PubChem. Preface the compound name with colon. Quotes are only required if nonalphanumeric characters are present in the name.</i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_$smilesstring" id="k543"> </a>load $smilesString</td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >You can load SMILES strings, and Jmol will turn them into 3D models using the 
<a class="xref" href="http://cactus.nci.nih.gov" target="_blank">NIH Cactus server</a>. As for reading files from any source outside your domain, you will have to use the signed applet or Jmol application to do this. These files can be saved as MOL files using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write xxx.mol</a> or 
<b>load $xxxx AS "myfile.mol"</b>, and if the conformation is not to your liking, switching to 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setmodelkitmode">set modelkitMode</a> or using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setpicking">set picking dragMinimize</a> you can quickly adjust the model to the desired conformation. Quotation marks should be used for names that include the space character: 
<b>load "$ethyl acetate"</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_$identifier" id="k544"> </a>load $identifier</td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >The service at 
<a class="xref" href="http://cactus.nci.nih.gov" target="_blank">http://cactus.nci.nih.gov</a> is not limited to SMILES strings. The database includes several million known compounds, which are accessible by CAS registry number, InChI codes, and chemical name as well. For example, 
<b>load $57-88-5</b> loads a model of chlolesterol, and 
<b>load $taxol as "taxol.mol"</b> loads a model of taxol and saves it on your hard drive. Starting 4/2011, this service taps into the 
<a class="xref" href="http://opsin.ch.cam.ac.uk" target="_blank">OPSIN</a> service of Cambridge University to return structures from IUPAC or IUPAC-like names. </i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_orientation" id="k545"> </a>load ORIENTATION</td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >The ORIENTATION keyword specifies that after the file is loaded, the orientation should be returned to its original value. This orientation can be restored later using 
<b>restore orientation PRELOAD</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_smiles" id="k546"> </a>load SMILES "smilesString"</td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >An alternative to the $ syntax for loading SMILES strings.</i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_"filename"" id="k548"> </a>
<span class=newer>load "filename" FILL .. [
<b>Jmol 14.3.14</b>]</span></td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >
<span class=newer>The FILL option, described more fully under 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loadcrystallographicoptions">Crystallographic Options</a>, allows filling an arbitrary space with a set of atoms from a crystallographic file. When the file has no unit cell, this option simply loads the file with the specified boundbox.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td valign="top">
<a name="load_"filename"" id="k549"> </a>load "filename" FILTER "filter specification"</td ></tr>
<tr name='tr_load'>
<td>
<blockquote>
<p >
<i >For individual file types, it is possible to filter the data in the file as it is loaded. The FILTER keyword followed by a quoted string allows for this. The FILTER keyword must be the last keyword in the LOAD command. Specific filters include: 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>file type</b> </td >
<td valign="top" > 
<b>filter</b> </td >
<td valign="top" >
<b>description</b></td ></tr >
<tr >
<td valign="top" > MOL </td >
<td valign="top" > 
<b>FILTER "2D"</b></td >
<td valign="top" > indicates to consider the file a 2D file and to apply a automatic hydrogen addition and 2D-to-3D conversion immediately upon loading. "2D-noMIN" does the hydrogen addition but no minimization. </td ></tr >
<tr >
<td valign="top" >CIF, GROMACS, MDTOP, PDB, PQR </td >
<td valign="top" > 
<b>FILTER "[XXX], .XXX, :X, %X"</b></td >
<td valign="top" > to specify inclusion or exclusion of specific residue types, atom types, chains, or alternative locations. The prefix "!" indicates NOT. Within each of these four sets, multiple selections are treated as "OR" without "!" and "AND" when "!" is present. With % (alternative location), atoms with no alternative location marking are ALWAYS loaded regardless of this filter. For example, 
<b>load "1sva.pdb" FILTER "*.CA,%B"</b> loads only alpha carbons that correspond to the conformation involving alternative location B; 
<b>FILTER "![HOH]"</b> filters out water molecules.</td ></tr >
<tr >
<td valign="top" > GAMESS, GAUSSIAN, GenNBO, Jaguar, Molden, NWChem, PSI, and QCHEM </td >
<td valign="top" > 
<b>FILTER "xxx"</b></td >
<td valign="top" > where "xxx" is a word on the line Jmol uses to identify a molecular orbital. This allows selective loading of specific types of molecular orbitals -- such as "alpha", "beta", or "NBO" -- for any of these file types, "POPULATION" or "EDMISTON" or "PIPEK" for GAMESS. ("NBO" refers to orbitals generated with the NBO 5.0 option 
<b>AONBO=P</b>; "EIGEN" or "!NBO" will skip loading of these orbitals.)</td ></tr >
<tr >
<td valign="top" >AFLOW </td >
<td valign="top" > 
<b>FILTER CA=x.x</b> Select from the binary alloy file for alloy AaBb only models with the specified fractional concentration of Aa.</td ></tr >
<tr >
<td valign="top" >AFLOW </td >
<td valign="top" > 
<b>FILTER CB=x.x</b> Select from the binary alloy file for alloy AaBb only models with the specified fractional concentration of Bb.</td ></tr >
<tr >
<td valign="top" > crystallographic files </td >
<td valign="top" > 
<nobr>
<b>FILTER "CELL=abc;offset"</nobr></b></td >
<td valign="top" > specifies a specific cell in relation to the unit cell given in the file using MCIF parent/standard cell notation. For example, 
<nobr>
<b>FILTER "CELL=a/2,2b,c;0,0,1/2"</b>
<nobr> (see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#unitcell">unitcell</a>).</td ></tr >
<tr >
<td valign="top" >mCIF</td >
<td valign="top" > 
<b>FILTER "CELL=parent"</b> </td >
<td valign="top" > loads and packs the parent cell, if designated in the file. If packing is not desired, use "nopackcell" instead of "cell".</td ></tr >
<tr >
<td valign="top" >mCIF</td >
<td valign="top" > 
<b>FILTER "cell=standard"</b> </td >
<td valign="top" > loads and packs the standard cell, if designated in the file. If packing is not desired, use "nopackcell" instead of "cell".</td ></tr >
<tr >
<td valign="top" >mmCIF </td >
<td valign="top" > 
<b>FILTER "ADDBONDS"</b></td >
<td valign="top" > (Jmol 14.4) One of the deficiencies of of the mmCIF format as originally defined is that it does not reproduce the CONECT records of PDB files. The ADDBONDS filter instructs Jmol to process mmCIF
<a class="xref" href="http://mmcif.wwpdb.org/dictionaries/mmcif_mdb.dic/Items/_struct_conn.conn_type_id.html" target="_blank">_struct_conn</a> records. These records are similar to PDB CONECT records, but they indicate only inter-group connections, connecting one group with another. Types included by Jmol include covale, covale_base, covale_phosphate, covale_sugar, disulf, and metalc. Ignored types include hydrog, mismat, modres, and saltbr. This filter is not necessary when reading updated CIF files from PDBe (See *xxxx*, above).</td ></tr >
<tr >
<td valign="top" >mmCIF, PDB, other PDB-related formats</td >
<td valign="top" > 
<b>FILTER "ADDHYDROGENS"</b></td >
<td valign="top" > Add hydrogens regardless of the setting of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_pdbaddhydrogens">pdbAddHydrogens</a>. </td ></tr >
<tr >
<td valign="top" >P2N</td >
<td valign="top" > 
<b>FILTER "ALTNAME"</b></td >
<td valign="top" > Use the altName field of the P2N file for atom names.</td ></tr >
<tr >
<td valign="top" >mmCIF, PDB </td >
<td valign="top" > 
<b>FILTER "ASSEMBLY n"</b> </td >
<td valign="top" > loads a specific CIF assembly. (Same as BIOMOLECULE.) For example, 
<b>load =1vif.cif filter "ASSEMBLY 1"</b>. Specific label_asym_id can be selected as well: 
<b>load =1vif.cif filter "ASSEMBLY 1;$A"</b> (just label_asym_id A); 
<b>load =1vif.cif filter "ASSEMBLY 1;!$C"</b> (just label_asym_id values not C). </td ></tr >
<tr >
<td valign="top" >mmCIF, PDB </td >
<td valign="top" > 
<b>FILTER "ATOM"</b></td >
<td valign="top" > selects only ATOM records (see also 
<b>FILTER "HETATM"</b>)</td ></tr >
<tr >
<td valign="top" > PDB </td >
<td valign="top" > 
<b>FILTER "BIOMOLECULE n"</b></td >
<td valign="top" > where n is a number > 0 indicating which biomolecule to load. In addition, 
<b>#&lt;n</b> or any number of 
<b># n</b> or 
<b>!#n</b> can be indicated in order to load just a specific subset of biomolecular transformations related to the specified biomolecule. Adding "NOSYMMETRY" along with BIOMOLECULE, indicates that the symmetry transformations in the REMARK 350 BIOMT records should be ignored. </td ></tr >
<tr >
<td valign="top" >mmCIF, PDB </td >
<td valign="top" > 
<b>FILTER "BYCHAIN"</b> </td >
<td valign="top" > designed for extremely large high-symmetry biological assemblies, this filter loads a file in a 
<a class="xref" href="http://en.wikipedia.org/wiki/Granularity" target="_blank">coarse-grained</a> fashion, assigning one pseudoatom per chain. The size of this atom can be made larger than the atom-size maximum of 16 Angstroms using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_particleradius">set particleRadius</a> with a larger value and then setting 
<b>spacefill 30</b> (or any number greater than 16). Normally accompanied by BIOMOLECULE or ASSEMBLY, for example: 
<b>load =3j3q.cif filter "ASSEMBLY 1;BYCHAIN"</b>. (Jmol 14.0)</td ></tr >
<tr >
<td valign="top" >mmCIF, PDB </td >
<td valign="top" > 
<b>FILTER "BYSYMOP"</b> </td >
<td valign="top" > similar to BYCHAIN, but one pseudoatom per symmetry operation. For example: 
<b>load =1m4x.cif filter "ASSEMBLY 1;BYSYMOP"</b>. (Jmol 14.0)</td ></tr >
<tr >
<td valign="top" >all</td >
<td valign="top" >
<b>FILTER "CENTER"</b></td >
<td valign="top" >centers all models in a file based on the first model's position. </td ></tr >
<tr >
<td valign="top" >GAMESS (US) </td >
<td valign="top" > 
<b>CHARGE=LOW</b></td >
<td valign="top" > indicates to load Lowden charges rather than Mulliken charges.</td ></tr >
<tr >
<td valign="top" > PDB </td >
<td valign="top" > 
<b>FILTER "CONF n"</b> </td >
<td valign="top" > Loads only a specific configuration based on alternative locations. "CONF 1" loads only atoms in the first configuration -- usually %A and % ("undesignated")</td ></tr >
<tr >
<td valign="top" > CRYSTAL </td >
<td valign="top" > 
<b>FILTER "CONV"</b></td >
<td valign="top" > load conventional, not primitive cells.</td ></tr >
<tr >
<td valign="top" >PYMOL</td >
<td valign="top" >
<b>FILTER "DOCACHE"</b></td >
<td valign="top" >caches surface data, creating a JVXL equivalent, specifically useful for JSmol. When using the "doCACHE" option (in the Jmol Java application), file loading should be followed immediately with 
<b>WRITE PNGJ "xxx.PNG"</b>. The PNGJ file can then be loaded much more efficiently than the PSE file on a web page using JSmol/HTML5. </td ></tr >
<tr >
<td valign="top" >mmCIF, PDB </td >
<td valign="top" > 
<b>FILTER "HETATM"</b></td >
<td valign="top" > selects only HETATM records (see also 
<b>FILTER "ATOM"</b>)</td ></tr >
<tr >
<td valign="top" > CRYSTAL </td >
<td valign="top" > 
<b>FILTER "INPUT"</b></td >
<td valign="top" > load input coordinates only.</td ></tr >
<tr >
<td valign="top" >crystallographic files</td >
<td valign="top" >
<b>FILTER "LATTICESCALING=1.2"</b></td >
<td valign="top" >Scales the model based on a crystal lattice expansion factor, allowing direct comparison of related structures with slightly different lattice scalings. (Jmol 14.4)</td ></tr >
<tr >
<td valign="top" >AFLOW</td >
<td valign="top" >
<b>FILTER "list=..."</td >
<td valign="top" > Loads an AFLOW binary file and creates a list of property values. The key need not be exact; a match for the first property name that starts with the specified key will be used. Available values include "H [eV] (VASP)", "H/at [eV] (VASP)","Hf_atom [eV] (VASP)","Mom/at", and "Volume/at". For example, "
<b>load "AgCd.aflow_binary" 
<a class="xref" href="2 2 2" target="_blank"> packed filter "list=Hf_a"</b>, producing:
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >elements</td >
<td valign="top" >fractional comp</td >
<td valign="top" ># models</td >
<td valign="top" > min value model number</td >
<td valign="top" >parameter</td >
<td valign="top" >min value</td ></tr >
<tr >
<td valign="top" >AgCd </td >
<td valign="top" >0.00000000000000</td >
<td valign="top" > 11</td >
<td valign="top" > 2</td >
<td valign="top" > Hf_atom [eV] (VASP)</td >
<td valign="top" > 0.0</td ></tr >
<tr >
<td valign="top" >AgCd </td >
<td valign="top" >0.04347826086957</td >
<td valign="top" > 1</td >
<td valign="top" > 222</td >
<td valign="top" > Hf_atom [eV] (VASP)</td >
<td valign="top" > 0.0870304</td ></tr >
<tr >
<td valign="top" >AgCd </td >
<td valign="top" >0.07142857142857</td >
<td valign="top" > 1</td >
<td valign="top" > 206</td >
<td valign="top" > Hf_atom [eV] (VASP)</td >
<td valign="top" > 0.15737298</td ></tr >
<tr >
<td valign="top" >...</td ></tr >
<tr >
<td valign="top" >AgCd </td >
<td valign="top" >1.00000000000000</td >
<td valign="top" > 12</td >
<td valign="top" > 57</td >
<td valign="top" > Hf_atom [eV] (VASP)</td >
<td valign="top" > 0.0</td ></tr >
<tr >
<td valign="top" >297 models</td ></tr ></table ></td ></tr >
<tr >
<td valign="top" >msCIF, JANA2006</td >
<td valign="top" > 
<b>FILTER "MODAVERAGE"</b></td >
<td valign="top" > do not read modulation</td ></tr >
<tr >
<td valign="top" >msCIF, JANA2006</td >
<td valign="top" > 
<b>FILTER "MODAXES=xyz"</b></td >
<td valign="top" > read modulation only along specific axes -- x, y, and/or z</td ></tr >
<tr >
<td valign="top" >msCIF, JANA2006</td >
<td valign="top" > 
<b>FILTER "MODCELL=n"</b></td >
<td valign="top" > use subsystem n for initially created unit cell, generating the command 
<b>unitcell {%1}</b> for instance upon file loading.</td ></tr >
<tr >
<td valign="top" >msCIF, JANA2006</td >
<td valign="top" > 
<b>FILTER "MODNOPACK"</b></td >
<td valign="top" > do not pack subsystem cells</td ></tr >
<tr >
<td valign="top" >msCIF, JANA2006</td >
<td valign="top" > 
<b>FILTER "MODT=t"</b></td >
<td valign="top" > set initial (zero-point) modulation to t, where t can be a decimal number or a fraction such as 1/3.</td ></tr >
<tr >
<td valign="top" >msCIF, JANA2006</td >
<td valign="top" > 
<b>FILTER "MODTUV=t,u,v"</b></td >
<td valign="top" > set initial (zero-point) modulations for up to three cell wave vectors, where t,u,v can be decimal numbers or fractions such as 1/3.</td ></tr >
<tr >
<td valign="top" >CIF </td >
<td valign="top" > 
<b>FILTER "MOLECULAR"</b> </td >
<td valign="top" > instructs Jmol to attempt to complete molecules using either the bonding information in the CIF file or standard van der Waals radii. If this filter is not present and no lattice is indicated either, if bonding information is present in the file, Jmol will use that information to automatically complete molecules. </td ></tr >
<tr >
<td valign="top" >SPARTAN</td >
<td valign="top" >
<b>FILTER "MULLIKEN"</b></td >
<td valign="top" > loads Mulliken charges rather than the default ESP charges. (ESP charges are better for displaying molecular electrostatic potential maps using 
<b>isosourface molecular map MEP</b>.)</td ></tr >
<tr >
<td valign="top" >all</td >
<td valign="top" >
<b>FILTER "NAME=..." </td >
<td valign="top" > loads only those models with a name that contains a specified set of characters. </td ></tr >
<tr >
<td valign="top" >GAMESS, Gaussian, QChem, NWChem</td >
<td valign="top" > 
<b>FILTER "NBOCHARGES"</b> </td >
<td valign="top" > specifies to use atomic partial charges from the NBO calculation. Note that this flag is independent of the 
<b>NBO</b> filter option. To use both, separate them with a comma: 
<b>load "myfile.out" FILTER "NBO,nboCharges"</b>.</td ></tr >
<tr >
<td valign="top" > CGD </td >
<td valign="top" > 
<b>FILTER "NOBONDSYM"</b></td >
<td valign="top" > Do not apply symmetry operators to bonds -- just create the ones present in the file.</td ></tr >
<tr >
<td valign="top" >CIF </td >
<td valign="top" > 
<b>FILTER "NOIDEAL"</b> </td >
<td valign="top" > for mmCIF chemical composition files (for example, 
<b>load ==HEM</b>) uses the _chem_comp_atom.pdbx_model_Cartn_x set of coordinates rather than the default _chem_comp_atom.pdbx_model_Cartn_x_ideal set (Jmol 14.0) </td ></tr >
<tr >
<td valign="top" > JME </td >
<td valign="top" > 
<b>FILTER "NOMIN"</b></td >
<td valign="top" > loads the 2D file, adjusts atoms in preparation for minimization, but does no minimization.</td ></tr >
<tr >
<td valign="top" >BCS</td >
<td valign="top" > 
<b>FILTER "NONORM"</b></td >
<td valign="top" > reads displacement data from BCS files (particularly in relation to </a>http://www.cryst.ehu.es/cryst/amplimodes.html
<a class="xref" href="AMPLIMODES" target="_blank"> files) without normalization, allowing comparison of displacement magnitudes between different models.</td ></tr >
<tr >
<td valign="top" >many</td >
<td valign="top" >
<b>FILTER "NOMO"</b></td >
<td valign="top" > skips the reading of molecular orbitals for any file that contains them.</td ></tr >
<tr >
<td valign="top" >CSF, SPARTAN</td >
<td valign="top" >
<b>FILTER "NOORIENT"</b></td >
<td valign="top" > prevents application of the rotation matrix found in the file as the default rotation. </td ></tr >
<tr >
<td valign="top" > CGD </td >
<td valign="top" > 
<b>FILTER "NOPACK"</b></td >
<td valign="top" > Do not pack cell (default for this type is to pack the cell). </td ></tr >
<tr >
<td valign="top" >Molden </td >
<td valign="top" > 
<b>FILTER "NOSORT"</b></td >
<td valign="top" >Do not sort MOs by energy.</td ></tr >
<tr >
<td valign="top" >PYMOL</td >
<td valign="top" > 
<b>FILTER "NOSURFACE"
<b></td >
<td valign="top" >load a PyMOL file without surface creation, which can be slow. </td ></tr >
<tr >
<td valign="top" >CIF, JANA2006</td >
<td valign="top" > 
<b>FILTER "NOSYM"</b></td >
<td valign="top" > do not apply symmetry</td ></tr >
<tr >
<td valign="top" >many</td >
<td valign="top" >
<b>FILTER "NOVIB"</b></td >
<td valign="top" > skips the reading of vibrations for any file that contains them.</td ></tr >
<tr >
<td valign="top" >Molden </td >
<td valign="top" > 
<b>FILTER "OPTONLY"</b></td >
<td valign="top" >Load optimized structure only.</td ></tr >
<tr >
<td valign="top" > CASTEP </td >
<td valign="top" > 
<b>FILTER "Q=..."</b></td >
<td valign="top" > for .phonon files, 
<b>FILTER "q=n"</b> loads the nth q-point frequency modes. "q=all" reads all phonon modes. For files with multiple extrapolations to q=0, "q=0.1", "q=0.2", etc... loads a specific extrapolation. Q-points can also be specified in terms of fractions, "q=(1/2 1/2 1/2)", or decimals, "q=(0.333 0.111 0.333)". If no filter is specified, but the SUPERCELL keyword is used, Jmol will attempt to find the appropriate matching q-point data for that supercell. </td ></tr >
<tr >
<td valign="top" >all</td >
<td valign="top" >
<b>FILTER "REVERSEMODELS"</b></td >
<td valign="top" > delivers the models in reverse order . Useful for intrinsic reaction coordinate (IRC) animations.</td ></tr >
<tr >
<td valign="top" >Molden </td >
<td valign="top" > 
<b>FILTER "SYM=xxx"</b></td >
<td valign="top" >Load only molecular orbitals for which the Sym= line in the [MO] block contains thetext "xx".</td ></tr >
<tr >
<td valign="top" >crystallographic files </td >
<td valign="top" > 
<b>FILTER "SYMOP=n"</b></td >
<td valign="top" > loads just the atoms that are the result of the nth symmetry operator.</td ></tr >
<tr >
<td valign="top" >PDB</td >
<td valign="top" > 
<b>FILTER "TYPE i,n"</b> </td >
<td valign="top" >loads customized column data into the atomType property of the atoms. The two numeric parameters are 1-based column number and number of columns. For example: 
<b>load xxx.pdb filter "TYPE 73,4"</b>. </td ></tr >
<tr >
<td valign="top" >PDB</td >
<td valign="top" > 
<b>FILTER "TYPE i,n=XXX"</b></td >
<td valign="top" > loads customized column data into the atomType property of the atoms, selecting only those atoms starting with the specified characters in the specified field.</td ></tr >
<tr >
<td valign="top" >Molden </td >
<td valign="top" > 
<b>FILTER "VIBONLY"</b></td >
<td valign="top" >Load vibrations only, not the base geometry.</td ></tr ></table ></a></i ></p ></blockquote></td></tr> 
<tr name='tr_load'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_load'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples-11/sym.htm">examples-11/sym.htm</a> </td></tr>
<tr name='tr_load'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_load'>
<td colspan="5">
<p>
<a class="xref" href="#jmol/jspecview/magresview">[Jmol/JSpecView/MagresView]</a> 
<a class="xref" href="#cache">cache</a> 
<a class="xref" href="#initialize">initialize</a> 
<a class="xref" href="#setfilesandscripts">set (files and scripts)</a> 
<a class="xref" href="#zap">zap</a> </p></td></tr>
<tr name='tr_load'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k528">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_loadappend'>
<td colspan="5">
<h3 >
<a id="loadappend" name="loadappend">load APPEND</a>
<a id="k551"> </a></h3></td></tr>
<tr name='tr_loadappend'>
<td>
<i >Adding APPEND to the load command appends a file or a set of files to the current model set without replacing the current model. Load parameters FILTER , MANIFEST , MODELS , TRAJECTORY , or unit cell/symmetry specification may be included with the APPEND keyword. By default, a new frame is created for each model added. For example:
<br>
<br>load "myfile.pdb";load APPEND "myligand.xyz";frame *;display 1.1,2.1
<br>
<br>If 
<b>set appendNew false</b> has been issued and only one model is in the appended file, then the file model is added to the currently displayed model, creating no additional frames. Multiple files may be appended if the specified file is a ZIP file. In that case, specifying the manifest in the command after the filename is an option. 
<br />
<br /></i ></td></tr> 
<tr name='tr_loadappend'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k552">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_loadasync'>
<td colspan="5">
<h3 class=h3new>
<a id="loadasync" name="loadasync">load ASYNC</a>
<a id="k553"> </a> 
<br />
<span class=new>(v. 14.2)</span></h3></td></tr>
<tr name='tr_loadasync'>
<td>
<i >Adding ASYNC to a load command loads this file in a separate thread. It is particularly useful for the HTML5 version of JSmol, where one does not wish to interrupt the page interactivity when loading a file. Without this keyword, all page processing, including mouse actions and key events, will wait until the file is loaded. 
<br />
<br /></i ></td></tr> 
<tr name='tr_loadasync'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k554">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_loaddata'>
<td colspan="5">
<h3 >
<a id="loaddata" name="loaddata">load DATA</a>
<a id="k555"> </a></h3></td></tr>
<tr name='tr_loaddata'>
<td>
<i >The 
<b>DATA "model..."</b> and 
<b>DATA "append..."</b> commands are deprecated in favor of 
<b>load DATA...</b>. All of the parameter options for the 
<b>load</b> command are thus also available for the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#data">data</a> command. 
<br />
<br /></i ></td></tr> 
<tr name='tr_loaddata'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k556">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_loadfiles'>
<td colspan="5">
<h3 class=h3new>
<a id="loadfiles" name="loadfiles">load FILES</a>
<a id="k557"> </a> 
<br />
<span class=new>(v. 11.2)</span></h3></td></tr>
<tr name='tr_loadfiles'>
<td>
<i >Adding FILES to the load command indicates that a set of files are to be loaded . Filenames must be quoted. Each model encountered is put into a new "frame." No additional parameters other than COORD are allowed (see below). 
<br />
<br /></i ></td></tr>
<tr name='tr_loadfiles'>
<td valign="top">
<a name="load_files_"filename1"" id="k559"> </a>load FILES "filename1" "filename2" ...</td ></tr>
<tr name='tr_loadfiles'>
<td>
<blockquote>
<p >
<i >For multiple file loading, all parameters after the first must appear in quotes. Each model is loaded into a new frame, and frames are addressed using a decimal notation -- 1.1 for the first model in the first file, 1.2 for the second model in the first file, 2.1 for the first model in the second file, etc. For example, 
<b>select (oxygen) and (1.3, 1.4)</b> selects all oxygens in the third or fourth model of the first file loaded. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setmisc">set backgroundModel</a>. The special command 
<b>load MENU</b> allows loading of a custom Jmol popup menu. </i ></p ></blockquote></td></tr> 
<tr name='tr_loadfiles'>
<td valign="top">
<a name="load_files_"filename1"" id="k560"> </a>
<span class=new>load FILES "filename1" + "filename2"</span></td ></tr>
<tr name='tr_loadfiles'>
<td>
<blockquote>
<p >
<i >
<span class=new>If a + is used between file names, Jmol will load the files as a single stream based on the first file's type. This can be useful when part of the required information for the file loading is in a second file. For example, if a PDB file and its associated DSSR data are in two files, one can use 
<b>load files "xxx.pdb"+"xxx.dssr"</b> to load the structure and process the DSSR data. (One can also use 
<b>load =1crn/dssr</b> do accomplish this particular task if the PDB and DSSR files are not available locally.)</span></i ></p ></blockquote></td></tr> 
<tr name='tr_loadfiles'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k558">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_loadmenu'>
<td colspan="5">
<h3 >
<a id="loadmenu" name="loadmenu">load MENU</a>
<a id="k561"> </a></h3></td></tr>
<tr name='tr_loadmenu'>
<td>
<i >The special command 
<b>load MENU</b> allows loading of a custom Jmol popup menu. 
<br />
<br /></i ></td></tr>
<tr name='tr_loadmenu'>
<td valign="top">
<a name="load_menu_"menufile"" id="k563"> </a>load MENU "menufile"</td ></tr>
<tr name='tr_loadmenu'>
<td>
<blockquote>
<p >
<i >File format is that written by Jmol using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#show">show MENU</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write MENU</a> command. See examples at 
<a class="xref" href="misc/Jmol.mnu" target="_blank">misc/Jmol.mnu</a> and 
<a class="xref" href="misc/test.mnu" target="_blank">misc/test.mnu</a>. Set the label for a menu to 
<b>null</b> to remove a menu item or submenu.</i ></p ></blockquote></td></tr> 
<tr name='tr_loadmenu'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k562">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_loadmodels'>
<td colspan="5">
<h3 >
<a id="loadmodels" name="loadmodels">load MODELS</a>
<a id="k564"> </a></h3></td></tr>
<tr name='tr_loadmodels'>
<td>
<i >The MODELS keyword allows loading of a specific subset of models from a file that contains a model collection. Two syntaxes are available. Note that model numbers refer to the sequence of models encountered in the file, starting with 0, and typically do NOT correspond to the model numbers indicated in PDB MODEL records. Once the models are loaded, they can be accessed using the file.model decimal notation as 1.1, 1.2, 1.3, etc. 
<br>
<br>An additional way to load selected models is to put the desired model numbers in an array that is given AFTER the file name. In this case, this first model is "1", not "0", and if the file is a PDB or mmCIF file, the numbers refer to the model numbers specified in the file, which might not be sequential.
<br />
<br /></i ></td></tr>
<tr name='tr_loadmodels'>
<td valign="top">
<a name="load_models_"filename"" id="k566"> </a>load MODELS {first last stride} "filename"</td ></tr>
<tr name='tr_loadmodels'>
<td>
<blockquote>
<p >
<i >In the first syntax, first and last models along with a "stride" (step) are specified. Models are then read using an equivalent of 
<b>for (i = first; i 
<= last; i = i + stride)</b>. Numbers start with 0 for the first model; -1 for 
<b>last</b> indicates "to the end of the file." For example, 
<b>load MODELS {0 10 2} "..."</b> would load six models, models 0, 2, 4, 6, 8, and 10.</i ></p ></blockquote></td></tr> 
<tr name='tr_loadmodels'>
<td valign="top">
<a name="load_models_"filename"" id="k567"> </a>load MODELS ({i j k:l m...}) "filename"</td ></tr>
<tr name='tr_loadmodels'>
<td>
<blockquote>
<p >
<i >In the second syntax, a list of the specified files to load is given in the Jmol "bitset" syntax. This syntax uses braces within parentheses. Specific models are listed, starting with 0 for the first model. Ranges of models are indicated using colons. For example, 
<b>load MODELS ({0 2 4:6}) "..."</b> loads five models -- models 0, 2, 4, 5, and 6. 
<b>load MODELS ({1}) "..."</b> loads the 
<i>second</i> model only.</i ></p ></blockquote></td></tr> 
<tr name='tr_loadmodels'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k565">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_loadtrajectory'>
<td colspan="5">
<h3 >
<a id="loadtrajectory" name="loadtrajectory">load TRAJECTORY</a>
<a id="k568"> </a></h3></td></tr>
<tr name='tr_loadtrajectory'>
<td>
<i >Loads a file as a "trajectory", meaning a single model with a series of atom coordinates. (Similar to the sort of multiple-frame animations that the Chime plug-in was able to load.) Loading a file as a trajectory saves substantially on memory requirements, since there is only one set of atoms and bonds. The defining restriction for trajectories is that only one frame can be viewed at a time. Each trajectory is loaded into its own frame as though it were a distinct model, and frames are accessed as usual using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frame">frame</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#model">model</a> command. In addition, any reference to a specific trajectory, such as 
<b>select 1.3</b>, switches to that set of coordinates, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#measure">Measurements</a> and the position of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#cartoon">cartoons</a> are automatically recalculated when a new trajectory is displayed. Changes to colors in one trajectory effect the same change for all trajectories, since there is really only one model, just different atom positions. Multiple files may be loaded as independent trajectories using APPEND TRAJECTORY in place of simply TRAJECTORY. Jmol allows reading of PDB files that contain no MODEL line and are instead simply concatentated versions of the same atoms as trajectories using the TRAJECTORY keyword. Each model must start with atom number 1 for this to work. The TRAJECTORY keyword also applies to vibrations.
<br />
<br /></i ></td></tr>
<tr name='tr_loadtrajectory'>
<td valign="top">
<a name="load_trajectory_"filename"" id="k570"> </a>load TRAJECTORY "filename"</td ></tr>
<tr name='tr_loadtrajectory'>
<td>
<blockquote>
<p >
<i >Loads the specified file as a trajectory.</i ></p ></blockquote></td></tr> 
<tr name='tr_loadtrajectory'>
<td valign="top">
<a name="load_trajectory_"filename"" id="k571"> </a>load TRAJECTORY {first last stride} or ({i j k:l m...}) "filename"</td ></tr>
<tr name='tr_loadtrajectory'>
<td>
<blockquote>
<p >
<i >Loads the specified subset of models from the file as a trajectory. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loadmodels">load MODELS</a> for details.</i ></p ></blockquote></td></tr> 
<tr name='tr_loadtrajectory'>
<td valign="top">
<a name="load_trajectory_"filename"" id="k572"> </a>load TRAJECTORY "filename" FILTER "filter specification" COORD {first last stride} or ({i j k:l m...}) mdcrd::crdfile1</td ></tr>
<tr name='tr_loadtrajectory'>
<td>
<blockquote>
<p >
<i >The presence of a COORD keyword indicates that the trajectory is to be built from a set of files that includes an AMBER molecular dynamics topology file and associated coordinate files. FILTER is optional, but recommended. For example, 
<b>FILTER "![WAT]"</b> prevents loading of water molecules. Any number of coordinate files may be specified. Coordinates are loaded as a set of trajectory steps. At least one COORD keyword must be given, and each specification of first, last, and stride must be preceded by a COORD keyword. {first last stride} or ({i j k:l m...}) is optional, and if not provided defaults to {0 -1 1}, which is interpreted as "all trajectory steps from each file." See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loadmodels">load MODELS</a> for documentation on {first last stride} and ({i j k:l m...}).</i ></p ></blockquote></td></tr> 
<tr name='tr_loadtrajectory'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k569">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_loadproperty'>
<td colspan="5">
<h3 >
<a id="loadproperty" name="loadproperty">load [property]</a>
<a id="k573"> </a></h3></td></tr>
<tr name='tr_loadproperty'>
<td>
<i >Adding the keyword OCCUPANCY, PARTIALCHARGE, TEMPERATURE, VIBRATION, or XYZ to the load command instructs Jmol to load only that sort of information from a file.
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>load OCCUPANCY</b></td >
<td valign="top" > Occupancy data are in the form of integers between 0 and 255. Numbers less than 0 are saved as 0; numbers greater than 255 are saved as 255.</td ></tr >
<tr >
<td valign="top" >
<b>load PARTIALCHARGE</b></td >
<td valign="top" > Partial charge data are in the form of decimals roughly in the range +/-3.4 x 10
<sup>38</sup>.</td ></tr >
<tr >
<td valign="top" >
<b>load TEMPERATURE</b></td >
<td valign="top" > Temperature (B-Factor) data are saved as decimals with 0.01 precision within the range -327.68 to 327.67. </td ></tr >
<tr >
<td valign="top" > 
<b>load VIBRATION</b> </td >
<td valign="top" > Vibrational data are in the form of vectors. </td ></tr >
<tr >
<td valign="top" >
<b>load XYZ</b> </td >
<td valign="top" > Loads only the coordinates, replacing the current coordinates of an already-loaded model with those in the file to be read. </td ></tr ></table >
<br>
<br> The data are applied to the currently selected set of atoms based solely on atom position. All standard load parameters are accepted, although many will be ignored, however whereas the default for a normal LOAD operation is to load all files, the default is to read data only from the first model in a multi-model file (or the specific model indicated with an integer after the file name). For each "atom" position and vector that is read, Jmol applies the data to all selected atoms having a unit cell normalized position within 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setmisc">loadAtomDataTolerance</a> (default 0.01) Angstroms of the position read from the file. If the file being loaded contains embedded Jmol script commands, those commands will be processed after the application of the data. For example, 
<b>load "myfile.struct" {5 5 1} PACKED; select _O; set loadAtomDataTolerance -0.2; load VIBRATION "vibs.xyz" 3</b> first loads a set of unit cells from myfile.struct, then applies only to the oxygen atoms the third vibration set found in vibs.xyz. Oxygen atoms in all unit cells will be given data even though the data in vibs.xyz might only be for one unit cell. 
<br />
<br /></i ></td></tr> 
<tr name='tr_loadproperty'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_loadproperty'>
<td colspan="5">
<p>
<a class="xref" href="#vibration">vibration</a> </p></td></tr>
<tr name='tr_loadproperty'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k574">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_log'>
<td colspan="5">
<h3 >
<a id="log" name="log">LOG</a>
<a id="k575"> </a></h3>
<div class="chimenote">
<i>Note:</i> The LOG command does not require @{ ... } around Jmol math expressions.
<br />
<br /></div></td></tr>
<tr name='tr_log'>
<td>
<i >Logs data to a file. Specifically for the signed applet and the application. The LOG command works the same as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#print">print</a> but records the information in a log file. If the string includes "$NOW$", those characters are replaced with the current date and tims. For example: 
<b>log "$NOW$ " + _version</b>. The string "$CLEAR$" clears the log file. The file to log to must first be designated using 
<b>set logFile "someName"</b>. This name will be prepended with "JmolLog_" and must not contain any directory path. The file will always be created in the Jar file directory. Note that logging is not possible with the web-based version, even with the signed applet, but signed applet or application running locally can log to a file. In addition to explicit use of the LOG command, two settings, 
<b>set logCommands</b> and 
<b>set logGestures</b> allow automatic tracking of commands and gestures (swipe, pinch, zoom, spin) to the designated log file.
<br />
<br /></i ></td></tr> 
<tr name='tr_log'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k576">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_loop'>
<td colspan="5">
<h3 >
<a id="loop" name="loop">loop</a>
<a id="k577"> </a></h3></td></tr>
<tr name='tr_loop'>
<td>
<i >Causes the script to restart at the beginning, with an optional time delay. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#goto">goto</a>.
<br />
<br /></i ></td></tr>
<tr name='tr_loop'>
<td valign="top">
<a name="loop_._time_delay" id="k581"> </a>loop 
<a class='def' href='#d580' title='in seconds -- (integer|decimal, >=0)'>[time-delay]</a></td ></tr> 
<tr name='tr_loop'>
<td valign="top">
<a name="loop_.on" id="k579"> </a>loop on</td ></tr> 
<tr name='tr_loop'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_loop'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('.loop')">in new window using 1blu.pdb</td></tr>
<tr name='tr_loop'>
<td>
<table cellpadding="10">
<tr>
<td class="example">color bonds red
<br />delay 3
<br />color bonds green
<br />loop 1</td></tr></table></td></tr>
<tr name='tr_loop'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_loop'>
<td colspan="5">
<p>
<a class="xref" href="#immediate!">[immediate (!)]</a> 
<a class="xref" href="#delay">delay</a> 
<a class="xref" href="#exit">exit</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#pause">pause</a> 
<a class="xref" href="#quit">quit</a> 
<a class="xref" href="#resume">resume</a> 
<a class="xref" href="#step">step</a> </p></td></tr>
<tr name='tr_loop'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k578">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_mapproperty'>
<td colspan="5">
<h3 >
<a id="mapproperty" name="mapproperty">mapProperty</a>
<a id="k582"> </a></h3></td></tr>
<tr name='tr_mapproperty'>
<td>
<i >The mapProperty command allow copying of an atomic property from one set of atoms to another. The operation involves identifying two sets of atoms and associated properties and also a common "key" property such as atomno or resno. If no key is given, atomno is assumed. A shortcut allows quick transfer of atom selection.
<br />
<br /></i ></td></tr>
<tr name='tr_mapproperty'>
<td valign="top">
<a name="mapproperty_{{atomexpression2}}.property2" id="k584"> </a>mapProperty {atomExpression1}.property1 {atomExpression2}.property2 propertyKey</td ></tr>
<tr name='tr_mapproperty'>
<td>
<blockquote>
<p >
<i >For each atom Y in atomExpression2 that matches an atom X in atomExpression1 based on propertyKey, Y.property2 is made to equal X.property1. Property2 must be settable. For example, 
<b>mapProperty {1.1}.temperature {2.1}.property_t atomno; color {2.1} property_t "rwb" </b>, which would color atoms in model 2.1 (perhaps a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#plot">plot</a>) based on temperature values for model 1.1. </i ></p ></blockquote></td></tr> 
<tr name='tr_mapproperty'>
<td valign="top">
<a name="mapproperty_selected" id="k585"> </a>mapProperty SELECTED {atomExpression} propertyKey</td ></tr>
<tr name='tr_mapproperty'>
<td>
<blockquote>
<p >
<i >This form of the mapProperty command is a shortcut for 
<b>mapProperty {selected}.selected {atomExpression}.selected propertyKey</b>. For example, 
<b>mapProperty SELECTED {2.1}</b> selects atoms in model 2.1 that match atomno with atoms that are already selected.</i ></p ></blockquote></td></tr> 
<tr name='tr_mapproperty'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k583">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_measure'>
<td colspan="5">
<h3 >
<a id="measure" name="measure">measure or measures or monitor or monitors</a>
<a id="k586"> </a></h3></td></tr>
<tr name='tr_measure'>
<td>
<i >Renders a measurement between the specified atoms. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setmeasure">set (measure)</a>. Two general syntaxes are available. In the older syntax, a series of two to four atom numbers are given, and the appropriate measure (distance, angle, or dihedral angle) is then displayed. The newer, more general syntax is as follows: 
<br> 
<br>measure RANGE &lt;minValue> &lt;maxValue> ALL|ALLCONNECTED|DELETE (&lt;atom expression>) (&lt;atom expression>) ... 
<br> 
<br>Using this syntax one can specify a 
<i>set</i> of measurements to define all at once. Note that these sets are embedded 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions">atom expressions</a> that must be enclosed in parentheses. If neither ALL nor ALLCONNECTED is present, only the 
<i>first matching</i> atom in the entire model set (all frames, so probably the first frame) is matched in each atom expression. When ALL or ALLCONNECTED is specified, all matching criteria in all frames are generated, thus allowing for "animated" measures. In general, this syntax restricts measurements to within the same model. However, measures can also be between two atoms in different frames (different models) as long as each atom expression evaluates to a single, specific atom. (To specify a particular atom in a particular model, use "AND */n", where n is the model number, "ATOMNO=3" by itself, for example, will indicate the third atom in each model/frame, but "ATOMNO=3 and */6" specifies only atom 3 in model 6). If a measurement is made between atoms in different models, both models must be displayed in order for the measurement to appear. A simple way to display two specific models is to use 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#display">display */i or */j</a>, where i and j are two model numbers. 
<br> 
<br>Thus, for example, 
<b>measure (*) (*)</b> will measure nothing, because both expressions will simply match the first atom in the first frame. 
<b>measure allconnected (*/3) (*/3) (*/3)</b> will measure every angle associated with bonds for model 3; 
<b>measure allconnected (*) (*)</b> will measure every bonded distance in every loaded model; 
<b>measure all (*) (*)</b> measures all possible interatomic distances in all models (not recommended!). 
<br>
<br>For the applet, using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#getproperty">getProperty measurementInfo</a> will then deliver full information relating to all measurements.
<br>
<br>The format of the label that accompanies the measurement line can be set for previously created measurements using 
<b>measure "n:labelFormat"</b>, described below. In addition, the default format (affecting only future-created labels) for measurement labels can be set using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_defaultdistancelabel">set defaultDistanceLabel</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_defaultanglelabel">set defaultAngleLabel</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_defaulttorsionlabel">set defaultTorsionLabel</a>. 
<br>
<br>You can specify units for a specific label using "//" at the end of the format followed by a unit designation such as A or nm. Special units are available for NMR data arising from Magres files: "2://dc_hz" or "2://dc_khz" or "2://khz" for calculated dipolar constant in Hz or kHz and "2://isc_hz" or "2://hz" for calculated J-coupling constants. These units are also available for the measure() function as, for example, 
<b>x = measure({a},{b},"isc_hz")</b>.
<br />
<br /></i ></td></tr>
<tr name='tr_measure'>
<td valign="top">
<a name="measure_" id="k588"> </a>measure ON/OFF{default: ON}</td ></tr>
<tr name='tr_measure'>
<td>
<blockquote>
<p >
<i >Turns on and off the distance, angle, dihedral measurement labels and measurement lines. (To turn off just the labels, use 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setmeasurement">set measurement OFF</a> </i ></p ></blockquote></td></tr> 
<tr name='tr_measure'>
<td valign="top">
<a name="measure_"n:labelformat"" id="k589"> </a>measure "n:labelFormat"</td ></tr>
<tr name='tr_measure'>
<td>
<blockquote>
<p >
<i >Changes all previously defined measurement labels of a given type (n = 2, 3, or 4) to the indicated format. The default label is "%VALUE %UNITS" for all types. Specifically for distances, the suffix //A will use angstroms for the default label for distance measurements. Other suffixes include //nm, //pm, and //vdw. Also available is %#(percent number-sign), which gives the 1-based number of the measurement. Atom information can be included as for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#label">labels</a>, adding 1 or 2 to the format code to indicate which atom. So, for example, 
<b>measure "2:%a1 -- %a2 distance = %0.0VALUE"</b> delivers the two atom names along with the value of the measurement rounded to the nearest integer with no units indicated. Specific units for the measurements can be given after two slashes: 
<b>measure "2:%a1 -- %a2 distance = %0.1VALUE //A"</b> would display the distance rounded to the nearest 0.1 Angstrom. </i ></p ></blockquote></td></tr> 
<tr name='tr_measure'>
<td valign="top">
<a name="measure__two_to_four_atom_expressions,_each_in_parentheses_" id="k593"> </a>measure (two to four atom expressions, each in parentheses) "labelFormat"</td ></tr>
<tr name='tr_measure'>
<td>
<blockquote>
<p >
<i >Show the distance, angle, or dihedral angle formed by the FIRST atom in each atom expression. The format is optional. </i ></p ></blockquote></td></tr> 
<tr name='tr_measure'>
<td valign="top">
<a name="measure__integer_" id="k590"> </a>measure (integer) (integer) "labelFormat"</td ></tr>
<tr name='tr_measure'>
<td>
<blockquote>
<p >
<i >Two atoms specify a distance measurement with an optionally given format. This syntax selects the first atom in the current 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frame">frame</a> set.</i ></p ></blockquote></td></tr> 
<tr name='tr_measure'>
<td valign="top">
<a name="measure__integer_" id="k591"> </a>measure (integer) (integer) (integer) "labelFormat"</td ></tr>
<tr name='tr_measure'>
<td>
<blockquote>
<p >
<i >Three atoms specify an angle measurement. The format is optional. This syntax selects the first atom in the current 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frame">frame</a> set.</i ></p ></blockquote></td></tr> 
<tr name='tr_measure'>
<td valign="top">
<a name="measure__integer_" id="k592"> </a>measure (integer) (integer) (integer) (integer) "labelFormat"</td ></tr>
<tr name='tr_measure'>
<td>
<blockquote>
<p >
<i >Four atoms specify a dihedral angle measurement. The format is optional. This syntax selects the first atom in the current 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frame">frame</a> set.</i ></p ></blockquote></td></tr> 
<tr name='tr_measure'>
<td valign="top">
<a name="measure_ticks_x|y|z" id="k601"> </a>measure TICKS X|Y|Z {major,minor,subminor} FORMAT [%0.2f, ...] SCALE {scaleX, scaleY, scaleZ} | x.xx FIRST x.xx {point1} {point2}</td ></tr>
<tr name='tr_measure'>
<td>
<blockquote>
<p >
<i >Creates a measure line with ticks along it. There are three levels of ticks - major, minor, and "subminor." Only the major ticks have labels. Which of these tick levels are displayed and the distance between ticks depends upon the parameter that takes the form of a point. The optional keyword FORMAT allows formating of the labels for the major ticks. These are based on an array of strings given after the FORMAT keyword. If the array is shorter than the number of ticks, the formats in the array are repeated. Following that, the optional keyword SCALE allows setting the scale either for each axis direction independently {scaleX, scaleY, scaleZ} or overall (as a decimal number). An optional keyword FIRST allows setting of the initial value of the measure. Finally, two points must be indicated. </i ></p ></blockquote></td></tr> 
<tr name='tr_measure'>
<td valign="top">
<a name="measure_all" id="k594"> </a>measure ALL (two to four atom expressions) "labelFormat"</td ></tr>
<tr name='tr_measure'>
<td>
<blockquote>
<p >
<i >Show the distance, angle, or dihedral angle formed by ALL atoms in the first expression with ALL atoms of each additional atom expression. The format is optional. </i ></p ></blockquote></td></tr> 
<tr name='tr_measure'>
<td valign="top">
<a name="measure_allconnected" id="k595"> </a>measure ALLCONNECTED (two to four atom expressions) "labelFormat"</td ></tr>
<tr name='tr_measure'>
<td>
<blockquote>
<p >
<i >Show the distance, angle, or dihedral angle formed by ALL atoms in the first expression with ALL atoms of each additional atom expression, provided they form a connected set. The format is optional. </i ></p ></blockquote></td></tr> 
<tr name='tr_measure'>
<td valign="top">
<a name="measure_delete" id="k596"> </a>measure DELETE</td ></tr>
<tr name='tr_measure'>
<td>
<blockquote>
<p >
<i >Deletes all measurements.</i ></p ></blockquote></td></tr> 
<tr name='tr_measure'>
<td valign="top">
<a name="measure_delete" id="k597"> </a>measure DELETE (integer)</td ></tr>
<tr name='tr_measure'>
<td>
<blockquote>
<p >
<i >Deletes a specific measurement, in order of their creation, starting with 1.</i ></p ></blockquote></td></tr> 
<tr name='tr_measure'>
<td valign="top">
<a name="measure_delete" id="k598"> </a>measure DELETE (two to four atom expressions)</td ></tr>
<tr name='tr_measure'>
<td>
<blockquote>
<p >
<i >Deletes all matching distance, angle, or dihedral angle measurements that are currently defined based on the atom expressions.</i ></p ></blockquote></td></tr> 
<tr name='tr_measure'>
<td valign="top">
<a name="measure_list" id="k599"> </a>measure LIST</td ></tr>
<tr name='tr_measure'>
<td>
<blockquote>
<p >
<i >Lists all measurements. (Same as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#show">show measurements</a>.)</i ></p ></blockquote></td></tr> 
<tr name='tr_measure'>
<td valign="top">
<a name="measure_range" id="k600"> </a>measure RANGE (decimal) (decimal) ALL|ALLCONNECTED|DELETE (two to four atom expressions, each in parentheses)</td ></tr>
<tr name='tr_measure'>
<td>
<blockquote>
<p >
<i >Adding RANGE and two decimal numbers modifies the above commands to limit the measurements created or deleted to only those within this specific range of values in Angstroms (distance) or degrees (angles). The word "RANGE" itself is optional but recommended.</i ></p ></blockquote></td></tr> 
<tr name='tr_measure'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_measure'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples-11/measure.htm">examples-11/measure.htm</a> </td></tr>
<tr name='tr_measure'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_measure'>
<td colspan="5">
<p>
<a class="xref" href="#axes">axes</a> 
<a class="xref" href="#boundbox">boundbox</a> 
<a class="xref" href="#unitcell">unitcell</a> </p></td></tr>
<tr name='tr_measure'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k587">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_menu'>
<td colspan="5">
<h3 >
<a id="menu" name="menu">menu</a>
<a id="k602"> </a></h3></td></tr>
<tr name='tr_menu'>
<td>
<i >Accepted only as the sole contents of a script, the 
<b>menu</b> command pops up the context menu for the user as though they had right-clicked the applet or clicked on the Jmol logo. JSmol note (Jmol 14.4): The JavaScript setting 
<b>Jmol._persistentMenu = true</b> allows menu to persist and not be removed when the mouse is moved off of it.
<br />
<br /></i ></td></tr>
<tr name='tr_menu'>
<td valign="top">
<a name="menu_" id="k602"> </a>menu</td ></tr> 
<tr name='tr_menu'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k603">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_meshribbon'>
<td colspan="5">
<h3 >
<a id="meshribbon" name="meshribbon">meshribbon or meshribbons</a>
<a id="k604"> </a></h3></td></tr>
<tr name='tr_meshribbon'>
<td>
<i >A mesh ribbon is similar to a strand, but is more the quality of a loosely woven fabric. 
<br />
<br /></i ></td></tr>
<tr name='tr_meshribbon'>
<td valign="top">
<a name="meshribbon_" id="k606"> </a>meshribbon ON/OFF{default: ON}</td ></tr> 
<tr name='tr_meshribbon'>
<td valign="top">
<a name="meshribbon_only" id="k607"> </a>meshribbon ONLY</td ></tr>
<tr name='tr_meshribbon'>
<td>
<blockquote>
<p >
<i >Turns meshribbon rendering on and all other rendering (including labels) off.</i ></p ></blockquote></td></tr> 
<tr name='tr_meshribbon'>
<td valign="top">
<a name="meshribbon_._mesh_ribbon_radius" id="k609"> </a>meshribbon 
<a class='def' href='#d608' title='the overall radius of the mesh ribbon -- (decimal, &lt;=4.0)'>[mesh-ribbon-radius]</a></td ></tr>
<tr name='tr_meshribbon'>
<td>
<blockquote>
<p >
<i >A negative number also implies 
<b>ONLY</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_meshribbon'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_meshribbon'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_meshribbon'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples/structure.htm">structure.htm</a> </td></tr>
<tr name='tr_meshribbon'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_meshribbon'>
<td colspan="5">
<p>
<a class="xref" href="#backbone">backbone</a> 
<a class="xref" href="#background">background</a> 
<a class="xref" href="#cartoon">cartoon</a> 
<a class="xref" href="#dots">dots</a> 
<a class="xref" href="#ellipsoid">ellipsoid</a> 
<a class="xref" href="#geosurface">geoSurface</a> 
<a class="xref" href="#ribbon">ribbon</a> 
<a class="xref" href="#rocket">rocket</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlighting">set (lighting)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#strand">strand</a> 
<a class="xref" href="#trace">trace</a> 
<a class="xref" href="#vector">vector</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_meshribbon'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k605">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_message'>
<td colspan="5">
<h3 >
<a id="message" name="message">message</a>
<a id="k610"> </a></h3></td></tr>
<tr name='tr_message'>
<td>
<i >Sends a string of text to the messageCallback function (for the applet). The 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_messagecallback">set MessageCallback</a> command can be used to set this JavaScript function. The message is also entered into the scriptStatus queue. Variable values and math expressions can be included in messages and echos. These use the following syntax: 
<b>message my variable = @{variablename}</b>, provided a variable with that name exits. Note that the braces are required -- 
<i>message my variable = @x</i> will simply deliver "my variable = @x". The @{...} syntax is also supported in this context: 
<b>message the fraction 3 / 2 is @{ 3.0 / 2 }</b>. Basically, any expression that can appear in a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#print">print</a> command can appear in @{...} in a message or echo. For example: 
<b>message @{ {_N and connected(2,_H)}.size } NH2 groups are present</b>. Since the Jmol application can be run "headless" -- with no display -- using the -ions set of flags, you can use a designed message command to deliver model information to other programs, however the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#print">print</a> command has a simpler syntax and is more flexible.
<br />
<br /></i ></td></tr>
<tr name='tr_message'>
<td valign="top">
<a name="message__string_" id="k612"> </a>message (string)</td ></tr> 
<tr name='tr_message'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_message'>
<td colspan="5">
<p>
<a class="xref" href="#jmolcommandsyntax">[Jmol Command Syntax]</a> 
<a class="xref" href="#jmolmath">[Jmol Math]</a> 
<a class="xref" href="#jmolparameters">[Jmol Parameters]</a> 
<a class="xref" href="#atomexpressions">[atom expressions]</a> 
<a class="xref" href="#atomproperties">[atom properties]</a> 
<a class="xref" href="#functions">[functions]</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#set">set</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_message'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k611">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_minimize'>
<td colspan="5">
<h3 >
<a id="minimize" name="minimize">minimize or minimization</a>
<a id="k613"> </a></h3></td></tr>
<tr name='tr_minimize'>
<td>
<i >Minimizes the structure using the MMFF94 force field (T. A. Halgren, J. Comp. Chem. 5 & 6, 616-641 (1996) or an adapted UFF force field (Rappe, A. K., et. al.; J. Am. Chem. Soc. (1992) 114(25) p. 10024-10035). The default force field is MMFF94, but the UFF force field will automatically be used if atoms are not fo types recognized by MMFF94 or if 
<b>set forceField "UFF"</b> is issued. Generally the minimization runs in its own thread. If it is desired to wait until the process has completed prior to continuing, use 
<b>set useMinimizationThread false</b>. You can retrieve a detailed report of the minimization energy using the "high debug" setting and then either 
<b>show minimization</b> or 
<b>x = script("show minimization");print x</b>:
<br>
<br>
<b>set loglevel 6
<br>minimize steps 0
<br>x = script("show minimization")
<br>set debug off
<br>print x
<br />
<br /></i ></td></tr>
<tr name='tr_minimize'>
<td valign="top">
<a name="minimize_" id="k615"> </a>minimize</td ></tr>
<tr name='tr_minimize'>
<td>
<blockquote>
<p >
<i >Carries out a minimization using the default convergence criterion specified by 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setmisc">set minimizationCriterion</a> or until the maximum number of steps specified by 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setmisc">set minimizationSteps</a> is reached. If 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setmisc">set minimizationRefresh</a> is TRUE, then the model refreshes after each minimization step, producing a sort of animated minimization.</i ></p ></blockquote></td></tr> 
<tr name='tr_minimize'>
<td valign="top">
<a name="minimize_._atom_expression" id="k617"> </a>minimize 
<a class='def' href='#d616' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_minimize'>
<td>
<blockquote>
<p >
<i >Carries out a minimization using the specified atom set and assumes the SELECT and ONLY options.</i ></p ></blockquote></td></tr> 
<tr name='tr_minimize'>
<td valign="top">
<a name="minimize_addhydrogens" id="k618"> </a>minimize ADDHYDROGENS</td ></tr>
<tr name='tr_minimize'>
<td>
<blockquote>
<p >
<i >First adds hydrogen atoms, then minimizes the structure.</i ></p ></blockquote></td></tr> 
<tr name='tr_minimize'>
<td valign="top">
<a name="minimize_cancel" id="k619"> </a>minimize CANCEL</td ></tr>
<tr name='tr_minimize'>
<td>
<blockquote>
<p >
<i >Stops a running minimization.</i ></p ></blockquote></td></tr> 
<tr name='tr_minimize'>
<td valign="top">
<a name="minimize_clear" id="k620"> </a>minimize CLEAR</td ></tr>
<tr name='tr_minimize'>
<td>
<blockquote>
<p >
<i >Stops a running minimization and clears all constraints </i ></p ></blockquote></td></tr> 
<tr name='tr_minimize'>
<td valign="top">
<a name="minimize_constraint" id="k621"> </a>minimize CONSTRAINT CLEAR</td ></tr>
<tr name='tr_minimize'>
<td>
<blockquote>
<p >
<i >Clears any current constraints.</i ></p ></blockquote></td></tr> 
<tr name='tr_minimize'>
<td valign="top">
<a name="minimize_constraint" id="k622"> </a>minimize CONSTRAINT (two to four atom expressions) (decimal)</td ></tr>
<tr name='tr_minimize'>
<td>
<blockquote>
<p >
<i >Constrains the distance, angle, or dihedral angle invoving two to four atoms. If a given atom expression involves more than one atom, only the first atom in the set is made part of the constraint.</i ></p ></blockquote></td></tr> 
<tr name='tr_minimize'>
<td valign="top">
<a name="minimize_criterion" id="k623"> </a>minimize CRITERION</td ></tr>
<tr name='tr_minimize'>
<td>
<blockquote>
<p >
<i >Overrides the setting of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_minimizationcriterion">minimizationCriterion</a> for this minimization.</i ></p ></blockquote></td></tr> 
<tr name='tr_minimize'>
<td valign="top">
<a name="minimize_energy" id="k624"> </a>minimize ENERGY</td ></tr>
<tr name='tr_minimize'>
<td>
<blockquote>
<p >
<i >Do no minimization -- just calculate the energy</i ></p ></blockquote></td></tr> 
<tr name='tr_minimize'>
<td valign="top">
<a name="minimize_select" id="k626"> </a>minimize SELECT 
<a class='def' href='#d616' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_minimize'>
<td>
<blockquote>
<p >
<i >Minimizes only the specified atom set. (Any previous or additional setting of FIX is respected.)</i ></p ></blockquote></td></tr> 
<tr name='tr_minimize'>
<td valign="top">
<a name="minimize_select" id="k627"> </a>minimize SELECT 
<a class='def' href='#d616' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a> ONLY</td ></tr>
<tr name='tr_minimize'>
<td>
<blockquote>
<p >
<i >Minimizes only the specified atom set, specifically ignoring all other atoms..</i ></p ></blockquote></td></tr> 
<tr name='tr_minimize'>
<td valign="top">
<a name="minimize_steps" id="k628"> </a>minimize STEPS (integer)</td ></tr>
<tr name='tr_minimize'>
<td>
<blockquote>
<p >
<i >Overrides the setting of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setmisc">minimizationSteps</a> for this calculation. </i ></p ></blockquote></td></tr> 
<tr name='tr_minimize'>
<td valign="top">
<a name="minimize_stop" id="k629"> </a>minimize STOP</td ></tr>
<tr name='tr_minimize'>
<td>
<blockquote>
<p >
<i >Same as CANCEL.</i ></p ></blockquote></td></tr> 
<tr name='tr_minimize'>
<td valign="top">
<a name="minimize_fix" id="k625"> </a>minimize FIX 
<a class='def' href='#d616' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_minimize'>
<td>
<blockquote>
<p >
<i >Specifies an atom set to keep in fixed position during this minimization or future minimizations.</i ></p ></blockquote></td></tr> 
<tr name='tr_minimize'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_minimize'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k614">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_mo'>
<td colspan="5">
<h3 >
<a id="mo" name="mo">mo</a>
<a id="k630"> </a></h3></td></tr>
<tr name='tr_mo'>
<td>
<i >
<img src="img/mo.png" alt="benzene HOMO (Spartan)" />The 
<b>MO</b> (molecular orbital) command displays molecular orbitals contained in a variety of file formats. One simply loads the file, then selects which orbital to display with 
<b>MO n</b> where "n" is the number of the molecular orbital to display. (With some file formats, you may need to use the 
<a class="xref" href=".#frame" target="_blank">frame or model</a> command to call up the specific model having the MOs.) Option changes take effect immediately with the currently displayed orbital and stay in effect for later MO commands until a new file is loaded. 
<br>
<br>Note that ONE molecular orbital is allowed per model (that is, per frame). The 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface</a> command can be used for more advanced molecular orbital display options or for displaying several planes or orbitals simultaneously. The default rendering is MESH NOFILL FRONTONLY. Where indicated below, adding the SQUARED keyword generates the linear combination of all degenerate orbitals if one is indicated (by a number, or HOMO, LUMO, NEXT, or PREV) or the specified set of orbitals in the case of a linear combination, squaring the wave functions prior to adding. In general, this results in showing the contribution of this set of orbitals to the overall total electron density and the symmetry of that density.
<br />
<br /></i ></td></tr>
<tr name='tr_mo'>
<td valign="top">
<a name="mo_" id="k632"> </a>mo ON/OFF{default: ON}</td ></tr>
<tr name='tr_mo'>
<td>
<blockquote>
<p >
<i >Turn on/off the molecular orbital.</i ></p ></blockquote></td></tr> 
<tr name='tr_mo'>
<td valign="top">
<a name="mo__integer_" id="k633"> </a>mo (integer) [SQUARED]</td ></tr>
<tr name='tr_mo'>
<td>
<blockquote>
<p >
<i >Selects the specific molecular orbital to dispay, starting with the number 1. If this number is negative, the colors of the phases are reversed.</i ></p ></blockquote></td></tr> 
<tr name='tr_mo'>
<td valign="top">
<a name="mo_density" id="k634"> </a>mo DENSITY</td ></tr>
<tr name='tr_mo'>
<td>
<blockquote>
<p >
<i >Calculates the sum of the squares of all occupied wave functions, effectively showing overall electron density.</i ></p ></blockquote></td></tr> 
<tr name='tr_mo'>
<td valign="top">
<a name="mo_[c1_n1,c2_n2,_c3_n3,...]" id="k635"> </a>mo [c1 n1,c2 n2, c3 n3,...] [SQUARED]</td ></tr>
<tr name='tr_mo'>
<td>
<blockquote>
<p >
<i >Displays a linear combination of molecular orbitals based on a set of coefficients and orbital numbers, for example: 
<b>mo [0.5, 20, 0.5, 21]</b>. Coefficients will automatically be normalized such that SUM
<sub>i</sub>(c
<sub>i</sub>*c
<sub>i</sub>) = 1.00. If variables are involved, one needs @{...}. Thus, 
<b>load c6h6.smol; for (f = 0; f 
<= 10; f++) { mo @{[f/10.0, 20, (10-f)/10.0, 21]}; refresh }</b>. Note that this allows creation of a reversed-phase orbital using -1.0 for the coefficient of a single orbital: 
<b>mo [-1.0 28]</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_mo'>
<td valign="top">
<a name="mo_color" id="k645"> </a>mo COLOR 
<a class='def' href='#d644' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a></td ></tr>
<tr name='tr_mo'>
<td>
<blockquote>
<p >
<i >Colors the orbital one specific color</i ></p ></blockquote></td></tr> 
<tr name='tr_mo'>
<td valign="top">
<a name="mo_color" id="k646"> </a>mo COLOR 
<a class='def' href='#d644' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a> 
<a class='def' href='#d644' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a></td ></tr>
<tr name='tr_mo'>
<td>
<blockquote>
<p >
<i >Colors regions where the wave function is less than zero the first color; regions where the wavefunction is greater than zero the second color.</i ></p ></blockquote></td></tr> 
<tr name='tr_mo'>
<td valign="top">
<a name="mo_cutoff" id="k648"> </a>mo CUTOFF (decimal)</td ></tr>
<tr name='tr_mo'>
<td>
<blockquote>
<p >
<i >Sets the cutoff value for the isosurface that defines the orbital. This number may be dependent upon the computational package used to generate the orbitals. Values in the range 0.005 - 0.05 may need to be experimented with in order to get the best display. Values closer to zero lead to surfaces further from the atoms (larger orbitals). Both positive and negative cutoffs are allowed. A positive number indicates to use both positive and negative cutoffs. Adding an explicit "+" sign before the number indicates that only the positive part of the surface is desired.</i ></p ></blockquote></td></tr> 
<tr name='tr_mo'>
<td valign="top">
<a name="mo_delete" id="k647"> </a>mo DELETE</td ></tr>
<tr name='tr_mo'>
<td>
<blockquote>
<p >
<i >Delete the molecular orbital.</i ></p ></blockquote></td></tr> 
<tr name='tr_mo'>
<td valign="top">
<a name="mo_homo" id="k636"> </a>mo HOMO [+/-n] [SQUARED]</td ></tr>
<tr name='tr_mo'>
<td>
<blockquote>
<p >
<i >Selects the highest doubly- or singly-occupied molecular orbital, optionally an orbital +/-n from this orbital. (Only applicable to data sets that have orbital occupancies indicated in the file.) </i ></p ></blockquote></td></tr> 
<tr name='tr_mo'>
<td valign="top">
<a name="mo_lumo" id="k637"> </a>mo LUMO [+/-n] [SQUARED]</td ></tr>
<tr name='tr_mo'>
<td>
<blockquote>
<p >
<i >Selects the lowest unoccupied molecular orbital, optionally an orbital +/-n from this orbital. (Only applicable to data sets that have orbital occupancies indicated in the file.)</i ></p ></blockquote></td></tr> 
<tr name='tr_mo'>
<td valign="top">
<a name="mo_model" id="k638"> </a>mo MODEL n or x.y</td ></tr>
<tr name='tr_mo'>
<td>
<blockquote>
<p >
<i >Specifies the model for this command; must be followed by an orbital specification such as 
<b>HOMO</b> or 
<b>12</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_mo'>
<td valign="top">
<a name="mo_next" id="k639"> </a>mo NEXT [SQUARED]</td ></tr>
<tr name='tr_mo'>
<td>
<blockquote>
<p >
<i >Displays the next MO in the file using the same characteristics as the currently displayed one.</i ></p ></blockquote></td></tr> 
<tr name='tr_mo'>
<td valign="top">
<a name="mo_noplane" id="k641"> </a>mo NOPLANE</td ></tr>
<tr name='tr_mo'>
<td>
<blockquote>
<p >
<i >Goes back to full orbital display rather than a planar slice.</i ></p ></blockquote></td></tr> 
<tr name='tr_mo'>
<td valign="top">
<a name="mo_plane" id="k642"> </a>mo PLANE plane_expression</td ></tr>
<tr name='tr_mo'>
<td>
<blockquote>
<p >
<i >Indicates that what is desired is a color-mapped planar slice through the orbital using one of the ways of expressing a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#planeexpressions">plane</a>. </i ></p ></blockquote></td></tr> 
<tr name='tr_mo'>
<td valign="top">
<a name="mo_points" id="k643"> </a>mo POINTS numberOfPoints randomSeed</td ></tr>
<tr name='tr_mo'>
<td>
<blockquote>
<p >
<i >Produces a "pointilist" probability-based visualization of a molecular orbital using the specified number of points and an optional random seed. </i ></p ></blockquote></td></tr> 
<tr name='tr_mo'>
<td valign="top">
<a name="mo_previous" id="k640"> </a>mo PREVIOUS [SQUARED]</td ></tr>
<tr name='tr_mo'>
<td>
<blockquote>
<p >
<i >Displays the previous MO in the file using the same characteristics as the currently displayed one.</i ></p ></blockquote></td></tr> 
<tr name='tr_mo'>
<td valign="top">
<a name="mo_resolution" id="k649"> </a>mo RESOLUTION (decimal)</td ></tr>
<tr name='tr_mo'>
<td>
<blockquote>
<p >
<i >Sets the resolution of the isosurface rendering in "points per Angstrom". Higher resolution leads to smoother surfaces and more detail but carries the penalty of slower surface generation. Typical values for molecular orbitals are 4-10 points per Angstrom.</i ></p ></blockquote></td></tr> 
<tr name='tr_mo'>
<td valign="top">
<a name="mo_slab" id="k650"> </a>mo SLAB (parameters)</td ></tr>
<tr name='tr_mo'>
<td>
<blockquote>
<p >
<i >MO 
<b>SLAB</b> provides an extensive mechanism allowing for the trimming of a molecular orbital using a wide variety of methods. MOs can be "slabbed" based on planes, spheres, bounding boxes, unit cells, proximity to a set of atoms, within a range of values, or a dynamic z-plane relative to the user. The section removed can be removed completely or, using 
<b>MO SLAB TRANSLUCENT</b>, left as a translucent "ghost" surface. An MO may be slabbed any number of times in any number of ways. The slabbing is reversible using 
<b>MO SLAB NONE</b> for general slabbing, and using 
<b>MO SLAB OFF</b> for dynamic z-plane slabbing. Options include: 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#planeexpression">(plane expression)</a> </td >
<td valign="top" > a plane. Note that plane definitions starting with "-" switch sides of the plane </td ></tr >
<tr >
<td valign="top" >BOUNDBOX </td >
<td valign="top" > within the currently defined 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#boundbox">bounding box</a> </td ></tr >
<tr >
<td valign="top" >UNITCELL </td >
<td valign="top" > within the currently defined 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#unitcell">unit cell</a> </td ></tr >
<tr >
<td valign="top" >WITHIN x.y {atom expression} </td >
<td valign="top" > within the given distance of the specified atom set </td ></tr >
<tr >
<td valign="top" >WITHIN x.y (point) </td >
<td valign="top" > within the given distance of the specified point (a spherical slab) </td ></tr >
<tr >
<td valign="top" >WITHIN RANGE x.x y.y </td >
<td valign="top" > within the value range x.x and y.y. </td ></tr ></table ></i ></p ></blockquote></td></tr> 
<tr name='tr_mo'>
<td valign="top">
<a name="mo_titleformat" id="k651"> </a>mo TITLEFORMAT "format"</td ></tr>
<tr name='tr_mo'>
<td>
<blockquote>
<p >
<i >Sets the format of the orbital title appearing in the upper left corner of the applet. Special format characters include: 
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > %E</td >
<td valign="top" >energy</td ></tr >
<tr >
<td valign="top" >%F</td >
<td valign="top" >filename </td ></tr >
<tr >
<td valign="top" > %I </td >
<td valign="top" > molecular orbital number </td ></tr >
<tr >
<td valign="top" > %M </td >
<td valign="top" > model number </td ></tr >
<tr >
<td valign="top" > %N </td >
<td valign="top" > total number of molecular orbitals </td ></tr >
<tr >
<td valign="top" > %O</td >
<td valign="top" >occupancy </td ></tr >
<tr >
<td valign="top" >%S</td >
<td valign="top" >symmetry</td ></tr >
<tr >
<td valign="top" >%U</td >
<td valign="top" >energy units</td ></tr >
<tr >
<td valign="top" >     |    </td >
<td valign="top" > (vertical bar) new line</td ></tr >
<tr >
<td valign="top" >    ?    </td >
<td valign="top" >(at the beginning of a line) indicates to disregard line if no data for that line are present in the file</td ></tr ></table >
<br> If a formatted item is not indicated in the file, then it is left blank. The default title is "%F | Model %M MO %I/%N | Energy = %E %U | ?Symmetry = %S | ?Occupancy = %O". The command 
<b>MO titleFormat ""</b> may be used to show no title. </i ></p ></blockquote></td></tr> 
<tr name='tr_mo'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_mo'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_mo'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples-11/mo.htm">examples-11/mo.htm</a> </td></tr>
<tr name='tr_mo'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_mo'>
<td colspan="5">
<p>
<a class="xref" href="#planeexpressions">[plane expressions]</a> 
<a class="xref" href="#isosurface">isosurface</a> 
<a class="xref" href="#lcaocartoon">lcaoCartoon</a> 
<a class="xref" href="#pmesh">pmesh</a> </p></td></tr>
<tr name='tr_mo'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k631">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_model'>
<td colspan="5">
<h3 class=h3newer>
<a id="model" name="model">model or models</a>
<a id="k652"> </a> 
<br />
<span class=newer>(v. 14.2)</span></h3></td></tr>
<tr name='tr_model'>
<td>
<i >The MODEL command functions the same as the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frame">frame</a> command with one exception: In the case of 
<b>model n</b> where 
<b>n</b> is an integer, and a single PDB file containing MODEL records is loaded, the integer used here refers to the number specified in a MODEL record, not the model's sequential position in the file. 
<br />
<br /></i ></td></tr>
<tr name='tr_model'>
<td valign="top">
<a name="model__integer_" id="k654"> </a>
<span class=new>model (integer)</span></td ></tr>
<tr name='tr_model'>
<td>
<blockquote>
<p >
<i >
<span class=new>In the case of the loading of a single PDB file containing MODEL records, the integer used here corresponds to the number in that record, so 
<b>model 1</b> does not necessarily load the first model in the file, the way 
<b>frame 1</b> would. </span></i ></p ></blockquote></td></tr> 
<tr name='tr_model'>
<td valign="top">
<a name="model__integer_" id="k655"> </a>
<span class=newer>model (integer) PROPERTY name (list) [
<b>Jmol 14.3.15</b>]</span></td ></tr>
<tr name='tr_model'>
<td>
<blockquote>
<p >
<i >
<span class=newer>This command adds property data to model's auxilliaryInfo. x may be any valid math expression. For example, 
<b>model 1 property "test" {1.1}.temperature.mul(0.1)</b> creates _M.test, which is an array. If the source variable is an array, then the data can also be used to create atom data: 
<b>{1.1}.property_t = {1.1}.label("%{test}")</b>. (Jmol 14.4)</span></i ></p ></blockquote></td></tr> 
<tr name='tr_model'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_model'>
<td colspan="5">
<p>
<a class="xref" href="#frame">frame</a> </p></td></tr>
<tr name='tr_model'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k653">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_modulation'>
<td colspan="5">
<h3 >
<a id="modulation" name="modulation">modulation</a>
<a id="k656"> </a></h3></td></tr>
<tr name='tr_modulation'>
<td>
<i >The MODULATION command, introduced in Jmol 14.0, allows visualization of 
<a class="xref" href="http://www.ccp14.ac.uk/ccp/web-mirrors/crys-methods/Project/modulate/modulate.html" target="_blank">incommensurately modulated strutures</a> that have been read from msCIF or JANA2006 files. An (nonrealistic) dynamic phased animation of the structure can be activated using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#vibration">vibration ON</a>, with the magnitude of the oscillations governed by 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_modulationscale">set modulationScale</a>. Note that incommensurately modulated structures are never actually oscillating in such a way; different t values actually correspond to different physical unit cell positions in the crystal. This animation only serves as a visualization of the phasing correlations in a given unit cell.
<br />
<br /></i ></td></tr>
<tr name='tr_modulation'>
<td valign="top">
<a name="modulation_on" id="k658"> </a>modulation ON</td ></tr>
<tr name='tr_modulation'>
<td>
<blockquote>
<p >
<i >Turns modulation on, moving atoms to their modulated positions and displaying the aperiodic structure.</i ></p ></blockquote></td></tr> 
<tr name='tr_modulation'>
<td valign="top">
<a name="modulation_off" id="k659"> </a>modulation OFF</td ></tr>
<tr name='tr_modulation'>
<td>
<blockquote>
<p >
<i >Turns modulation off, displaying the unmodulated, periodic structure.</i ></p ></blockquote></td></tr> 
<tr name='tr_modulation'>
<td valign="top">
<a name="modulation_._atom_expression" id="k661"> </a>modulation 
<a class='def' href='#d660' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a> ON/OFF</td ></tr>
<tr name='tr_modulation'>
<td>
<blockquote>
<p >
<i >Turns modulation on or off for a specific set of atoms only, adding or removing those atoms to/from the set of atoms already modulated.</i ></p ></blockquote></td></tr> 
<tr name='tr_modulation'>
<td valign="top">
<a name="modulation_t" id="k662"> </a>modulation T (decimal)</td ></tr>
<tr name='tr_modulation'>
<td>
<blockquote>
<p >
<i >Specifies the parameter t, the coordinate along the hyperspace axis, setting the phase of the modulations and creating a projection of the (3+n)D structure in 3D. If n > 1, sets all hyperspace coordinates to t. Values range from 0.0 to 1.0. Note that using the integer 1 is NOT the same as using the number 1.0, as integers are used to give multiples of q (see below).</i ></p ></blockquote></td></tr> 
<tr name='tr_modulation'>
<td valign="top">
<a name="modulation_t" id="k663"> </a>modulation T {t1 t2 t3}</td ></tr>
<tr name='tr_modulation'>
<td>
<blockquote>
<p >
<i >Specifies distinct phase settings for up to three wave vectors. Values range from 0 to 1.</i ></p ></blockquote></td></tr> 
<tr name='tr_modulation'>
<td valign="top">
<a name="modulation_q" id="k664"> </a>modulation Q (integer)</td ></tr>
<tr name='tr_modulation'>
<td>
<blockquote>
<p >
<i >Specifies the parameter t as multiples of the wave vector q, the coordinate along the hyperspace axis, setting the phase of the modulations and creating a projection of the (3+n)D structure in 3D. If the modulation dimension n > 1, sets all hyperspace coordinates to m times the length of the wave vector . Values must be integers. The effect of this setting is to shift the displayed unit cell by m unit cells along the modulation vector.</i ></p ></blockquote></td></tr> 
<tr name='tr_modulation'>
<td valign="top">
<a name="modulation_q" id="k665"> </a>modulation Q {m1 m2 m3}</td ></tr>
<tr name='tr_modulation'>
<td>
<blockquote>
<p >
<i >Specifies distinct phase settings for up to three wave vectors. The second parameter TRUE distinguishes this from setting t values directly.</i ></p ></blockquote></td></tr> 
<tr name='tr_modulation'>
<td valign="top">
<a name="modulation_scale" id="k666"> </a>modulation scale x.x</td ></tr>
<tr name='tr_modulation'>
<td>
<blockquote>
<p >
<i >Sets the scale of all modulations.</i ></p ></blockquote></td></tr> 
<tr name='tr_modulation'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_modulation'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k657">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_move'>
<td colspan="5">
<h3 >
<a id="move" name="move">move</a>
<a id="k667"> </a></h3></td></tr>
<tr name='tr_move'>
<td>
<i >The move command provides powerful animation capabilities. It effectively changes the camera position, allowing you to specify rotations, zooming, and translations to be performed in a specified period of time. xRot, yRot, and zRot are rotations about the cartesian axes in degrees. Zoom specifies a zoom factor, xTrans, yTrans, and zTrans are translations in the range -100 to 100. If you do not know what slab is, just put in a zero. see the slab command for more information. This command has been superceded by the 
<b>moveTo</b> command.
<br />
<br /></i ></td></tr>
<tr name='tr_move'>
<td valign="top">
<a name="move_._drotx" id="k680"> </a>move 
<a class='def' href='#d669' title='the degrees of rotation about x -- (integer)'>[x-rotation]</a> 
<a class='def' href='#d670' title='the degrees of rotation about y -- (integer)'>[y-rotation]</a> 
<a class='def' href='#d671' title='the degrees of rotation about z -- (integer)'>[z-rotation]</a> 
<a class='def' href='#d672' title='a scaling factor -- (integer)'>[zoom-factor]</a> 
<a class='def' href='#d673' title='the distance offset along x -- (integer)'>[x-translation]</a> 
<a class='def' href='#d674' title='the distance offset along y -- (integer)'>[y-translation]</a> 
<a class='def' href='#d675' title='the distance offset along z -- (integer)'>[z-translation]</a> 
<a class='def' href='#d676' title='the cutoff for the slab display -- (integer)'>[slab-cutoff]</a> 
<a class='def' href='#d677' title='the amount of time to wait -- (decimal)'>[seconds-total]</a> 
<a class='def' href='#d678' title='the frames per second to move -- (integer)'>[move-frames-per-second]</a>{default: 30} 
<a class='def' href='#d679' title='the maximum acceleration -- (integer)'>[maximum-acceleration]</a>{default: 5}</td ></tr> 
<tr name='tr_move'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_move'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_move'>
<td colspan="5">
<p>
<a class="xref" href="#animation">animation</a> 
<a class="xref" href="#file">file</a> 
<a class="xref" href="#frame">frame</a> 
<a class="xref" href="#invertselected">invertSelected</a> 
<a class="xref" href="#moveto">moveto</a> 
<a class="xref" href="#rotate">rotate</a> 
<a class="xref" href="#rotateselected">rotateSelected</a> 
<a class="xref" href="#setmisc">set (misc)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#spin">spin</a> 
<a class="xref" href="#translate">translate</a> 
<a class="xref" href="#translateselected">translateSelected</a> 
<a class="xref" href="#zoom">zoom</a> 
<a class="xref" href="#zoomto">zoomto</a> </p></td></tr>
<tr name='tr_move'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k668">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_moveto'>
<td colspan="5">
<h3 class=h3newer>
<a id="moveto" name="moveto">moveto</a>
<a id="k681"> </a> 
<br />
<span class=newer>(v. 11.2 -- adds navigation capability)</span></h3></td></tr>
<tr name='tr_moveto'>
<td>
<i >
<img src="img/moveto.gif" alt="" />The moveto command rotates the molecule to a predefined orientation, as though the camera were moving smoothly to a new position. Two formats can be used. In each, the first (optional) parameter specifies the number of seconds during which the molecule should rotate smoothly from the current orientation to the new orientation. A 0 for this first parameter specifies an instantaneous reorientation. If the axis is {0 0 0} and the degrees are 0, then the molecule is not reoriented during the operation. In conjunction with "show orientation" this command allows reading and restoring specific user-specified orientations.
<br />
<br /></i ></td></tr>
<tr name='tr_moveto'>
<td valign="top">
<a name="moveto_timeseconds" id="k691"> </a>
<span class=newer>moveto timeSeconds AXIS [a1,b1,c1,a2,b2,c2,a3,b3,c3,a4,b4,c4,-a1,-b1,-c1,-a2,-b2,-c2,-a3,-b3,-c3,-a4,-b4,-c4] [
<b>
<span class="newv">Jmol 14.1.1</span>6</b>]</span></td ></tr>
<tr name='tr_moveto'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Reorients the viewpoint to de down one of the crystallographic axes (a, b, or c), positioning that axis one of the following positions: (1) upper left, (2) upper right, (3) lower right, (4) lower left. Adding a minus sign points the axis away from the viewer rather than toward the viewer.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_moveto'>
<td valign="top">
<a name="moveto_timeseconds" id="k692"> </a>
<span class=new>moveto timeSeconds AXIS [a,b,c,x,y,z]</span></td ></tr>
<tr name='tr_moveto'>
<td>
<blockquote>
<p >
<i >
<span class=new>Reorients the viewpoint to de down a specific axis, either one of the crystallographic axes (a, b, or c), or one of the Cartesian axes (x, y, z). "a" is shorthand for "a1", "b" for "b1", and "c" for "c4".</span></i ></p ></blockquote></td></tr> 
<tr name='tr_moveto'>
<td valign="top">
<a name="moveto_timeseconds" id="k683"> </a>moveto timeSeconds FRONT|BACK|LEFT|RIGHT|TOP|BOTTOM</td ></tr>
<tr name='tr_moveto'>
<td>
<blockquote>
<p >
<i >A simple use of moveTo just has six optional directions. </i ></p ></blockquote></td></tr> 
<tr name='tr_moveto'>
<td valign="top">
<a name="moveto_timeseconds" id="k684"> </a>moveto timeSeconds {x y z} degrees zoomPercent transX transY {x y z} rotationRadius navigationCenter navTransX navTransY navDepth</td ></tr>
<tr name='tr_moveto'>
<td>
<blockquote>
<p >
<i >In the second option, the second parameter is a coordinate {x, y, z} defining the axis relative to the default orientation about which the molecule should be rotated. The third parameter is the counterclockwise (right-hand) rotation in degrees about this axis. "moveto 0 {0 0 1} 0" rotates the model to the default orientation (equivalent to "reset"). If the angle parameter is 0 but any one of x, y, or z is nonzero, then no reorientation occurs (because the axis has been specified, but the rotation is 0 degrees). Following these parameters is the zoom setting in percent, the X- and Y-positions of the rotation center on the screen, as percent of width and height, respectively. The actual molecular coordinate of the rotation center along with the rotation radius (which determines the magnification associated with 
<b>ZOOM 100</b>) are next. The final parameters define the navigation center molecular coordinate, its X- and Y- position on the screen in percent, and the depth of the navigation point in percent of model depth (100 = front, 0 = rear). In conjunction with "show/save/restore orientation" this command allows reading and restoring specific user-specified orientations.</i ></p ></blockquote></td></tr> 
<tr name='tr_moveto'>
<td valign="top">
<a name="moveto_timeseconds" id="k685"> </a>moveto timeSeconds {x y z} degrees 0 transX transY (atom expression) 0 zoomAdjustment navigationCenter navTransX navTransY navDepth</td ></tr>
<tr name='tr_moveto'>
<td>
<blockquote>
<p >
<i >If the zoom setting prior to translation positions is 0, and an atom expression is used for the point, then the moveTo can be designed to automatically zoom to the scale that would fill the screen with that set of atoms. The optional zoom adjustment is in the form +n, -n, *n, or /n, as for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#zoomto">zoomTo</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_moveto'>
<td valign="top">
<a name="moveto_timeseconds" id="k686"> </a>moveto timeSeconds {x y z} degrees (atom expression) 0 zoomAdjustment navigationCenter navTransX navTransY navDepth</td ></tr>
<tr name='tr_moveto'>
<td>
<blockquote>
<p >
<i >If no translation is involved, then there is also no need for the zoom setting of 0 prior to the atom expression.</i ></p ></blockquote></td></tr> 
<tr name='tr_moveto'>
<td valign="top">
<a name="moveto_timeseconds" id="k687"> </a>moveto timeSeconds QUATERNION { quaternion }</td ></tr>
<tr name='tr_moveto'>
<td>
<blockquote>
<p >
<i >Reorients the model to the orientation specified by the quaternion given in {x y z w} format. </i ></p ></blockquote></td></tr> 
<tr name='tr_moveto'>
<td valign="top">
<a name="moveto_timeseconds" id="k689"> </a>moveto timeSeconds QUATERNION 
<a class='def' href='#d688' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_moveto'>
<td>
<blockquote>
<p >
<i >Reorients the model to the orientation specified by the quaternion specified by the atom expression and the current setting of 
<b>quaternionFrame</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_moveto'>
<td valign="top">
<a name="moveto_timeseconds" id="k690"> </a>moveto timeSeconds QUATERNION MOLECULAR { quaternion }</td ></tr>
<tr name='tr_moveto'>
<td>
<blockquote>
<p >
<i >Reorients the model to the orientation specified by a molecular frame quaternion, as, for example, retrieved by 
<b>q = quaternion({resno=30})</b> and then used in 
<b> moveto quaternion MOLECULAR @q</b>. Note that because this quaternion refers to the rotation required to transform the reference frame to the specified molecular frame, in order to "move to" this orientation, one must use its inverse (bring the molecular frame to the reference frame, 
<b>q_orientation = !q_molecular</b>). The keyword MOLECULAR simply applies this inversion. </i ></p ></blockquote></td></tr> 
<tr name='tr_moveto'>
<td valign="top">
<a name="moveto_stop" id="k693"> </a>moveto STOP</td ></tr>
<tr name='tr_moveto'>
<td>
<blockquote>
<p >
<i >Stops an asychronous moveto operation that has been started after setting 
<b>set waitForMoveTo FALSE</b>. </i ></p ></blockquote></td></tr> 
<tr name='tr_moveto'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_moveto'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('.moveto')">in new window using 1crn.pdb</td></tr>
<tr name='tr_moveto'>
<td>
<table cellpadding="10">
<tr>
<td class="example">moveto 0 1 0 0 -90; #view from top
<br />moveto 0 0 1 0 90; #view from right
<br />moveto 0 0 1 0 -90; #view from left
<br />moveto 2 1 0 0 90; #view from bottom with smooth 2-second transition
<br />moveto 0 0 0 0 0 200; #default orientation with instantaneous transition and a zoom of 200%</td></tr></table></td></tr>
<tr name='tr_moveto'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples/moveto.htm">moveto.htm</a> </td></tr>
<tr name='tr_moveto'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_moveto'>
<td colspan="5">
<p>
<a class="xref" href="#animation">animation</a> 
<a class="xref" href="#file">file</a> 
<a class="xref" href="#frame">frame</a> 
<a class="xref" href="#invertselected">invertSelected</a> 
<a class="xref" href="#move">move</a> 
<a class="xref" href="#navigate">navigate</a> 
<a class="xref" href="#rotate">rotate</a> 
<a class="xref" href="#rotateselected">rotateSelected</a> 
<a class="xref" href="#setmisc">set (misc)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#spin">spin</a> 
<a class="xref" href="#translate">translate</a> 
<a class="xref" href="#translateselected">translateSelected</a> 
<a class="xref" href="#zoom">zoom</a> 
<a class="xref" href="#zoomto">zoomto</a> </p></td></tr>
<tr name='tr_moveto'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k682">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_mutate'>
<td colspan="5">
<h3 class=h3newer>
<a id="mutate" name="mutate">mutate</a>
<a id="k694"> </a> 
<br />
<span class=newer>(v. 14.4)</span></h3></td></tr>
<tr name='tr_mutate'>
<td>
<i >The MUTATE command is used to replace one or more amino acids in a model by another. Amino acid structures may be indicated with their three-letter code, 
<b>mutate 33 LYS</b> (loaded as "==LYS", from RCSB), a standard one-letter sequence code, 
<b>K</b>, or as a filename in quotes 
<b>mutate 33 "==LYS"</b>. Jmol flexible fit using Jmol bioSMARTS (
<b>x = compare(res1,res0, "[*.N][*.CA][*.C][*.O]", "BONDS"); rotate branch @x 1</b>) is used to set the backbone dihedral angle. The same bioSMARTS sequence is then used to move atoms to their proper location (
<b>compare res1 res0 SMARTS "[*.N][*.CA][*.C][*.O]" rotate translate 0</b>), and necessary atoms are removed and bonds are made. No attempt is made to optimize the side-chain conformation, however using 
<b>set picking dragMinimize</b> one can quickly reorient the side-chain to a more appropriate conformation if desired. The mutated structure can be saved using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write PDB</a> option.
<br />
<br /></i ></td></tr>
<tr name='tr_mutate'>
<td valign="top">
<a name="mutate_33" id="k696"> </a>
<span class=newer>mutate 33 LYS [
<b>Jmol 14.3.13</b>]</span></td ></tr>
<tr name='tr_mutate'>
<td>
<blockquote>
<p >
<i >
<span class=newer>An integer indicates a residue number; the last present in the model will be used if there are multiple matches; Jmol will only match and mutate one residue at a time.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_mutate'>
<td valign="top">
<a name="mutate_ala34" id="k697"> </a>
<span class=newer>mutate ALA34 ~G [
<b>Jmol 14.3.13</b>]</span></td ></tr>
<tr name='tr_mutate'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Change all ALA34 residues (in the last model) to glycine. </span></i ></p ></blockquote></td></tr> 
<tr name='tr_mutate'>
<td valign="top">
<a name="mutate_~g" id="k698"> </a>
<span class=newer>mutate {ALA.CA}[2] ~G [
<b>Jmol 14.3.13</b>]</span></td ></tr>
<tr name='tr_mutate'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Change only the second ALA residue to glycine. Note the use of ".CA" to create a list of residues, then [2] to select the second of those.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_mutate'>
<td valign="top">
<a name="mutate_~gal" id="k699"> </a>
<span class=newer>mutate {1-3} ~GAL [
<b>Jmol 14.3.13</b>]</span></td ></tr>
<tr name='tr_mutate'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Change the first three residues to GLY-ALA-LEU. The single-character prefix ~ is only required when there are three residues and they spell the three-letter code for an amino acid. For example, LYS is lysine, but ~LYS is LEU-TYR-SER.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_mutate'>
<td valign="top">
<a name="mutate_~g_l" id="k700"> </a>
<span class=newer>mutate {1-3} ~G_L [
<b>Jmol 14.3.13</b>]</span></td ></tr>
<tr name='tr_mutate'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Change the first residue to GLY and the third residues to LEU, making no change at the second.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_mutate'>
<td valign="top">
<a name="mutate_ala34" id="k701"> </a>
<span class=newer>mutate ALA34 myfile.pdb [
<b>Jmol 14.3.13</b>]</span></td ></tr>
<tr name='tr_mutate'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Change ALA34 to the amino acid to be found in myfile.pdb.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_mutate'>
<td valign="top">
<a name="mutate_@3" id="k702"> </a>
<span class=newer>mutate @3 @res [
<b>Jmol 14.3.13</b>]</span></td ></tr>
<tr name='tr_mutate'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Variables can be used to designate residues associated with specific atoms or filenames. In this case, the residue containing atom 3 is to be replaced. The variable 
<b>res</b> should be the name of a file, a designation of the path to a PDB ligand (==lys), or a 1-letter sequence starting with ~ such as 
<b>~AGV</b>.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_mutate'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k695">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_navigate'>
<td colspan="5">
<h3 >
<a id="navigate" name="navigate">navigate or navigation</a>
<a id="k703"> </a></h3></td></tr>
<tr name='tr_navigate'>
<td>
<i >The 
<b>navigate</b> command allows exploring of the model from the perspective of an airplane capable of flying through the model. In each case, an optional time in seconds determines the time to reach the objective. If no time is given, the change occurs over two seconds. (In the case of PATH, this is the time to each point along the path, not the total path.) Subcommands can be grouped in the same command by separating them with "/", for example: 
<b>navigate 2 DEPTH 30 / 5 ROTATE 180 / DEPTH 20 / TRANSLATE X 10</b>.
<br />
<br /></i ></td></tr>
<tr name='tr_navigate'>
<td valign="top">
<a name="navigate_timeseconds" id="k705"> </a>navigate timeSeconds CENTER {x y z}</td ></tr>
<tr name='tr_navigate'>
<td>
<blockquote>
<p >
<i >Bring the observer to the specifed molecular coordinate, which may be fractional in the case of crystal structures.</i ></p ></blockquote></td></tr> 
<tr name='tr_navigate'>
<td valign="top">
<a name="navigate_timeseconds" id="k707"> </a>navigate timeSeconds CENTER 
<a class='def' href='#d706' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_navigate'>
<td>
<blockquote>
<p >
<i >Bring the observer to the geometric center of the set of atoms specified in parentheses.</i ></p ></blockquote></td></tr> 
<tr name='tr_navigate'>
<td valign="top">
<a name="navigate_timeseconds" id="k708"> </a>navigate timeSeconds CENTER $object</td ></tr>
<tr name='tr_navigate'>
<td>
<blockquote>
<p >
<i >Bring the observer to the geometric center of the points corresponding to the indicated 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw"> object.</a></i ></p ></blockquote></td></tr> 
<tr name='tr_navigate'>
<td valign="top">
<a name="navigate_timeseconds" id="k709"> </a>navigate timeSeconds DEPTH percent</td ></tr>
<tr name='tr_navigate'>
<td>
<blockquote>
<p >
<i >Bring the observer forward or backward to the depth indicated as a percent from back (0) to front (100) of the model. Values can be negative, in which case until a rotate command is given, only screen background will be seen. Values greater than 100 put the observer outside the model. </i ></p ></blockquote></td></tr> 
<tr name='tr_navigate'>
<td valign="top">
<a name="navigate_timeseconds" id="k710"> </a>navigate timeSeconds PATH $object</td ></tr>
<tr name='tr_navigate'>
<td>
<blockquote>
<p >
<i >Follows the Hermite path given by the specified 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a> object (such as a line, curve, or arrow). This allows easy dynamic development of paths using a predefined draw object followed by 
<b>set picking draw</b> and 
<b>show draw</b>. </i ></p ></blockquote></td></tr> 
<tr name='tr_navigate'>
<td valign="top">
<a name="navigate_timeseconds" id="k711"> </a>navigate timeSeconds PATH (any combination of coordinates, atom expressions, and objects)</td ></tr>
<tr name='tr_navigate'>
<td>
<blockquote>
<p >
<i >Follows a Hermite path defined by a set of nodes expressed in terms of any combination of atom sets, draw objects, or coordinates.</i ></p ></blockquote></td></tr> 
<tr name='tr_navigate'>
<td valign="top">
<a name="navigate_timeseconds" id="k712"> </a>navigate timeSeconds ROTATE X degrees</td ></tr>
<tr name='tr_navigate'>
<td>
<blockquote>
<p >
<i >Rotates around the X axis at the navigation center.</i ></p ></blockquote></td></tr> 
<tr name='tr_navigate'>
<td valign="top">
<a name="navigate_timeseconds" id="k713"> </a>navigate timeSeconds ROTATE Y degrees</td ></tr>
<tr name='tr_navigate'>
<td>
<blockquote>
<p >
<i >Rotates around the Y axis at the navigation center.</i ></p ></blockquote></td></tr> 
<tr name='tr_navigate'>
<td valign="top">
<a name="navigate_timeseconds" id="k714"> </a>navigate timeSeconds ROTATE Z degrees</td ></tr>
<tr name='tr_navigate'>
<td>
<blockquote>
<p >
<i >Rotates around the Z axis at the navigation center.</i ></p ></blockquote></td></tr> 
<tr name='tr_navigate'>
<td valign="top">
<a name="navigate_timeseconds" id="k715"> </a>navigate timeSeconds TRACE 
<a class='def' href='#d706' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_navigate'>
<td>
<blockquote>
<p >
<i >Navigates along the trace of a protein or nucleic acid. The "ride" can be changed depending upon the settings of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setstructure">set sheetsmoothing</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setstructure">set tracealpha</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_navigate'>
<td valign="top">
<a name="navigate_timeseconds" id="k716"> </a>navigate timeSeconds TRANSLATE x.xx y.yy</td ></tr>
<tr name='tr_navigate'>
<td>
<blockquote>
<p >
<i >Translates the navigation screen offset to the specified positions expressed as percent of width (X) and height (Y) of the applet/application window.</i ></p ></blockquote></td></tr> 
<tr name='tr_navigate'>
<td valign="top">
<a name="navigate_timeseconds" id="k717"> </a>navigate timeSeconds TRANSLATE X x.xx</td ></tr>
<tr name='tr_navigate'>
<td>
<blockquote>
<p >
<i >Translates the navigation screen offset horizontally by the specified percent of applet/application window width.</i ></p ></blockquote></td></tr> 
<tr name='tr_navigate'>
<td valign="top">
<a name="navigate_timeseconds" id="k718"> </a>navigate timeSeconds TRANSLATE Y y.yy</td ></tr>
<tr name='tr_navigate'>
<td>
<blockquote>
<p >
<i >Translates the navigation screen offset vertically by the specified percent of applet/application window height.</i ></p ></blockquote></td></tr> 
<tr name='tr_navigate'>
<td valign="top">
<a name="navigate_timeseconds" id="k719"> </a>navigate timeSeconds TRANSLATE {x y z}</td ></tr>
<tr name='tr_navigate'>
<td>
<blockquote>
<p >
<i >Translates the navigation screen offset to the screen position corresponding to the given molecular coordinate.</i ></p ></blockquote></td></tr> 
<tr name='tr_navigate'>
<td valign="top">
<a name="navigate_timeseconds" id="k720"> </a>navigate timeSeconds TRANSLATE 
<a class='def' href='#d706' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_navigate'>
<td>
<blockquote>
<p >
<i >Translates the navigation screen offset to the screen position corresponding to the geometric center of the specified atoms.</i ></p ></blockquote></td></tr> 
<tr name='tr_navigate'>
<td valign="top">
<a name="navigate_timeseconds" id="k721"> </a>navigate timeSeconds TRANSLATE $object</td ></tr>
<tr name='tr_navigate'>
<td>
<blockquote>
<p >
<i >Translates the navigation screen offset to the screen position corresponding to the center of the vertices of the specified draw object.</i ></p ></blockquote></td></tr> 
<tr name='tr_navigate'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_navigate'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_navigate'>
<td colspan="5">
<p>
<a class="xref" href="#moveto">moveto</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#zoomto">zoomto</a> </p></td></tr>
<tr name='tr_navigate'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k704">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_nbo'>
<td colspan="5">
<h3 class=h3newer>
<a id="nbo" name="nbo">nbo</a>
<a id="k722"> </a> 
<br />
<span class=newer>(v. 14.4)</span></h3></td></tr>
<tr name='tr_nbo'>
<td>
<i >The 
<b>NBO</b> (Natural Bond Order) command is an experimental command. It is a varient of the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#mo">MO</a> command. The two commands are the same, but for a few additional capabilities specific to NBO. The NBO command allows a TYPE keyword. Specifying the orbital type -- one of AO, PNAO, NAO, PNHO, NHO, PNBO, NBO, PNLMO, NLMO or MO -- results in immediate loading of the corresponding ""plot"" file xxx.32-xxx.41 if present. This is generally done after a .47 archive file has been loaded, but any of the other files loading will trigger the loading of the .47 file. (In this case in Jmol file extensions are significant and are used.) 
<br />
<br /></i ></td></tr> 
<tr name='tr_nbo'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_nbo'>
<td colspan="5">
<p>
<a class="xref" href="#setmisc">set (misc)</a> </p></td></tr>
<tr name='tr_nbo'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k723">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_parallel/process'>
<td colspan="5">
<h3 >
<a id="parallel/process" name="parallel/process">parallel/process</a>
<a id="k724"> </a></h3></td></tr>
<tr name='tr_parallel/process'>
<td>
<i >Jmol is able to use multiple processors on a multiple-CPU machine. Basically what you can do is to tell Jmol which statements in a script you want to run in parallel, and it will do that. The way this is done is to create a function using the keyword 
<b>PARALLEL</b> in place of the keyword 
<b>function</b>. Within that block of code, any group of commands surrounded by 
<b>PROCESS{ }</b> will be collected and run in parallel just before Jmol returns from the function. Any commands NOT within these sets will be run BEFORE any 
<b>PROCESS</b> commands. For example:
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >parallel twoIsosurfaces(model1, model2) {
<br>  var x = 1
<br>  process {
<br>   isosurface s1 model @model1 molecular; color isosurface red
<br> }
<br>  process { 
<br>   isosurface s2 model @model2 molecular; color isosurface green }
<br>  x = 2
<br>}
<br>  
<br>load files "1crn.pdb" "1blu.pdb"
<br>twoIsosurfaces("1.1", "2.1")
<br>frame *</td ></tr ></table >In this case, the variable x will be 2 BEFORE the isosurfaces are created. See also 
<a class="xref" href="examples-11/data/multi-mo.txt" target="_blank">multi-mo.txt</a> and 
<a class="xref" href="examples-11/data/multi-surface.txt" target="_blank">multi-surface.txt</a>, and 
<a class="xref" href="examples-11/data/multiProcessTest.txt" target="_blank">multiProcessTest.txt</a>. You can selectively turn on and off the use of multiprocessors using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_multiprocessor">set multiProcessor</a>. If this setting cannot be set true, then it means you do not have a multiprocessor machine. Not all processes will work; currently the only implemented parallel processes are for isosurfaces and molecular orbitals. The parallel capability of Jmol should be considered experimental at this time.
<br />
<br /></i ></td></tr> 
<tr name='tr_parallel/process'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k725">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_pause'>
<td colspan="5">
<h3 >
<a id="pause" name="pause">pause or wait</a>
<a id="k726"> </a></h3></td></tr>
<tr name='tr_pause'>
<td>
<i >Note: 
<b>PAUSE</b> and 
<b>RESUME</b> are deprecated. see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#throw">throw</a>. Pauses script execution until 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#resume">resume</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#step">step</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#quit">quit</a>, or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#exit">exit</a> is issued. Any text on the command line after 
<b>pause</b> is send to the user as a message when the script pauses. During the paused condition, commands can be entered from the Jmol application console, and they will be executed. The next command to be executed can also be checked by issuing 
<b>?</b> from the console.
<br />
<br /></i ></td></tr>
<tr name='tr_pause'>
<td valign="top">
<a name="pause_message" id="k728"> </a>pause message</td ></tr> 
<tr name='tr_pause'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_pause'>
<td colspan="5">
<p>
<a class="xref" href="#immediate!">[immediate (!)]</a> 
<a class="xref" href="#delay">delay</a> 
<a class="xref" href="#exit">exit</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#loop">loop</a> 
<a class="xref" href="#quit">quit</a> 
<a class="xref" href="#resume">resume</a> 
<a class="xref" href="#step">step</a> </p></td></tr>
<tr name='tr_pause'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k727">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_plot'>
<td colspan="5">
<h3 >
<a id="plot" name="plot">plot</a>
<a id="k729"> </a></h3></td></tr>
<tr name='tr_plot'>
<td>
<i >Jmol can create a variety of Ramachandran plots and quaternion maps. In addition, Jmol has the capability to quickly generate simple plots relating two or three atom properties. A new frame is created. In the case of property and Ramachandran plots, this frame has its own independent orientation; in the case of quaternion maps, rotation of the map is synchronized with rotation of the model. Only one data frame may be visible at a time. Also related to this command for quaternions and Ramachandran plots is the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a> command, which allows depicting of these measures on the model itself. 
<br />
<br /></i ></td></tr>
<tr name='tr_plot'>
<td valign="top">
<a name="plot_properties" id="k736"> </a>plot PROPERTIES property1 property2</td ></tr>
<tr name='tr_plot'>
<td>
<blockquote>
<p >
<i >Creates a 2D plot relating two atom properties for the currently selected atom set. For example: 
<b>select *;plot properties atomno temperature</b>. Additional optional parameters MIN {x y z} and MAX {x y z} may follow. Setting these values sets the scale of the graph within Jmol and truncates data values outside of this range. (The z value in this case is ignored.)</i ></p ></blockquote></td></tr> 
<tr name='tr_plot'>
<td valign="top">
<a name="plot_properties" id="k737"> </a>plot PROPERTIES property1 property2 property3</td ></tr>
<tr name='tr_plot'>
<td>
<blockquote>
<p >
<i >Creates a 3D plot relating two atom properties for the currently selected atom set. For example: 
<b>select *.CA;plot properties phi psi resno</b>. Additional optional parameters MIN {x y z} and MAX {x y z} may follow. Setting these values sets the scale of the graph within Jmol and truncates data values outside of this range.</i ></p ></blockquote></td></tr> 
<tr name='tr_plot'>
<td valign="top">
<a name="plot_quaternion" id="k731"> </a>plot QUATERNION w, x, y, or z</td ></tr>
<tr name='tr_plot'>
<td>
<blockquote>
<p >
<i >Creates the quaternion representation of the protein or nucleic acid in the three dimensions 
<i>not</i> given by the specified axis.</i ></p ></blockquote></td></tr> 
<tr name='tr_plot'>
<td valign="top">
<a name="plot_quaternion" id="k732"> </a>plot QUATERNION a,r DIFFERENCE</td ></tr>
<tr name='tr_plot'>
<td>
<blockquote>
<p >
<i >Creates the quaternion difference representation of the protein or nucleic acid in "w" projection. "a", for 
<i>absolute</i>, produces a visualization of q[i] / q[i-1], which defines the helical axis of a helix or beta-pleated sheet; "r", for 
<i>relative</i>, produces a visualization of q[i-1] \ q[i], which defines the relative rotation of the (i)th residue from the perspective of the (i-1)th residue, defining the pitch of the helix. The default visualization for "r difference" (utilizing 
<b>set quaternionFrame "c"</b>) for a typical protein is an ellipse having a major axis tilted at 36 degress from the quaternion X axis and minor axis along the quaternion Z axis. This ellipse represents a composite rotation from one amino acid to the next involving a rotation about the q[i] frame Z axis (perpendicular to the N-CA-C plane) of approximately 180 - 110 degrees ((180-110)/2 = 36 degrees), followed by a rotation about the q[i] frame X axis (CA-C bond) of 180 + psi[i-1] + phi[i] degrees.</i ></p ></blockquote></td></tr> 
<tr name='tr_plot'>
<td valign="top">
<a name="plot_quaternion" id="k733"> </a>plot QUATERNION a,r DIFFERENCE2</td ></tr>
<tr name='tr_plot'>
<td>
<blockquote>
<p >
<i >Creates a visualization of dq[i+1] / dq[i], where 
<b>dq</b> is defined as q[i+1] / q[i] for "a" or q[i] \ q[i+1] for "r". In the case of "r difference2", for most amino acids this is a point relatively close to the quaternion x axis. </i ></p ></blockquote></td></tr> 
<tr name='tr_plot'>
<td valign="top">
<a name="plot_ramachandran" id="k734"> </a>plot RAMACHANDRAN</td ></tr>
<tr name='tr_plot'>
<td>
<blockquote>
<p >
<i >Creates a Ramachandran plot for a the currently displayed protein model. Values of PHI and PSI are available directly from the points involved using, for example, 
<b>averageHelixPsi = {2.1 and helix}.psi</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_plot'>
<td valign="top">
<a name="plot_ramachandran" id="k735"> </a>plot RAMACHANDRAN r</td ></tr>
<tr name='tr_plot'>
<td>
<blockquote>
<p >
<i >Creates a "relative" Ramachandran plot for a the currently displayed protein model with the third axis being theta, a measure of "straightness" as calculated using a Ramachandran angle approximation: straightness[i] = 1-acos(abs(cos(theta[i] / 2)))/90, where i refers to a residue and theta is the angle associated with the relative quaternion second derivative dq[i]\dq[i-1]. Theta can be approximated using Ramachandran angles for "C" straightness simply as theta =approx= psi[i] - psi[i-1] + phi[i+1] - phi[i] (Hanson and Kohler, unpublished results) and for "P" straightness as follows: If deltaPhi = phi[i+1] - phi[i], deltaPsi = psi[i+1] - psi[i], and alpha = 70
<sup>o</sup>, then cos(theta/2) =approx= cos(deltaPsi/2)cos(deltaPhi/2) - sin(alpha)sin(deltaPsi/2)sin(deltaPhi/2). (Hanson and Braun, unpublished results.) Residues close to the phi-psi plane have low values of theta and thus high values of straightness, meaning they are in a region of relatively high structural regularity --- usually helices or sheets.</i ></p ></blockquote></td></tr> 
<tr name='tr_plot'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_plot'>
<td colspan="5">
<p>
<a class="xref" href="#cgo">cgo</a> 
<a class="xref" href="#quaternion">quaternion</a> 
<a class="xref" href="#ramachandran">ramachandran</a> 
<a class="xref" href="#setmisc">set (misc)</a> </p></td></tr>
<tr name='tr_plot'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k730">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_pmesh'>
<td colspan="5">
<h3 >
<a id="pmesh" name="pmesh">pmesh</a>
<a id="k738"> </a></h3></td></tr>
<tr name='tr_pmesh'>
<td>
<i >The pmesh command is deprecated. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface</a> for information about the pmesh file format options.
<br />
<br /></i ></td></tr> 
<tr name='tr_pmesh'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_pmesh'>
<td colspan="5">
<p>
<a class="xref" href="#planeexpressions">[plane expressions]</a> 
<a class="xref" href="#isosurface">isosurface</a> 
<a class="xref" href="#lcaocartoon">lcaoCartoon</a> 
<a class="xref" href="#mo">mo</a> </p></td></tr>
<tr name='tr_pmesh'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k739">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_polyhedra'>
<td colspan="5">
<h3 class=h3newer>
<a id="polyhedra" name="polyhedra">polyhedra</a>
<a id="k740"> </a></h3>   
<a class="textParam" href="#polyhedrapolyhedronconstruction">Polyhedron construction</a>
<br />   
<a class="textParam" href="#polyhedrapolyhedraandsymmetry">Polyhedra and symmetry</a>
<br />   
<a class="textParam" href="#polyhedrabasis">[basis]</a>
<br />   
<a class="textParam" href="#polyhedraselectionsets">[selection sets]</a>
<br />   
<a class="textParam" href="#polyhedradisplayoptions">[display options]</a>
<br />   
<a class="textParam" href="#polyhedrapolyhedronmodification">Polyhedron modification</a>
<br />
<br /></td></tr>
<tr name='tr_polyhedra'>
<td>
<i >Jmol will form a wide variety of polyhedral structures. The 
<b>polyhedra</b> command can be used for either construction of new polyhedra or modification of existing polyhedra. Starting with Jmol 14.4, you can create polyhedra for crystal structures for which symmetry has not been applied or necessary atoms have not been loaded (the UNITCELL option). All that is necesary is the central atom. In addition, you can get information about a polyhedron using 
<b>getProperty("shapeInfo.polyhedra[1]")</b>.
<br>
<br>Finally, you can select polyhedra and use the polyhedra() or polyhedra(n) functions to get the atom centers of all or selected polyhedra.
<br />
<br />
<b>
<a name="polyhedrapolyhedronconstruction">Polyhedron construction</a></b>    
<a href="#polyhedra">back</a>
<br />
<br /> Used for construction of new polyhedra, parameters fall into five subsets:
<br>
<br>
<b>polyhedra [basis] [selection sets] [display options]</b>. 
<br />
<br />
<b>
<a name="polyhedrapolyhedraandsymmetry">Polyhedra and symmetry</a></b>    
<a href="#polyhedra">back</a>
<br />
<br /> Starting with Jmol 14.4, polyhedra in crystal structures can be created where only the central atom may be loaded. (Answering, for example, the question: What is the atom environment around Au3 in this crystal structure?)
<br>
<b>
<br>load t.cif // no symmetry applied just the unit cell, maybe just one atom
<br>polyhedra 4-12 UNITECELL @1
<br>
<br></b>In addition, Jmol can calculate, show, and draw the point group of a polyhedron:
<br>
<b>
<br>load t.cif 
<br>polyhedron 12 unitcell @1
<br> select @1
<br> show pointgroup POLYHEDRON
<br> draw pointgroup POLYHEDRON
<br></b>
<br>You can also draw points from the derived array using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">DRAW POINTS</a> option along with getProperty():
<br>
<b>
<br> draw diameter 0.2 POINTS @{getProperty("shapeInfo.polyhedra[1].vertices")}
<br>
<br></b>
<br />
<br />
<b>
<a name="polyhedrabasis">[basis]</a></b>    
<a href="#polyhedra">back</a>
<br />
<br /> Polyhedra involve a central atom and 3 or more outer "vertex" atoms. Polyhedra can be formed based either upon the number of atoms bonded to the central atom (
<b>polyhedra 4 BONDS</b>) or upon the number of atoms within a specified range of distance from the central atom (
<b>polyhedra RADIUS 1.5 2.0</b>), or a combination of these (
<b>polyhedra 4,5,6 BONDS RADIUS 1.5 2.0</b>). Multiple possibilities for bonds can be indicated using commas (
<b>polyhedra 4,6,8</b>) or with a hyphen (
<b>polyhedra 4-20</b>) (Jmol 14.4). If only one number is given with RADIUS, then it is considered a maximum distance. One or the other, number of vertices or radius range, must be indicated. If both BONDS and RADIUS are specified, then polyhedra of the given type(s) are constructed only to the specified set of connected atoms that are within the specified range of radius of the central atom. Finally, the keywords BONDS and RANGE may be omitted provided bonds are indicated as integers and distances are indicated as decimal numbers.
<br />
<br />
<b>
<a name="polyhedraselectionsets">[selection sets]</a></b>    
<a href="#polyhedra">back</a>
<br />
<br /> Potential polyhedra centers and vertex atoms are specified in the form of a standard Jmol embedded 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions">atom expression</a>, such as 
<b>{titanium}</b> or 
<b>{atomno&lt;12 and not nitrogen}</b> and as such must be specified in parentheses. The first set specifies the centers; the second set specifies the vertex atoms. The optional keyword TO can preceed the vertex set for clarity, as in 
<b>polyhedra 4,6 BONDS {titanium} TO {oxygen or nitrogen}</b>. If no atom sets are designated, the assumption is "{selected} TO {*}". A single designation indicates centers, with "TO {*}" implied. If only TO and an atom set is specified, then the centers are taken as the currently selected set of atoms.
<br />
<br />
<b>
<a name="polyhedradisplayoptions">[display options]</a></b>    
<a href="#polyhedra">back</a>
<br />
<br /> Three sets of display options can be included when constructing polyhedra.
<ul>
<li>Polyhedra can be displayed either as traditional "FLAT" faces (the default) or as "COLLAPSED" faces, which display more clearly the central atom. An empirically adjustable parameter, 
<b>distanceFactor</b> can be set to a higher value to include more faces in a polyhedron if some do not form. Its default value is 1.85. For collapsed polyhedra, the distance in angstroms from the central atom to the point of collapse can be specified using 
<b>faceCenterOffset=x.x</b> where x.x is a distance in Angstroms. </li>
<li>Polyhedra can be displayed either with no edges (NOEDGES, the default), or with a thick line on all edges (EDGES), or on just the front edges (FRONTEDGES). The front-edge-only option is only meaninful when the polyhedra are translucent (see below). </li>
<li>Polyhedra can be colored by indicating a valid color (e.g. 
<b>red</b> or 
<b>yellow</b>) or a hexadecimal RGB color triple (e.g. [xFF0000] or [xFFFF00]). The keywords TRANSLUCENT and OPAQUE can also be used. Alternatively, after polyhedra are created they can be colored using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#colormodelobject">color polyhedra</a> command.</li></ul>
<br />
<br />
<b>
<a name="polyhedrapolyhedronmodification">Polyhedron modification</a></b>    
<a href="#polyhedra">back</a>
<br />
<br /> The 
<b>polyhedra</b> command can also be used to modify already-constructed polyhedra. Used in this way, the command can take only one atom set expression, and it must not indicate the number of vertices or the basis. If the atom set expression is omitted, "(selected)" is assumed. 
<br>
<br>To turn on, turn off, or delete selected polyhedra, use 
<b>polyhedra ON</b>, 
<b>polyhedra OFF</b>, or 
<b>polyhedra DELETE</b>, respectively. Any of the display options (FLAT, COLLAPSED, EDGES, FRONTEDGES, or NOEDGES) can also be similarly modified. Colors or translucency, however, cannot be applied this way. To color a set of polyhedra that are already formed or to make them translucent, first select the set of centers of the polyhedra to modify, then use the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#colormodelobject">color polyhedra</a> command.
<br />
<br /></i ></td></tr>
<tr name='tr_polyhedra'>
<td valign="top">
<a name="polyhedra_only" id="k742"> </a>
<span class=newer>polyhedra ONLY [
<b>Jmol 14.3.15</b>]</span></td ></tr>
<tr name='tr_polyhedra'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Removes all renderings except polyhedra.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_polyhedra'>
<td valign="top">
<a name="polyhedra_{{vertices}}" id="k743"> </a>polyhedra {centers} {vertices}</td ></tr>
<tr name='tr_polyhedra'>
<td>
<blockquote>
<p >
<i >Create all polyhedra at the specified centers to vertices that at in the specified set and also bonded to a specific center.</i ></p ></blockquote></td></tr> 
<tr name='tr_polyhedra'>
<td valign="top">
<a name="polyhedra_to" id="k744"> </a>polyhedra {center} TO {vertices}</td ></tr>
<tr name='tr_polyhedra'>
<td>
<blockquote>
<p >
<i >Create one polyhedron with the specified center to the specified atoms. If more than one atom is in {center}, only the first atom will be used.</i ></p ></blockquote></td></tr> 
<tr name='tr_polyhedra'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('polyhedra1')">in new window using caffeine.xyz</td></tr>
<tr name='tr_polyhedra'>
<td>
<table cellpadding="10">
<tr>
<td class="example">select *;polyhedra {*} DELETE;polyhedra 4 BONDS; color polyhedra grey
<br />select atomno=19;polyhedra (*) DELETE;polyhedra 4 RADIUS 2.0 ;color polyhedra yellow
<br />polyhedra {*} DELETE;polyhedra 4 RADIUS 2.0 {*} COLLAPSED #all three
<br />polyhedra {*} DELETE;polyhedra 4 RADIUS 2.0 {*} TO {not within (1.1225, carbon)} #note how this disallows one of the three
<br />select *;color polyhedra translucent; # now we can see the carbons inside
<br />polyhedra {*} EDGES; # highlight the edges
<br />select *; color polyhedra translucent orange;
<br />polyhedra {*} OFF;
<br />polyhedra {*} ON;
<br />polyhedra {*} DELETE;</td></tr></table></td></tr>
<tr name='tr_polyhedra'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('polyhedra2')">in new window using kaolin.mol</td></tr>
<tr name='tr_polyhedra'>
<td>
<table cellpadding="10">
<tr>
<td class="example"># build tetrahedrons around silicon
<br />polyhedra BONDS {silicon}
<br /># make some of them green
<br />select atomno&lt;50; color polyhedra translucent green
<br /> 
<br /># delete some of them
<br />polyhedra {atomno>75 and atomno&lt;100} DELETE
<br /># now build octahedrons where oxygens are within 2.0 Angstroms of a central aluminum atoms
<br />polyhedra RADIUS 2.0 {aluminum} FRONTEDGES
<br />select aluminum and atomno > 75; color polyhedra red</td></tr></table></td></tr>
<tr name='tr_polyhedra'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples-11/poly.htm">examples-11/poly.htm</a> </td></tr>
<tr name='tr_polyhedra'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_polyhedra'>
<td colspan="5">
<p>
<a class="xref" href="#planeexpressions">[plane expressions]</a> 
<a class="xref" href="#isosurface">isosurface</a> 
<a class="xref" href="#lcaocartoon">lcaoCartoon</a> 
<a class="xref" href="#mo">mo</a> 
<a class="xref" href="#pmesh">pmesh</a> </p></td></tr>
<tr name='tr_polyhedra'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k741">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_print'>
<td colspan="5">
<h3 >
<a id="print" name="print">PRINT</a>
<a id="k745"> </a></h3>
<div class="chimenote">
<i>Note:</i> The PRINT command does not require @{ ... } around Jmol math expressions.
<br />
<br /></div></td></tr>
<tr name='tr_print'>
<td>
<i >Prints a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#jmolmath">Jmol math</a> expression to the console window, status message callback function, and Jmol.scriptWait return value. By itself, 
<b>print</b> clears the JavaScript and Jmol consoles.
<br />
<br /></i ></td></tr> 
<tr name='tr_print'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k746">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_prompt'>
<td colspan="5">
<h3 >
<a id="prompt" name="prompt">PROMPT</a>
<a id="k747"> </a></h3>
<div class="chimenote">
<i>Note:</i> The PROMPT command does not require @{ ... } around Jmol math expressions.
<br />
<br /></div></td></tr>
<tr name='tr_prompt'>
<td>
<i >The 
<b>prompt</b> command pauses a script until the user presses OK or ESCAPE. See also the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#functionsx=fyfunctions">prompt()</a> function.
<br />
<br /></i ></td></tr>
<tr name='tr_prompt'>
<td valign="top">
<a name="prompt_" id="k749"> </a>prompt</td ></tr>
<tr name='tr_prompt'>
<td>
<blockquote>
<p >
<i >If no parameter is given, displays a trace of the script stack leading to this command. This may be useful for debugging script files. </i ></p ></blockquote></td></tr> 
<tr name='tr_prompt'>
<td valign="top">
<a name="prompt_"message"" id="k750"> </a>prompt "message"</td ></tr>
<tr name='tr_prompt'>
<td>
<blockquote>
<p >
<i >Displays the message and waits for the user to press OK.</i ></p ></blockquote></td></tr> 
<tr name='tr_prompt'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k748">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_quaternion'>
<td colspan="5">
<h3 >
<a id="quaternion" name="quaternion">quaternion or quaternions</a>
<a id="k751"> </a></h3></td></tr>
<tr name='tr_quaternion'>
<td>
<i >This command has been superceded by the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#plot">plot QUATERNION</a> command.
<br />
<br /></i ></td></tr> 
<tr name='tr_quaternion'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_quaternion'>
<td colspan="5">
<p>
<a class="xref" href="#plot">plot</a> 
<a class="xref" href="#ramachandran">ramachandran</a> </p></td></tr>
<tr name='tr_quaternion'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k752">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_quit'>
<td colspan="5">
<h3 >
<a id="quit" name="quit">quit</a>
<a id="k753"> </a></h3></td></tr>
<tr name='tr_quit'>
<td>
<i >When the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_scriptqueue">set scriptQueue</a> is turned on, each script waits for the previous to complete. When a LOOP command is involved and the script queue is enabled, the only way to interrupt the looping script is with another script. So, to account for this issue, the roles of 
<b>quit</b> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#exit">exit</a> have been expanded. Either 
<b>quit</b> or 
<b>exit</b> at the very beginning of a script command halts any previous still-running script. Processing then continues with the second command on the line. Anywhere else in the command, 
<b>quit</b> and 
<b>exit</b> abort that script.
<br />
<br /></i ></td></tr> 
<tr name='tr_quit'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_quit'>
<td colspan="5">
<p>
<a class="xref" href="#immediate!">[immediate (!)]</a> 
<a class="xref" href="#delay">delay</a> 
<a class="xref" href="#exit">exit</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#loop">loop</a> 
<a class="xref" href="#pause">pause</a> 
<a class="xref" href="#resume">resume</a> 
<a class="xref" href="#setfilesandscripts">set (files and scripts)</a> 
<a class="xref" href="#step">step</a> </p></td></tr>
<tr name='tr_quit'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k754">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_ramachandran'>
<td colspan="5">
<h3 >
<a id="ramachandran" name="ramachandran">ramachandran or rama</a>
<a id="k755"> </a></h3></td></tr>
<tr name='tr_ramachandran'>
<td>
<i >This command has been superceded by the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#plot">plot RAMACHANDRAN</a> command.
<br />
<br /></i ></td></tr> 
<tr name='tr_ramachandran'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_ramachandran'>
<td colspan="5">
<p>
<a class="xref" href="#plot">plot</a> 
<a class="xref" href="#quaternion">quaternion</a> </p></td></tr>
<tr name='tr_ramachandran'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k756">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_redo'>
<td colspan="5">
<h3 >
<a id="redo" name="redo">redo</a>
<a id="k757"> </a></h3></td></tr>
<tr name='tr_redo'>
<td>
<i >(application only) same as the Redo console button -- reloads the last undone state.
<br />
<br /></i ></td></tr> 
<tr name='tr_redo'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k758">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_redomove'>
<td colspan="5">
<h3 >
<a id="redomove" name="redomove">redoMove</a>
<a id="k759"> </a></h3></td></tr>
<tr name='tr_redomove'>
<td>
<i >same as CTRL-SHIFT-Z/CTRL-Y -- redoes changes to atom position when in modelKit mode.
<br />
<br /></i ></td></tr> 
<tr name='tr_redomove'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k760">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_refresh'>
<td colspan="5">
<h3 >
<a id="refresh" name="refresh">refresh</a>
<a id="k761"> </a></h3></td></tr>
<tr name='tr_refresh'>
<td>
<i > Forces a screen repaint during script execution. Usually unnecessary, this command is useful during selected looping operations or in conjunction with such commands as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#javascript">javascript</a> that otherwise might not initiate a screen repaint. Refreshing is automatically carried out after a script completes unless 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_refreshing">set refreshing FALSE</a> has been invoked. Commands that automatically invoke refresh include 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#delay">delay</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#move">move</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#moveto">moveto</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#navigate">navigate</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#zap">zap</a>. 
<br />
<br /></i ></td></tr> 
<tr name='tr_refresh'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_refresh'>
<td colspan="5">
<p>
<a class="xref" href="#define">define</a> 
<a class="xref" href="#initialize">initialize</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#restore">restore</a> 
<a class="xref" href="#save">save</a> 
<a class="xref" href="#unset">unset</a> 
<a class="xref" href="#zap">zap</a> </p></td></tr>
<tr name='tr_refresh'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k762">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_reset'>
<td colspan="5">
<h3 class=h3newer>
<a id="reset" name="reset">reset</a>
<a id="k763"> </a> 
<br />
<span class=newer>(v. 11.2 -- adds variable reset)</span></h3></td></tr>
<tr name='tr_reset'>
<td>
<i >Resets all model orientation or the value of a variable
<br />
<br /></i ></td></tr>
<tr name='tr_reset'>
<td valign="top">
<a name="reset_" id="k765"> </a>reset</td ></tr>
<tr name='tr_reset'>
<td>
<blockquote>
<p >
<i >Resets all models to their original position: zoom 100; center; translate x 0; translate y 0. Spinning is not affected (see RESET SPIN, below). Note that if the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#invertselected">invertSelected</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#rotateselected">rotateSelected</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#translateselected">translateSelected</a> commands have been given, these changes are not reset, because these changes are recorded in the underlying coordinate set. If it is desired to save and restore atom positions after moving atoms relative to each other, the following commands may be issued: select *;translateSelected {0 0 0};save state;..(move atoms here)...;restore state.</i ></p ></blockquote></td></tr> 
<tr name='tr_reset'>
<td valign="top">
<a name="reset_aromatic" id="k766"> </a>reset AROMATIC</td ></tr>
<tr name='tr_reset'>
<td>
<blockquote>
<p >
<i >Resets all aromatic bonds to the type AROMATIC if they are AROMATICSINGLE or AROMATICDOUBLE. Used in conjunction with 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#connect">connect</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">calculate aromatic</a> .</i ></p ></blockquote></td></tr> 
<tr name='tr_reset'>
<td valign="top">
<a name="reset_error" id="k767"> </a>reset ERROR</td ></tr>
<tr name='tr_reset'>
<td>
<blockquote>
<p >
<i >Resets the _errorMessage variable.</i ></p ></blockquote></td></tr> 
<tr name='tr_reset'>
<td valign="top">
<a name="reset_functions" id="k768"> </a>reset FUNCTIONS</td ></tr>
<tr name='tr_reset'>
<td>
<blockquote>
<p >
<i >Deletes all user-defined functions.</i ></p ></blockquote></td></tr> 
<tr name='tr_reset'>
<td valign="top">
<a name="reset_lighting" id="k769"> </a>
<span class=newer>reset LIGHTING [
<b>Jmol 14.3.11</b>]</span></td ></tr>
<tr name='tr_reset'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Resets lighting parameters to Jmol defaults: 
<b>set ambientPercent 45; set diffusePercent 84; set specular true; set specularPercent 22; set specularPower 40; set specularExponent 6; set celShading false; set celShadingPower 10; set zShadePower 3; set zDepth 0; set zSlab 50; set zShade false;</b></span></i ></p ></blockquote></td></tr> 
<tr name='tr_reset'>
<td valign="top">
<a name="reset_print" id="k770"> </a>
<span class=new>reset PRINT</span></td ></tr>
<tr name='tr_reset'>
<td>
<blockquote>
<p >
<i >
<span class=new>Clears the print buffer. (Useful when using the JavaScript function Jmol.evaluateVar.)</span></i ></p ></blockquote></td></tr> 
<tr name='tr_reset'>
<td valign="top">
<a name="reset_spin" id="k771"> </a>reset SPIN</td ></tr>
<tr name='tr_reset'>
<td>
<blockquote>
<p >
<i >Does a standard RESET, but also turns off spinning.</i ></p ></blockquote></td></tr> 
<tr name='tr_reset'>
<td valign="top">
<a name="reset_structure" id="k772"> </a>reset STRUCTURE</td ></tr>
<tr name='tr_reset'>
<td>
<blockquote>
<p >
<i >Resets PDB HELIX, SHEET, and TURN designations to their default file settings after, for example, using 
<b>calculate STRUCTURE DSSP</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_reset'>
<td valign="top">
<a name="reset_vdw" id="k773"> </a>reset VDW</td ></tr>
<tr name='tr_reset'>
<td>
<blockquote>
<p >
<i >Resets the default van der Waals radii to standard Jmol values.</i ></p ></blockquote></td></tr> 
<tr name='tr_reset'>
<td valign="top">
<a name="reset_variablename" id="k774"> </a>reset variableName</td ></tr>
<tr name='tr_reset'>
<td>
<blockquote>
<p >
<i >Resets the variable with the given name to the "unset" state.</i ></p ></blockquote></td></tr> 
<tr name='tr_reset'>
<td valign="top">
<a name="reset_all" id="k775"> </a>reset ALL</td ></tr>
<tr name='tr_reset'>
<td>
<blockquote>
<p >
<i >Deletes all user-defined variables.</i ></p ></blockquote></td></tr> 
<tr name='tr_reset'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_reset'>
<td colspan="5">
<p>
<a class="xref" href="#jmolcommandsyntax">[Jmol Command Syntax]</a> 
<a class="xref" href="#jmolmath">[Jmol Math]</a> 
<a class="xref" href="#jmolparameters">[Jmol Parameters]</a> 
<a class="xref" href="#atomexpressions">[atom expressions]</a> 
<a class="xref" href="#atomproperties">[atom properties]</a> 
<a class="xref" href="#functions">[functions]</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#define">define</a> 
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#initialize">initialize</a> 
<a class="xref" href="#message">message</a> 
<a class="xref" href="#refresh">refresh</a> 
<a class="xref" href="#restore">restore</a> 
<a class="xref" href="#save">save</a> 
<a class="xref" href="#set">set</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#unset">unset</a> 
<a class="xref" href="#while">while</a> 
<a class="xref" href="#zap">zap</a> </p></td></tr>
<tr name='tr_reset'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k764">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_restore'>
<td colspan="5">
<h3 class=h3new>
<a id="restore" name="restore">restore</a>
<a id="k776"> </a> 
<br />
<span class=new>(v. 11.0 -- NEW)</span></h3></td></tr>
<tr name='tr_restore'>
<td>
<i >Restores information saved using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#save">save</a> command.
<br />
<br /></i ></td></tr>
<tr name='tr_restore'>
<td valign="top">
<a name="restore_bonds" id="k778"> </a>restore BONDS saveName</td ></tr>
<tr name='tr_restore'>
<td>
<blockquote>
<p >
<i >Restores bonding information changed via the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#connect">connect</a> command; if no save name is given, then the last-saved information is restored.</i ></p ></blockquote></td></tr> 
<tr name='tr_restore'>
<td valign="top">
<a name="restore_orientation" id="k779"> </a>restore ORIENTATION saveName timeSeconds</td ></tr>
<tr name='tr_restore'>
<td>
<blockquote>
<p >
<i >Restores a previously saved orientation. If no save name is given, then no time in seconds can be given, and the last-saved orientation is restored immediately. If a save name is given, then the number of seconds over which the restoration should be done may be given as well.</i ></p ></blockquote></td></tr> 
<tr name='tr_restore'>
<td valign="top">
<a name="restore_selection" id="k780"> </a>restore SELECTION saveName</td ></tr>
<tr name='tr_restore'>
<td>
<blockquote>
<p >
<i >Restores a previously saved selection. If no save name is given the last-saved selection is restored. If no saved selection of this name is found, then the action is the same as 
<b>select none</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_restore'>
<td valign="top">
<a name="restore_state" id="k781"> </a>restore STATE saveName</td ></tr>
<tr name='tr_restore'>
<td>
<blockquote>
<p >
<i >Retores a previously saved state of the applet. Some of the more complex objects, such as dipoles, isosurfaces, lcaoCartoons, and molecular orbitals are not saved.</i ></p ></blockquote></td></tr> 
<tr name='tr_restore'>
<td valign="top">
<a name="restore_structure" id="k782"> </a>restore STRUCTURE saveName</td ></tr>
<tr name='tr_restore'>
<td>
<blockquote>
<p >
<i >Retores a previously saved secondary structure. saveName is optional; without it, this command restores the author-designated structure after use of the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">calculate structure</a> command. </i ></p ></blockquote></td></tr> 
<tr name='tr_restore'>
<td valign="top">
<a name="restore_unitcell" id="k783"> </a>
<span class=new>restore UNITCELL</span></td ></tr>
<tr name='tr_restore'>
<td>
<blockquote>
<p >
<i >
<span class=new>Restores the unit cell to its original setting.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_restore'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_restore'>
<td colspan="5">
<p>
<a class="xref" href="#define">define</a> 
<a class="xref" href="#initialize">initialize</a> 
<a class="xref" href="#refresh">refresh</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#save">save</a> 
<a class="xref" href="#unset">unset</a> 
<a class="xref" href="#zap">zap</a> </p></td></tr>
<tr name='tr_restore'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k777">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_restrict'>
<td colspan="5">
<h3 >
<a id="restrict" name="restrict">restrict</a>
<a id="k784"> </a></h3>
<div class="chimenote">
<i>Note:</i> The restrict command does not require { ... } around Jmol atom expressions.
<br />
<br /></div></td></tr>
<tr name='tr_restrict'>
<td>
<i >Selects the atoms identified by the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions">atom expression</a> and deletes all characteristics of all atoms and bonds that are outside the selection set by setting those characteristics "off". For wireframe and backbone, 
<b>restrict</b> unconditionally follows 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_bondmode">set bondmode OR</a>, ignoring the current bondmode setting, thus removing any bonds or backbone rods involving any atoms not in the restricted set. The 
<b>restrict</b> command is a holdover from RasMol, kept in Jmol for compatibility only. The 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#display">display</a> command is far more flexible, as it preserves the shape characteristics (size, color, translucency) of the hidden atoms rather than simply deleting the shapes. 
<br />
<br /></i ></td></tr>
<tr name='tr_restrict'>
<td valign="top">
<a name="restrict_" id="k786"> </a>restrict {default: ALL}</td ></tr>
<tr name='tr_restrict'>
<td>
<blockquote>
<p >
<i >Restricts to all atoms;possibly not H atoms.</i ></p ></blockquote></td></tr> 
<tr name='tr_restrict'>
<td valign="top">
<a name="restrict_._atom_expression" id="k788"> </a>restrict 
<a class='def' href='#d787' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_restrict'>
<td>
<blockquote>
<p >
<i >Restricts atoms based on an 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions">atom expression</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_restrict'>
<td valign="top">
<a name="restrict_bonds" id="k789"> </a>restrict BONDS 
<a class='def' href='#d787' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_restrict'>
<td>
<blockquote>
<p >
<i >Restricts atoms based on an 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions">atom expression</a> while respecting the setting of 
<b>bondmode</b>. </i ></p ></blockquote></td></tr> 
<tr name='tr_restrict'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_restrict'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_restrict'>
<td colspan="5">
<p>
<a class="xref" href="#display">display</a> 
<a class="xref" href="#hide">hide</a> 
<a class="xref" href="#select">select</a> 
<a class="xref" href="#subset">subset</a> </p></td></tr>
<tr name='tr_restrict'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k785">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_resume'>
<td colspan="5">
<h3 >
<a id="resume" name="resume">resume</a>
<a id="k790"> </a></h3></td></tr>
<tr name='tr_resume'>
<td>
<i >Note: 
<b>PAUSE</b> and 
<b>RESUME</b> are deprecated. see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#throw">throw</a>. Resumes script execution after a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#pause">pause</a>.
<br />
<br /></i ></td></tr>
<tr name='tr_resume'>
<td valign="top">
<a name="resume_" id="k790"> </a>resume</td ></tr> 
<tr name='tr_resume'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_resume'>
<td colspan="5">
<p>
<a class="xref" href="#immediate!">[immediate (!)]</a> 
<a class="xref" href="#delay">delay</a> 
<a class="xref" href="#exit">exit</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#loop">loop</a> 
<a class="xref" href="#pause">pause</a> 
<a class="xref" href="#quit">quit</a> 
<a class="xref" href="#step">step</a> </p></td></tr>
<tr name='tr_resume'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k791">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_return'>
<td colspan="5">
<h3 >
<a id="return" name="return">RETURN</a>
<a id="k792"> </a></h3>
<div class="chimenote">
<i>Note:</i> The RETURN command does not require @{ ... } around Jmol math expressions.
<br />
<br /></div></td></tr>
<tr name='tr_return'>
<td>
<i >Returns from a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#functions">function</a> or a script being run with the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#script">script</a> command. In the case of a function return, may include an optional return value. 
<br />
<br /></i ></td></tr>
<tr name='tr_return'>
<td valign="top">
<a name="return_returnvalue" id="k794"> </a>return returnValue</td ></tr> 
<tr name='tr_return'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_return'>
<td colspan="5">
<p>
<a class="xref" href="#break">break</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#catch">catch</a> 
<a class="xref" href="#continue">continue</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#else">else</a> 
<a class="xref" href="#elseif">elseIf</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#try">try</a> 
<a class="xref" href="#var">var</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_return'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k793">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_ribbon'>
<td colspan="5">
<h3 >
<a id="ribbon" name="ribbon">ribbon or ribbons</a>
<a id="k795"> </a></h3></td></tr>
<tr name='tr_ribbon'>
<td>
<i >Ribbons offer a representation the protein backbone or nucleic acid helix using a flat band. For proteins, control points are chosen to be the center of the peptide bond, and the ribbon is drawn in the direction of the carbonyl oxygen (thus roughly defining the peptide planes). For nucleic acids, the control points are the midpoints between adjacent backbone phosphorus atoms, and the ribbon is drawn in the direction of the C6 carbon. A hermite curve is used.
<br />
<br /></i ></td></tr>
<tr name='tr_ribbon'>
<td valign="top">
<a name="ribbon_" id="k797"> </a>ribbon ON/OFF{default: ON}</td ></tr> 
<tr name='tr_ribbon'>
<td valign="top">
<a name="ribbon_only" id="k798"> </a>ribbon ONLY</td ></tr>
<tr name='tr_ribbon'>
<td>
<blockquote>
<p >
<i >Turns ribbon rendering on and all other rendering (including labels) off.</i ></p ></blockquote></td></tr> 
<tr name='tr_ribbon'>
<td valign="top">
<a name="ribbon_._ribbon_radius" id="k800"> </a>ribbon 
<a class='def' href='#d799' title='half of the overall width of the ribbon -- (decimal, &lt;=4.0)'>[ribbon-radius]</a></td ></tr>
<tr name='tr_ribbon'>
<td>
<blockquote>
<p >
<i >Normally, ribbons vary in width according to the amino acid atom positions. This command sets the width of the ribbon to be a connstant value (a decimal, in Angstroms). A negative number also implies 
<b>ONLY</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_ribbon'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_ribbon'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_ribbon'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples/structure.htm">structure.htm</a> </td></tr>
<tr name='tr_ribbon'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_ribbon'>
<td colspan="5">
<p>
<a class="xref" href="#backbone">backbone</a> 
<a class="xref" href="#background">background</a> 
<a class="xref" href="#cartoon">cartoon</a> 
<a class="xref" href="#dots">dots</a> 
<a class="xref" href="#ellipsoid">ellipsoid</a> 
<a class="xref" href="#geosurface">geoSurface</a> 
<a class="xref" href="#meshribbon">meshribbon</a> 
<a class="xref" href="#rocket">rocket</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlighting">set (lighting)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#strand">strand</a> 
<a class="xref" href="#trace">trace</a> 
<a class="xref" href="#vector">vector</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_ribbon'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k796">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_rocket'>
<td colspan="5">
<h3 >
<a id="rocket" name="rocket">rocket or rockets</a>
<a id="k801"> </a></h3></td></tr>
<tr name='tr_rocket'>
<td>
<i >Creates a crude "rocket" cartoon. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#cartoon">cartoon</a> in association with 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setstructure">set cartoonRockets</a> for a more precise cartoon with rockets. The 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setstructure">set rocketBarrels</a> option removes the arrow heads from rockets. 
<br />
<br /></i ></td></tr>
<tr name='tr_rocket'>
<td valign="top">
<a name="rocket_" id="k803"> </a>rocket ON/OFF{default: ON}</td ></tr> 
<tr name='tr_rocket'>
<td valign="top">
<a name="rocket_only" id="k806"> </a>rocket ONLY</td ></tr>
<tr name='tr_rocket'>
<td>
<blockquote>
<p >
<i >Turns rocket rendering on and all other rendering (including labels) off.</i ></p ></blockquote></td></tr> 
<tr name='tr_rocket'>
<td valign="top">
<a name="rocket_._rocket_radius" id="k805"> </a>rocket 
<a class='def' href='#d804' title='half of the overall width of the rocket barrel -- (decimal, &lt;=4.0)'>[rocket-radius]</a></td ></tr>
<tr name='tr_rocket'>
<td>
<blockquote>
<p >
<i >A negative number also implies 
<b>ONLY</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_rocket'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_rocket'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_rocket'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples/structure.htm">structure.htm</a> </td></tr>
<tr name='tr_rocket'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_rocket'>
<td colspan="5">
<p>
<a class="xref" href="#backbone">backbone</a> 
<a class="xref" href="#background">background</a> 
<a class="xref" href="#cartoon">cartoon</a> 
<a class="xref" href="#dots">dots</a> 
<a class="xref" href="#ellipsoid">ellipsoid</a> 
<a class="xref" href="#geosurface">geoSurface</a> 
<a class="xref" href="#meshribbon">meshribbon</a> 
<a class="xref" href="#ribbon">ribbon</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlighting">set (lighting)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#strand">strand</a> 
<a class="xref" href="#trace">trace</a> 
<a class="xref" href="#vector">vector</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_rocket'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k802">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_rotate'>
<td colspan="5">
<h3 >
<a id="rotate" name="rotate">rotate</a>
<a id="k807"> </a></h3></td></tr>
<tr name='tr_rotate'>
<td>
<i >The 
<b>rotate</b> and 
<b>spin</b> commands allow single angle rotation or continued rotation (spinning) in one of two specific frames, effectively changing the "camera" position. These frames include the standard "fixed" applet window frame and the internal "molecular" model frame (the axes in the data file). Coordinate specifications for the rotation can be given several ways, including absolute coordinate positions set in braces as {x, y, z}, the geometric center of a subset of atoms in the model specified in an atom set in parentheses, for example 
<b>{atomno &lt; 10 and not oxygen}</b>, or the geometric center of a previously defined draw object, indicated by the drawing object name preceded by a dollar sign (for example, 
<b>$line1</b>). In addition, rotation may be specified to be around six standard axes (x, y, z, -x, -y, and -z) as well as several other options. The keyword MOLECULAR may be necessary for explicit model rotation about the internal molecular axes. Defaults are allowed. The default axis for spinining or rotating is the y (vertical) axis; the default angle of rotation is 10 degrees; the default rotation rate is a slow spin of 10 degrees per second. Options may be given in any order and include: 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >  </td >
<td valign="top" > By itself, the 
<b>rotate</b> command rotates 10 degrees around the y (vertical) axis in a counterclockwise fashion.</td ></tr >
<tr >
<td valign="top" > 
<b>x</b>, 
<b>y</b>, 
<b>z</b>, 
<b>-x</b>, 
<b>-y</b>, 
<b>-z</b></td >
<td valign="top" > Rotation about one of the six standard axes. The implied axes are the axes of the window, not the molecule.</td ></tr >
<tr >
<td valign="top" >
<b>x.x</b> </td >
<td valign="top" > When one number is given, that number indicates for a simple rotation command such as 
<b>ROTATE x 30</b> the number of degrees for a rotation, either positive (right-hand rotation) or negative (left-hand rotation). For a spin, for example using 
<b>ROTATE SPIN y 10</b>, this number indicates the rate of spin in degrees per second. For the TRANSLATION option, this is the number of Angstroms total for the translation.</td ></tr >
<tr >
<td valign="top" > 
<b>x.x y.y</b> </td >
<td valign="top" > Two numbers, for example, 
<b>ROTATE 30 10</b> specifies a finite animated rotation or translation. The first number is as for a single number (above). The second number has an effect that depends upon its sign. If the two numbers are the same sign, as in this example, the second number indicates the rate of spinning in degrees per second (or, for the TRANSLATION option, linear movement in angstroms per second). If the second number is opposite the sign of the first number, as in 
<b>ROTATE 30 -20</b> or 
<b>ROTATE -30 30</b>, then the specified finite rotation or translation is carried out over |y.y| seconds. In this case, the value of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_waitformoveto">set waitformoveto</a> determines whether the script waits for the rotation or translation to complete or continues while that process occurs independently. </td ></tr >
<tr >
<td valign="top" > 
<b>{atom expression or point} {atom expression or point}</b> </td >
<td valign="top" > Rotation about an axis pointing from the first point to the second in right-hand direction. For example, 
<b>rotate {0 0 0} {1 0 0} 10</b> is the same as 
<b>rotate x 10</b>, and 
<b>spin {atomno=1} {atomno=2}</b> spins the model around the axis connecting these two atoms. </td ></tr >
<tr >
<td valign="top" > 
<b>$drawID</b> </td >
<td valign="top" > the two atoms desired for rotation can be defined based on a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">drawn</a> object such as a line or vector by specifying the ID of that drawn object. </td ></tr >
<tr >
<td valign="top" > 
<b>{3x3 matrix}</b> </td >
<td valign="top" > A 3x3 matrix can be used to specify the axis and angle of a rotation; MOLECULAR is implied. </td ></tr >
<tr >
<td valign="top" > 
<b>{4x4 matrix}</b> </td >
<td valign="top" > A 4x4 matrix can be used to specify a rotation axis and angle along with a translation; MOLECULAR is implied. </td ></tr >
<tr >
<td valign="top" > 
<b>AXISANGLE {x y z}</b> </td >
<td valign="top" > Rotation about an axis defined as a vector from the origin {0,0,0} to the specified {x,y,z} coordinate. </td ></tr >
<tr >
<td valign="top" > 
<b>AXISANGLE {x y z theta}</b> </td >
<td valign="top" > Rotation about an axis through {0 0 0} and {x y z} by the specified number of degrees. </td ></tr >
<tr >
<td valign="top" >
<b>HELIX</b> </td >
<td valign="top" > For any operation involving a translation (4x4 matrix, COMPARE, SYMOP, or TRANSLATE options) carries out the rotation about the optimum helical path. </td ></tr >
<tr >
<td valign="top" > 
<b>INTERNAL</b> </td >
<td valign="top" > Same as 
<b>MOLECULAR</b>. </td ></tr >
<tr >
<td valign="top" > 
<b>MOLECULAR</b> </td >
<td valign="top" > In the case of simple axes such as 
<b>x</b> or 
<b>y</b>, indicates that the axis is defined in terms of molecular coordinates. </td ></tr >
<tr >
<td valign="top" > 
<b>QUATERNION {x y z w}</b> </td >
<td valign="top" > Rotation about an axis defined by the specified quaternion in the form of a four-vector. For example, to reset the model to the original orientation without changing the zoom, one can use 
<b>rotate QUATERNION @{ !quaternion(script("show rotation")) }</b>. The keyword QUATERNION is optional.</td ></tr >
<tr >
<td valign="top" > 
<b>SELECTED</b> </td >
<td valign="top" > Rotate only the currently selected atoms. </td ></tr >
<tr >
<td valign="top" > 
<b>SPIN</b> </td >
<td valign="top" > Provide an animation of the rotation. Implied when two decimals -- a number of degrees and a rate -- are given.</td ></tr >
<tr >
<td valign="top" > 
<b>TRANSLATE</b> </td >
<td valign="top" > Add a translation to the animation (providing a screw-like motion) MOLECULAR and SELECTED are implied. If only one point is specified, then this command allows for an animation of a movement of the selected set of atoms along the vector connecting {0 0 0} and that point. In that case, the extent is in Angstroms and rate is in AngstromsPerSecond; otherwise, as for other rotations, extent is in degrees and rate is in degreesPerSecond. </td ></tr ></table >
<br />
<br /></i ></td></tr>
<tr name='tr_rotate'>
<td valign="top">
<a name="rotate_best" id="k809"> </a>rotate BEST</td ></tr>
<tr name='tr_rotate'>
<td>
<blockquote>
<p >
<i >Rotates the model to a calculated "best" orientation for viewing, such that the model's containing box is thinnest along the line of site (z), and widest horizontally (x). With ROTATE SELECTED BEST, atom positions are actually changed; otherwise only the viewpoint is changed.</i ></p ></blockquote></td></tr> 
<tr name='tr_rotate'>
<td valign="top">
<a name="rotate_branch" id="k811"> </a>rotate BRANCH {atom1} {atom2}</td ></tr>
<tr name='tr_rotate'>
<td>
<blockquote>
<p >
<i >Rotates the atoms that are in the molecular branch containing {atom 2} but not {atom 1} about the axis connecting these two atoms. For example, to spin a methyl group having carbon atom C12 about its connected atom by 360 degrees at a rate of 30 degrees per second, one might use 
<b>spin BRANCH {_C and connected(C12)} {C12} 360 30</b>. If fewer than two numbers are given, rotation will continue until 
<b>spin OFF</b> or another spin command is issued. Attempting to rotate around a bond within a ring may lead to undesired results.</i ></p ></blockquote></td></tr> 
<tr name='tr_rotate'>
<td valign="top">
<a name="rotate_branch" id="k810"> </a>rotate BRANCH @list nSeconds</td ></tr>
<tr name='tr_rotate'>
<td>
<blockquote>
<p >
<i >A special rotate BRANCH option takes as its parameter a list of n dihedrals with starting and target angles. All dihedrals are rotated concurrently over nSeconds time. The array list has 6n elements, a sequence of for each dihedral of i1, i2, i3, i4, v1, v2, where i1, i2, i3, and i4 are atom indices involved in a dihedral, in order, and v1 and v2 are the initial and final dihedral angles for that set of atoms. See also the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#compare_bonds">compare BONDS</a> option, which uses this BRANCH option internally.</i ></p ></blockquote></td></tr> 
<tr name='tr_rotate'>
<td valign="top">
<a name="rotate_compare" id="k812"> </a>rotate COMPARE {atomset} {atomset or coordinates}</td ></tr>
<tr name='tr_rotate'>
<td>
<blockquote>
<p >
<i >A variation of the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#compare">compare</a> command. For atoms, determines the best-fit correlation between atoms in atomSet1 and atoms in atomSet2 and then rotates and/or translates atomSet1 to align with atomSet2. The two atom sets must have the same number of atoms and must have a direct 1:1 correlation of atoms. (For a more general comparison, see the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#compare">compare</a> command. An array of points, such as @{ {2.1}.xyz.all} may take the place of the second atom set. This allows, for example, saving of a set of coordinates with 
<b>tempCoords = {2.1}.xyz.all</b> and restoring of those coordinates with 
<b>ROTATE COMPARE {2.1} @{tempCoords}</b> some time after a selected atom rotation. </i ></p ></blockquote></td></tr> 
<tr name='tr_rotate'>
<td valign="top">
<a name="rotate_symop" id="k813"> </a>rotate SYMOP n</td ></tr>
<tr name='tr_rotate'>
<td>
<blockquote>
<p >
<i >Carry out the symmetry operation number 
<b>n</b> (or, if 
<b>n</b> is a negative number, the reverse of that operation) on the currently selected atoms. </i ></p ></blockquote></td></tr> 
<tr name='tr_rotate'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_rotate'>
<td>
<table cellpadding="10">
<tr>
<td class="example"># set to final state
<br />moveto 0.0 { -46 -870 492 142.18} 300.0 0.0 0.0 {61.260506 38.7915 44.659} 50.97134 {0.0 0.0 0.0} 281.9351 50.269466 50.0
<br />qfinal = quaternion(script("show rotation"))
<br /># set to initial state
<br />moveto 0.0 { -142 866 480 107.35} 100.0 0.0 0.0 {61.260506 38.7915 44.659} 50.97134 {0.0 0.0 0.0} 8.481314 102.86942 50.0;
<br />qinitial = quaternion(script("show rotation"))
<br /># calculate steps
<br />dq = qfinal / qinitial / 20
<br /># now loop and save
<br />write image "image0.jpg"
<br />for (i = 1; i &lt;= 20; i = i+1)
<br /> rotate quaternion @dq
<br /> f = "image"+i+".jpg"
<br /> write image @f
<br />end for</td></tr></table></td></tr>
<tr name='tr_rotate'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_rotate'>
<td colspan="5">
<p>
<a class="xref" href="#move">move</a> 
<a class="xref" href="#moveto">moveto</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#spin">spin</a> 
<a class="xref" href="#translate">translate</a> </p></td></tr>
<tr name='tr_rotate'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k808">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_rotateselected'>
<td colspan="5">
<h3 >
<a id="rotateselected" name="rotateselected">rotateSelected</a>
<a id="k814"> </a></h3></td></tr>
<tr name='tr_rotateselected'>
<td>
<i >This command takes all the parameters of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#rotate">rotate</a> but only carries out the operation on the currenly selected atoms. In addition, if the keyword SPIN is used, the command starts only the atoms spinning. Note that in its current implementation, this rotate DOES slightly modify atom coordinates; any measurements made after rotating may be off by a fraction of a percent, and continued spinning for a long time may introduced significant errors in relative distances and angles.
<br />
<br /></i ></td></tr> 
<tr name='tr_rotateselected'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('.rotateSelected')">in new window using caffeine.xyz</td></tr>
<tr name='tr_rotateselected'>
<td>
<table cellpadding="10">
<tr>
<td class="example">select connected(C19) and not N8;
<br />rotateSelected {N8} {C19} 30 # CH3 rotates 30 degrees around that bond other options might be rotateSelected {0 0 0} {1 1 1} 30, rotateSelected axisangle {1 1 1 30}, or rotateSelected molecular x 30</td></tr></table></td></tr>
<tr name='tr_rotateselected'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_rotateselected'>
<td colspan="5">
<p>
<a class="xref" href="#animation">animation</a> 
<a class="xref" href="#file">file</a> 
<a class="xref" href="#frame">frame</a> 
<a class="xref" href="#invertselected">invertSelected</a> 
<a class="xref" href="#move">move</a> 
<a class="xref" href="#moveto">moveto</a> 
<a class="xref" href="#setmisc">set (misc)</a> 
<a class="xref" href="#spin">spin</a> 
<a class="xref" href="#translate">translate</a> 
<a class="xref" href="#translateselected">translateSelected</a> 
<a class="xref" href="#zoom">zoom</a> 
<a class="xref" href="#zoomto">zoomto</a> </p></td></tr>
<tr name='tr_rotateselected'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k815">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_save'>
<td colspan="5">
<h3 class=h3new>
<a id="save" name="save">save</a>
<a id="k816"> </a> 
<br />
<span class=new>(v. 11.0 -- NEW)</span></h3></td></tr>
<tr name='tr_save'>
<td>
<i >Saves a variety of sorts of information for later 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#restore">restoring</a> either in the current model or a different model.
<br />
<br /></i ></td></tr>
<tr name='tr_save'>
<td valign="top">
<a name="save_bonds" id="k818"> </a>save BONDS saveName</td ></tr>
<tr name='tr_save'>
<td>
<blockquote>
<p >
<i >Saves bonding information, including atom connections, color, width, and visibility. A save name is optional. </i ></p ></blockquote></td></tr> 
<tr name='tr_save'>
<td valign="top">
<a name="save_context" id="k823"> </a>
<span class=new>save CONTEXT saveName</span></td ></tr>
<tr name='tr_save'>
<td>
<blockquote>
<p >
<i >
<span class=new>Saves a pointer to the current point in the script. Same as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#throw">throw</a>, but processing continues, and no error is thrown.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_save'>
<td valign="top">
<a name="save_orientation" id="k819"> </a>save ORIENTATION saveName</td ></tr>
<tr name='tr_save'>
<td>
<blockquote>
<p >
<i >Saves a full set of orientation information, including center and position of rotation. A save name is optional but recommended, as it allows restoring of the orientation over a specified number of seconds.</i ></p ></blockquote></td></tr> 
<tr name='tr_save'>
<td valign="top">
<a name="save_selection" id="k820"> </a>save SELECTION saveName</td ></tr>
<tr name='tr_save'>
<td>
<blockquote>
<p >
<i >Saves the current set of selected atoms for restoring later, either for the currently loaded model or for another model. (If used for only the current model, without a 
<b>load</b> command between 
<b>save</b> and 
<b>restore</b>, 
<b>save/restore SELECTION xxx</b> works the same as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#define">define xxx selected/select xxx</a>.) Note that when more than one model are loaded, the set of selected atoms is for the entire set of loaded models, not just the currently displayed one. Applying a restore to a completely different model should be done with care or it may not have the intended results. </i ></p ></blockquote></td></tr> 
<tr name='tr_save'>
<td valign="top">
<a name="save_state" id="k821"> </a>save STATE saveName</td ></tr>
<tr name='tr_save'>
<td>
<blockquote>
<p >
<i >Temporarily saves the exact current state of the applet or application in memory for later restoring. Note that from the application or signed applet, using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write</a> command, you can save the state to a file on your computer in the form of a Jmol state SPT text file or a state-imbedded PNG or JPG file (which, though appearing as a high-resolution image, can also be "drag-dropped" back into Jmol to restore the state exactly, provided necessary files are in the directory of the image file.) You can also write JMOL files, which are ZIP files that contain all necessary files that have been loaded. </i ></p ></blockquote></td></tr> 
<tr name='tr_save'>
<td valign="top">
<a name="save_structure" id="k822"> </a>save STRUCTURE saveName</td ></tr>
<tr name='tr_save'>
<td>
<blockquote>
<p >
<i >Temporarily saves the structural state of the model, including definitions of HELIX, SHEET, etc.; can be used before the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#structure">structure</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">calculate STRUCTURE</a> commands to restore the previous structural assignments. </i ></p ></blockquote></td></tr> 
<tr name='tr_save'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_save'>
<td colspan="5">
<p>
<a class="xref" href="#define">define</a> 
<a class="xref" href="#initialize">initialize</a> 
<a class="xref" href="#refresh">refresh</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#restore">restore</a> 
<a class="xref" href="#unset">unset</a> 
<a class="xref" href="#zap">zap</a> </p></td></tr>
<tr name='tr_save'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k817">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_script'>
<td colspan="5">
<h3 >
<a id="script" name="script">script or source</a>
<a id="k824"> </a></h3></td></tr>
<tr name='tr_script'>
<td>
<i >Loads and executes the specified script file/url. The hash/pound/sharp character (#) character marks a comment to the end of the line or a semicolon. The semicolon character (;) separates multiple statements on the same line. A script file may load another script file, up to 10 deep. Within the script, for any files indicated, prepending the file name with 
<b>$SCRIPT_PATH$</b> indicates to use the path of script file, not the current path, to find the file. If the command 
<b>CD $SCRIPT_PATH$</b> is given in a script, then all file references within that script and any scripts that script references will be relative to the path of that script.
<br>
<br>Arguments can be passed to a script using the syntax:
<br>
<br>
<b>xxx.spt(argument1, argument2,...)</b>
<br>
<br>where the 
<b>script</b> command word is not given, and the arguments are listed in parentheses, like a function. Within the script, these arguments are in the 
<b>_arguments</b> variable.
<br />
<br /></i ></td></tr>
<tr name='tr_script'>
<td valign="top">
<a name="script_._script_filename" id="k829"> </a>script 
<a class='def' href='#d826' title='any valid filename or URL -- (string)'>[file-name]</a></td ></tr>
<tr name='tr_script'>
<td>
<blockquote>
<p >
<i >Loads and executes the specified script file/url. A hash/pound/sharp character (#) character marks a comment to the end of the line or a semicolon. A semicolon character (;) separates multiple statements on the same line. A script file may load another script file, up to 10 deep. The command word SCRIPT is not necessary if the file is quoted or is of the simple format xxxxx.yyy.</i ></p ></blockquote></td></tr> 
<tr name='tr_script'>
<td valign="top">
<a name="script_localpath" id="k827"> </a>script LOCALPATH "path" 
<a class='def' href='#d826' title='any valid filename or URL -- (string)'>[file-name]</a></td ></tr>
<tr name='tr_script'>
<td>
<blockquote>
<p >
<i >When reading a script created with 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write STATE</a>, the LOCALPATH keyword instructs Jmol to strip all paths beginning with "file:/" down to the indicated path. So, for example, 
<b>script LOCALPATH "" "myfile.spt"</b> indicates that all local files referenced in the state script should be read from the current default directory. LOCALPATH can be used with scripts other than state scripts created by Jmol. The mechanism is simply looking for instances of /*file*/"some_file_name". If this construction is found in any script read, the replacement will be made. </i ></p ></blockquote></td></tr> 
<tr name='tr_script'>
<td valign="top">
<a name="script_remotepath" id="k828"> </a>script REMOTEPATH "path" 
<a class='def' href='#d826' title='any valid filename or URL -- (string)'>[file-name]</a></td ></tr>
<tr name='tr_script'>
<td>
<blockquote>
<p >
<i >When reading a script created with 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write STATE</a>, the REMOTEPATH keyword instructs Jmol to strip all paths beginning with "http:", "https:", or "ftp:" down to the indicated path. So, for example, 
<b>script REMOTEPATH "data" "myfile.spt"</b> indicates that all remote files referenced in the state script should be read from the subdirectory "data/" within the current default directory. REMOTEPATH can be used with scripts other than state scripts created by Jmol. The mechanism is simply looking for instances of /*file*/"some_file_name". If this construction is found in any script read, the replacement will be made. </i ></p ></blockquote></td></tr> 
<tr name='tr_script'>
<td valign="top">
<a name="script_._script_filename" id="k830"> </a>script 
<a class='def' href='#d826' title='any valid filename or URL -- (string)'>[file-name]</a> CHECK</td ></tr>
<tr name='tr_script'>
<td>
<blockquote>
<p >
<i >Just checks the file for proper syntax and the presence of files.</i ></p ></blockquote></td></tr> 
<tr name='tr_script'>
<td valign="top">
<a name="script_._script_filename" id="k831"> </a>script 
<a class='def' href='#d826' title='any valid filename or URL -- (string)'>[file-name]</a> COMMAND n</td ></tr>
<tr name='tr_script'>
<td>
<blockquote>
<p >
<i >Executes command n of the designated script file.</i ></p ></blockquote></td></tr> 
<tr name='tr_script'>
<td valign="top">
<a name="script_._script_filename" id="k832"> </a>script 
<a class='def' href='#d826' title='any valid filename or URL -- (string)'>[file-name]</a> COMMANDS n - m</td ></tr>
<tr name='tr_script'>
<td>
<blockquote>
<p >
<i >Executes commands n through m of the designated script file. The second number may be ommitted to indicate "to the end of the file": 
<b>script "myfile.spt" COMMANDS 10 - </b></i ></p ></blockquote></td></tr> 
<tr name='tr_script'>
<td valign="top">
<a name="script_._script_filename" id="k833"> </a>script 
<a class='def' href='#d826' title='any valid filename or URL -- (string)'>[file-name]</a> LINE n</td ></tr>
<tr name='tr_script'>
<td>
<blockquote>
<p >
<i >Executes line n of the designated script file. </i ></p ></blockquote></td></tr> 
<tr name='tr_script'>
<td valign="top">
<a name="script_._script_filename" id="k834"> </a>script 
<a class='def' href='#d826' title='any valid filename or URL -- (string)'>[file-name]</a> LINES n - m</td ></tr>
<tr name='tr_script'>
<td>
<blockquote>
<p >
<i >Executes lines n through m of the designated script file. The second number may be ommitted to indicate "to the end of the file": 
<b>script "myfile.spt" LINES 10 - </b></i ></p ></blockquote></td></tr> 
<tr name='tr_script'>
<td valign="top">
<a name="script_applet" id="k835"> </a>script APPLET appletName @{Jmol math expression}</td ></tr>
<tr name='tr_script'>
<td>
<blockquote>
<p >
<i >Runs the script command result of the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#jmolmath">Jmol math expression</a> in one or more applets. The math expression may be a simple single variable name or quoted string or a more complex expression. If the math expression is a quoted string starting with 
<b>script</b> such as 
<b>"script dothis.spt"</b>, then the indicated script file will be run in each applet. The applet name can be any of the following.
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >   *</td >
<td valign="top" >all applets on the same web page as the originating applet (the script will run last in the originating applet)</td ></tr >
<tr >
<td valign="top" >   ></td >
<td valign="top" >all OTHER applets</td ></tr >
<tr >
<td valign="top" >  .(period)</td >
<td valign="top" >just this applet</td ></tr >
<tr >
<td valign="top" >  name</td >
<td valign="top" >the applet named 
<b>name</b> or, if that does not exist, 
<b>jmolApplet</b>name. Note that the function getProperty("appletInfo.registry") provides a list of applets on 
<i>all pages</i>, not just the same page. These other applets may be targeted if their full name (which includes a unique number extension) is given.</td ></tr >
<tr >
<td valign="top" >"name1,name2,..."</td >
<td valign="top" >all applets matching the specified names. Note that quotes ARE required in this case.</td ></tr ></table > 
<br></i ></p ></blockquote></td></tr> 
<tr name='tr_script'>
<td valign="top">
<a name="script_inline" id="k836"> </a>script INLINE @{Jmol math expression}</td ></tr>
<tr name='tr_script'>
<td>
<blockquote>
<p >
<i >Runs the script command result of the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#jmolmath">Jmol math expression</a> rather than from a file. The math expression may be a simple single variable name or a more complex expression. For example, 
<b>var bgColor="red";script INLINE @{"background " + bgColor}</b> or 
<b>var s = "[arg]";script INLINE @{"select " + s}</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_script'>
<td valign="top">
<a name="script_javascript:functioncall__" id="k837"> </a>script javascript:functionCall()</td ></tr>
<tr name='tr_script'>
<td>
<blockquote>
<p >
<i >Applet only: Evaluates the return of the indicated JavaScript function as the script to be executed. Execution is blocked if the web page parameter _jmol.noEval = true. Note that this is different from the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#javascript">javascript</a> command, which simply evaluates the specified JavaScript command. Here the function is evaluated on the embedding page, and the return from that function, which is presumed to be Jmol script, is evaluated 
<i>within Jmol</i>.</i ></p ></blockquote></td></tr> 
<tr name='tr_script'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_script'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_script'>
<td colspan="5">
<p>
<a class="xref" href="#getproperty">getProperty</a> 
<a class="xref" href="#javascript">javascript</a> 
<a class="xref" href="#setcallback">set (callback)</a> </p></td></tr>
<tr name='tr_script'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k825">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_select'>
<td colspan="5">
<h3 class=h3new>
<a id="select" name="select">select</a>
<a id="k838"> </a> 
<br />
<span class=new>(v. 12.2 -- adds ADD, REMOVE, and GROUP keywords)</span></h3>
<div class="chimenote">
<i>Note:</i> The select command does not require { ... } around Jmol atom expressions.
<br />
<br /></div></td></tr>
<tr name='tr_select'>
<td>
<i >Selects the atoms identified by the expression. If no expression is given then all atoms are selected. The optional parameters ADD and REMOVE prior to the atom expression allow quick alternatives to "selected or..." and "selected and not...", respectively. In addition, the keyword GROUP prior to the atom expression provides a quick alternative to "within(group, ...)". 
<br />
<br /></i ></td></tr>
<tr name='tr_select'>
<td valign="top">
<a name="select_" id="k840"> </a>select {default: ALL}</td ></tr>
<tr name='tr_select'>
<td>
<blockquote>
<p >
<i >Selects all atoms (possibly not H atoms).</i ></p ></blockquote></td></tr> 
<tr name='tr_select'>
<td valign="top">
<a name="select_._atom_expression" id="k842"> </a>select 
<a class='def' href='#d841' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_select'>
<td>
<blockquote>
<p >
<i >Selects atoms based on an 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions">atom expression</a>. To select atoms specific to a specific model when more than one model is present, use "/n" where "n" is the model number. For example, to select all atoms of model 3, use 
<b>select */3</b>. </i ></p ></blockquote></td></tr> 
<tr name='tr_select'>
<td valign="top">
<a name="select_on/off" id="k843"> </a>
<span class=new>select ON/OFF 
<a class='def' href='#d841' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></span></td ></tr>
<tr name='tr_select'>
<td>
<blockquote>
<p >
<i >
<span class=new>Carries out a selection while at the same time turning 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#selectionhalos">selectionhalos</a> on or off. For example: 
<b>select on ligand</b>.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_select'>
<td valign="top">
<a name="select_group" id="k844"> </a>select GROUP 
<a class='def' href='#d841' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_select'>
<td>
<blockquote>
<p >
<i >Selects all atoms in any groups containing the specified atoms.</i ></p ></blockquote></td></tr> 
<tr name='tr_select'>
<td valign="top">
<a name="select_add" id="k845"> </a>select ADD 
<a class='def' href='#d841' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_select'>
<td>
<blockquote>
<p >
<i >Adds the specified atoms to the 
<b>selected</b> set. May be used with GROUP: 
<b>select add group within(5,ligand)</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_select'>
<td valign="top">
<a name="select_remove" id="k846"> </a>select REMOVE 
<a class='def' href='#d841' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_select'>
<td>
<blockquote>
<p >
<i >Removes the specified atoms from the 
<b>selected</b> set. May be used with GROUP: 
<b>select remove group contact(ligand) and not ligand</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_select'>
<td valign="top">
<a name="select_._atom_expression" id="k847"> </a>select 
<a class='def' href='#d841' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a> (property expression)</td ></tr>
<tr name='tr_select'>
<td>
<blockquote>
<p >
<i >The 
<b>select</b> command allows for full utilization of Jmol math for atom selection. If the first parameter is an atom expression, such as {*} or {10-30}, a second parameter can be included. This second parameter must evaluate to a TRUE/FALSE expression involving the 
<i>individual</i> atoms of the atom expression. Parentheses around the property expression are optional. For example: 
<b>select {*.ca} (atomY 
< atomX)</b> selects for all alpha carbons for which their X coordinate is less than their Y coordinate. Note that in this context, "x", "y", and "z" are variable names, not coordinates. Use "atomX", "atomY", and "atomZ" if you need to refer to atom coordinates. The variable 
<b>_x</b> is assigned to the individual atom being tested. This variable can be used in nested select() functions within the select command to represent the atom being tested. For example, 
<b>select {*.ca} (phi 
< select(y; {*.ca}; y.resno = _x.resno + 1).phi))</b> selects alpha carbons of amino acid residues that have phi angles less than that of the phi angle of the next amino acid in the chain.</i ></p ></blockquote></td></tr> 
<tr name='tr_select'>
<td valign="top">
<a name="select_bonds" id="k848"> </a>
<span class=new>select BONDS ({bond list})</span></td ></tr>
<tr name='tr_select'>
<td>
<blockquote>
<p >
<i >
<span class=new>The 
<b>select BONDS</b> command allows for selection of specific bonds by number (0-based). The selection specifies the exact set of bonds for subsequent 
<b>COLOR BONDS</b> or 
<b>WIREFRAME</b> commands. The BONDS parameter can be omitted if the bonds are indicated as a bondset, as in 
<b>select [{2 3 5:6}]</b>.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_select'>
<td valign="top">
<a name="select_measures" id="k849"> </a>
<span class=new>select MEASURES ({measure list})</span></td ></tr>
<tr name='tr_select'>
<td>
<blockquote>
<p >
<i >
<span class=new>The 
<b>select MEASURES</b> command allows for selection of specific already-defined measurement lines. The selection specifies the exact set of measures for subsequent
<b>COLOR MEASURES</b> or 
<b>MEASURE format</b> commands. For example, 
<b>select MEASURES ({0:3}); color measures blue;measure "2:%1.1VALUE %a1 %a2"</b>.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_select'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_select'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('.select')">in new window using 1a3n.pdb</td></tr>
<tr name='tr_select'>
<td>
<table cellpadding="10">
<tr>
<td class="example">select carbon;color white
<br />select protein;ribbons on
<br />select *:D;color blue
<br />select [HIS]:D;spacefill 300
<br />select [HIS]92:D.N;spacefill 600
<br />select [HIS]92:D.C?;color orange
<br />select [HIS]92.N;color [255,196,196]
<br />select elemno&lt;7;spacefill 200
<br />select within(group, within(10.0, :a));color green;select :a;color red
<br />select within(chain, [HIS]92);color white;
<br />select within(chain, within(3.0,[HIS]92:D));color purple;
<br />select within(chain,within(5.0,[HIS]92));color white
<br />select 95^a:L # selects chain L, residue 95, insertion code a</td></tr></table></td></tr>
<tr name='tr_select'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples/select.htm">select.htm</a> </td></tr>
<tr name='tr_select'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_select'>
<td colspan="5">
<p>
<a class="xref" href="#display">display</a> 
<a class="xref" href="#hide">hide</a> 
<a class="xref" href="#restrict">restrict</a> 
<a class="xref" href="#subset">subset</a> </p></td></tr>
<tr name='tr_select'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k839">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_selectionhalos'>
<td colspan="5">
<h3 >
<a id="selectionhalos" name="selectionhalos">selectionHalos</a>
<a id="k850"> </a></h3></td></tr>
<tr name='tr_selectionhalos'>
<td>
<i >When ON, Jmol displays 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#halos">halos</a> around atoms when they are selected. The radius of the halo is always from 4 to 10 pixels larger than the current setting for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#spacefill">spacefill</a> or the current setting of halo radius using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#halos">halos</a> command. The color of any specific halo is determined as described for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#colorselectionhalos">color selectionHalos</a>.
<br />
<br /></i ></td></tr>
<tr name='tr_selectionhalos'>
<td valign="top">
<a name="selectionhalos_" id="k852"> </a>selectionHalos ON/OFF{default: OFF}</td ></tr> 
<tr name='tr_selectionhalos'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k851">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_set'>
<td colspan="5">
<h3 >
<a id="set" name="set">set</a>
<a id="k853"> </a>
<a id="set_undefined"> </a></h3></td></tr>
<tr name='tr_set'>
<td>
<i >Jmol allows a wide range of settings to be changed using the SET command -- see the categories below for details. In all cases in Jmol, "ON" and "TRUE" are equivalent, as are "OFF" and "FALSE". Different words may be used simply because they seem more appropriate for a particular parameter -- to turn an effect on or off; to to enable a feature with true or false. There is really no distinction being made here.
<br>
<br>The SET command has a rather convoluted relationship to Jmol math, having been developed long before Jmol math was introduced. In most cases the SET command is no longer necessary -- any simple value you can set with SET can be set simply using an assignment of a value to a variable name: 
<br>
<br>strandCount = 6
<br>
<br> instead of 
<b>SET strandCount 6</b>. However, it is recommended that you use SET for all 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#jmolparameters">Jmol parameters</a>, just as a way of clearly indicating in scripts that you are setting a Jmol parameter and not a user variable. Some SET commands accept Jmol math directly: 
<b>set zDepth mydepth</b> is exactly equivalent to both 
<b>zDepth = mydepth</b> and 
<b>set zDepth = @mydepth</b>. Some SET commands do not accept Jmol math directly and instead require the @ notation: 
<b>set selectionHalos @haloFlag</b>. It is most definitely confusing. A guiding principle is that 
<b>when using the keyword SET, you can always use @ with one single variable or @{...} with an expression.</b> And 
<b>you can always use actual values; there is no need to use @ with a simple number or string.</b> The table below summarizes the situation:
<br>
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >These SET commands have full command replacements and are deprecated. These commands must use @x for variables, because their processing is routed through those specialized commands. Thus, 
<b>set echo x</b> will not work. For the most part, there is no 
<b>xxx =</b> counterpart. (The two exceptions being 
<b>set frank</b>, for which there is 
<b>showFrank = TRUE/FALSE</b> and 
<b>set selectionHals</b>, for which there is 
<b>selectionHalos = ON/OFF</b>.)</td >
<td valign="top" > set 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#axes">axes</a>, set 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#background">background</a>, set 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#boundbox">boundbox</a>, set 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frank">frank</a>, set 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#history">history</a>, set 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#highight">highight</a>, set 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#labels">labels</a>, set 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#selectionhalos">selectionhalos</a>, set 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#timeout">timeout</a></td ></tr >
<tr >
<td valign="top" > The set commands listed on the right require @ with a variable because they have a more complicated context or do not take simple boolean, integer, float, or string values.</td >
<td valign="top" > 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_axescolor">set axescolor</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_backgroundmodel">set backgroundmodel</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_bondmode">set bondmode</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_debug">set debug</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_defaultcolorscheme">set defaultcolorscheme</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_defaultlattice">set defaultlattice</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_defaults">set defaults</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_defaultvdw">set defaultvdw</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_echo">set echo</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_energyunits">set energyunits</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_fontsize">set fontsize</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_formalcharge">set formalcharge</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_hbond">set hbond</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_historylevel">set historylevel</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_measurements">set measurements</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_picking">set picking</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_pickingstyle">set pickingstyle</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_property">set property</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_scriptreportinglevel">set scriptreportinglevel</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_specular">set specular</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_ssbond">set ssbond</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_strands">set strands</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_structure">set structure</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_togglelabel">set togglelabel</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_usercolorscheme">set usercolorscheme</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_vanderwaals">set vanderwaals</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_zslab">set zslab</a></td ></tr ></table >
<br>
<br>
<br />
<br /></i ></td></tr>
<tr name='tr_set'>
<td valign="top">
<a id="k856"> </a>set xxx</td ></tr>
<tr name='tr_set'>
<td>
<blockquote>
<p >
<i >
<b>set</b> followed by a Jmol parameter xxx is the same as 
<b>set xxx TRUE</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_set'>
<td valign="top">
<a id="k855"> </a>set</td ></tr>
<tr name='tr_set'>
<td>
<blockquote>
<p >
<i >
<b>set</b> by itself lists all Jmol parameters that can be set and all Jmol read-only variables (starting with underscore), along with their current values.</i ></p ></blockquote></td></tr> 
<tr name='tr_set'>
<td valign="top">
<a id="k857"> </a>set xxx?</td ></tr>
<tr name='tr_set'>
<td>
<blockquote>
<p >
<i >
<b>set</b> followed by characters ending in question mark lists all Jmol parameters starting with those characters and all Jmol read-only variables starting with underscore and those characters.</i ></p ></blockquote></td></tr> 
<tr name='tr_set'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_set'>
<td colspan="5">
<p>
<a class="xref" href="#jmolcommandsyntax">[Jmol Command Syntax]</a> 
<a class="xref" href="#jmolmath">[Jmol Math]</a> 
<a class="xref" href="#jmolparameters">[Jmol Parameters]</a> 
<a class="xref" href="#atomexpressions">[atom expressions]</a> 
<a class="xref" href="#atomproperties">[atom properties]</a> 
<a class="xref" href="#functions">[functions]</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#message">message</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_set'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k854">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_setantialiasing'>
<td colspan="5">
<h3 >
<a id="setantialiasing" name="setantialiasing">set (antialiasing)</a>
<a id="k858"> </a>
<a id="set_antialiasdisplay_top"> </a>
<a id="set_antialiastranslucent_top"> </a>
<a id="set_antialiasimages_top"> </a></h3></td></tr>
<tr name='tr_setantialiasing'>
<td>
<i >Antialiasing is the smoothing of jagged lines and sharp boundaries in an image. Jmol independently antialiases the display and image creation (using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#capture">capture</a> commands). If the display is antialiased, the option also exists to antialias translucent objects or not. Memory requirements are doubled and rendering performance will be diminished when antialiasDisplay is turned on.
<br />
<br /></i ></td></tr>
<tr name='tr_setantialiasing'>
<td valign="top">
<a name="set_antialiasdisplay" id="k860"> </a>set antialiasDisplay OFF</td ></tr>
<tr name='tr_setantialiasing'>
<td>
<blockquote>
<p >
<i >Turning this parameter ON results in smoothing of the model rendering in the window.</i ></p ></blockquote></td></tr> 
<tr name='tr_setantialiasing'>
<td valign="top">
<a name="set_antialiastranslucent" id="k861"> </a>set antialiasTranslucent ON</td ></tr>
<tr name='tr_setantialiasing'>
<td>
<blockquote>
<p >
<i >Turning this parameter OFF removes smoothing of the translucent components of the window in addition to the opaque components when antialiasDisplay is turrned on.</i ></p ></blockquote></td></tr> 
<tr name='tr_setantialiasing'>
<td valign="top">
<a name="set_antialiasimages" id="k862"> </a>set antialiasImages ON</td ></tr>
<tr name='tr_setantialiasing'>
<td>
<blockquote>
<p >
<i >Turning this parameter OFF disables smoothing of the images created using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write</a> command.</i ></p ></blockquote></td></tr> 
<tr name='tr_setantialiasing'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k859">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_setbondstyles'>
<td colspan="5">
<h3 class=h3newer>
<a id="setbondstyles" name="setbondstyles">set (bond styles)</a>
<a id="k863"> </a>
<a id="set__top"> </a>
<a id="set_showmultiplebonds_top"> </a>
<a id="set_bondmode_top"> </a>
<a id="set_bondmodeor_top"> </a>
<a id="set_bondradiusmilliangstroms_top"> </a>
<a id="set_bondtolerance_top"> </a>
<a id="set_hbondsrasmol_top"> </a>
<a id="set_hbondssolid_top"> </a>
<a id="set_hbondsbackbone_top"> </a>
<a id="set_minbonddistance_top"> </a>
<a id="set_multiplebondbananas_top"> </a>
<a id="set_multiplebondradiusfactor_top"> </a>
<a id="set_multiplebondspacing_top"> </a>
<a id="set_partialdots_top"> </a>
<a id="set_ssbonds_top"> </a>
<a id="set_ssbondsbackbone_top"> </a>
<a id="set_dipolescale_top"> </a></h3></td></tr>
<tr name='tr_setbondstyles'>
<td>
<i >This group of commands sets the appearance of various optional bond effects for the model.
<br />
<br /></i ></td></tr>
<tr name='tr_setbondstyles'>
<td valign="top">
<a name="set_bondmode" id="k866"> </a>set bondMode AND</td ></tr>
<tr name='tr_setbondstyles'>
<td>
<blockquote>
<p >
<i >The default Jmol condition. When script commands affect a set of atoms, BOTH atoms must be in the set for the bonds between them to also be affected. Similarly affects the display of backbone units in the selection of protein residues and nucleic acid bases.</i ></p ></blockquote></td></tr> 
<tr name='tr_setbondstyles'>
<td valign="top">
<a id="k867"> </a>set bondMode OR</td ></tr>
<tr name='tr_setbondstyles'>
<td>
<blockquote>
<p >
<i >When script commands affect a set of atoms, EITHER atom may be in the set for the bonds also to be affected. Similarly affects the display of backbone units in the selection of protein residues and nucleic acid bases.</i ></p ></blockquote></td></tr> 
<tr name='tr_setbondstyles'>
<td valign="top">
<a name="set_bondmodeor" id="k868"> </a>set bondModeOr FALSE</td ></tr>
<tr name='tr_setbondstyles'>
<td>
<blockquote>
<p >
<i >Setting this parameter TRUE is equivalent to 
<b>set bondMode OR</b>; it can be tested using Jmol math.</i ></p ></blockquote></td></tr> 
<tr name='tr_setbondstyles'>
<td valign="top">
<a name="set_bondradiusmilliangstroms" id="k869"> </a>set bondRadiusMilliAngstroms (integer)</td ></tr>
<tr name='tr_setbondstyles'>
<td>
<blockquote>
<p >
<i >Sets the default bond radius in milliAngstroms. Immediately applies this to all bonds in all models.</i ></p ></blockquote></td></tr> 
<tr name='tr_setbondstyles'>
<td valign="top">
<a name="set_bondtolerance" id="k870"> </a>set bondTolerance (decimal)</td ></tr>
<tr name='tr_setbondstyles'>
<td>
<blockquote>
<p >
<i >When autobonding, the value of bondTolerance is added to the two bond radii of atoms being tested for a bond. A larger bondTolerance allows atoms that are further apart than the sum of their listed radii to still be bonded. This parameter should be adjusted prior to file loading for proper maintaining of the Jmol state.</i ></p ></blockquote></td></tr> 
<tr name='tr_setbondstyles'>
<td valign="top">
<a name="set_dipolescale" id="k881"> </a>set dipoleScale (-10.0 to 10.0)</td ></tr>
<tr name='tr_setbondstyles'>
<td>
<blockquote>
<p >
<i >Sets the overall scale of all displayed dipole vectors.</i ></p ></blockquote></td></tr> 
<tr name='tr_setbondstyles'>
<td valign="top">
<a name="set_hbondsrasmol" id="k871"> </a>set hbondsRasmol TRUE</td ></tr>
<tr name='tr_setbondstyles'>
<td>
<blockquote>
<p >
<i >For PDB files, generally Jmol will use a hydrogen bond calculation based on RasMol; for other file types, Jmol uses its own calculation. Setting this parameter FALSE causes hydrogen bonds to be calculated for all models using the Jmol calculation and involving 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#hbond">set hbondsAngleMinimum</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#hbond">set hbondsDistanceMaximum</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setbondstyles'>
<td valign="top">
<a name="set_hbondssolid" id="k872"> </a>set hbondsSolid FALSE</td ></tr>
<tr name='tr_setbondstyles'>
<td>
<blockquote>
<p >
<i >Setting this parameter TRUE causes hydrogen bonds to be displayed as solid lines rather than dotted lines.</i ></p ></blockquote></td></tr> 
<tr name='tr_setbondstyles'>
<td valign="top">
<a name="set_hbondsbackbone" id="k873"> </a>set hbondsBackbone FALSE</td ></tr>
<tr name='tr_setbondstyles'>
<td>
<blockquote>
<p >
<i >Hydrogen bonds between protein amino acid residues or nucleic acid base pairs are displayed as lines. These lines can be displayed whether or not the H atoms are present in the file, and can be drawn either between the two non-hydrogen atoms involved in the bond (O or N, typically, the default) or, alternatively, between the two backbone alpha-carbon atoms, depending upon the desired effect.</i ></p ></blockquote></td></tr> 
<tr name='tr_setbondstyles'>
<td valign="top">
<a name="set_minbonddistance" id="k874"> </a>set minBondDistance (decimal)</td ></tr>
<tr name='tr_setbondstyles'>
<td>
<blockquote>
<p >
<i >Sets the minimum bond distance for autobonding. Should be set prior to file loading for proper maintainence of the Jmol state.</i ></p ></blockquote></td></tr> 
<tr name='tr_setbondstyles'>
<td valign="top">
<a name="set_multiplebondbananas" id="k875"> </a>
<span class=newer>set multipleBondBananas FALSE [
<b>Jmol 14.3.15</b>]</span></td ></tr>
<tr name='tr_setbondstyles'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Renders multiple bonds as "banana" bonds. This setting must be made each time a new file is loaded.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_setbondstyles'>
<td valign="top">
<a name="set_multiplebondradiusfactor" id="k876"> </a>set multipleBondRadiusFactor 0</td ></tr>
<tr name='tr_setbondstyles'>
<td>
<blockquote>
<p >
<i >Sets the radius of the multiple bond lines relative to the standard setting. Starting with Jmol 14.4, with a positive number for spacing but negative for multipleBondRadiusFactor, the bonds are rotated to be fixed multiple bonds 90 degrees out of the trigonal plane.</i ></p ></blockquote></td></tr> 
<tr name='tr_setbondstyles'>
<td valign="top">
<a name="set_multiplebondspacing" id="k877"> </a>set multipleBondSpacing -1</td ></tr>
<tr name='tr_setbondstyles'>
<td>
<blockquote>
<p >
<i >When changed from its default value of -1, sets the distance between the lines in a multiple bond to a specific value and also instructs Jmol to draw multiple bonds in the plane of the atoms involved. (The default rendering in Jmol is to draw multiple bonds in such a way as they are always visible as multiple bonds.) With a positive number for spacing but negative for multipleBondRadiusFactor, the bonds are rotated to be fixed multiple bonds 90 degrees out of the trigonal plane.</i ></p ></blockquote></td></tr> 
<tr name='tr_setbondstyles'>
<td valign="top">
<a name="set_partialdots" id="k878"> </a>set partialDots FALSE</td ></tr>
<tr name='tr_setbondstyles'>
<td>
<blockquote>
<p >
<i >Displays partial bonds as dots, not dashes.</i ></p ></blockquote></td></tr> 
<tr name='tr_setbondstyles'>
<td valign="top">
<a name="set_showmultiplebonds" id="k865"> </a>set showMultipleBonds ON</td ></tr>
<tr name='tr_setbondstyles'>
<td>
<blockquote>
<p >
<i >In some file formats (.mol files, for example) the connection data may indicate the bond type--single, double, triple, or quadruple. Use 
<b>set showMultipleBonds OFF</b> when you want all bonds to appear as single bonds. </i ></p ></blockquote></td></tr> 
<tr name='tr_setbondstyles'>
<td valign="top">
<a name="set_ssbonds" id="k879"> </a>set ssbonds BACKBONE or SIDECHAIN</td ></tr>
<tr name='tr_setbondstyles'>
<td>
<blockquote>
<p >
<i >Sulfur-sulfur bonds in cysteine bridges of proteins are displayed as lines. These lines can either be between the two sidechain sulfur atoms (the default) or between the two backbone alpha-carbon atoms, depending upon the desired effect.</i ></p ></blockquote></td></tr> 
<tr name='tr_setbondstyles'>
<td valign="top">
<a name="set_ssbondsbackbone" id="k880"> </a>set ssBondsBackbone FALSE</td ></tr>
<tr name='tr_setbondstyles'>
<td>
<blockquote>
<p >
<i >Setting this parameter TRUE is an alternative method of setting disulfide bonds to backbone; it can be tested using Jmol math.</i ></p ></blockquote></td></tr> 
<tr name='tr_setbondstyles'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_setbondstyles'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples/bonds.htm">bonds.htm</a> </td></tr>
<tr name='tr_setbondstyles'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_setbondstyles'>
<td colspan="5">
<p>
<a class="xref" href="#bondorder">bondorder</a> 
<a class="xref" href="#connect">connect</a> 
<a class="xref" href="#hbonds">hbonds</a> 
<a class="xref" href="#setfilesandscripts">set (files and scripts)</a> 
<a class="xref" href="#ssbonds">ssbonds</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_setbondstyles'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k864">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_setcallback'>
<td colspan="5">
<h3 >
<a id="setcallback" name="setcallback">set (callback)</a>
<a id="k882"> </a>
<a id="set_animframecallback_top"> </a>
<a id="set_hovercallback_top"> </a>
<a id="set_echocallback_top"> </a>
<a id="set_evalcallback_top"> </a>
<a id="set_scriptcallback_top"> </a>
<a id="set_measurecallback_top"> </a>
<a id="set_minimizationcallback_top"> </a>
<a id="set_loadstructcallback_top"> </a>
<a id="set_messagecallback_top"> </a>
<a id="set_pickcallback_top"> </a>
<a id="set_resizecallback_top"> </a>
<a id="set_structuremodifiedcallback_top"> </a>
<a id="set_synccallback_top"> </a></h3></td></tr>
<tr name='tr_setcallback'>
<td>
<i >Jmol allows for dynamic JavaScript callback function definition. You can specify the functions to receive callbacks, and you can change the functions at any time. Specific parameters sent to these functions are discussed more fully at 
<a class="xref" href="http://jmol.sourceforge.net/jslibrary/#jmolSetCallback" target="_blank">http://jmol.sourceforge.net/jslibrary/#jmolSetCallback</a>. To turn off callbacks of a given type, specify "NONE". The function name must be present in JavaScript on the page containing the applet. Specifying "alert" will send the message to the user via a JavaScript alert. Note that quotation marks are required around the function name. If the filename starts with "jmolscript:" then instead of JavaScript being run, Jmol executes the Jmol script that follows. For example, 
<b>set hoverCallback "jmolscript:script hover.spt"</b> executes the Jmol script "script hover.spt" when an atom is hovered over. The code in the file hover.spt can then respond to that hovering action without the need for JavaScript. 
<br />
<br /></i ></td></tr>
<tr name='tr_setcallback'>
<td valign="top">
<a name="set_animframecallback" id="k884"> </a>set AnimFrameCallback "function name"</td ></tr>
<tr name='tr_setcallback'>
<td>
<blockquote>
<p >
<i >Sends a message indicating a change of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frame">frame</a>. For compatibility with Chime, the second parameter of this function returns a number ONE LESS than the actual frame number. This function returns nine parameters. The product of the last two parameters indicates the true direction of animation. 
<br>
<br>function animFrameCallback(app, frameNo, fileNo, modelNo, firstNo, lastNo, isAnimationRunning, animationDirection, currentDirection)
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >app</td >
<td valign="top" >String</td >
<td valign="top" >The name of the applet </td ></tr >
<tr >
<td valign="top" >frameNo</td >
<td valign="top" >int</td >
<td valign="top" >The current frame number (0-based) </td ></tr >
<tr >
<td valign="top" >fileNo</td >
<td valign="top" >int</td >
<td valign="top" >The current file number (1-based) </td ></tr >
<tr >
<td valign="top" >modelNo</td >
<td valign="top" >int</td >
<td valign="top" >The current model number within the current file (1-based) </td ></tr >
<tr >
<td valign="top" >firstNo</td >
<td valign="top" >int</td >
<td valign="top" >The first frame of the animation range, expressed as fileNo*1000000+modelNo </td ></tr >
<tr >
<td valign="top" >lastNo</td >
<td valign="top" >int</td >
<td valign="top" >The last frame of the animation range, expressed as fileNo*1000000+modelNo </td ></tr >
<tr >
<td valign="top" >isAnimationRunning</td >
<td valign="top" >int</td >
<td valign="top" >0 (animation is off) or 1 (animation is on) </td ></tr >
<tr >
<td valign="top" >animationDirection</td >
<td valign="top" >int</td >
<td valign="top" >1 (animation direction +1) or -1 (animation direction -1) </td ></tr >
<tr >
<td valign="top" >currentDirection</td >
<td valign="top" >int</td >
<td valign="top" >1 (forward) or -1 (reverse)</td ></tr ></table ></i ></p ></blockquote></td></tr> 
<tr name='tr_setcallback'>
<td valign="top">
<a name="set_echocallback" id="k886"> </a>set EchoCallback "function name"</td ></tr>
<tr name='tr_setcallback'>
<td>
<blockquote>
<p >
<i >Sends a message each time the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#echo">echo</a> command is executed. If an EchoCallback function is not defined, these messages go to the MessageCallback function.</i ></p ></blockquote></td></tr> 
<tr name='tr_setcallback'>
<td valign="top">
<a name="set_evalcallback" id="k887"> </a>set EvalCallback</td ></tr>
<tr name='tr_setcallback'>
<td>
<blockquote>
<p >
<i >Generally the Jmol applet is allowed to use the eval() function of the host page JavaScript using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#javascript">javascript</a> command (unless execution of JavaScript by the applet has been specifically disallowed by setting _jmol.noEval = true prior to the jmolApplet() call). The setting of 
<b>evalCallback</b> function must be made prior to jmolAppletCall() using 
<b>jmolSetCallback("evalCallback","someFunctionName")</b>. It cannot be set using 
<b>set evalCallback</b>. The callback sends the JavaScript to be evaluated back to the web page for evaluation rather than initiating that evaluation within Jmol. This could be important for the signed applet in order to isolate threads or for debugging applet calls to eval(). It is used in 
<a class="xref" href="Jmol Protein Explorer" target="_blank">http://chemapps.stolaf.edu/pe/protexpl</a>. </i ></p ></blockquote></td></tr> 
<tr name='tr_setcallback'>
<td valign="top">
<a name="set_hovercallback" id="k885"> </a>set HoverCallback "function name"</td ></tr>
<tr name='tr_setcallback'>
<td>
<blockquote>
<p >
<i >Sends a message indicating what atoms is being hovered over, independently of whether 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#hover">hover</a> is ON or OFF.</i ></p ></blockquote></td></tr> 
<tr name='tr_setcallback'>
<td valign="top">
<a name="set_loadstructcallback" id="k891"> </a>set LoadStructCallback "function name"</td ></tr>
<tr name='tr_setcallback'>
<td>
<blockquote>
<p >
<i >Sends a message each time a file is 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#load">loaded</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setcallback'>
<td valign="top">
<a name="set_measurecallback" id="k889"> </a>set MeasureCallback "function name"</td ></tr>
<tr name='tr_setcallback'>
<td>
<blockquote>
<p >
<i >Sends a message indicating the status of measurements made by the user. If a MeasureCallback function is not defined, these messages go to the MessageCallback function.</i ></p ></blockquote></td></tr> 
<tr name='tr_setcallback'>
<td valign="top">
<a name="set_messagecallback" id="k892"> </a>set MessageCallback "function name"</td ></tr>
<tr name='tr_setcallback'>
<td>
<blockquote>
<p >
<i >Sends a wide variety of messages during script execution.</i ></p ></blockquote></td></tr> 
<tr name='tr_setcallback'>
<td valign="top">
<a name="set_minimizationcallback" id="k890"> </a>set MinimizationCallback "function name"</td ></tr>
<tr name='tr_setcallback'>
<td>
<blockquote>
<p >
<i >Sends a message that indicates the status of a currently running 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#minimize">minimization</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setcallback'>
<td valign="top">
<a name="set_pickcallback" id="k893"> </a>set PickCallback "function name"</td ></tr>
<tr name='tr_setcallback'>
<td>
<blockquote>
<p >
<i >Sends a message that depends upon the current status of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setpicking">set picking</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setcallback'>
<td valign="top">
<a name="set_resizecallback" id="k894"> </a>set ResizeCallback "function name"</td ></tr>
<tr name='tr_setcallback'>
<td>
<blockquote>
<p >
<i >Sends a message indicating changes of the window size.</i ></p ></blockquote></td></tr> 
<tr name='tr_setcallback'>
<td valign="top">
<a name="set_scriptcallback" id="k888"> </a>set ScriptCallback "function name"</td ></tr>
<tr name='tr_setcallback'>
<td>
<blockquote>
<p >
<i >Sends messages indicating the status of script execution. Line-by-line script commands are sent if one has 
<b>set debugScript TRUE</b>. If a ScriptCallback function is not defined, these messages go to the MessageCallback function.</i ></p ></blockquote></td></tr> 
<tr name='tr_setcallback'>
<td valign="top">
<a name="set_structuremodifiedcallback" id="k895"> </a>set StructureModifiedCallback "function name"</td ></tr>
<tr name='tr_setcallback'>
<td>
<blockquote>
<p >
<i >Sends a message each time a structure is modified. Parameters include mode, atomIndex and modelIndex, where mode is one of: 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > 1 </td >
<td valign="top" > assignAtom element/charge change start </td ></tr >
<tr >
<td valign="top" > -1 </td >
<td valign="top" > assignAtom element/charge change end </td ></tr >
<tr >
<td valign="top" > 2 </td >
<td valign="top" > assignBond start </td ></tr >
<tr >
<td valign="top" > -2 </td >
<td valign="top" > assignBond end </td ></tr >
<tr >
<td valign="top" > 3 </td >
<td valign="top" > assignAtom position start </td ></tr >
<tr >
<td valign="top" > -3 </td >
<td valign="top" > assignAtom position end </td ></tr >
<tr >
<td valign="top" > 4 </td >
<td valign="top" > delete atom begin </td ></tr >
<tr >
<td valign="top" > -4 delete atom end </td ></tr >
<tr >
<td valign="top" > 5 </td >
<td valign="top" > delete model begin </td ></tr >
<tr >
<td valign="top" > -5 </td >
<td valign="top" > delete model end </td ></tr ></table ></i ></p ></blockquote></td></tr> 
<tr name='tr_setcallback'>
<td valign="top">
<a name="set_synccallback" id="k896"> </a>set SyncCallback "function name"</td ></tr>
<tr name='tr_setcallback'>
<td>
<blockquote>
<p >
<i >The SyncCallback method allows a JavaScript function to intercept and modify or cancel an applet-applet 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#sync">sync</a> message. If the called function returns "" or 0, the synchronization is canceled; any other string is substituted for the script and sent to the other currently synchronized applets.</i ></p ></blockquote></td></tr> 
<tr name='tr_setcallback'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_setcallback'>
<td colspan="5">
<p>
<a class="xref" href="#getproperty">getProperty</a> 
<a class="xref" href="#javascript">javascript</a> 
<a class="xref" href="#script">script</a> </p></td></tr>
<tr name='tr_setcallback'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k883">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_setdebugging'>
<td colspan="5">
<h3 >
<a id="setdebugging" name="setdebugging">set (debugging)</a>
<a id="k897"> </a>
<a id="set_debug_top"> </a>
<a id="set_debugscript_top"> </a>
<a id="set_delaymaximumms_top"> </a>
<a id="set_fontcaching_top"> </a>
<a id="set_historylevel_top"> </a>
<a id="set_loglevel_top"> </a>
<a id="set_showscript_top"> </a>
<a id="set_scriptreportinglevel_top"> </a></h3></td></tr>
<tr name='tr_setdebugging'>
<td>
<i > 
<br />
<br /></i ></td></tr>
<tr name='tr_setdebugging'>
<td valign="top">
<a name="set_debug" id="k899"> </a>set debug OFF</td ></tr>
<tr name='tr_setdebugging'>
<td>
<blockquote>
<p >
<i >Turning this parameter ON sets 
<b>debugScript</b> ON and 
<b>logLevel</b> to 5; setting it OFF returns these settings to their standard values (OFF and 4, respectively).</i ></p ></blockquote></td></tr> 
<tr name='tr_setdebugging'>
<td valign="top">
<a name="set_debugscript" id="k900"> </a>set debugScript OFF</td ></tr>
<tr name='tr_setdebugging'>
<td>
<blockquote>
<p >
<i >Turning this parameter ON enables debugging (going to a JavaScript message 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setcallback">callback</a>).</i ></p ></blockquote></td></tr> 
<tr name='tr_setdebugging'>
<td valign="top">
<a name="set_delaymaximumms" id="k901"> </a>set delayMaximumMs 0</td ></tr>
<tr name='tr_setdebugging'>
<td>
<blockquote>
<p >
<i >Sets the maximum delay that scripts will use, primarily used for testing scripts. The default setting of this parameter, 0, disables maximum delay checking.</i ></p ></blockquote></td></tr> 
<tr name='tr_setdebugging'>
<td valign="top">
<a name="set_fontcaching" id="k902"> </a>set fontCaching TRUE</td ></tr>
<tr name='tr_setdebugging'>
<td>
<blockquote>
<p >
<i >A debugging parameter.</i ></p ></blockquote></td></tr> 
<tr name='tr_setdebugging'>
<td valign="top">
<a name="set_historylevel" id="k903"> </a>set historyLevel (integer)</td ></tr>
<tr name='tr_setdebugging'>
<td>
<blockquote>
<p >
<i >Primarily for debugging complex scripts. Sets the level of depth in scripts for which the command 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#history">history</a> is recorded. A setting of 0 (the default) indicates that commands in scripts run using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#script">script</a> command should not be recorded. A setting of 1 indicates that such commands should be recorded for script commands given at the top level. A setting of "n" indicates that all commands executed from script commands through level "n" should be recorded. A setting of -1 turns off all history recording.</i ></p ></blockquote></td></tr> 
<tr name='tr_setdebugging'>
<td valign="top">
<a name="set_loglevel" id="k904"> </a>set logLevel (0 - 5)</td ></tr>
<tr name='tr_setdebugging'>
<td>
<blockquote>
<p >
<i >You may also set the amount of logging sent to the Java console (as opposed to the Jmol 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#console">console</a>). The default level is 4, "information, warnngs, and errors". Levels include: 
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >0</td >
<td valign="top" >no messages whatsoever</td ></tr >
<tr >
<td valign="top" >1</td >
<td valign="top" >fatal errors only</td ></tr >
<tr >
<td valign="top" >2</td >
<td valign="top" >all errors</td ></tr >
<tr >
<td valign="top" >3</td >
<td valign="top" >all warnings and errors</td ></tr >
<tr >
<td valign="top" >4</td >
<td valign="top" >information, warnings, and errors</td ></tr >
<tr >
<td valign="top" >5</td >
<td valign="top" >full debugging</td ></tr ></table ></i ></p ></blockquote></td></tr> 
<tr name='tr_setdebugging'>
<td valign="top">
<a name="set_scriptreportinglevel" id="k907"> </a>set scriptReportingLevel (integer)</td ></tr>
<tr name='tr_setdebugging'>
<td>
<blockquote>
<p >
<i >Sets the maximum script depth (how many scripts have been called) for which certain messages should appear in the console and be reported back via callbacks. A value of 0 (default) displays messages only from the topmost level -- as, for example, commands entered from the console; a value of 1 displays messages from the top level and messages due to commands such as "script t.spt" but not from scripts that are called from t.spt; etc. A value of -1 turns off all reporting. Affected commands include 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#connect">connect</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#select">select</a> (and related commands), and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set">set</a>. This parameter is particularly useful when scripts utilize 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#goto">message/goto</a> to control program flow.</i ></p ></blockquote></td></tr> 
<tr name='tr_setdebugging'>
<td valign="top">
<a name="set_showscript" id="k905"> </a>set showScript OFF</td ></tr>
<tr name='tr_setdebugging'>
<td>
<blockquote>
<p >
<i >Turning this parameter ON causes Jmol to show the script commands from a script file as they are executed. A slight difference may be observed when showScript is set in comparison to normal operation in that when showScript is set, an automatic refresh is executed after every command. </i ></p ></blockquote></td></tr> 
<tr name='tr_setdebugging'>
<td valign="top">
<a id="k906"> </a>set showScript milliseconds</td ></tr>
<tr name='tr_setdebugging'>
<td>
<blockquote>
<p >
<i >Shows the script commands from a script file as they are executed and pauses the specified number of milliseconds between commands. Setting the delay to 0 turns script showing off.</i ></p ></blockquote></td></tr> 
<tr name='tr_setdebugging'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k898">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_setfilesandscripts'>
<td colspan="5">
<h3 class=h3newer>
<a id="setfilesandscripts" name="setfilesandscripts">set (files and scripts)</a>
<a id="k908"> </a>
<a id="set_allowembeddedscripts_top"> </a>
<a id="set_appendnew_top"> </a>
<a id="set_appletproxy_top"> </a>
<a id="set_applysymmetrytobonds_top"> </a>
<a id="set_atomtypes_top"> </a>
<a id="set_bondingversion_top"> </a>
<a id="set_autobond_top"> </a>
<a id="set_autoloadorientation_top"> </a>
<a id="set_currentlocalpath_top"> </a>
<a id="set_dataseparator_top"> </a>
<a id="set_defaultdirectory_top"> </a>
<a id="set_defaultdropscript_top"> </a>
<a id="set_defaultlattice_top"> </a>
<a id="set_defaultloadscript_top"> </a>
<a id="set_edsurlcutoff_top"> </a>
<a id="set_edsurlformat_top"> </a>
<a id="set_edsurlformatdiff_top"> </a>
<a id="set_forceautobond_top"> </a>
<a id="set_history_top"> </a>
<a id="set_loadformat_top"> </a>
<a id="set_loadligandformat_top"> </a>
<a id="set_nihresolverformat_top"> </a>
<a id="set_pathforallfiles_top"> </a>
<a id="set_pdbaddhydrogens_top"> </a>
<a id="set_scriptqueue_top"> </a>
<a id="set_smallmoleculemaxatoms_top"> </a>
<a id="set_smilesurlformat_top"> </a> 
<br />
<span class=newer>(v. 12.2 -- several new settings, including pdbAddHydrogens)</span></h3></td></tr>
<tr name='tr_setfilesandscripts'>
<td>
<i >The following commands relate to how files and scripts are loaded and how scripts are executed. 
<br />
<br /></i ></td></tr>
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_allowembeddedscripts" id="k910"> </a>set allowEmbeddedScripts</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >When set TRUE (default), Jmol will read scripts that are contained in certain file types and append them to the script set using 
<b>set defaultLoadScript</b> (below). Embedded scripts are indicated by "jmolscript:" followed by valid Jmol script commands in the following file locations:
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >CIF</td >
<td valign="top" >any line(s)</td ></tr >
<tr >
<td valign="top" >MOL</td >
<td valign="top" >line 3</td ></tr >
<tr >
<td valign="top" >PDB</td >
<td valign="top" >any REMARK line(s)</td ></tr >
<tr >
<td valign="top" >XYZ</td >
<td valign="top" >line 2</td ></tr ></table > Support for additional file types will be provided upon user request. </i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_appendnew" id="k911"> </a>set appendNew TRUE</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >Setting this parameter to FALSE causes Jmol to add atoms to the last model in a file set rather than add a whole new model when 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#load">load APPEND</a> is used.</i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_appletproxy" id="k912"> </a>set appletProxy "URL"</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >Sets the URL for a proxy server when 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#load">loading</a> a file or reading a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#pmesh">pmesh</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface</a> or when reading a file-based 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#script">script</a>. A proxy server is a server-side application (typically written using PERL, PHP, or ColdFusion) on the same host as the JAR file that can deliver files from other servers on the internet. Jmol appends "?url=" followed by the URL of the requested data file to the indicated proxy server name. NOte that Java security requires that this call be to the same server that hosts the JAR file. </i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_applysymmetrytobonds" id="k913"> </a>set applySymmetryToBonds OFF</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >Turning this parameter ON instructs Jmol, when applying symmetry to atoms, as in "load xxx.cif {1 1 1}", to also apply symmetry to the bonds indicated in the file. The flag is useful when normal Jmol autobonding would not properly connect atoms, but the model is "molecular" -- the base atom coordinates are correct for whole molecules. The flag should not be used in cases where the application of symmetry operations creates new bonds that were not present in the original set, as for quartz.cif, where there is only one bond initially, and after applying symmetry new bonds are created that are between atoms that were created using two different symmetry operations. If bonds are not indicated in a file, this flag is ignored, and Jmol uses its autobonding algorithm to create bonds.</i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_atomtypes" id="k914"> </a>set atomTypes "..."</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >The MOL2 and MDTOP file formats specifically do not contain enough information within the file to determine the element for all atoms. (The atom types depend upon which force field was employed, and not all force fields allow the direct decoding of element from atom type.) The 
<b>atomTypes</b> setting allows the user to correlate atom types with specific elements for these specific readers. The syntax is "abcd=>C;efgh=>H;...", indicating that atom type "abcd" is carbon, atom type "efgh" is hydrogen, etc. The matching is case sensitive.</i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_bondingversion" id="k915"> </a>
<span class=new>set bondingVersion 0</span></td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >
<span class=new>Jmol's autobonding algorithm can accept two bonding data sets. The first implemented is from 
<a class="xref" href="http://sourceforge.net/p/openbabel/code/485/tree/openbabel/trunk/data/element.txt" target="_blank">Open Babel 1.100.1</a> and is a mixture of ionic and covalent bonding parameters. 
<b>set bondingVersion 0</b> selects this default set. 
<span class="newv">Jmol 14.2</span> adds a set of covalent bonding parameters from 
<a class="xref" href="http://www.ncbi.nlm.nih.gov/pubmed/19058281" target="_blank">Pyykko, P. and Atsumi, M. (2009), Molecular Single-Bond Covalent Radii for Elements 1, Chem. Eur. J., 15: 186</a>. This second set is purely covalent. In either case, if an atom has a formal charge, or the user as specified the 
<b>bondingRadius</b> for that atom, neither set will be used.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_autobond" id="k916"> </a>set autobond ON</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >Some file formats that Jmol reads, such as XYZ, do not contain bonding information. In these cases, the default action for Jmol is to generate bonds automatically based on an algorithm. When given prior to loading a model, the 
<b>set autobond OFF</b> command causes Jmol to not do any automatic bond creation when subsequent models are loaded.</i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_autoloadorientation" id="k917"> </a>set autoLoadOrientation FALSE</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >Specifically for Spartan and Sygress readers, this setting (default FALSE) sets the default orientation (when the file is loaded or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#reset">reset</a> is issued) to that given in the file. Starting with Jmol 12.0, the setting is ignored, and the default orientation is automatically used unless FILTER "NoOrient" is included.</i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_currentlocalpath" id="k918"> </a>set currentLocalPath "path"</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >Sets the path to files specifically for the dialog box that pops up when a file name is "?" in a command such as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#load">load</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write</a>. This variable is automatically set when the user navigates to a new directory during a file save dialog.</i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_dataseparator" id="k919"> </a>set dataSeparator "separator text"</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >Issued prior to the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#data">data</a> command, sets the text that will separate one set of file datat from another, thus allowing the inline loading of multiple file types.</i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_defaultdirectory" id="k920"> </a>set defaultDirectory "directory path"</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >Sets the default directory to use for reading all files. This will generally be a relative path such as "./data" or "../files". Note that Java security requires that if the applet is run from a hard drive rather than via the internet, all files read must be either in the directory containing the JAR file or in a subdirectory of that directory. If the applet is unsigned and loaded from the internet, then Java security typically requires that all files read are from the host from which the JAR file was read. But see 
<b>set appletProxy</b>, above. This flag is applicable only to the Jmol applet, not to the Jmol application.</i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_defaultdropscript" id="k921"> </a>set defaultDropScript "script"</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >Sets the default script to use for drag-drop and File|Open. The Jmol default is: 
<b>zap; load ASYNC "%FILE";if (%ALLOWCARTOONS && _loadScript == " && defaultLoadScript == " && _filetype == 'Pdb') {if ({(protein or nucleic)&*/1.1} && {*/1.1}[1].groupindex != {*/1.1}[0].groupindex){select protein or nucleic;cartoons only;}if ({visible}){color structure}else{wireframe -0.1};if (!{visible}){spacefill 23%};select *};</b></i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_defaultlattice" id="k922"> </a>set defaultLattice {i j k}</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >For crystallographic systems, sets the default lattice to be loaded. {1 1 1} loads the standard single unit cell (555). {2 1 1} loads two unit cells along the 
<b>i</b> direction, cells 555 and 655. {2 2 2} loads a set of eight unit cells; {3 3 3} loads a set of 27. This last is probably most useful, because it loads one unit cell surrounded by all 26 cells sharing its 6 faces, 12 edges, and 8 corners.</i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_defaultloadscript" id="k923"> </a>set defaultLoadScript "script"</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >Sets a script to run after any file is loaded. The script must be in quotations. If the script itself needs quotation marks, then it should be placed in a file and indicated as follows: 
<b>set defaultLoadScript "script myscript.scr"</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_edsurlcutoff" id="k924"> </a>
<span class=newer>set edsUrlCutoff "url" [
<b>Jmol 14.3.10</b>]</span></td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Sets the URL to use for obtaining the Uppsala Electron Density server secondary file that gives cut-off/sigma information such as found at 
<a class="xref" href="http://eds.bmc.uu.se/eds/dfs/bl/1blu/1blu.sfdat" target="_blank">http://eds.bmc.uu.se/eds/dfs/bl/1blu/1blu.sfdat</a></span></i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_edsurlformat" id="k925"> </a>
<span class=newer>set edsUrlFormat "url" [
<b>Jmol 14.3.10</b>]</span></td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Sets the URL to use for obtaining the Uppsala Electron Density server MAP file (2fo-fc).</span></i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_edsurlformatdiff" id="k926"> </a>
<span class=newer>set edsUrlFormatDiff "url" [
<b>Jmol 14.3.10</b>]</span></td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Sets the URL to use for obtaining the Uppsala Electron Density server MAP file for fo-fc (difference) maps.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_forceautobond" id="k927"> </a>set forceAutoBond OFF</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >
<b>set forceAutoBond ON</b> tells Jmol to disregard any bonding information in a file and use its own internal algorithm for determining connectivity. Its effect is for all future file loads until set OFF. This setting is particularly useful for some PDB and mmCIF files that already have a threshold amount of bonding, so that a full set of bonding can be created automatically at load time. This is necessary for proper assignment of secondary structure. </i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_history" id="k928"> </a>set history nLines</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >Sets the number of lines of command history to record (minimum 2) and turns history recording ON. 
<b>set history 0</b> turns off the command history feature but does not actually set the number of lines to zero. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#history">history</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#show">show history</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_loadformat" id="k929"> </a>set loadFormat "URL"</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >The load format, by default "http://www.rcsb.org/pdb/files/%FILE.pdb.gz", allows setting of the URL that will be used when "=" is used in front of a file name in a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#load">load</a> command, for example: 
<b>load =1crn</b>. </i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_loadligandformat" id="k930"> </a>set loadLigandFormat "URL"</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >The load format, by default "http://www.rcsb.org/pdb/files/ligand/%FILE.cif", allows setting of the URL that will be used when "==" is used in front of a file name in a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#load">load</a> command, for example: 
<b>load ==atp</b>. This parameter also sets the source of ligand files when hydrogens are added using 
<b>set pdbAddHydrogens TRUE</b> prior to file loading, which allows hydrogen to be added to ligands that are not yet in the PDB component dictionary.</i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_nihresolverformat" id="k931"> </a>set nihResolverFormat "URL"</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >The load format for reading information such as chemical names, inchikeys, standard inchi, and images from the NIH/NCI CACTVS server, default http://cactus.nci.nih.gov/chemical/structure/%FILE.</i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_pathforallfiles" id="k932"> </a>set pathForAllFiles "path"</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >Sets the path used in all file reading operations such as LOAD, ISOSURFACE, and SCRIPT, regardless of what is given for the path in those commands. Also disables the WRITE command. This parameter can be used to scripts originally pointing to one directory to point to another.</i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_pdbaddhydrogens" id="k933"> </a>set pdbAddHydrogens FALSE</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >The 
<b>pdbAddHydrogens</b> option instructs Jmol to add both hydrogens and multiple bonding when PDB files are read. Hydrogen atoms are added to all residues, both ATOM and HETATM. Jmol will fetch RCSB ligand CIF files for attaching hydrogens, and the addition is guaranteed to name hydrogens appropriately. In particular, CH
<sub>2</sub> groups are named properly, with the proper prochirality. (Not all algorithms do this properly, but Jmol does.) Hydrogen atoms are added to the sidechain nitrogen atom of lysine and to both nitrogen atoms of histidine -- avoiding an analysis of "most probable" hydrogen position. Hydrogen atoms are not added to water. When a state file (SPT JMOL, PNG, or JPG) is created from such a model, Jmol stores the fetched CIF data as part of that state and does not fetch it again when the file is reopened. </i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_scriptqueue" id="k934"> </a>set scriptQueue ON</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >Turning this parameter OFF disables script queuing. Setting this parameter OFF should never be necessary, but it is provided here as an option. When script queuing is enabled (the default), scripts that are 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loop">looping</a> require 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#quit">quit</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#exit">exit</a> to be executed in a subsequent script in order to complete. When script queuing is turned off, scripts from different threads may collide and cause unpredictable behavior or crashing of Jmol.</i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_smallmoleculemaxatoms" id="k935"> </a>set smallMoleculeMaxAtoms 40000</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >This parameter sets the maximum number of atoms for default rendering of the model. Models with this number or fewer atoms will be rendered with the default spacefill rendering and the default bond diameter; models with more than this number of atoms will be displayed by default with 
<b>spacefill 0; wireframe 1</b> to conserve resources.</i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td valign="top">
<a name="set_smilesurlformat" id="k936"> </a>set smilesURLformat "URL"</td ></tr>
<tr name='tr_setfilesandscripts'>
<td>
<blockquote>
<p >
<i >The source of files when using the "$" or "SMILES" keyword in the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#load">load</a> command. Defualt: "http://cactus.nci.nih.gov/chemical/structure/%FILE/file?format=sdf&get3d=True"</i ></p ></blockquote></td></tr> 
<tr name='tr_setfilesandscripts'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_setfilesandscripts'>
<td colspan="5">
<p>
<a class="xref" href="#jmol/jspecview/magresview">[Jmol/JSpecView/MagresView]</a> 
<a class="xref" href="#bondorder">bondorder</a> 
<a class="xref" href="#cache">cache</a> 
<a class="xref" href="#calculate">calculate</a> 
<a class="xref" href="#cd">cd</a> 
<a class="xref" href="#connect">connect</a> 
<a class="xref" href="#delete">delete</a> 
<a class="xref" href="#exit">exit</a> 
<a class="xref" href="#hbonds">hbonds</a> 
<a class="xref" href="#initialize">initialize</a> 
<a class="xref" href="#load">load</a> 
<a class="xref" href="#quit">quit</a> 
<a class="xref" href="#setbondstyles">set (bond styles)</a> 
<a class="xref" href="#ssbonds">ssbonds</a> 
<a class="xref" href="#wireframe">wireframe</a> 
<a class="xref" href="#zap">zap</a> </p></td></tr>
<tr name='tr_setfilesandscripts'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k909">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_sethighlights'>
<td colspan="5">
<h3 >
<a id="sethighlights" name="sethighlights">set (highlights)</a>
<a id="k937"> </a>
<a id="set_display_top"> </a>
<a id="set_frank_top"> </a></h3></td></tr>
<tr name='tr_sethighlights'>
<td>
<i >This command group allows for annotation and highlighting of atoms in terms of labels and "halos."
<br />
<br /></i ></td></tr>
<tr name='tr_sethighlights'>
<td valign="top">
<a name="set_display" id="k939"> </a>set display SELECTED/NORMAL</td ></tr>
<tr name='tr_sethighlights'>
<td>
<blockquote>
<p >
<i >(deprecated; see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#selectionhalos">selectionHalos ON/OFF</a>)</i ></p ></blockquote></td></tr> 
<tr name='tr_sethighlights'>
<td valign="top">
<a name="set_frank" id="k940"> </a>set frank</td ></tr>
<tr name='tr_sethighlights'>
<td>
<blockquote>
<p >
<i >See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frank">frank</a></i ></p ></blockquote></td></tr> 
<tr name='tr_sethighlights'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_sethighlights'>
<td colspan="5">
<p>
<a class="xref" href="#backbone">backbone</a> 
<a class="xref" href="#background">background</a> 
<a class="xref" href="#cartoon">cartoon</a> 
<a class="xref" href="#dots">dots</a> 
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#ellipsoid">ellipsoid</a> 
<a class="xref" href="#font">font</a> 
<a class="xref" href="#geosurface">geoSurface</a> 
<a class="xref" href="#hover">hover</a> 
<a class="xref" href="#label">label</a> 
<a class="xref" href="#meshribbon">meshribbon</a> 
<a class="xref" href="#ribbon">ribbon</a> 
<a class="xref" href="#rocket">rocket</a> 
<a class="xref" href="#setlabels">set (labels)</a> 
<a class="xref" href="#setlighting">set (lighting)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#setecho">set echo</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#strand">strand</a> 
<a class="xref" href="#trace">trace</a> 
<a class="xref" href="#vector">vector</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_sethighlights'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k938">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_setlabels'>
<td colspan="5">
<h3 class=h3newer>
<a id="setlabels" name="setlabels">set (labels)</a>
<a id="k941"> </a>
<a id="set_fontscaling_top"> </a>
<a id="set_fontsize_top"> </a>
<a id="set_defaultlabelpdb_top"> </a>
<a id="set_defaultlabelxyz_top"> </a>
<a id="set_labelalignment_top"> </a>
<a id="set_labeloffset_top"> </a>
<a id="set_labeloffsetabsolute_top"> </a>
<a id="set_labelpointer_top"> </a>
<a id="set_labelatom_top"> </a>
<a id="set_labelfront_top"> </a>
<a id="set_labelgroup_top"> </a>
<a id="set_labeltoggle_top"> </a></h3></td></tr>
<tr name='tr_setlabels'>
<td>
<i >This command group sets parameters associated specifically with atom labels. If the atom expression is not indicated, the action is applied to the currently selected atoms. 
<br />
<br /></i ></td></tr>
<tr name='tr_setlabels'>
<td valign="top">
<a name="set_defaultlabelpdb" id="k946"> </a>set defaultLabelPDB "labelFormat"</td ></tr>
<tr name='tr_setlabels'>
<td>
<blockquote>
<p >
<i >Sets the default label for PDB atoms. Default: "%m%r"</i ></p ></blockquote></td></tr> 
<tr name='tr_setlabels'>
<td valign="top">
<a name="set_defaultlabelxyz" id="k947"> </a>set defaultLabelXYZ "labelFormat"</td ></tr>
<tr name='tr_setlabels'>
<td>
<blockquote>
<p >
<i >Sets the default label for non-PDB atoms. Default: "%a"</i ></p ></blockquote></td></tr> 
<tr name='tr_setlabels'>
<td valign="top">
<a name="set_fontscaling" id="k943"> </a>set fontScaling OFF</td ></tr>
<tr name='tr_setlabels'>
<td>
<blockquote>
<p >
<i >When 
<b>fontScaling</b> is set ON, any labels created after that are rescaled when the model is 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#zoom">zoomed</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setlabels'>
<td valign="top">
<a name="set_fontsize" id="k945"> </a>set fontSize 
<a class='def' href='#d944' title='approximately the same as Rasmol -- (integer, 6 to 63)'>[font-size]</a>{default: 8}</td ></tr>
<tr name='tr_setlabels'>
<td>
<blockquote>
<p >
<i >Sets the font size for atom labels for the currently selected atoms.</i ></p ></blockquote></td></tr> 
<tr name='tr_setlabels'>
<td valign="top">
<a name="set_labelalignment" id="k948"> </a>set labelAlignment LEFT, RIGHT, or CENTER</td ></tr>
<tr name='tr_setlabels'>
<td>
<blockquote>
<p >
<i >Sets the label text alignment within a multi-line label as left-, right-, or center-justified. (For overall label alignment, see 
<b>set labeloffset</b>, below.) </i ></p ></blockquote></td></tr> 
<tr name='tr_setlabels'>
<td valign="top">
<a name="set_labelatom" id="k957"> </a>set labelAtom ON/OFF{default: ON} 
<a class='def' href='#d951' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_setlabels'>
<td>
<blockquote>
<p >
<i >If a selected label is rotated behind an atom, it is hidden by that atom (default). If an atom expression is given, an indicator of ON or OFF must also be given. OFF is the same as "SET LABELFRONT".</i ></p ></blockquote></td></tr> 
<tr name='tr_setlabels'>
<td valign="top">
<a name="set_labelfront" id="k958"> </a>set labelFront ON/OFF{default: ON} 
<a class='def' href='#d951' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_setlabels'>
<td>
<blockquote>
<p >
<i >The selected labels will always appear in front of all atoms. If an atom expression is given, an indicator of ON or OFF must also be given. OFF is the same as "SET LABELATOM".</i ></p ></blockquote></td></tr> 
<tr name='tr_setlabels'>
<td valign="top">
<a name="set_labelgroup" id="k959"> </a>set labelGroup ON/OFF{default: ON} 
<a class='def' href='#d951' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_setlabels'>
<td>
<blockquote>
<p >
<i >Selected labels appear in an invisible plane just in front of the atoms 
<i>of their group only</i>. Applicable only to PDB/mmCIF files. If an atom expression is given, an indicator of ON or OFF must also be given. OFF is the same as "SET LABELATOM".</i ></p ></blockquote></td></tr> 
<tr name='tr_setlabels'>
<td valign="top">
<a name="set_labeloffset" id="k952"> </a>set labelOffset 
<a class='def' href='#d949' title='the x-offset -- (integer)'>[x-offset]</a> 
<a class='def' href='#d950' title='the y-offset -- (integer)'>[y-offset]</a> 
<a class='def' href='#d951' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_setlabels'>
<td>
<blockquote>
<p >
<i >Sets the label offset relative to the atom being labeled. A positive number indicates the number of pixels between the atom center and the beginning of the label. A negative number indicates the number of pixels between the atom center and the end of the label, with the entire label to the left of the atom. Zero in either direction indicates centered for that direction. </i ></p ></blockquote></td></tr> 
<tr name='tr_setlabels'>
<td valign="top">
<a id="k953"> </a>set labelOffset {x, y, z} 
<a class='def' href='#d951' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_setlabels'>
<td>
<blockquote>
<p >
<i >Sets the label offset relative to the atom being labeled in angstroms in screen space (after perspective rotation). Numbers between 0 and 1 indicate fractions of offset. </i ></p ></blockquote></td></tr> 
<tr name='tr_setlabels'>
<td valign="top">
<a name="set_labeloffsetabsolute" id="k954"> </a>
<span class=newer>set labelOffsetAbsolute 
<a class='def' href='#d949' title='the x-offset -- (integer)'>[x-offset]</a> 
<a class='def' href='#d950' title='the y-offset -- (integer)'>[y-offset]</a> 
<a class='def' href='#d951' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a> [
<b>Jmol 14.3.14</b>]</span></td ></tr>
<tr name='tr_setlabels'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Sets the label offset relative to the atom being labeled. A positive number indicates the number of pixels between the atom center and the beginning of the label. A negative number indicates the number of pixels between the atom center and the end of the label, with the entire label to the left of the atom. </span></i ></p ></blockquote></td></tr> 
<tr name='tr_setlabels'>
<td valign="top">
<a name="set_labelpointer" id="k955"> </a>set labelPointer OFF 
<a class='def' href='#d951' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_setlabels'>
<td>
<blockquote>
<p >
<i >Turning this parameter ON instructs Jmol to add lines pointing from the selected atoms to their respective labels, using the color of the label text (
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#color">color label xxxx</a>).</i ></p ></blockquote></td></tr> 
<tr name='tr_setlabels'>
<td valign="top">
<a id="k956"> </a>set labelPointer BACKGROUND 
<a class='def' href='#d951' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_setlabels'>
<td>
<blockquote>
<p >
<i >Turns on label pointers to selected atoms, drawing them in the color of the label background.</i ></p ></blockquote></td></tr> 
<tr name='tr_setlabels'>
<td valign="top">
<a name="set_labeltoggle" id="k960"> </a>set labelToggle 
<a class='def' href='#d951' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a></td ></tr>
<tr name='tr_setlabels'>
<td>
<blockquote>
<p >
<i >Toggles the labels on or off for the specified set of atoms. </i ></p ></blockquote></td></tr> 
<tr name='tr_setlabels'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_setlabels'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_setlabels'>
<td colspan="5">
<p>
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#font">font</a> 
<a class="xref" href="#hover">hover</a> 
<a class="xref" href="#label">label</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setecho">set echo</a> </p></td></tr>
<tr name='tr_setlabels'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k942">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_setlanguage'>
<td colspan="5">
<h3 >
<a id="setlanguage" name="setlanguage">set (language)</a>
<a id="k961"> </a>
<a id="set_language_top"> </a>
<a id="set_languagetranslation_top"> </a></h3></td></tr>
<tr name='tr_setlanguage'>
<td>
<i >You can set the language for the applet popup menu to a new lanuage just by selecting the desired language from the language submenu.
<br />
<br /></i ></td></tr>
<tr name='tr_setlanguage'>
<td valign="top">
<a name="set_language" id="k963"> </a>set language "[two-letter code]"</td ></tr>
<tr name='tr_setlanguage'>
<td>
<blockquote>
<p >
<i >The command 
<b>set language "xx"</b>, where 
<b>xx</b> is a two-letter abbreviation for a lanuage, allows this to be done programmatically. Supported languages are listed on the popup menu.</i ></p ></blockquote></td></tr> 
<tr name='tr_setlanguage'>
<td valign="top">
<a name="set_languagetranslation" id="k964"> </a>set languageTranslation ON</td ></tr>
<tr name='tr_setlanguage'>
<td>
<blockquote>
<p >
<i >Setting this parameter OFF turns off language translation. This may be important for pages that need to parse messages coming from Jmol in American English. </i ></p ></blockquote></td></tr> 
<tr name='tr_setlanguage'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k962">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_setlighting'>
<td colspan="5">
<h3 >
<a id="setlighting" name="setlighting">set (lighting)</a>
<a id="k965"> </a>
<a id="set_ambientpercent_top"> </a>
<a id="set_celshading_top"> </a>
<a id="set_celshadingpower_top"> </a>
<a id="set_depth_top"> </a>
<a id="set_diffusepercent_top"> </a>
<a id="set_phongexponent_top"> </a>
<a id="set_slab_top"> </a>
<a id="set_specular_top"> </a>
<a id="set_specularexponent_top"> </a>
<a id="set_specularpower_top"> </a>
<a id="set_specularpercent_top"> </a>
<a id="set_zdepth_top"> </a>
<a id="set_zslab_top"> </a>
<a id="set_zshade_top"> </a>
<a id="set_zshadepower_top"> </a></h3></td></tr>
<tr name='tr_setlighting'>
<td>
<i >This commands in this group determine the overall lighting effects, size, and rotation for the model. Note that in a multi-applet environment, changing lighting values (ambientPercent, diffusePercent, specular, specularExponent, specularPercent, or specularPower) changes them for ALL applets. Effect on another applet may not appear until that model is rotated by the user or some command is issued to that applet that requires updating the display.
<br />
<br /></i ></td></tr>
<tr name='tr_setlighting'>
<td valign="top">
<a name="set_ambientpercent" id="k967"> </a>set ambientPercent (integer 0 to 100)</td ></tr>
<tr name='tr_setlighting'>
<td>
<blockquote>
<p >
<i >Sets the amount of "ambient" light filling the shadows created by the apparent light source. An ambientPercent value of 0 creates an effect of a spotlight on a stage; a value of 100 removes the shadow entirely, creating a flat, nonrealistic effect.</i ></p ></blockquote></td></tr> 
<tr name='tr_setlighting'>
<td valign="top">
<a name="set_celshading" id="k968"> </a>set celShading FALSE</td ></tr>
<tr name='tr_setlighting'>
<td>
<blockquote>
<p >
<i >
<b>set celShading TRUE</b> creates a flat effect similar to a hand-drawn figure.</i ></p ></blockquote></td></tr> 
<tr name='tr_setlighting'>
<td valign="top">
<a name="set_celshadingpower" id="k969"> </a>set celShadingPower (integer)</td ></tr>
<tr name='tr_setlighting'>
<td>
<blockquote>
<p >
<i >This setting sets the strength of cel shading lines. The default value of 10 is a relatively strong, thick line; 5 is a fine line; 0 turns cel shading off. Negative values remove interior shading, producing only an outline. Pixel based; operates on normal to light source (power > 0) or user (power 
< 0); sets color to background contrast (black or white) when normal_z 
< 1 - 2^-(|celShadingPower|/10).</i ></p ></blockquote></td></tr> 
<tr name='tr_setlighting'>
<td valign="top">
<a name="set_depth" id="k970"> </a>set depth (integer)</td ></tr>
<tr name='tr_setlighting'>
<td>
<blockquote>
<p >
<i >Same as the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#depth">depth</a> command, but note that the parameter can be read and manipulated with math: 
<b>depth += 10</b> or 
<b>if (depth != 0)...</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setlighting'>
<td valign="top">
<a name="set_diffusepercent" id="k971"> </a>set diffusePercent (integer 0 to 100)</td ></tr>
<tr name='tr_setlighting'>
<td>
<blockquote>
<p >
<i >Sets the amount of "diffuse" light apparently emanating from the spotlight, but not hitting and reflecting off the model directly. Setting the diffusePercent value to 0 turns this effect off; giving the effect of the model in a black-walled room where no light reflection is possible, effectively turning off all but specular reflections.</i ></p ></blockquote></td></tr> 
<tr name='tr_setlighting'>
<td valign="top">
<a name="set_phongexponent" id="k972"> </a>set phongExponent (integer 0 to 1000)</td ></tr>
<tr name='tr_setlighting'>
<td>
<blockquote>
<p >
<i >Sets the specular strength using a number which is 2^(specularExponent) </i ></p ></blockquote></td></tr> 
<tr name='tr_setlighting'>
<td valign="top">
<a name="set_slab" id="k973"> </a>set slab (integer)</td ></tr>
<tr name='tr_setlighting'>
<td>
<blockquote>
<p >
<i >Same as the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#slab">slab</a> command, but note that the parameter can be read and manipulated with math: 
<b>slab += 10</b> or 
<b>if (slab != 100)...</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setlighting'>
<td valign="top">
<a name="set_specular" id="k974"> </a>set specular OFF</td ></tr>
<tr name='tr_setlighting'>
<td>
<blockquote>
<p >
<i >Turns off the specular reflection (the shiny dot on a curved surface).</i ></p ></blockquote></td></tr> 
<tr name='tr_setlighting'>
<td valign="top">
<a name="set_specularexponent" id="k975"> </a>set specularExponent (integer 1 to 10)</td ></tr>
<tr name='tr_setlighting'>
<td>
<blockquote>
<p >
<i >Ranging from 1 to 10, the specular exponent determines the tightness of the specular spot, with 1 being very broad and 10 being very tight. Techincally, log
<sub>2</sub>(phongExponent).</i ></p ></blockquote></td></tr> 
<tr name='tr_setlighting'>
<td valign="top">
<a name="set_specularpercent" id="k977"> </a>set specularPercent (integer 0 to 100)</td ></tr>
<tr name='tr_setlighting'>
<td>
<blockquote>
<p >
<i >Sets the size of the apparent reflection from a light source.</i ></p ></blockquote></td></tr> 
<tr name='tr_setlighting'>
<td valign="top">
<a name="set_specularpower" id="k976"> </a>set specularPower (integer 0 to 100)</td ></tr>
<tr name='tr_setlighting'>
<td>
<blockquote>
<p >
<i >Sets the density of dots in the specular reflection, producing the effect of a very dim light (10) to a very bright light (100).</i ></p ></blockquote></td></tr> 
<tr name='tr_setlighting'>
<td valign="top">
<a name="set_zdepth" id="k978"> </a>set zDepth (integer)</td ></tr>
<tr name='tr_setlighting'>
<td>
<blockquote>
<p >
<i >Sets the point where the zShade is fully transparent. Ignored if set equal to zSlab (in which case the settings for slab and depth are used).</i ></p ></blockquote></td></tr> 
<tr name='tr_setlighting'>
<td valign="top">
<a name="set_zshade" id="k980"> </a>set zShade OFF</td ></tr>
<tr name='tr_setlighting'>
<td>
<blockquote>
<p >
<i >
<b>set zshade ON</b> enables a "fog" or "fade" effect, which shades objects based on the distance from the observer such that distant objects fade into the background. Uses the value of the SLAB and DEPTH settings to determine the point of no effect and full effect, respectively (by default 100 and 0). The settings of SLAB and DEPTH are overridden by ZSLAB and ZDEPTH when ZSLAB is not equal to ZDEPTH. (Both are 0 by default) The effect is enabled regardless of the setting of (
<b>slab ON/OFF</b>) and is reset to OFF upon 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#reset">reset</a> or the loading of a new model. </i ></p ></blockquote></td></tr> 
<tr name='tr_setlighting'>
<td valign="top">
<a name="set_zshadepower" id="k981"> </a>set zShadePower (integer)</td ></tr>
<tr name='tr_setlighting'>
<td>
<blockquote>
<p >
<i >This parameter can be adjusted (typically 1, 2, or 3) to create a stronger effect of fog when 
<b>zShade</b> is set ON.</i ></p ></blockquote></td></tr> 
<tr name='tr_setlighting'>
<td valign="top">
<a name="set_zslab" id="k979"> </a>set zSlab (integer)</td ></tr>
<tr name='tr_setlighting'>
<td>
<blockquote>
<p >
<i >Sets the point where the zShade is fully opaque. Ignored if set equal to zDepth (in which case the settings for slab and depth are used)</i ></p ></blockquote></td></tr> 
<tr name='tr_setlighting'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_setlighting'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples/lighting.htm">lighting.htm</a> </td></tr>
<tr name='tr_setlighting'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_setlighting'>
<td colspan="5">
<p>
<a class="xref" href="#backbone">backbone</a> 
<a class="xref" href="#background">background</a> 
<a class="xref" href="#cartoon">cartoon</a> 
<a class="xref" href="#dots">dots</a> 
<a class="xref" href="#ellipsoid">ellipsoid</a> 
<a class="xref" href="#geosurface">geoSurface</a> 
<a class="xref" href="#meshribbon">meshribbon</a> 
<a class="xref" href="#ribbon">ribbon</a> 
<a class="xref" href="#rocket">rocket</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#strand">strand</a> 
<a class="xref" href="#trace">trace</a> 
<a class="xref" href="#vector">vector</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_setlighting'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k966">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_setmeasure'>
<td colspan="5">
<h3 >
<a id="setmeasure" name="setmeasure">set (measure)</a>
<a id="k982"> </a>
<a id="set_defaultdistancelabel_top"> </a>
<a id="set_defaultanglelabel_top"> </a>
<a id="set_defaulttorsionlabel_top"> </a>
<a id="set_justifymeasurements_top"> </a>
<a id="set_measurementlabels_top"> </a>
<a id="set_showmeasurements_top"> </a>
<a id="set_measurementunits_top"> </a>
<a id="set_measurements_top"> </a></h3></td></tr>
<tr name='tr_setmeasure'>
<td>
<i >Sets characteristics of the measurement labels and lines. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#measure">measure</a>.
<br />
<br /></i ></td></tr>
<tr name='tr_setmeasure'>
<td valign="top">
<a name="set_defaultdistancelabel" id="k984"> </a>set defaultDistanceLabel "format"</td ></tr>
<tr name='tr_setmeasure'>
<td>
<blockquote>
<p >
<i >Sets the format of the labels for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#measure">distance measurements</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmeasure'>
<td valign="top">
<a name="set_defaultanglelabel" id="k985"> </a>set defaultAngleLabel "format"</td ></tr>
<tr name='tr_setmeasure'>
<td>
<blockquote>
<p >
<i >Same as for defaultDistanceLabel, but for angles. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#measure">measure</a> for details.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmeasure'>
<td valign="top">
<a name="set_defaulttorsionlabel" id="k986"> </a>set defaultTorsionLabel "format"</td ></tr>
<tr name='tr_setmeasure'>
<td>
<blockquote>
<p >
<i >Same as for defaultDistanceLabel, but for torsions. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#measure">measure</a> for details.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmeasure'>
<td valign="top">
<a name="set_measurements" id="k992"> </a>set measurements 
<a class='def' href='#d991' title='a (decimal, &lt;2.0)'>[width-in-angstroms]</a></td ></tr>
<tr name='tr_setmeasure'>
<td>
<blockquote>
<p >
<i >Sets the width of the measurement line in angstroms.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmeasure'>
<td valign="top">
<a id="k994"> </a>set measurements 
<a class='def' href='#d993' title='an (integer)'>[linewidth-pixels]</a></td ></tr>
<tr name='tr_setmeasure'>
<td>
<blockquote>
<p >
<i >Sets the width of the measurement line in pixels.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmeasure'>
<td valign="top">
<a name="set_justifymeasurements" id="k987"> </a>set justifyMeasurements FALSE</td ></tr>
<tr name='tr_setmeasure'>
<td>
<blockquote>
<p >
<i >Turning this parameter TRUE right-justifies measurement labels</i ></p ></blockquote></td></tr> 
<tr name='tr_setmeasure'>
<td valign="top">
<a id="k995"> </a>set measurements DOTTED</td ></tr>
<tr name='tr_setmeasure'>
<td>
<blockquote>
<p >
<i >Sets the measurement line to be dotted.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmeasure'>
<td valign="top">
<a name="set_measurementlabels" id="k988"> </a>set measurementLabels ON</td ></tr>
<tr name='tr_setmeasure'>
<td>
<blockquote>
<p >
<i >Turning this parameter OFF turns off measurement LABELS only, leaving the lines. (To turn off both, use 
<b>set showMeasurements OFF</b>.)</i ></p ></blockquote></td></tr> 
<tr name='tr_setmeasure'>
<td valign="top">
<a name="set_measurementunits" id="k990"> </a>set measurementUnits (distance unit)</td ></tr>
<tr name='tr_setmeasure'>
<td>
<blockquote>
<p >
<i >Sets the units for measurement display to be one of ANGSTROMS, AU (or BOHR), NM (or NANOMETERS), (PM or PICOMETERS), or VDW. The VDW displays distances as percent of the combined van der Waals radii of two measured atoms. Thus, a measurement less than 100% indicates a "clash."</i ></p ></blockquote></td></tr> 
<tr name='tr_setmeasure'>
<td valign="top">
<a name="set_showmeasurements" id="k989"> </a>set showMeasurements TRUE</td ></tr>
<tr name='tr_setmeasure'>
<td>
<blockquote>
<p >
<i >Setting this parameter FALSE turns off measurement lines and labels BOTH. (To turn off just the label, use 
<b>set measurementLabels OFF</b>.)</i ></p ></blockquote></td></tr> 
<tr name='tr_setmeasure'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_setmeasure'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k983">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_setmisc'>
<td colspan="5">
<h3 class=h3newer>
<a id="setmisc" name="setmisc">set (misc)</a>
<a id="k996"> </a>
<a id="set_allowgestures_top"> </a>
<a id="set_allowkeystrokes_top"> </a>
<a id="set_allowmodelkit_top"> </a>
<a id="set_allowmoveatoms_top"> </a>
<a id="set_allowmultitouch_top"> </a>
<a id="set_allowrotateselected_top"> </a>
<a id="set_animationfps_top"> </a>
<a id="set_animationmode_top"> </a>
<a id="set_atompicking_top"> </a>
<a id="set_autofps_top"> </a>
<a id="set_axescolor_top"> </a>
<a id="set_axis1color_top"> </a>
<a id="set_axis2color_top"> </a>
<a id="set_axis3color_top"> </a>
<a id="set_backgroundmodel_top"> </a>
<a id="set_bondpicking_top"> </a>
<a id="set_chaincasesensitive_top"> </a>
<a id="set_contextdepthmax_top"> </a>
<a id="set_defaultcolorscheme_top"> </a>
<a id="set_defaultdrawarrowscale_top"> </a>
<a id="set_defaults_top"> </a>
<a id="set_defaultvdw_top"> </a>
<a id="set_colorrasmol_top"> </a>
<a id="set_dotdensity_top"> </a>
<a id="set_dotscale_top"> </a>
<a id="set_dotsselectedonly_top"> </a>
<a id="set_dotsurface_top"> </a>
<a id="set_dragselected_top"> </a>
<a id="set_drawfontsize_top"> </a>
<a id="set_drawhover_top"> </a>
<a id="set_drawpicking_top"> </a>
<a id="set_energyunits_top"> </a>
<a id="set_exportdrivers_top"> </a>
<a id="set_exportscale_top"> </a>
<a id="set_forcefield_top"> </a>
<a id="set_formalcharge_top"> </a>
<a id="set_helixstep_top"> </a>
<a id="set_helppath_top"> </a>
<a id="set_hoverdelay_top"> </a>
<a id="set_hoverlabel_top"> </a>
<a id="set_imagestate_top"> </a>
<a id="set_iskiosk_top"> </a>
<a id="set_isosurfacekey_top"> </a>
<a id="set_isosurfacepropertysmoothing_top"> </a>
<a id="set_isosurfacepropertysmoothingpower_top"> </a>
<a id="set_legacyjavafloat_top"> </a>
<a id="set_loadatomdatatolerance_top"> </a>
<a id="set_measureallmodels_top"> </a>
<a id="set_meshscale_top"> </a>
<a id="set_messagestylechime_top"> </a>
<a id="set_minimizationcriterion_top"> </a>
<a id="set_minimizationrefresh_top"> </a>
<a id="set_minimizationsilent_top"> </a>
<a id="set_minimizationsteps_top"> </a>
<a id="set_minpixelselradius_top"> </a>
<a id="set_modulationscale_top"> </a>
<a id="set_mousedragfactor_top"> </a>
<a id="set_mousewheelfactor_top"> </a>
<a id="set_multiprocessor_top"> </a>
<a id="set_nmrurlformat_top"> </a>
<a id="set_particleradius_top"> </a>
<a id="set_pdbgetheader_top"> </a>
<a id="set_pdbsequential_top"> </a>
<a id="set_percentvdwatom_top"> </a>
<a id="set_picklabel_top"> </a>
<a id="set_pickingspinrate_top"> </a>
<a id="set_pointgroupdistancetolerance_top"> </a>
<a id="set_pointgrouplineartolerance_top"> </a>
<a id="set_preservestate_top"> </a>
<a id="set_propertyatomnumbercolumncount_top"> </a>
<a id="set_propertyatomnumberfield_top"> </a>
<a id="set_propertycolorscheme_top"> </a>
<a id="set_propertydatacolumncount_top"> </a>
<a id="set_propertydatafield_top"> </a>
<a id="set_quaternionframe_top"> </a>
<a id="set_rangeselected_top"> </a>
<a id="set_repaintwaitms_top"> </a>
<a id="set_saveproteinstructurestate_top"> </a>
<a id="set_selectallmodels_top"> </a>
<a id="set_selecthetero_top"> </a>
<a id="set_selecthydrogen_top"> </a>
<a id="set_showkeystrokes_top"> </a>
<a id="set_showmodulationvectors_top"> </a>
<a id="set_showtiming_top"> </a>
<a id="set_slabrange_top"> </a>
<a id="set_smartaromatic_top"> </a>
<a id="set_spinfps_top"> </a>
<a id="set_spinx_top"> </a>
<a id="set_spiny_top"> </a>
<a id="set_spinz_top"> </a>
<a id="set_starwidth_top"> </a>
<a id="set_statusreporting_top"> </a>
<a id="set_stereodegrees_top"> </a>
<a id="set_strutdefaultradius_top"> </a>
<a id="set_strutlengthmaximum_top"> </a>
<a id="set_strutsmultiple_top"> </a>
<a id="set_strutspacing_top"> </a>
<a id="set_syncmouse_top"> </a>
<a id="set_syncscript_top"> </a>
<a id="set_undo_top"> </a>
<a id="set_useminimizationthread_top"> </a>
<a id="set_usenumberlocalization_top"> </a>
<a id="set_vectorscale_top"> </a>
<a id="set_vectorscentered_top"> </a>
<a id="set_vdw_top"> </a>
<a id="set_vectorsymmetry_top"> </a>
<a id="set_vibrationperiod_top"> </a>
<a id="set_vibrationscale_top"> </a>
<a id="set_waitformoveto_top"> </a>
<a id="set_wireframerotation_top"> </a> 
<br />
<span class=newer>(v. 13.0 --adds set energyUnits, forceField, isosurfaceKey, meshScale, nmrUrlFormat, vectorSymmetry)</span></h3></td></tr>
<tr name='tr_setmisc'>
<td>
<i >In all cases below, "ON" and "TRUE" are equivalent, and "OFF" and "FALSE" are equivalent.
<br />
<br /></i ></td></tr>
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_allowgestures" id="k998"> </a>set allowGestures FALSE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >This parameter is primarily intended for a touch-screen context. Setting this parameter TRUE allows single-point gestures to be detected. Currently the only single-point gesture supported is a "swipe" or "flick" created by a motion of the mouse or finger that is continuing along a line at the time the mouse or finger is released. </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_allowkeystrokes" id="k999"> </a>set allowKeystrokes FALSE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Set this parameter TRUE to allow key strokes in the applet or application window to be interpreted as script commands. These keystrokes will be displayed if the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_showkeystrokes">showKeystrokes</a> setting is TRUE.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_allowmodelkit" id="k1000"> </a>set allowModelKit TRUE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Set this parameter FALSE to disable 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setmodelkitmode">modelKitMode</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_allowmoveatoms" id="k1001"> </a>set allowMoveAtoms FALSE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >This setting is used in association with 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setpicking">set picking dragSelected</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setpicking">set picking dragMinimize</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_allowmoveatoms">set allowRotateSelected</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_dragselected">set dragSelected</a>. The default FALSE value ensures that whole molecules are shifted or rotated rather than individual atoms. Set this parameter TRUE to allow the moving of just the selected atoms (not whole molecules). </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_allowmultitouch" id="k1002"> </a>set allowMultiTouch TRUE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Set this parameter FALSE to disable multi-touch gestures (two-finger spread for zoom, two-finger drag for translation) within a multi-touch environment.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_allowrotateselected" id="k1003"> </a>set allowRotateSelected FALSE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >This setting is used in association with 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setpicking">set picking dragSelected</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setpicking">set picking dragMinimize</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_allowmoveatoms">set allowMoveAtoms</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_dragselected">set dragSelected</a>. When set TRUE, it allows user rotation of selected atoms using the mouse; when FALSE, rotation is disabled.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_animationfps" id="k1004"> </a>set animationFps (integer)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Same as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#animation">animation FPS</a> -- sets the animation delay in frames per second; can be tested, for example, with "if (animationFPS > 10)..."</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_animationmode" id="k1005"> </a>set animationMode "ONCE" or "LOOP" or "PALINDROME"</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Same as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#animation">animation MODE</a> -- sets the animation replay mode; must be in quotes: "ONCE", "LOOP", or "PALINDROME"; can be tested, for example, with "if (animationMode == 'ONCE')..."</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_autofps" id="k1007"> </a>set autoFPS FALSE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Setting this parameter TRUE adjusts the rate of frame changes in an animation to a lower rate if the rendering cannot keep up with the frame changing.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_axescolor" id="k1008"> </a>set axesColor "color_name"</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the color of all axes. (Same as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#color">color axes ...</a>.)</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_axis1color" id="k1009"> </a>set axis1Color "color_name"</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the color of the X axis.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_axis2color" id="k1010"> </a>set axis2Color "color_name"</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the color of the Y axis.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_axis3color" id="k1011"> </a>set axis3Color "color_name"</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the color of the Z axis.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_atompicking" id="k1006"> </a>set atomPicking TRUE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Setting this parameter FALSE disallows picking of atoms. See also 
<b>set bondPicking</b> and 
<b>set drawPicking</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_backgroundmodel" id="k1012"> </a>set backgroundModel (integer >= 1) or "file.model"</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets a particular model or animation frame to be fixed in place during an 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#animation">animation</a> or when displaying models 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#load">loaded</a> from a multi-model file. 
<b>set backgroundModel 0</b> turns this feature off. For a multifile context, the model must be give in "file.model" format. Certain restrictions apply to scripts when a background model is displayed; in that case it may be important to turn the model off and then back on during selected scripting. </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_bondpicking" id="k1013"> </a>set bondPicking FALSE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Setting this parameter TRUE allows picking of bonds. If pickCallback is enabled, a message is sent to the callback function providing detailed information about the bond that was picked. See also 
<b>set atomPicking</b> and 
<b>set drawPicking</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_chaincasesensitive" id="k1014"> </a>set chainCaseSensitive FALSE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >[NOTE: This setting is deprecated. Starting in Jmol 14.4 you an simply use quotation marks to indicate desired chain case. For example, 
<b>select :"A"</b> will not select chain a.] Jmol can be set to read the chain designations in PDB, mmCIF, and related files either with or without case sensitivity. With the default 
<b>set chainCaseSensitive FALSE</b>, the chain designations are interpreted as case-insensitive. With 
<b>set chainCaseSensitive ON</b>, the chain designation is read in a case-sensitive manner -- chain "A" is different than chain "a". This supports 
<a class="xref" href="http://www.rcsb.org/pdb/docs/format/pdbguide2.2/guide2.2_frame.html" target="_blank">PDB format</a> model files with more than 26 chains. The default startup up mode is OFF -- chain designation "a" in a SELECT command will refer to chain "A" in a file.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_contextdepthmax" id="k1015"> </a>
<span class=newer>set contextDepthMax 100 [
<b>Jmol 14.3.13</b>]</span></td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Sets the maximum depth of contexts, including {}, if{}, for{}, while{}, and function{}, as well as the SCRIPT command and a number of expression-related situations. Default is 100; minimum is 10.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_colorrasmol" id="k1021"> </a>set colorRasmol FALSE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Setting this parameter TRUEprovides an alternative way to set the default color scheme to RasMol; testable with Jmol math.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_defaultcolorscheme" id="k1016"> </a>set defaultColorScheme JMOL or RASMOL</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the default color scheme to be the traditional Rasmol/Chime scheme or the newer, more subtle, Jmol scheme. This command does not actually change the display for an object unless that object is currently being displayed using the default color scheme. See the 
<a class="xref" href="http://jmol.sourceforge.net/jscolors/" target="_blank">Jmol Colors page</a> for default color scheme details.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_defaultdrawarrowscale" id="k1017"> </a>set defaultDrawArrowScale (decimal)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the default scale for the arrow tip for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw"> arrows.</a></i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_defaults" id="k1018"> </a>set defaults JMOL or RASMOL</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the overall defaults to be Jmol standard or more similar to Rasmol, including default color scheme, axes orientation, zero-based XYZ numbering, no spacefill, and simple wireframe. Applied immediately; should be used prior to file loading.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a id="k1019"> </a>set defaults PyMOL</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets zoomHeight true and measurementUnits Angstroms</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_defaultvdw" id="k1020"> </a>set defaultVDW JMOL or BABEL or RASMOL or USER</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the default van der Waals radius set for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#spacefill">spacefill</a> and related commands. For a detailed listing of the values used, see 
<a class="xref" href="misc/vdw_comparison.xls" target="_blank">vdw_comparison.xls</a>. USER refers to a set of data provided by the user using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#data">data</a> command.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_dotdensity" id="k1022"> </a>set dotDensity -3 to 3</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >When Jmol displays 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#dots">dots</a>, the density of dots is determined by the scale of the display. At a small scale, Jmol may display as few as 12 dots; as zoom increases, this number increases to 42, then 162, and finally, at high zoom, it becomes 642 dots. The 
<b>dotDensity</b> setting allows control over how many dots are displayed at the various scale level cutoffs. (The actual calculation does not use zoom; rather, it uses a measure of pixels per micron). Setting 
<b>dotDensity</b> to -3 results in Jmol 
<i>always</i> displaying 12 dots; setting it to 3 results in Jmol 
<i>always</i> displaying 642 dots. Settings in between these values decrease or increase the number of dots relative to the default setting (0). </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_dotscale" id="k1023"> </a>set dotScale (integer)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the size of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#dots">dots</a> and the dots of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurfaces</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#mo">Mos</a>. </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_dotsselectedonly" id="k1024"> </a>set dotsSelectedOnly FALSE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Setting this paramter TRUE instructs the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">calculate surface</a> command to disregard atoms that are not selected when calculating the position of the surface (which then determines the parameter 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions">surfaceDistance</a> for each atom). Also tells Jmol to ignore nonselected atoms when creating a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#dots">dot surface</a>. 
<b>set dotsSelectedOnly TRUE</b> would allow, for example, a continuous set of dots around a ligand even if it is in contact with a protein.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_dotsurface" id="k1025"> </a>set dotSurface ON</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Setting this parameter OFF instructs Jmol to draw complete spheres of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#dots">dots</a> around each selected atom rather than only the dots that would be derived from that atom in a molecular "dot surface."</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_dragselected" id="k1026"> </a>set dragSelected OFF</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >When ON, allows the user to move selected atoms by pressing ALT-SHIFT-LEFT and dragging; when combined with 
<b>set pickingstyle SELECT DRAG</b>, just LEFT-dragging moves the atoms, and the ALT and SHIFT keys are not required.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_drawfontsize" id="k1027"> </a>set drawFontSize 14</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the font size for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a> object text.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_drawhover" id="k1028"> </a>set drawHover OFF</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >When ON, and the user hovers over a point associated with 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a> object, the name of the object is displayed next to the point.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_drawpicking" id="k1029"> </a>set drawPicking OFF</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >When ON, Jmol reports picking of points associated with 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a> objects to the console, the messageCallback function, and the pickCallback function. In addition, setting drawPicking true enables measurement of distances and angles involving drawn objects such as points, lines, arrows, and planes. Measurements of this type only appear transiently; they are not saved. See also 
<b>set atomPicking</b> and 
<b>set bondPicking</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_energyunits" id="k1030"> </a>set energyUnits kJ or kcal</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the units of energy for minimization reports in kJ/mol or kcal/mol.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_exportdrivers" id="k1031"> </a>set exportDrivers "driver_list"</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets (or allows you to inspect, expand, or limit) the list of export drivers available to Jmol. </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_exportscale" id="k1032"> </a>set exportScale (decimal)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the export scale for VRML and X3D files created with the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">write</a> command. This setting allows variable scale export to 3D printer CAD software. Defaults to 1.0.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_forcefield" id="k1033"> </a>set forcefield "MMFF" or "UFF"</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the forcefield for minimization to MMFF94 (default) or UFF. If MMFF94 is chosen and any atoms are of a type not recognized by MMFF94, then UFF is used instead.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_formalcharge" id="k1034"> </a>set formalCharge (integer)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the formal charge for the selected atoms.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_helixstep" id="k1035"> </a>set helixStep (integer)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the step for calculating straightness and for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw helix axis</a>. The default value is 1, but a value of 2, for example, allows calculating straightness and axes for structures based on pairs of residues. </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_helppath" id="k1036"> </a>set helpPath "URL"</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the web page for the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#help">help</a> command.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_nmrurlformat" id="k1058"> </a>set nmrUrlFormat "URL"</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Determines the URL used for 
<b>SHOW NMR</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_hoverdelay" id="k1037"> </a>set hoverDelay (decimal)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the length of time in seconds before a hovering action is acknowledged.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_hoverlabel" id="k1038"> </a>set hoverLabel (string)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the label displayed upon hovering.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_imagestate" id="k1039"> </a>set imageState ON</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >The 
<b>imageState</b> property, when TRUE, allows Jmol to insert into JPG and PNG files its state. This allows images to serve both as 2D and 3D models.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_iskiosk" id="k1040"> </a>set isKiosk OFF</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >For a multi-touch screen, set this parameter ON if the Jmol applet is running in a browser with the kiosk mode enabled, indicating there are no other applets or applications running. This is a one-time setting -- Setting this parameter OFF is the same as setting it ON, and setting it ON disallows file saves other than logging, prompt dialogs, console, popup menu, and the application script editor. </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_isosurfacekey" id="k1041"> </a>set isosurfaceKey OFF</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Displays a color key relating to the last-generated isosurface. </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_isosurfacepropertysmoothing" id="k1042"> </a>set isosurfacePropertySmoothing ON</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >In the case of an isosurface that is mapped using atom-based property data, the default action is to smooth out the coloring based on an averaging of color weighted by a factor of 1/distance^4 to atoms. Turning this parameter OFF tells Jmol not to do this and instead produce a patchwork mapping that assigns a color based on the property of only the nearest atom. </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_isosurfacepropertysmoothingpower" id="k1043"> </a>set isosurfacePropertySmoothingPower 0 to 10 (7)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >When isosurfacePropertySmoothing is set ON, Jmol applies a function to data so as to reduce the harshness of the edges between data assigned to specific atoms. The setting of isosurfacePropertySmoothingPower allows adjustment of that smoothing from 0 (no smoothing) to 10 (strong smoothing). The default value is 7.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_legacyjavafloat" id="k1044"> </a>
<span class=newer>set legacyJavaFloat FALSE [
<b>Jmol 14.4</b>]</span></td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Set by Jmol when a state is read that is before 14.2.6 or in the range 14.3.0 - 14.3.5; prevents fractional and cartesian coordinate rounding; used to ensure that states created in JavaScript work identically in Java, and vice versa. Cleared by ZAP or LOAD or loading of any later state script.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_loadatomdatatolerance" id="k1045"> </a>set loadAtomDataTolerance (decimal)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the maximum distance away from a point that that an atom can be found when applying atom data using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loadproperty">load [property]</a> command. Default 0.01 Angstroms.Applies the data to all atoms in similar unit cells if the data being read . This allows applying the same data to atoms in all unit cells.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_measureallmodels" id="k1046"> </a>set measureAllModels OFF</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >In situations where there are multiple models, typically only one model is displayed at any given time. In that situation, if a user clicks on a pair of atoms to measure a bond distance, then only one measurement is made. Using 
<b>set measureAllModels ON</b>, when the user makes measurements in any one frame, ALL similar measurements in all models in hidden frames are generated at the same time. 
<b>set measureAllModels ON</b> thus allows for very efficient measuring and investigation of differences in a bond distance or bond angle or dihedral angle across multiple models. </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_meshscale" id="k1047"> </a>set meshScale 1</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Adjusts the width of the lines in isosurface and molecular orbital MESH display</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_messagestylechime" id="k1048"> </a>set messageStyleChime FALSE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Changes the style of message reporting by script callbacks to one similar to Chime. </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_minimizationcriterion" id="k1049"> </a>set minimizationCriterion (decimal)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the criterion for stopping a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#minimize">minimization</a>. The default value is 0.001; the minimum value is 0.0001.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_minimizationrefresh" id="k1050"> </a>set minimizationRefresh TRUE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Set this flag FALSE to not display 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#minimize">minimizations</a> as they occur.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_minimizationsilent" id="k1051"> </a>set minimizationSilent FALSE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Turns off messages reporting energies for the minimization.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_minimizationsteps" id="k1052"> </a>set minimizationSteps (integer)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the number of steps after which a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#minimize">minimization</a> will stop even if the desired criterion has not been reached. Default value is 100.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_minpixelselradius" id="k1053"> </a>set minPixelSelRadius 6</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >The minimum number of pixels a click can be away from an atom on the screen before it is considered too far away to be a click on that atom.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_modulationscale" id="k1054"> </a>
<span class=new>set modulationScale (decimal)</span></td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >
<span class=new>Sets the scale of the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#modulation">modulation</a> for incommensurately modulated structures. Minimum value is 0.10. (
<span class="newv">Jmol 14.2</span>)</span></i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_mousedragfactor" id="k1055"> </a>set mouseDragFactor (decimal)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the sensitivity of the mouse when dragging. The default value of 1.0 for set mousedragFactor allows a 180-degrees rotation when the pointer drags across the full window width.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_mousewheelfactor" id="k1056"> </a>set mouseWheelFactor (decimal)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the sensitivity of the mouse wheel. The default value of 1.0 for set mousedragFactor allows a 180-degrees rotation when the pointer drags across the full window width.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_multiprocessor" id="k1057"> </a>set multiprocessor FALSE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Turns on parallel multiprocessing. If this setting cannot be set true, then it means you do not have a multiprocessor machine. Used in association with the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#parallelprocess">parallel</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#parallel/processs">process</a> commands.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_particleradius" id="k1059"> </a>set particleRadius (decimal)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets a global radius for all atoms with SPACEFILL set larger than the max radius value (16.0). Defaults to 20.0. (Any spacefill setting larger than 16 will instead be this setting.)</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_pdbgetheader" id="k1060"> </a>set pdbGetHeader FALSE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Setting this flag TRUE tells Jmol to keep the header portion of the last-loaded PDB file in memory for later retrieval using getProperty("fileHeader"). If FALSE (default), the header is not saved, and a call to this function is slower, since it requires reloading the PDB file and parsing it for its header.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_pdbsequential" id="k1061"> </a>set pdbSequential FALSE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Setting this flag TRUE tells Jmol to assume the groups listed for a given chain in a PDB file are in order already and that Jmol should not check for proper inter-group bonding when assigning polymer sequences that form the basis of secondary structure. This flag allows for custom PDB files where the groups of a chain may not be physically adjacent, yet it is still desired to represent them as single structures.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_percentvdwatom" id="k1062"> </a>set percentVdwAtom (integer)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >The default size of an atom created when a file is loaded as a percent of the atom's van der Waal radius (Jmol standard value: 20).</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_pickingspinrate" id="k1064"> </a>set pickingSpinRate (integer)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >The rate of spinning that occurs when a user clicks on the end of a line created using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a> (default: 20). </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_pointgroupdistancetolerance" id="k1065"> </a>set pointGroupDistanceTolerance (decimal)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the tolerance for two atoms being considered identical after application of a rotation. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">calculate pointgroup</a> for details.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_pointgrouplineartolerance" id="k1066"> </a>set pointGroupLinearTolerance (decimal)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the tolerance for two axes being considered identical prior to application of a rotation. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">calculate pointgroup</a> for details.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_picklabel" id="k1063"> </a>set pickLabel (string)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the format of the message sent to the console and callback functions when an atom is clicked.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_preservestate" id="k1067"> </a>set preserveState TRUE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >This option turns off many memory-consuming features of Jmol that are necessary for preserving the state. It can be used in situations where memory is at a premium and there is no desire to write or save the current Jmol state. </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_propertyatomnumbercolumncount" id="k1068"> </a>set propertyAtomNumberColumnCount (integer)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >An integer value of 0 or greater. Sets the number of columns to be read for 
<b>propertyAtomNumberField</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_propertyatomnumberfield" id="k1069"> </a>set propertyAtomNumberField (integer)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >An integer value of 0 or greater. Sets the column (when 
<b>propertyAtomNumberColumnCount</b> > 0) or free-format field (otherwise) for the atom numbers in a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#data">data</a> set. These are the atom numbers designated in a PDB file or numbers starting with 1 otherwise. Setting the field to 0 indicates that there is no such field, and values should be read in sequentially.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_propertycolorscheme" id="k1070"> </a>set propertyColorScheme "colorSchemeName"</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the color scheme associated with properties. SchemeName, in quotes, may be one of "roygb" (default rainbow), "bwr" (blue-white-red), "rwb" (red-white-blue),"low" (red-green), "high" (yellow-blue), "bw" (black-white), "wb" (white-black), and "friendly" (an accessibility option for color-blindness), but may be any user-defined color scheme. In Jmol 11.4, this parameter was largely replaced by 
<b>color "schemeName"</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_propertydatacolumncount" id="k1071"> </a>set propertyDataColumnCount (integer)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >An integer value of 0 or greater. Sets the number of columns to be read for 
<b>propertyDataField</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_propertydatafield" id="k1072"> </a>set propertyDataField (integer)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >An integer value of 0 or greater. Sets the column (when 
<b>propertyAtomNumberColumnCount</b> > 0) or free-format field (otherwise) for the property data in a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#data">data</a> set. Setting this value to 0 indicates that values are simply to be read sequentially from the data.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_quaternionframe" id="k1073"> </a>set quaternionFrame A,B,C,N,P,Q,RC,RP,X</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Specifies the axes used to define the right-handed 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#quaternion">quaternion</a> frame for proteins and nucleic acids . These frames (xyz axes and origin) define orientations of amino acid residues in proteins and nucleic acid residues in RNA and DNA. The minimum definition of a frame is an origin (only used for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw quaternion</a>), a point that will define an axis (usually X, but in some cases Y), and a third point that will be used to generate the other two axes. Specifically, if O, A, and B are three points and V
<sub>OA</sub> defines the direction of the X axis, then V
<sub>C</sub> = V
<sub>OA</sub> x V
<sub>OB</sub> defines the direction of the Z axis, and V
<sub>C</sub> x V
<sub>OA</sub> defines the direction of the Y axis. If V
<sub>OB</sub> defines the direction of the Y axis, then V
<sub>C</sub>, as above, defines the direction of the Z axis, and V
<sub>OB</sub> x V
<sub>C</sub> defines the direction of the X axis. Different frames can used for different purposes, ranging from analyzing amino acid side-chain orientations to quantifying the "straightness" of helices and sheets. Most useful are relative and absolute differences of quaternions, which define local helical axes or the axis, angle, and translation required to move from one orientation to another.
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >A</td >
<td valign="top" > "alternative"</td >
<td valign="top" > for proteins, same as N (see below)</td >
<td valign="top" >for nucleic acids, an alternative backbone quaternion with O = P[i], B(Y) = C4'[i], and A = C4'[i-1], which is closely associated with eta and theta dihedral angles. </td ></tr >
<tr >
<td valign="top" >B</td >
<td valign="top" > "backbone"</td >
<td valign="top" > for proteins, O = CA[i], A(X) = CA[i+1], B = CA[i-1]</td >
<td valign="top" > for nucleic acids, O = P[i], A(X) = P[i+1], B = P[i-1] </td ></tr >
<tr >
<td valign="top" >C</td >
<td valign="top" > "carbon"</td >
<td valign="top" > for proteins, O = CA, A(X) = C, and B = N, thus defining the orientation of the peptide sidechains</td >
<td valign="top" >for nucleic acids, same as N, but with the origin shifted to the "center of heavy atoms" for the base (all atoms associated with the base other than H or C4')</td ></tr >
<tr >
<td valign="top" >N</td >
<td valign="top" >"nitrogen"</td >
<td valign="top" >a frame based on the peptide N atom and useful specifically in the area of solid state NMR spectroscopy. O = N, and if V
<sub>C</sub> = V
<sub>N-NH</sub>, and V
<sub>D</sub> = V
<sub>N-CA</sub>, then V
<sub>B</sub>(Y) = V
<sub>A</sub> x V
<sub>D</sub>, M = axisAngle(V
<sub>B</sub>, -17 degrees), then V
<sub>A</sub> = MV
<sub>C</sub>, and V
<sub>C</sub> = V
<sub>A</sub> x V
<sub>B</sub> defines the direction of the Z axis.</td >
<td valign="top" >for nucleic acids, O = N9(purines) or N1(pyrimidines), B(Y) = O + V
<sub>C1'O</sub>, and A = V
<sub>O-C2</sub> (toward the Watson-Crick edge)</td ></tr >
<tr >
<td valign="top" >P</td >
<td valign="top" > "peptide/phosphorus" </td >
<td valign="top" > for proteins, O = C, A(X) = CA, and Y = N[i+1], thus defining the orientation of the peptide plane</td >
<td valign="top" > for nucleic acids, O = P[i], A(X) = O3'[i-1], and B = O5'[i], thus defining the orientation of the phosphorus tetrahedron</td ></tr >
<tr >
<td valign="top" >Q</td >
<td valign="top" >"Quine"</td >
<td valign="top" > defined as follows: O = (C[i] + N[i+1])/2 and if V
<sub>X</sub> = V
<sub>CA[i]-C[i]</sub> and V
<sub>B</sub> = V
<sub>N[i+1]-CA[i+1]</sub>, then V
<sub>Z</sub> = V
<sub>X</sub> x V
<sub>B</sub>, and V
<sub>Y</sub>= V
<sub>Z</sub> x V
<sub>X</sub>. This frame was an early definition of the orientation of the peptide plane and suffers from the fact that these two vectors are very nearly colinear, and can produce Z directions that are misdirected; provided for historical reference only (J. R. Quine, Journal of Molecular Structure: THEOCHEM, Volume 460, Issues 1-3, 26 February 1999, pages 53-66).</td >
<td valign="top" >not used for nucleic acids</td ></tr >
<tr >
<td valign="top" >RC and RP</td >
<td valign="top" >"ramachandran"</td >
<td valign="top" >These frame selections specify that straightness should be calculated from Ramachandran angle approximations rather than actual quaternionFrames "C" and "P", respectively</td >
<td valign="top" >no nucleic acid equivalent</td ></tr >
<tr >
<td valign="top" >X</td >
<td valign="top" >"experimental"</td >
<td valign="top" >Jmol development testing</td >
<td valign="top" >Jmol development testing</td ></tr ></table ></i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_rangeselected" id="k1074"> </a>set rangeSelected</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >When this flag is set to TRUE, the range for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#color">color</a> temperature is set to be adjustable based on the selected set of atoms being colored; when false (the defualt), the range of colors is set based on the range of values in the entire model. This parameter applies to any property.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_repaintwaitms" id="k1075"> </a>set repaintWaitMs 1000</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the number of milliseconds to wait before a timer expires signalling that Jmol should not wait any longer for a repaint operation. In some large memory-intensive operations, it is sometimes advisable to set this parameter to a higher number.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_saveproteinstructurestate" id="k1076"> </a>set saveProteinStructureState TRUE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Generally when Jmol 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#write">writes</a> the state, helix/sheet/turn data is saved. In some cases this may not be desired. Setting this flag FALSE prevents the saving of this information in the state.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_selectallmodels" id="k1077"> </a>set selectAllModels TRUE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Generally when selections are made in Jmol all matching atoms in all models are selected, regardless of which model is currently in 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frame">frame</a>. When set FALSE, this flag indicates that the subset of atoms to select should be automatically set to the current model when frame changes occur.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_selecthetero" id="k1078"> </a>set selectHetero ON</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >When turned OFF, selections do not select HETATM atoms in PDB files</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_selecthydrogen" id="k1079"> </a>set selectHydrogen ON</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >When turned OFF, selections do not select hydrogen atoms</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_showkeystrokes" id="k1080"> </a>set showKeyStrokes TRUE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >When set TRUE, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_allowkeystrokes">set allowKeyStrokes</a> is TRUE, key strokes in the applet or application window to be interpreted as script commands and displayed in the bottom left corner of the window.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_showmodulationvectors" id="k1081"> </a>
<span class=newer>set showModulationVectors FALSE [
<b>Jmol 14.4</b>]</span></td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Set this value TRUE if VECTORS command is to show modulation displacements instead of vibrations</span></i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_showtiming" id="k1082"> </a>set showTiming FALSE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >When set TRUE, reports timings for isosurface creation in ms in the Jmol console, and in the Java console reports detailed timings for rendering of shapes.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_slabrange" id="k1083"> </a>set slabRange (decimal)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets a slab range that is independent of zoom. </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_smartaromatic" id="k1084"> </a>set smartAromatic ON</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Turning the smartAromatic parameter OFF reverts to a Jmol 10 style of drawing aromatic bonds as a paired solid and dashed line when loading subsequent files. (This command has no immediate effect. Use 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">reset aromatic;calculate aromatic</a> to see the effect of smartAromatic)</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_spinfps" id="k1086"> </a>set spinFps 
<a class='def' href='#d1085' title='an (integer)'>[frames-per-second]</a></td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >determines the number of frames per second between displays of the molecule -- a small number here results in a jerky stepwise rotation. </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_spinx" id="k1088"> </a>set spinX 
<a class='def' href='#d1087' title='an (integer)'>[degrees-per-second]</a></td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >The 
<b>set spinX</b>, 
<b>set spinY</b>, and 
<b>set spinZ</b> commands allow for the setting of the spin axes -- x, y, and z -- independently as well as the rate of spin. The actual spinning axis is a complex combination of the three settings. No actual spinning occurs until the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#spin">spin ON</a> command is issued or the user turns spinning on using the mouse menu. Jmol has a much richer variety of spinning possibilities to this Chime/Rasmol-standard capability, allowing simple spinning around arbitrary molecular- and window-based axes. See the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#rotate">rotate</a> command.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_spiny" id="k1089"> </a>set spinY 
<a class='def' href='#d1087' title='an (integer)'>[degrees-per-second]</a></td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >see 
<b>set spinX</b></i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_spinz" id="k1090"> </a>set spinZ 
<a class='def' href='#d1087' title='an (integer)'>[degrees-per-second]</a></td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >see 
<b>set spinX</b></i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_starwidth" id="k1091"> </a>
<span class=new>set starWidth (decimal)</span></td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >
<span class=new>Sets the star line width in Angstroms.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_statusreporting" id="k1092"> </a>set statusReporting ON</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >When set OFF, this parameter prevents Jmol from recording status messages and reporting them to a requesting web page. When OFF, the JavaScript method Jmol.scriptWait() will function correctly, but it will not return status information from the applet.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_stereodegrees" id="k1093"> </a>set stereoDegrees (decimal)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Same as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#stereo">stereo (degrees)</a>, sets the angle for stereo images; can be checked using Jmol math.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_strutdefaultradius" id="k1094"> </a>set strutDefaultRadius 0.3</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >For 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">calculate STRUTS</a> and the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#struts">struts</a> command, sets the default radius for new struts. </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_strutlengthmaximum" id="k1095"> </a>set strutLengthMaximum 7</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >For 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">calculate STRUTS</a>, sets the maximum length for a new strut. </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_strutsmultiple" id="k1096"> </a>set strutsMultiple OFF</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >For 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">calculate STRUTS</a>, turn this flag ON to allow more than one strut on a given atom. </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_strutspacing" id="k1097"> </a>set strutSpacing 6</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >For 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">calculate STRUTS</a>, sets the minimum spacing (in terms of residues) for new struts. </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_syncmouse" id="k1098"> </a>set syncMouse OFF</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >When 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#sync">sync</a> is ON, delivers mouse actions to the target applet.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_syncscript" id="k1099"> </a>set syncScript OFF</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >When 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#sync">sync</a> is ON, delivers script events to the target applet.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_undo" id="k1100"> </a>set undo ON</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Setting this flag FALSE disables the 
<b>undo/redo</b> buttons on the Jmol application console, saving memory.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_useminimizationthread" id="k1101"> </a>set useMinimizationThread ON</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Generally the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#minimize">minimize</a> command runs in a separate thread. Setting this parameter FALSE instructs Jmol to use the same thread as is being used for commands. This is important in situations where one wants to wait for completion of the minimization before continuing.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_usenumberlocalization" id="k1102"> </a>set useNumberLocalization ON</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Currently only applicable in the display of unit cell parameters, the 
<b>useNumberLocalization</b> setting determines whether or not local number formatting will be used (comma as decimal point, for example).</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_vectorscale" id="k1103"> </a>set vectorScale (decimal)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the scale for vibration vectors.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_vectorscentered" id="k1104"> </a>
<span class=new>set vectorsCentered</span></td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >
<span class=new>Sets vectors to be centered on an atom (as for showing magnetic spin vectors).</span></i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_vdw" id="k1105"> </a>set vdw JMOL or PROBE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the default VDW radius to be based on Jmol values (OpenBabel or Rasmol, depending upon file type) or the set used by the Duke University 
<a class="xref" href="http://molprobity.biochem.duke.edu/" target="_blank">molProbity</a> site as per 
<b>Word, et al, J. Mol. Biol. (1999) 285, 1711-1733</b>: 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > 1.0 </td >
<td valign="top" > {_H}</td ></tr >
<tr >
<td valign="top" > 1.17 </td >
<td valign="top" > {_H and connected(_C) and not connected(within(smiles,"[r6]"))}</td ></tr >
<tr >
<td valign="top" > 1.75 </td >
<td valign="top" > {_C}</td ></tr >
<tr >
<td valign="top" > 1.65 </td >
<td valign="top" > {_C and connected(3) and connected(_O)}</td ></tr >
<tr >
<td valign="top" > 1.55 </td >
<td valign="top" > {_N}</td ></tr >
<tr >
<td valign="top" > 1.4 </td >
<td valign="top" > {_O}</td ></tr >
<tr >
<td valign="top" > 1.8 </td >
<td valign="top" > {_P}</td ></tr >
<tr >
<td valign="top" > 1.8 </td >
<td valign="top" > {_S} </td ></tr ></table ></i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_vectorsymmetry" id="k1106"> </a>set vectorSymmetry FALSE</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Displays vibration vectors as double-ended arrows.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_vibrationperiod" id="k1107"> </a>set vibrationPeriod (decimal)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the default period of vibrations (in seconds). Setting this value to 0 disables vibration modeling.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_vibrationscale" id="k1108"> </a>set vibrationScale (decimal)</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Sets the amplitude of vibrations.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_waitformoveto" id="k1109"> </a>set waitForMoveto ON</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Setting this parameter OFF allows 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#moveto">moveTo</a> operations to continue independently while script commands are processing. An ongoing moveTo operation can then be stopped at any time using 
<b>moveTo STOP</b> Starting in 
<span class="newv">Jmol 14.2</span>.7, this action is extended to the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#rotate">rotate x.x y.y</a> finite spin option.</i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td valign="top">
<a name="set_wireframerotation" id="k1110"> </a>set wireframeRotation OFF</td ></tr>
<tr name='tr_setmisc'>
<td>
<blockquote>
<p >
<i >Turning this parameter ON sets Jmol to not display spacefill and only display bonds as simple lines during user-based model manipulation. </i ></p ></blockquote></td></tr> 
<tr name='tr_setmisc'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_setmisc'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_setmisc'>
<td colspan="5">
<p>
<a class="xref" href="#animation">animation</a> 
<a class="xref" href="#capture">capture</a> 
<a class="xref" href="#cgo">cgo</a> 
<a class="xref" href="#data">data</a> 
<a class="xref" href="#draw">draw</a> 
<a class="xref" href="#file">file</a> 
<a class="xref" href="#frame">frame</a> 
<a class="xref" href="#invertselected">invertSelected</a> 
<a class="xref" href="#move">move</a> 
<a class="xref" href="#moveto">moveto</a> 
<a class="xref" href="#nbo">nbo</a> 
<a class="xref" href="#rotateselected">rotateSelected</a> 
<a class="xref" href="#show">show</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#spin">spin</a> 
<a class="xref" href="#translate">translate</a> 
<a class="xref" href="#translateselected">translateSelected</a> 
<a class="xref" href="#writeimagesandframes">write (images and frames)</a> 
<a class="xref" href="#writeobject">write (object)</a> 
<a class="xref" href="#zoom">zoom</a> 
<a class="xref" href="#zoomto">zoomto</a> </p></td></tr>
<tr name='tr_setmisc'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k997">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_setnavigation'>
<td colspan="5">
<h3 >
<a id="setnavigation" name="setnavigation">set (navigation)</a>
<a id="k1111"> </a>
<a id="set_hidenavigationpoint_top"> </a>
<a id="set_navfps_top"> </a>
<a id="set_navigatesurface_top"> </a>
<a id="set_navigationdepth_top"> </a>
<a id="set_navigationmode_top"> </a>
<a id="set_navigationperiodic_top"> </a>
<a id="set_navigationspeed_top"> </a>
<a id="set_navigationslab_top"> </a>
<a id="set_navx_top"> </a>
<a id="set_navy_top"> </a>
<a id="set_navz_top"> </a>
<a id="set_shownavigationpointalways_top"> </a>
<a id="set_visualrange_top"> </a></h3></td></tr>
<tr name='tr_setnavigation'>
<td>
<i >This commands in this group set various parameters in relation to navigating through the model. See 
<a class="xref" href="misc/navigation.pdf" target="_blank">pdf documentation</a> for details regarding the Jmol perspective/navigation model.
<br />
<br /></i ></td></tr>
<tr name='tr_setnavigation'>
<td valign="top">
<a name="set_hidenavigationpoint" id="k1113"> </a>set hideNavigationPoint FALSE</td ></tr>
<tr name='tr_setnavigation'>
<td>
<blockquote>
<p >
<i >When navigating, a small square-with-crosshairs pointer usually appears to help guide the user. Setting this parameter TRUE hides that pointer.</i ></p ></blockquote></td></tr> 
<tr name='tr_setnavigation'>
<td valign="top">
<a name="set_navfps" id="k1114"> </a>set navFPS (integer)</td ></tr>
<tr name='tr_setnavigation'>
<td>
<blockquote>
<p >
<i >Sets the nominal speed of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#navigate">navigation</a>. Default value is 10.</i ></p ></blockquote></td></tr> 
<tr name='tr_setnavigation'>
<td valign="top">
<a name="set_navigatesurface" id="k1115"> </a>set navigateSurface FALSE</td ></tr>
<tr name='tr_setnavigation'>
<td>
<blockquote>
<p >
<i >An experimental setting that restricts navigation to the inside of a surface. Not intended for general use.</i ></p ></blockquote></td></tr> 
<tr name='tr_setnavigation'>
<td valign="top">
<a name="set_navigationdepth" id="k1116"> </a>set navigationDepth (percent)</td ></tr>
<tr name='tr_setnavigation'>
<td>
<blockquote>
<p >
<i >Sets the depth of the observer navigation point using the same basis as standard slab and depth -- 0 being the back plane of the model; 100 being the front plane of the model. Values greater than 100 represent observation points in front of model.</i ></p ></blockquote></td></tr> 
<tr name='tr_setnavigation'>
<td valign="top">
<a name="set_navigationmode" id="k1117"> </a>set navigationMode FALSE</td ></tr>
<tr name='tr_setnavigation'>
<td>
<blockquote>
<p >
<i >When set TRUE, enables user-directed navigation through the model using the keypad arrow keys according to the following table. Setting this parameter TRUE automatically sets the perspectiveStyle to 11, sets zoomEnabled, and sets perspectiveDepth on. 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >UP/DOWN arrows</td >
<td valign="top" >go forward/back off</td ></tr >
<tr >
<td valign="top" >LEFT/RIGHT arrows</td >
<td valign="top" >turn left/turn right</td ></tr >
<tr >
<td valign="top" >ALT UP/DOWN arrows</td >
<td valign="top" >pitch upward or downward</td ></tr >
<tr >
<td valign="top" >SHIFT LEFT/RIGHT/UP/DOWN arrows</td >
<td valign="top" >shift navigation point on the screen and in relation to the model</td ></tr ></table ></i ></p ></blockquote></td></tr> 
<tr name='tr_setnavigation'>
<td valign="top">
<a name="set_navigationperiodic" id="k1118"> </a>set navigationPeriodic FALSE</td ></tr>
<tr name='tr_setnavigation'>
<td>
<blockquote>
<p >
<i >When set TRUE, and the model has a unit cell defined and symmetry has been applied using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#load">load</a> {i j k}, creates the effect of an limitless navigation. The navigation center is kept always within the unit cell. The more full unit cells that have been loaded, the more realistic the effect. </i ></p ></blockquote></td></tr> 
<tr name='tr_setnavigation'>
<td valign="top">
<a name="set_navigationspeed" id="k1119"> </a>set navigationSpeed (integer)</td ></tr>
<tr name='tr_setnavigation'>
<td>
<blockquote>
<p >
<i >Sets the rate of forward/reverse navigation when using the up/down arrow keys. The default value is 5.</i ></p ></blockquote></td></tr> 
<tr name='tr_setnavigation'>
<td valign="top">
<a name="set_navigationslab" id="k1120"> </a>set navigationSlab (percent)</td ></tr>
<tr name='tr_setnavigation'>
<td>
<blockquote>
<p >
<i >Sets the depth of the depth of the slab plane relative to the observer navigation point using the same basis as standard slab and depth -- 0 (default) being at the navigation point; positive numbers being toward the user relative to that. </i ></p ></blockquote></td></tr> 
<tr name='tr_setnavigation'>
<td valign="top">
<a name="set_navx" id="k1121"> </a>set navX (decimal)</td ></tr>
<tr name='tr_setnavigation'>
<td>
<blockquote>
<p >
<i >Sets the navigation turning rate in the X direction (yaw) in units of 1/50 degrees per frame.</i ></p ></blockquote></td></tr> 
<tr name='tr_setnavigation'>
<td valign="top">
<a name="set_navy" id="k1122"> </a>set navY (decimal)</td ></tr>
<tr name='tr_setnavigation'>
<td>
<blockquote>
<p >
<i >Sets the navigation turning rate in the Y direction (pitch) in units of 1/50 degrees per frame.</i ></p ></blockquote></td></tr> 
<tr name='tr_setnavigation'>
<td valign="top">
<a name="set_navz" id="k1123"> </a>set navZ (decimal)</td ></tr>
<tr name='tr_setnavigation'>
<td>
<blockquote>
<p >
<i >Sets the navigation rate in the Z direction (forward motion) relative to its standard value of 1.</i ></p ></blockquote></td></tr> 
<tr name='tr_setnavigation'>
<td valign="top">
<a name="set_shownavigationpointalways" id="k1124"> </a>set showNavigationPointAlways FALSE</td ></tr>
<tr name='tr_setnavigation'>
<td>
<blockquote>
<p >
<i >When set TRUE, the navigation cross-hair cursor is shown whenever in navigation mode, not just while the user is pressing keypad keys or scripted navigation is occurring.</i ></p ></blockquote></td></tr> 
<tr name='tr_setnavigation'>
<td valign="top">
<a name="set_visualrange" id="k1125"> </a>set visualRange (angstroms)</td ></tr>
<tr name='tr_setnavigation'>
<td>
<blockquote>
<p >
<i >The visual range is the MINIMUM distance in Angstroms that is viewable by the observer. The default value of 5.0 indicates that with 
<b>set navigationMode TRUE</b> any object in a plane that is less than 5.0 Angstroms across will be clipped automatically under the presumption that that object is behind the observer. This prevents large objects close to the user from eclipsing smaller objects further from the observer so as to give the illusion of having entered the model itself and now being within it.</i ></p ></blockquote></td></tr> 
<tr name='tr_setnavigation'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_setnavigation'>
<td colspan="5">
<p>
<a class="xref" href="#backbone">backbone</a> 
<a class="xref" href="#background">background</a> 
<a class="xref" href="#cartoon">cartoon</a> 
<a class="xref" href="#dots">dots</a> 
<a class="xref" href="#ellipsoid">ellipsoid</a> 
<a class="xref" href="#geosurface">geoSurface</a> 
<a class="xref" href="#meshribbon">meshribbon</a> 
<a class="xref" href="#move">move</a> 
<a class="xref" href="#moveto">moveto</a> 
<a class="xref" href="#navigate">navigate</a> 
<a class="xref" href="#ribbon">ribbon</a> 
<a class="xref" href="#rocket">rocket</a> 
<a class="xref" href="#rotate">rotate</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlighting">set (lighting)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#strand">strand</a> 
<a class="xref" href="#trace">trace</a> 
<a class="xref" href="#translate">translate</a> 
<a class="xref" href="#vector">vector</a> 
<a class="xref" href="#wireframe">wireframe</a> 
<a class="xref" href="#zoomto">zoomto</a> </p></td></tr>
<tr name='tr_setnavigation'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1112">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_setperspective'>
<td colspan="5">
<h3 >
<a id="setperspective" name="setperspective">set (perspective)</a>
<a id="k1126"> </a>
<a id="set_cameradepth_top"> </a>
<a id="set_perspectivedepth_top"> </a>
<a id="set_perspectivemodel_top"> </a>
<a id="set_rotationradius_top"> </a>
<a id="set_scaleangstromsperinch_top"> </a>
<a id="set_windowcentered_top"> </a>
<a id="set_zoomenabled_top"> </a>
<a id="set_zoomheight_top"> </a>
<a id="set_zoomlarge_top"> </a></h3></td></tr>
<tr name='tr_setperspective'>
<td>
<i >This commands in this group determine the overall lighting effects, size, and rotation for the model. Note that in a multi-applet environment, changing lighting values (ambientPercent, diffusePercent, specular, specularExponent, specularPercent, or specularPower) changes them for ALL applets. Effect on another applet may not appear until that model is rotated by the user or some command is issued to that applet that requires updating the display.
<br />
<br /></i ></td></tr>
<tr name='tr_setperspective'>
<td valign="top">
<a name="set_cameradepth" id="k1128"> </a>set cameraDepth (positive number)</td ></tr>
<tr name='tr_setperspective'>
<td>
<blockquote>
<p >
<i >Sets the amount of perspective. The Jmol default is 
<b>set cameraDepth 3.0</b>, but you can adjust that to your liking. Smaller numbers lead to more extreme perspective distortion; higher numbers minimize the effect of perspective. The scale in the vertical plane midway from front to back of the model is identical to with 
<b>set perspectiveDepth off</b> at any zoom level; if 
<b>p</b> the relative distance of a vertical plane from front (0) to back (1) of the model at a zoom of 100, then the scaling factor is (cameraDepth + 0.5) / (cameraDepth + p) for that plane. This gives, for cameraDepth=3.0, 1.17 for p=0, 1.0 for p=0.5 (as for all cameraDepths), and 0.87 for p=1.</i ></p ></blockquote></td></tr> 
<tr name='tr_setperspective'>
<td valign="top">
<a name="set_perspectivedepth" id="k1129"> </a>set perspectiveDepth ON</td ></tr>
<tr name='tr_setperspective'>
<td>
<blockquote>
<p >
<i >Turning this parameter OFF turns off perspective depth. OFF is required for proper function of absolute scale (
<b>set scaleAngstromsPerInch nnn</b>). Perspective depth is automatically turned off by Jmol when loading a model having a unit cell and symmetry operators and automatically turned ON otherwise.</i ></p ></blockquote></td></tr> 
<tr name='tr_setperspective'>
<td valign="top">
<a name="set_perspectivemodel" id="k1130"> </a>set perspectiveModel 11</td ></tr>
<tr name='tr_setperspective'>
<td>
<blockquote>
<p >
<i >Jmol's perspective model involves a linear perspective that is required for navigation mode. Setting this parameter to 10 returns Jmol to the former perspective model used in Jmol 10. When 
<b>set navigationMode</b> is invoked, the perspective model is automatically set to 11. </i ></p ></blockquote></td></tr> 
<tr name='tr_setperspective'>
<td valign="top">
<a name="set_rotationradius" id="k1131"> </a>set rotationRadius (Angstroms)</td ></tr>
<tr name='tr_setperspective'>
<td>
<blockquote>
<p >
<i >Sets the nominal rotation radius for the model effectively setting the size of the model at 
<b>zoom 100</b>. Normally set to the radius that will contain within the screen the entire model when rotated relative to the default rotation center. </i ></p ></blockquote></td></tr> 
<tr name='tr_setperspective'>
<td valign="top">
<a name="set_scaleangstromsperinch" id="k1133"> </a>set scaleAngstromsPerInch 
<a class='def' href='#d1132' title='the apparent distance from the model to the user in arbitrary units -- (integer), (decimal)'>[viewing-distance]</a></td ></tr>
<tr name='tr_setperspective'>
<td>
<blockquote>
<p >
<i >Sets the absolute scale of the model by setting the viewing distance from the user to the model in arbitrary units. The actual scale will depend upon the sizes of both the applet window and the screen. </i ></p ></blockquote></td></tr> 
<tr name='tr_setperspective'>
<td valign="top">
<a name="set_windowcentered" id="k1134"> </a>set windowCentered TRUE</td ></tr>
<tr name='tr_setperspective'>
<td>
<blockquote>
<p >
<i >Setting this parameter to FALSE allows one to set the center of rotation to a new position without also moving that position to the center pixel of the applet window. </i ></p ></blockquote></td></tr> 
<tr name='tr_setperspective'>
<td valign="top">
<a name="set_zoomenabled" id="k1135"> </a>set zoomEnabled TRUE</td ></tr>
<tr name='tr_setperspective'>
<td>
<blockquote>
<p >
<i >When set FALSE, this parameter disables zooming. Same as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#zoom">zoom ON/OFF</a></i ></p ></blockquote></td></tr> 
<tr name='tr_setperspective'>
<td valign="top">
<a name="set_zoomheight" id="k1136"> </a>set zoomHeight FALSE</td ></tr>
<tr name='tr_setperspective'>
<td>
<blockquote>
<p >
<i >When this setting is TRUE, Jmol adjusts the zoom only when the height is changed. Adjusting the width only widens the view (as in PyMOL). Setting zoomHeight TRUE disables 
<b>zoomLarge</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setperspective'>
<td valign="top">
<a name="set_zoomlarge" id="k1137"> </a>set zoomLarge TRUE</td ></tr>
<tr name='tr_setperspective'>
<td>
<blockquote>
<p >
<i >ZoomLarge is ignored when zoomHeight is TRUE.) When TRUE (Jmol default setting), Jmol adjusts the zoom based on the LARGER of the two application/applet dimensions, height and width. Setting this parameter FALSE causes zoom to be based on the smaller of the two dimensions, which may be useful for the applet if the user is allowed to resize the applet window. PyMOL NOTE: Pymol uses 
<b>set zoomHeight TRUE</b>, and when a PSE file is read, Jmol automatically goes to this mode.</i ></p ></blockquote></td></tr> 
<tr name='tr_setperspective'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_setperspective'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_setperspective'>
<td colspan="5">
<p>
<a class="xref" href="#backbone">backbone</a> 
<a class="xref" href="#background">background</a> 
<a class="xref" href="#cartoon">cartoon</a> 
<a class="xref" href="#dots">dots</a> 
<a class="xref" href="#ellipsoid">ellipsoid</a> 
<a class="xref" href="#geosurface">geoSurface</a> 
<a class="xref" href="#meshribbon">meshribbon</a> 
<a class="xref" href="#move">move</a> 
<a class="xref" href="#moveto">moveto</a> 
<a class="xref" href="#ribbon">ribbon</a> 
<a class="xref" href="#rocket">rocket</a> 
<a class="xref" href="#rotate">rotate</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlighting">set (lighting)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#strand">strand</a> 
<a class="xref" href="#trace">trace</a> 
<a class="xref" href="#translate">translate</a> 
<a class="xref" href="#vector">vector</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_setperspective'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1127">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_setstructure'>
<td colspan="5">
<h3 class=h3new>
<a id="setstructure" name="setstructure">set (structure)</a>
<a id="k1138"> </a>
<a id="set_backbonesteps_top"> </a>
<a id="set_cartoonfancy_top"> </a>
<a id="set_cartoonladders_top"> </a>
<a id="set_cartoonbaseedges_top"> </a>
<a id="set_cartoonribose_top"> </a>
<a id="set_cartoonrockets_top"> </a>
<a id="set_defaultstructuredssp_top"> </a>
<a id="set_dsspcalculatehydrogenalways_top"> </a>
<a id="set_hermitelevel_top"> </a>
<a id="set_highresolution_top"> </a>
<a id="set_ribbonaspectratio_top"> </a>
<a id="set_ribbonborder_top"> </a>
<a id="set_rocketbarrels_top"> </a>
<a id="set_sheetsmoothing _top"> </a>
<a id="set_strandcount_top"> </a>
<a id="set_strandcountforstrands_top"> </a>
<a id="set_strandcountformeshribbon_top"> </a>
<a id="set_tracealpha_top"> </a>
<a id="set_structure_top"> </a> 
<br />
<span class=new>(v. 11.0 -- several new customizable features)</span></h3></td></tr>
<tr name='tr_setstructure'>
<td>
<i >This command group allows for customization of the rendering of PDB and mmCIF secondary structures. The default is 
<b>set cartoonRockets OFF; set ribbonAspectRatio 16; set hermiteLevel 0; set ribbonBorder 0; set sheetSmoothing 1; set strands 5; set traceAlpha ON</b>.
<br />
<br /></i ></td></tr>
<tr name='tr_setstructure'>
<td valign="top">
<a name="set_backbonesteps" id="k1140"> </a>
<span class=new>set backboneSteps OFF</span></td ></tr>
<tr name='tr_setstructure'>
<td>
<blockquote>
<p >
<i >
<span class=new>Setting this parameter ON produces backbones that have connectors for bases that look like those found in RNA step diagrams.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_setstructure'>
<td valign="top">
<a name="set_cartoonbaseedges" id="k1143"> </a>set cartoonBaseEdges OFF</td ></tr>
<tr name='tr_setstructure'>
<td>
<blockquote>
<p >
<i >Setting this parameter ON displays nucleic acid bases as triangles that highlight the sugar edge (red), Watson-Crick edge (green), and Hoogsteen edge (blue). See Nasalean L, Strombaugh J, Zirbel CL, and Leontis NB in 
<a class="xref" href="http://books.google.com/books?hl=en&lr=&id=se5JVEqO11AC&oi=fnd&pg=PR11&dq=Non-Protein+Coding+RNAs&ots=3uTkn7m3DA&sig=6LzQREmSdSoZ6yNrQ15zjYREFNE#v=onepage&q&f=false" target="_blank">
<b>Non-Protein Coding RNAs</b></a>, Nils G. Walter, Sarah A. Woodson, Robert T. Batey, Eds., Chapter 1, p 6.</i ></p ></blockquote></td></tr> 
<tr name='tr_setstructure'>
<td valign="top">
<a name="set_cartoonfancy" id="k1141"> </a>set cartoonFancy OFF</td ></tr>
<tr name='tr_setstructure'>
<td>
<blockquote>
<p >
<i >Setting this parameter ON produces cartoons that are not just flat ribbons.</i ></p ></blockquote></td></tr> 
<tr name='tr_setstructure'>
<td valign="top">
<a name="set_cartoonladders" id="k1142"> </a>set cartoonLadders OFF</td ></tr>
<tr name='tr_setstructure'>
<td>
<blockquote>
<p >
<i >Setting this parameter ON enables a PyMOL-like "cartoon_ladder_mode" rendering of nucleic acids, involving a simple stick representation for each base.</i ></p ></blockquote></td></tr> 
<tr name='tr_setstructure'>
<td valign="top">
<a name="set_cartoonribose" id="k1144"> </a>
<span class=new>set cartoonRibose OFF</span></td ></tr>
<tr name='tr_setstructure'>
<td>
<blockquote>
<p >
<i >
<span class=new>When ON, adds ribose rings to nucleic acid cartoons.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_setstructure'>
<td valign="top">
<a name="set_cartoonrockets" id="k1145"> </a>set cartoonRockets OFF</td ></tr>
<tr name='tr_setstructure'>
<td>
<blockquote>
<p >
<i >Setting this parameter ON sets the display of RasMol 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#cartoon">cartoons</a> to be a mixture of three-dimensional sheet cartoons and alpha helix 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#rocket">rockets</a>. It is not a precise as a cartoon with respect to helices but more precise than rockets in relation to beta-pleated sheets.</i ></p ></blockquote></td></tr> 
<tr name='tr_setstructure'>
<td valign="top">
<a name="set_defaultstructuredssp" id="k1146"> </a>set defaultStructureDSSP TRUE</td ></tr>
<tr name='tr_setstructure'>
<td>
<blockquote>
<p >
<i >Setting this parameter FALSE tells Jmol to not use DSSP for the calculation of secondary structure either upon loading a structure with no HELIX or SHEET information or when using the command 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">calculate STRUCTURE</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setstructure'>
<td valign="top">
<a name="set_dsspcalculatehydrogenalways" id="k1147"> </a>set dsspCalculateHydrogenAlways TRUE</td ></tr>
<tr name='tr_setstructure'>
<td>
<blockquote>
<p >
<i >Standard DSSP secondary structure analysis disregards all backbone amide hydrogen atoms that might be in a file and instead calculates its own based on the direction of the C=O vector. Setting this parameter FALSE instructs Jmol to not calculate these file-based positions and to instead use the positions of the hydrogen atoms that are in the file. </i ></p ></blockquote></td></tr> 
<tr name='tr_setstructure'>
<td valign="top">
<a name="set_hermitelevel" id="k1148"> </a>set hermiteLevel (integer, -8 to 8)</td ></tr>
<tr name='tr_setstructure'>
<td>
<blockquote>
<p >
<i >Determines the amount of curve smoothing used in rendering protein and nucleic acid secondary structures involving 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#cartoon">cartoon</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#ribbbon">ribbbon</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#rocket">rocket</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#trace">trace</a>. 
<b>set hermiteLevel 0</b> uses a Jmol 10.2 method of rendering these structures, with rope-like traces and paper-thin ribbons and cartoons. Positive values produce more rounded but slower to render shapes, but only when the model is not in motion. Negative numbers produce the same, but also while rotating. A value of 4 or -4 might be a reasonable compromise between look and performance. Hermite levels 6 or higher (-6 or lower) produce a ribbon cross-section in the shape of an ellipse. Use 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_ribbonaspectratio">set ribbonAspectRatio 4</a> rather than the default value of 16 for a more rounded ellipse.</i ></p ></blockquote></td></tr> 
<tr name='tr_setstructure'>
<td valign="top">
<a name="set_highresolution" id="k1149"> </a>set highResolution OFF</td ></tr>
<tr name='tr_setstructure'>
<td>
<blockquote>
<p >
<i >When set ON, and hermiteLevel is set, draws high-resolution hermite curves even if the diameter is small. Otherwise, small-diameter traces are shown in a faster-rendering fashion.</i ></p ></blockquote></td></tr> 
<tr name='tr_setstructure'>
<td valign="top">
<a name="set_ribbonaspectratio" id="k1150"> </a>set ribbonAspectRatio (integer)</td ></tr>
<tr name='tr_setstructure'>
<td>
<blockquote>
<p >
<i >Sets the thickness of the ribbons in ribbon and cartoon renderings in terms of the width:height aspect ratio; only enabled in conjunction with 
<b>set hermiteLevel</b> to a non-zero value. 
<b>set ribbonAspectRatio 0</b> turns off this feature; 8-16 is recommended; higher positive numbers leading to thinner ribbons.</i ></p ></blockquote></td></tr> 
<tr name='tr_setstructure'>
<td valign="top">
<a name="set_ribbonborder" id="k1151"> </a>set ribbonBorder OFF</td ></tr>
<tr name='tr_setstructure'>
<td>
<blockquote>
<p >
<i >Turning this parameter ON adds a slight border for ribbons.</i ></p ></blockquote></td></tr> 
<tr name='tr_setstructure'>
<td valign="top">
<a name="set_rocketbarrels" id="k1152"> </a>set rocketBarrels OFF</td ></tr>
<tr name='tr_setstructure'>
<td>
<blockquote>
<p >
<i >Turning this parameter ON removes the arrow heads from 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#rockets">rockets</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#cartoon">cartoon rockets</a>, turning them into simple cylindrical barrels.</i ></p ></blockquote></td></tr> 
<tr name='tr_setstructure'>
<td valign="top">
<a name="set_sheetsmoothing " id="k1153"> </a>set sheetSmoothing (0 to 1)</td ></tr>
<tr name='tr_setstructure'>
<td>
<blockquote>
<p >
<i >In conjunction with 
<b>set traceAlpha</b>, this parameter determines the "waviness" of beta-pleated sheets. 
<b>set sheetSmoothing 0</b> creates wavy sheets, with the ribbon or trace going directly through the alpha carbons. The default is 
<b>set sheetSmoothing 1</b>, which produces a more averaged, smoother (standard) ripple. Has no effect unless 
<b>set traceAlpha</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setstructure'>
<td valign="top">
<a name="set_strandcount" id="k1155"> </a>set strandCount 
<a class='def' href='#d1154' title='the number of strands -- (integer, 0 to 20)'>[strand-count]</a></td ></tr>
<tr name='tr_setstructure'>
<td>
<blockquote>
<p >
<i >Sets the number of strands to display for the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#strand">strand</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#meshribbon">meshribbon</a> shapes both, with a maximum of 20.</i ></p ></blockquote></td></tr> 
<tr name='tr_setstructure'>
<td valign="top">
<a name="set_strandcountformeshribbon" id="k1157"> </a>set strandCountForMeshRibbon 
<a class='def' href='#d1154' title='the number of strands -- (integer, 0 to 20)'>[strand-count]</a></td ></tr>
<tr name='tr_setstructure'>
<td>
<blockquote>
<p >
<i >Sets the number of strands to display for the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#meshribbon">meshribbon</a> shape, with a maximum of 20.</i ></p ></blockquote></td></tr> 
<tr name='tr_setstructure'>
<td valign="top">
<a name="set_strandcountforstrands" id="k1156"> </a>set strandCountForStrands 
<a class='def' href='#d1154' title='the number of strands -- (integer, 0 to 20)'>[strand-count]</a></td ></tr>
<tr name='tr_setstructure'>
<td>
<blockquote>
<p >
<i >Sets the number of strands to display for the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#strand">strand</a> shape, with a maximum of 20.</i ></p ></blockquote></td></tr> 
<tr name='tr_setstructure'>
<td valign="top">
<a name="set_structure" id="k1159"> </a>set structure HELIX|SHEET|TURN [phi-psi ranges]</td ></tr>
<tr name='tr_setstructure'>
<td>
<blockquote>
<p >
<i >Ideally, PDB files will contain header information relating to helix, sheet, or turn locations. When this information is not present, or when the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">calculate structure</a> command is given, Jmol uses an admittedly crude Ramachandran angle range check to determine structure type. The 
<b>set STRUCTURE</b> command allows setting those Ramachandran angle ranges for helix, sheet, and turn. [phi-psi range] is a set of angles in groups of four. Each group of four numbers includes the minimum and maximum phi values followed by the minimum and maximum psi values that would be valid for this structure type. For example, 
<b>set structure HELIX [-160, 0, -100, 45]</b> sets "helix" to be defined as phi >= -160 and phi 
<= 0 and psi >= -100 and psi 
<= 45 (the Jmol default). The default setting for sheet (really just a strand, since we are not requiring cross-strand hydrogen bonding) and turn are 
<b>set SHEET [-180, -10, 70, 180, -180, -45, -180, -130, 140, 180, 90, 180]; set TURN [30, 90, -15, 95]</b>. It is recommended that this command be followed immediately with 
<b>calculate structure;cartoons only</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setstructure'>
<td valign="top">
<a name="set_tracealpha" id="k1158"> </a>set traceAlpha TRUE</td ></tr>
<tr name='tr_setstructure'>
<td>
<blockquote>
<p >
<i >When set TRUE (the default), along with 
<b>set sheetSmoothing 0</b>, directs Jmol to draw 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#trace">traces</a> directly through all alpha-carbons. The effect is a wider, more standard alpha helix and a wavier beta-pleated sheet than in Jmol 10.2. Setting 
<b>set sheetSmoothing 1;set traceAlpha ON</b> directs Jmol to create smooth out the beta-pleated sheets but still follow the alpha carbons for other structure types. With 
<b>set traceAlpha FALSE</b>, Jmol draws traces through the midpoints of the lines connecting adjacent alpha-carbons, producing tighter alpha helices and smoothed beta-pleated sheets. Also used as the basis for drawing cartoons, meshRibbons, ribbons, rockets, and strands. The sequence 
<b>set traceAlpha off; set sheetSmoothing 1;set hermiteLevel 0</b> is equivalent to the Jmol 10.2 default. Jmol 11.4 has the default settings: 
<b>set traceAlpha TRUE; set sheetSmoothing 1;set hermiteLevel 0</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setstructure'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_setstructure'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1139">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_setvisibility'>
<td colspan="5">
<h3 class=h3newer>
<a id="setvisibility" name="setvisibility">set (visibility)</a>
<a id="k1160"> </a>
<a id="set_axes_top"> </a>
<a id="set_axesoffset_top"> </a>
<a id="set_axesmode_top"> </a>
<a id="set_axesmolecular_top"> </a>
<a id="set_axesscale_top"> </a>
<a id="set_axesunitcell_top"> </a>
<a id="set_axeswindow_top"> </a>
<a id="set_backgroundcolor_top"> </a>
<a id="set_boundbox_top"> </a>
<a id="set_boundboxcolor_top"> </a>
<a id="set_defaulttranslucent_top"> </a>
<a id="set_disablepopupmenu_top"> </a>
<a id="set_displaycellparameters_top"> </a>
<a id="set_greyscalerendering_top"> </a>
<a id="set_hidenameinpopup_top"> </a>
<a id="set_hidenotselected_top"> </a>
<a id="set_platformspeed_top"> </a>
<a id="set_refreshing_top"> </a>
<a id="set_solventproberadius_top"> </a>
<a id="set_shift_xx_top"> </a>
<a id="set_showaxes_top"> </a>
<a id="set_showboundbox_top"> </a>
<a id="set_showfrank_top"> </a>
<a id="set_showhiddenselectionhalos_top"> </a>
<a id="set_showhydrogens_top"> </a>
<a id="set_showselections_top"> </a>
<a id="set_showunitcelldetails_top"> </a>
<a id="set_showunitcell_top"> </a>
<a id="set_slabbyatom_top"> </a>
<a id="set_slabbymolecule_top"> </a>
<a id="set_slabenabled_top"> </a>
<a id="set_solventprobe_top"> </a>
<a id="set_translucent_top"> </a>
<a id="set_unitcell_top"> </a>
<a id="set_unitcellcolor_top"> </a> 
<br />
<span class=newer>(v. 11.0 -- several new features)</span></h3></td></tr>
<tr name='tr_setvisibility'>
<td>
<i >This command group turns on or off specific sets of atoms and axes/cell-related options.
<br />
<br /></i ></td></tr>
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_axes" id="k1163"> </a>set axes 
<a class='def' href='#d1162' title='a line width or type for a drawing object -- ON, OFF, DOTTED, (integer, 1 to 19), (decimal, &lt;2.0)'>[line-width-or-type]</a></td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#axes">axes</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_axesmode" id="k1165"> </a>set axesMode 0, 1, or 2</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Allows setting and checking of the current axes mode: (0) window, (1) molecular, (2) unitcell </i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_axesoffset" id="k1164"> </a>
<span class=newer>set axesOffset (decimal) [
<b>Jmol 14.6</b>]</span></td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >
<span class=newer>For 
<b>axes unitcell</b> offsets the axes by the specified fractional coordinants in a, b, and c. Same as 
<b>axes offset x.x</b></span></i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_axesmolecular" id="k1166"> </a>set axesMolecular OFF</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#axes">axes</a>; this parameter can be set and checked using Jmol math.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_axesscale" id="k1167"> </a>set axesScale (decimal)</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Allows setting of the axes scale; (default 2)</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_axesunitcell" id="k1168"> </a>set axesUnitcell OFF</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#axes">axes</a>; this parameter can be set and checked using Jmol math.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_axeswindow" id="k1169"> </a>set axesWindow ON</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#axes">axes</a>; this parameter can be set and checked using Jmol math.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_backgroundcolor" id="k1171"> </a>set backgroundColor 
<a class='def' href='#d1170' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a></td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Sets the background color to the specified value; can be inspected using Jmol math.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_boundbox" id="k1172"> </a>set boundbox 
<a class='def' href='#d1162' title='a line width or type for a drawing object -- ON, OFF, DOTTED, (integer, 1 to 19), (decimal, &lt;2.0)'>[line-width-or-type]</a></td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#boundbox">boundbox</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_boundboxcolor" id="k1173"> </a>set boundboxColor "color_name"</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >This parameter sets the default boundbox color and also can be read as the current boundbox color.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_defaulttranslucent" id="k1174"> </a>set defaultTranslucent (decimal)</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Sets the default translucent level (0.5 is standard). </i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_disablepopupmenu" id="k1175"> </a>set disablePopupMenu FALSE</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >
<b>set disablePopupMenu TRUE</b> disables the pop-up menu.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_displaycellparameters" id="k1176"> </a>set displayCellParameters TRUE</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Turning this parameter FALSE turns off the unit cell parameter list that is included with 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#unitcell">unitcell ON</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_greyscalerendering" id="k1177"> </a>set greyScaleRendering OFF</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Setting this parameter ON displays all colors as grey scale values.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_hidenameinpopup" id="k1178"> </a>set hideNameInPopUp FALSE</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Setting this parameter TRUE hides the file name and contents in the pop-up menu starting with the NEXT FILE LOADED.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_hidenotselected" id="k1179"> </a>set hideNotSelected FALSE</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Setting this parameter TRUE tells Jmol to hide any atoms whenever they are not selected. 
<b>set hideNotSelected TRUE</b> immediately hides the currently unselected atoms. When turned off, no immediate action is taken, but future selections no longer hide atoms. The flag is automatically cleared when a new model is loaded or when the picking mode is set to any sort of selection (atom, group, etc.). </i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_platformspeed" id="k1180"> </a>set platformSpeed 1 - 8</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >This parameter replaces 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_wireframerotation">set wireframeRotation</a> and determines how many compromises are used in rendering a model when it is in motion due to animation or user manipulation. The goal is to provide "slimmed down" versions of of the model in order to allow smooth rotation. Larger values include all of the capabilities enabled by lower values. 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" > value >= </td >
<td valign="top" > enables </td ></tr >
<tr >
<td valign="top" > 8 </td >
<td valign="top" >antialiasDisplay (and thus, all features)</td ></tr >
<tr >
<td valign="top" > 7 </td >
<td valign="top" >translucency</td ></tr >
<tr >
<td valign="top" > 6 </td >
<td valign="top" >meshes (contact, draw, isosurface, MO, pmesh, lcaocartoon, CGO)</td ></tr >
<tr >
<td valign="top" > 5 </td >
<td valign="top" >cartoons, rockets, trace, ribbon</td ></tr >
<tr >
<td valign="top" > 4 </td >
<td valign="top" >geosurfaces</td ></tr >
<tr >
<td valign="top" > 3 </td >
<td valign="top" >ellipsoids</td ></tr >
<tr >
<td valign="top" > 2 </td >
<td valign="top" >wireframe and balls</td ></tr >
<tr >
<td valign="top" > 1 </td >
<td valign="top" >none of the above (same as "set wireframeRotation off")</td ></tr >
<tr >
<td valign="top" > 0 </td >
<td valign="top" >reserved for "auto"</td ></tr ></table ></i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_refreshing" id="k1181"> </a>set refreshing TRUE</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >When 
<b>refreshing</b> is set FALSE, no writing to the screen is done at all. Setting refreshing to TRUE should only be done in cases where there is a desire to not show intermediate results as a valid well-tested script runs. If the script throws an error, and refreshing is FALSE, Jmol may appear to be frozen when in fact it is not.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_shift_xx" id="k1184"> </a>set shift_XX (decimal)</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Sets the chemical shift reference in PPM for converting magnetic susceptibility to chemical shift. XX is a nucleus such as H or C. For example, 
<b>set shift_H 30</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_showaxes" id="k1185"> </a>set showAxes FALSE</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Setting 
<b>showAxes</b> TRUE displays the axes at their default line width; setting it false hides the axes.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_showboundbox" id="k1186"> </a>set showBoundBox FALSE</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Setting 
<b>showAxes</b> TRUE displays the bounding box as a thin dotted line; setting it false hides the bounding box.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_showfrank" id="k1187"> </a>set showFrank TRUE</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Setting 
<b>showFrank</b> TRUE displays the Jmol frank in the lower right-hand corner. Checking this parameter allows checking to see if the frank is on.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_showhiddenselectionhalos" id="k1188"> </a>set showHiddenSelectionHalos FALSE</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >When both this parameter is ON and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#selectionhalos">selectionHalos</a> are ON, Jmol will display selection halos even if atoms are hidden. </i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_showhydrogens" id="k1189"> </a>set showHydrogens TRUE</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Turns on and off display of hydrogen atoms.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_showselections" id="k1190"> </a>set showSelections FALSE</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >deprecated -- see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#selectionhalos">selectionHalos</a></i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_showunitcell" id="k1192"> </a>set showUnitcell FALSE</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Setting this parameter TRUE is equivalent to 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#unitcell">unitcell ON</a>; can be tested using Jmol math. </i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_showunitcelldetails" id="k1191"> </a>
<span class=new>set showUnitcellDetails TRUE</span></td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >
<span class=new>Display full unit cell information in the upper left corner when 
<b>set displayCellParameters</b> and 
<b> set showUnitCell</b> are both TRUE. </span></i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_slabbyatom" id="k1193"> </a>set slabByAtom FALSE</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Setting this flag TRUE removes whole atoms and bonds when they are partially clipped. </i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_slabbymolecule" id="k1194"> </a>set slabByMolecule FALSE</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Setting this flag TRUE removes whole molecules when they are partially clipped. </i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_slabenabled" id="k1195"> </a>set slabEnabled FALSE</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Setting this parameter TRUE is equivalent to 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#slab">slab ON</a>; can be tested using Jmol math. </i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_solventprobe" id="k1196"> </a>set solventProbe OFF</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Turning this parameter ON turns on a solvent "probe" that can be displayed using dots. After 
<b>set solventPrope ON</b>, a subsequent 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#dots">dots ON</a> shows the surface of the aggregate of selected atoms using dots. This surface is defined by the contact of a spherical probe (representing a solvent molecule) rolled over the surface of the selected atoms. The radius of the probe sphere of 1.4 Angstroms approximates a water molecule. The default radius for Jmol is 1.2 Angstroms, which can be changed using 
<b>set solventPropbeRadius</b>. Note that no change in display occurs after 
<b>set solventProbe ON</b> until the next 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#dots">dots ON</a> command is encountered. Does not effect the function of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface solvent</a>, which draws a surface regardless of the setting of this flag. For a detailed discussion of molecular surfaces, see 
<a class="xref" href="http://www.netsci.org/Science/Compchem/feature14.html" target="_blank">http://www.netsci.org/Science/Compchem/feature14.html</a>.</i ></p ></blockquote></td></tr>
<tr name='tr_setvisibility'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('setsolvent')">in new window using 1crn.pdb</td></tr>
<tr name='tr_setvisibility'>
<td>
<table cellpadding="10">
<tr>
<td class="example">set radius 2.0
<br />set solvent ON
<br />select 1-10
<br />dots ON</td></tr></table></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_solventproberadius" id="k1183"> </a>set solventProbeRadius 
<a class='def' href='#d1182' title='a (decimal)'>[probe-radius-in-angstroms]</a>{default: 1.2}</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Sets the radius of the solvent "ball" that would run around the structure defining its outline. After 
<b>set radius</b>, you must (re)issue 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#dots">dots ON</a> for it to take effect, and the solvent probe option for dots must be set on using 
<b>set solvent ON</b> (below).</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_translucent" id="k1197"> </a>set translucent TRUE</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >Jmol by default considers translucent objects truly translucent. When set FALSE, translucent obects are not translucent to each other, creating an unreal but possibly desired effect similar to the default PyMOL setting transparency_mode 1.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_unitcell" id="k1198"> </a>set unitcell</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#unitcell">unitcell</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td valign="top">
<a name="set_unitcellcolor" id="k1199"> </a>set unitCellColor "color_name"</td ></tr>
<tr name='tr_setvisibility'>
<td>
<blockquote>
<p >
<i >This parameter sets the default unit cell color and also can be read as the current unit cell color.</i ></p ></blockquote></td></tr> 
<tr name='tr_setvisibility'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_setvisibility'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_setvisibility'>
<td colspan="5">
<p>
<a class="xref" href="#axes">axes</a> 
<a class="xref" href="#backbone">backbone</a> 
<a class="xref" href="#background">background</a> 
<a class="xref" href="#boundbox">boundbox</a> 
<a class="xref" href="#cartoon">cartoon</a> 
<a class="xref" href="#coloratomobject">color (atom object)</a> 
<a class="xref" href="#colorbondobject">color (bond object)</a> 
<a class="xref" href="#colorelement">color (element)</a> 
<a class="xref" href="#colormodelobject">color (model object)</a> 
<a class="xref" href="#colorother">color (other)</a> 
<a class="xref" href="#colorscheme">color (scheme)</a> 
<a class="xref" href="#colormeasures">color measures</a> 
<a class="xref" href="#dots">dots</a> 
<a class="xref" href="#ellipsoid">ellipsoid</a> 
<a class="xref" href="#geosurface">geoSurface</a> 
<a class="xref" href="#meshribbon">meshribbon</a> 
<a class="xref" href="#ribbon">ribbon</a> 
<a class="xref" href="#rocket">rocket</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlighting">set (lighting)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#setusercolorscheme">set userColorScheme</a> 
<a class="xref" href="#show">show</a> 
<a class="xref" href="#shownmr">show (NMR)</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#strand">strand</a> 
<a class="xref" href="#trace">trace</a> 
<a class="xref" href="#vector">vector</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_setvisibility'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1161">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_setecho'>
<td colspan="5">
<h3 class=h3new>
<a id="setecho" name="setecho">set echo</a>
<a id="k1200"> </a>
<a id="set_echo"> </a> 
<br />
<span class=new>(v. 11.0 introduces movable echo text and 3D echos, more label control, version 11.6 adds images)</span></h3></td></tr>
<tr name='tr_setecho'>
<td>
<i >Sets positioning and visibility parameters associated with text written to the screen using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#echo">echo</a> command. In all 
<b>set echo</b> commands, an optional id may be given. If this id is not given, the previously indicated id is assumed. 
<b>set echo IMAGE</b> allows images to be displayed instead of text. Characteristics of the text that are settable include: 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >background color </td >
<td valign="top" > Includes translucency. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#background">background ECHO</a>. </td ></tr >
<tr >
<td valign="top" >depth </td >
<td valign="top" > The default Z-position for echoed text and images is in front of the model. However, this can be set to any 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#depth">depth</a> in relation to the model, from 0 (rear) to 100 (front). See below. </td ></tr >
<tr >
<td valign="top" >font color </td >
<td valign="top" > Includes translucency. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#color">color ECHO</a>. </td ></tr >
<tr >
<td valign="top" >font size, face, style, and scaling factor </td >
<td valign="top" > See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#font">font ECHO</a>.</td ></tr >
<tr >
<td valign="top" >ID "xxx" </td >
<td valign="top" > The optional 
<b>ID</b> keyword introduces an echo ID that is in quotes or from evaluation, such as 
<b>set echo ID @{"test" + i}</b> in order to distinguish it from echo text, which would be indicated with 
<b>set echo "text here"</b>. Three special echo IDs, TOP, MIDDLE, and BOTTOM are defined for quick placement of text. These three special echos are always defined along with one of three predefined positions and text alignments: LEFT, CENTER, or RIGHT. Thus we have 
<b>set echo TOP LEFT</b>, 
<b>set echo TOP RIGHT</b>, etc. Note that you cannot have two separate echos both with the ID TOP. Thus, after 
<b>set echo top left;echo OK</b>, if you issue 
<b>set echo top right</b>, the text "OK" originally in the top left corner will jump to the top right corner. Note that TOP is an echo label, not an echo position. If you need two echos, one on the top left and one on the top right, it is best to use your own label id -- 
<b>set echo myTopLeft 0 100%; echo "on the left"; set echo myTopRight 100% 100%; echo "on the right"</b>. The difference in this case between 
<b>set echo TOP RIGHT</b> and 
<b>set echo myTopRight 100% 100%</b> is that in the latter case, if you want to right-align multi-line text, you also need to issue 
<b>set echo myTopRight right</b>. With 
<b>set echo TOP RIGHT</b>, the text is both positioned on the right and right-aligned.</td ></tr >
<tr >
<td valign="top" >IMAGE </td >
<td valign="top" > You can also place JPEG, PNG, or GIF images at either a 2D screen position or a 3D molecular position. See below. </td ></tr >
<tr >
<td valign="top" >model </td >
<td valign="top" > Echo text can be associated with a specific model, with visibility controlled by the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frame">frame</a> command. See below. </td ></tr >
<tr >
<td valign="top" >scaling </td >
<td valign="top" > Using the command 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setmisc">set fontScaling TRUE</a> 3D-positioned images and text along with atom labels can be made to scale when 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#zoom">zoom</a> is applied. The current zoom setting is used to fix a "scaling factor" used for the font. However the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#font">font</a> command can be used to set a different reference scaling factor. The absolute scale of an image independent of this 3D zoom scaling, can be set using 
<b>set echo scale</b>, below.</td ></tr >
<tr >
<td valign="top" >text alignment</td >
<td valign="top" > Text in echos is generally left-aligned. You can use 
<b>set echo myecho CENTER</b> to center text at the given position of that echo or 
<b>set echo myecho RIGHT</b> to have it right-aligned. Use 
<b>set echo myecho LEFT</b> to return the text to the default left alignment. Note that the special echo IDs TOP, MIDDLE, and BOTTOM are automatically text-aligned based on their required horizontal postion keyword -- LEFT, RIGHT, or CENTER. If you need center-aligned text that is positioned in the top right corner, for example, use your own ID: 
<b>set echo myecho 100% 100%;set echo myecho CENTER</b>. 
<b>Set echo myecho CENTER</b> also aligns multi-line text and images vertically.</td ></tr >
<tr >
<td valign="top" >visibility </td >
<td valign="top" > Echos are deleted using 
<b>set echco off</b>. However, you can selectively display or hide echos using either the 
<b>set echo HIDDEN/DISPLAYED</b> command or the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#hide">hide</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#display">display</a> commands with $name, where name is the name given an echo in the 
<b>set echo</b> command (including the special echos TOP, MIDDLE, and BOTTOM using $top, $middle, and $bottom, respectively). </td ></tr >
<tr >
<td valign="top" >x and y position within the window </td >
<td valign="top" > A "2D" echo. A block of text can be displayed anywhere within the applet or application window. An automatic adjustment is made to prevent text from going outside of the bounds of the window. See below. </td ></tr >
<tr >
<td valign="top" >x, y, and z position within the model itself </td >
<td valign="top" > A 3D echo. This position can be defined as a point in space, the coordinate of an atom, the average coordinate of a set of atoms, the position of a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">drawn point</a>, or the average position of a drawn object. See below. </td ></tr ></table >
<br>
<br> Default settings for font, color, and background can be set by first issuing 
<b>set echo none</b>, so that no real echo is set, and then issuing the desired 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#font">font</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#color">color</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#background">background</a> commands. In addition, any changes to these settings for any specific echo text become the new default for future text echos that are created for the same model.
<br>
<br>
<br />
<br /></i ></td></tr>
<tr name='tr_setecho'>
<td valign="top">
<a id="k1203"> </a>set echo id 
<a class='def' href='#d1202' title='one of the following: -- LEFT, CENTER, RIGHT'>[horizontal-position]</a>{default: left}</td ></tr>
<tr name='tr_setecho'>
<td>
<blockquote>
<p >
<i >Selects the horizontal text alignment (LEFT, CENTER, or RIGHT) for a user-positioned text echo. For the specific echos with ID 
<b>TOP</b>, 
<b>MIDDLE</b>, and 
<b>BOTTOM</b>, the horizontal alignment is also relative to the window. Any text already displayed in this position is immediately realigned. The CENTER option also centers the text box (or image) vertically at the 2D or 3D point defined for this echo.</i ></p ></blockquote></td></tr> 
<tr name='tr_setecho'>
<td valign="top">
<a id="k1204"> </a>set echo id x-position y-position</td ></tr>
<tr name='tr_setecho'>
<td>
<blockquote>
<p >
<i >Sets a custom echo position with the given name, where (0,0) is the bottom left corner. The next-issued 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#echo">echo</a> command will write text to this position. Any text already displayed is immediately moved. If the text would flow out of the applet window, it is repositioned just inside the boundary.</i ></p ></blockquote></td></tr> 
<tr name='tr_setecho'>
<td valign="top">
<a id="k1205"> </a>set echo id x% y%</td ></tr>
<tr name='tr_setecho'>
<td>
<blockquote>
<p >
<i >Sets echo position based on a percentage of the applet window size. (One or the other or both of x and y can have percent.) Note that 
<b>set echo myecho 0% 100%</b> is not quite the same as 
<b>set echo TOP LEFT</b>; 
<b>set echo myecho 100% 0%</b> is not quite the same as 
<b>set echo BOTTOM RIGHT</b>. The difference is that TOP LEFT and BOTTOM RIGHT automatically justify multiline text as well. Using percentages allows you to place text anywhere within the window and independently justify the text using 
<b>set echo myecho LEFT</b>, 
<b>set echo myecho RIGHT</b>, 
<b>set echo myecho CENTER</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setecho'>
<td valign="top">
<a id="k1206"> </a>set echo id [x y]</td ></tr>
<tr name='tr_setecho'>
<td>
<blockquote>
<p >
<i >Sets a custom echo position with the given name, where [0 0] is the bottom left corner. The next-issued 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#echo">echo</a> command will write text to this position. Any text already displayed is immediately moved. If the text would flow out of the applet window, it is repositioned just inside the boundary.</i ></p ></blockquote></td></tr> 
<tr name='tr_setecho'>
<td valign="top">
<a id="k1207"> </a>set echo id [x y %]</td ></tr>
<tr name='tr_setecho'>
<td>
<blockquote>
<p >
<i >Sets echo position based on a percentage of the applet window size. Note that 
<b>set echo myecho [0 100%]</b> is not quite the same as 
<b>set echo TOP LEFT</b>; 
<b>set echo myecho [100 0%]</b> is not quite the same as 
<b>set echo BOTTOM RIGHT</b>. The difference is that TOP LEFT and BOTTOM RIGHT automatically justify multiline text as well. Using percentages allows you to place text anywhere within the window and independently justify the text using 
<b>set echo myecho LEFT</b>, 
<b>set echo myecho RIGHT</b>, or 
<b>set echo myecho CENTER</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setecho'>
<td valign="top">
<a id="k1208"> </a>set echo id {x y z}</td ></tr>
<tr name='tr_setecho'>
<td>
<blockquote>
<p >
<i >Sets echo position in three dimensions, based on molecular coordinates (which may be fractional). Braces are required.</i ></p ></blockquote></td></tr> 
<tr name='tr_setecho'>
<td valign="top">
<a id="k1210"> </a>set echo id { 
<a class='def' href='#d1209' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a> }</td ></tr>
<tr name='tr_setecho'>
<td>
<blockquote>
<p >
<i >Sets echo position in three dimensions, based on the geometric center of the specified atoms. Braces are required. "OR" should be used rather than "," in the atom expression unless additional parentheses within the braces are also provided.</i ></p ></blockquote></td></tr> 
<tr name='tr_setecho'>
<td valign="top">
<a id="k1214"> </a>set echo id DEPTH z</td ></tr>
<tr name='tr_setecho'>
<td>
<blockquote>
<p >
<i >Sets the depth of the echoed text or image in percent of the model diameter (0 rear, 100 front). Starting with 
<span class="newv">Jmol 14.2</span>, this setting also applies to echos that have been positioned using {x, y, z}. In that case, depth values z >= 1000 are (z - 1000) percent in front of the 3D position, and z &lt;= -1000 are (1000 - z) percent behind the 3D position.</i ></p ></blockquote></td></tr> 
<tr name='tr_setecho'>
<td valign="top">
<a id="k1215"> </a>set echo id DISPLAYED</td ></tr>
<tr name='tr_setecho'>
<td>
<blockquote>
<p >
<i >Selectively displays an echo that previously has been hidden. The name can be any defined echo, including TOP, MIDDLE, or BOTTOM.</i ></p ></blockquote></td></tr> 
<tr name='tr_setecho'>
<td valign="top">
<a id="k1213"> </a>set echo id IMAGE "file name"</td ></tr>
<tr name='tr_setecho'>
<td>
<blockquote>
<p >
<i >Reads the specified JPG, GIF, or PNG file and displays that image instead of text. All 2D and 3D options are available. Images can be scaled using 
<b>set echo scale</b> (below).</i ></p ></blockquote></td></tr> 
<tr name='tr_setecho'>
<td valign="top">
<a id="k1212"> </a>set echo id MODEL (model number)</td ></tr>
<tr name='tr_setecho'>
<td>
<blockquote>
<p >
<i >By default, when multiple models are present, all echo text is visible regardless of the model currently displayable using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frame">frame</a> command. The 
<b>set echo ... MODEL</b> command associates an echo with a specific model, allowing the text or image to appear and disappear when different models are displayed using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frame">frame</a> command.</i ></p ></blockquote></td></tr> 
<tr name='tr_setecho'>
<td valign="top">
<a id="k1218"> </a>set echo id POINT 
<a class='def' href='#d1217' title='is any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> surrounded by parentheses or braces, or any {x y z} coordinate '>[atom-expression-or-coordinate]</a></td ></tr>
<tr name='tr_setecho'>
<td>
<blockquote>
<p >
<i >Connects echo text with an atom or point with a line.</i ></p ></blockquote></td></tr> 
<tr name='tr_setecho'>
<td valign="top">
<a id="k1216"> </a>set echo id SCALE (decimal)</td ></tr>
<tr name='tr_setecho'>
<td>
<blockquote>
<p >
<i >Scales an echo image to the desired absolute amount.</i ></p ></blockquote></td></tr> 
<tr name='tr_setecho'>
<td valign="top">
<a id="k1211"> </a>set echo id SCRIPT "script"</td ></tr>
<tr name='tr_setecho'>
<td>
<blockquote>
<p >
<i >Specifies a Jmol script that will be run when the echo is clicked.</i ></p ></blockquote></td></tr> 
<tr name='tr_setecho'>
<td valign="top">
<a id="k1219"> </a>set echo id HIDDEN</td ></tr>
<tr name='tr_setecho'>
<td>
<blockquote>
<p >
<i >Selectively hides an echo without deleting it. The name can be any defined echo, including TOP, MIDDLE, or BOTTOM.</i ></p ></blockquote></td></tr> 
<tr name='tr_setecho'>
<td valign="top">
<a id="k1221"> </a>set echo ALL</td ></tr>
<tr name='tr_setecho'>
<td>
<blockquote>
<p >
<i >Sets the current echo to be "all echos" for setting font, color, display, hidden, or text of all echos at once.</i ></p ></blockquote></td></tr> 
<tr name='tr_setecho'>
<td valign="top">
<a id="k1222"> </a>set echo NONE</td ></tr>
<tr name='tr_setecho'>
<td>
<blockquote>
<p >
<i >Sets the current echo to be "none" -- The next 
<b>echo</b> command will be to the console/message callback only. After this command, 
<b>set echo off</b> will still delete all echos.</i ></p ></blockquote></td></tr> 
<tr name='tr_setecho'>
<td valign="top">
<a id="k1223"> </a>set echo OFF</td ></tr>
<tr name='tr_setecho'>
<td>
<blockquote>
<p >
<i >Turns off (deletes) all echo texts. See also 
<b>set echo hidden</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setecho'>
<td valign="top">
<a id="k1220"> </a>set echo id some text</td ></tr>
<tr name='tr_setecho'>
<td>
<blockquote>
<p >
<i >Changes the text of the echo message; same as 
<b>echo "some text"</b>. </i ></p ></blockquote></td></tr> 
<tr name='tr_setecho'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_setecho'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_setecho'>
<td colspan="5">
<p>
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#font">font</a> 
<a class="xref" href="#hover">hover</a> 
<a class="xref" href="#label">label</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlabels">set (labels)</a> </p></td></tr>
<tr name='tr_setecho'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1201">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_setmodelkitmode'>
<td colspan="5">
<h3 >
<a id="setmodelkitmode" name="setmodelkitmode">set modelKitMode</a>
<a id="k1224"> </a>
<a id="set_modelkitmode"> </a></h3></td></tr>
<tr name='tr_setmodelkitmode'>
<td>
<i >Jmol includes a mode that allows building and modifying models, with minimization. Features include the ability to easily add, drag, and delete atoms, drag and minimize molecules and molecular fragments such as CH
<sub>3</sub> groups, rotate bonds, minimize parts of models -- all mouse-driven. A special menu is employed that sits at the top left corner of the Jmol window. (Clicking the Jmol frank still brings up the standard menu.) After
<b>set modelKitMode</b>, a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#zap">zap</a> command creates a CH
<sub>4</sub> model, and the picking mode goes to 
<b>set picking assignAtom_C</b>. 
<br />
<br /></i ></td></tr> 
<tr name='tr_setmodelkitmode'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1225">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_setpicking'>
<td colspan="5">
<h3 >
<a id="setpicking" name="setpicking">set picking</a>
<a id="k1226"> </a>
<a id="set_picking"> </a></h3></td></tr>
<tr name='tr_setpicking'>
<td>
<i >The 
<b>set picking</b> command determines the response to clicking of atoms by the user. For those options for which they apply, the keywords 
<b>MEASURE</b> and 
<b>SELECT</b> are optional.
<br />
<br /></i ></td></tr>
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1228"> </a>set picking ON</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >Setting this paramter OFF turns off the sending of picking information (atom identifier, atom number, and atomic position) to both to the status line and to the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_pickcallback">PickCallback</a> function, if defined.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1229"> </a>set picking CENTER</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >When the user clicks an atom, that atom is set to be the center of rotation. If windowCentered is true (default), then this atom is smoothly moved to the window center; if not windowCentered, then the atom stays in position, but now all rotation is around it and if perspectiveDepth is set (
<b>set windowCentered off;set perspectiveDepth on</b>), the perspective around this atom shifts to indicate that it is now the focus of the perspective. If the same atom is clicked twice, it is zoomed in on by a factor of two. If no atom is clicked, then the model is zoomed out by a factor of two. </i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1230"> </a>set picking CONNECT</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >Performs like measuring distances, except bonds are created. </i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1231"> </a>set picking DELETEATOM</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >Clicking on an atom deletes it. </i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1232"> </a>set picking DELETEBOND</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >Deletes the bond between pairs of clicked atoms (and with 
<b>set BONDPICKING TRUE</b>, deletes bonds as they are clicked.. </i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1233"> </a>set picking DRAGATOM</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >Clicking and dragging an atom moves its position.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1234"> </a>set picking DRAGLIGAND</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >Clicking and dragging an ligand moves its position.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1235"> </a>set picking DRAGMINIMIZE</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >Clicking and dragging an atom moves its position and then does a minimization of its associated molecule.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1236"> </a>set picking DRAGMINIMIZEMOLECULE</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >Clicking and dragging an atom moves and minimizes its associated molecule. This setting can be used to simulate docking. In the case of clicking on a protein side chain, that side chain will be minimized. It is important to use 
<b>set pdbAddHydrogens</b> prior to loading the protein in order to avoid a stereochemical inversion with certain sidechains such as ILE or THR, or be very careful about that. </i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1237"> </a>set picking DRAGSELECTED</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >Clicking and dragging on any atom of the structure drags the selected atoms only; using SHIFT with the drag rotates the selected atoms about their center.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1238"> </a>set picking DRAW</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >The vertices of all 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a> objects are highlighted. Holding the SHIFT key down while dragging moves the object to a new location ("shifts" the object); holding ALT down while dragging moves a single vertex to a new location ("alters" the shape of the object). The draw command required to reproduce the object can be seen immediately using the Java console. This new command can also be seen via message callback, or in the Jmol 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#console">console</a> using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#show">show DRAW</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1239"> </a>set picking IDENT</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >Same as 
<b>set picking ON</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1240"> </a>set picking INVERTSTEREO</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >Selecting an atom that is part of a ring after 
<b>set picking invertStereo</b> will reverse the two non-ring atoms -- actually rotating them 180 degrees, not doing a planar inversion, thus preserving whatever chirality might be attached to them. (See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#invertselected">invertSelected STEREO</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1241"> </a>set picking LABEL</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >When the user clicks an atom, the label of that atom is toggled on or off. Pressing SHIFT while dragging a label changes its position relative to the atom.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1242"> </a>set picking MEASURE</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >Same as 
<b>set picking MEASURE DISTANCE</b> but also displays a distance measurement on the molecule.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1243"> </a>set picking MEASURE DISTANCE</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >Turns picking on and returns atom identities and distance between two atoms. Three messages are sent to the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_messagecallback">MessageCallback</a> function, if defined: Atom #1 (after the first click) and then Atom #2 and Distance (after the second click).</i ></p ></blockquote></td></tr>
<tr name='tr_setpicking'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_setpicking'>
<td>
<table cellpadding="10">
<tr>
<td class="example">(pdb data in this case)
<br />Atom #1:[VAL]8.CA #49
<br />Atom #2:[GLU]23.OE2 #169
<br />Distance [VAL]8.CA #49 - [GLU]23.OE2 #19 : 16.765396</td></tr></table></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1244"> </a>set picking MEASURE ANGLE</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >Turns picking on and returns atom identities and angle involving three atoms. Four messages are sent to the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setcallback">MessageCallback</a> function, if defined: Atom #1 (after the first click), Atom #2 (after the second click), and then Atom #3 and Angle (after the third click).</i ></p ></blockquote></td></tr>
<tr name='tr_setpicking'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_setpicking'>
<td>
<table cellpadding="10">
<tr>
<td class="example">(xyz data in this case)
<br />Atom #1:C 2 #2
<br />Atom #2:C 3 #3
<br />Atom #3:C 4 #4
<br />Angle C 2 #2 - C 3 #3 - C 4 #4 : 122.3754</td></tr></table></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1245"> </a>set picking MEASURE TORSION</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >Turns picking on and returns atom identities and torsion angle (dihedral angle) involving four atoms. Five messages are sent to the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_messagecallback">MessageCallback</a> function, if defined: Atom #1 (after the first click), Atom #2 (after the second click), Atom #3 (after the third click), and then Atom#4 and Torsion (after the fourth click).</i ></p ></blockquote></td></tr>
<tr name='tr_setpicking'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_setpicking'>
<td>
<table cellpadding="10">
<tr>
<td class="example">(cml data in this case)
<br />Atom #1:a7 #7
<br />Atom #2:a3 #3
<br />Atom #3:a1 #1
<br />Atom #4:a2 #2
<br />Torsion a7 #7 - a3 #3 - a1 #1 - a2 #2 : -4.15209</td></tr></table></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1246"> </a>set picking MEASURE SEQUENCE</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >Turns picking on and returns the 1-letter-code sequence of atoms in bioSMILES format, showing chain and residue range and biomolecular type (p for protein, d for dna, r for rna). For example: 
<b>//* chain A protein 36 *// ~p~PG //* 37 *//</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1247"> </a>set picking NAVIGATION</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >User mouse clicking sets the navigation center to the selected position. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#navigation">.</a></i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1248"> </a>set picking SELECT ATOM</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >When the user clicks an atom, the selection of that atom is toggled on or off.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1249"> </a>set picking SELECT CHAIN</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >When the user clicks an atom, the selection of the chain associated with that atom is toggled on or off. </i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1250"> </a>set picking SELECT GROUP</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >When the user clicks an atom, the selection of the group associated with that atom is toggled on or off.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1251"> </a>set picking SELECT ELEMENT</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >When the user clicks an atom, the selection is toggled on or off for all VISIBLE atoms with the same element as the selected atom.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1254"> </a>set picking SELECT MOLECULE</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >When the user clicks an atom, the selection is toggled on or off for all atoms within the same covalenty bonded set as the selected atom.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1252"> </a>set picking SELECT POLYMER</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >When the user clicks an atom, the selection is toggled on or off for all atoms within the same polymer unit (PDB only).</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1255"> </a>set picking SELECT SITE</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >When the user clicks an atom, the selection is toggled on or off for all VISIBLE atoms with the same crystallographic site as the selected atom.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1253"> </a>set picking SELECT STRUCTURE</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >When the user clicks an atom, the selection is toggled on or off for all atoms within the same structural unit (helix, sheet, turn -- PDB only).</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1257"> </a>set picking SPIN 
<a class='def' href='#d1256' title='an (integer)'>[frames-per-second]</a></td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >Turns picking on and sets it so that when the user clicks two atoms in succession, the model starts to spin around the axis defined by those two atoms. A third click on any atom stops rotation. Optionally, a speed of rotation can be included.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1258"> </a>set picking STRUTS</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >When the user clicks two atoms, a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#struts">strut</a> is created between them.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td valign="top">
<a id="k1259"> </a>set picking SYMMETRY</td ></tr>
<tr name='tr_setpicking'>
<td>
<blockquote>
<p >
<i >When the user clicks two atoms of a crystallographic file, a representation of their symmetry relationship is drawn, and the operator(s) relating these positions is written to the console. </i ></p ></blockquote></td></tr> 
<tr name='tr_setpicking'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_setpicking'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1227">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_setpickingstyle'>
<td colspan="5">
<h3 >
<a id="setpickingstyle" name="setpickingstyle">set pickingStyle</a>
<a id="k1260"> </a>
<a id="set_pickingstyle"> </a></h3></td></tr>
<tr name='tr_setpickingstyle'>
<td>
<i >With 
<b>set pickingStyle</b> you can change the behavior of Jmol in response to user mouse actions relating to selecting atoms or measuring distances, angles, and torsions. 
<br> 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>SELECT</b></td >
<td valign="top" >Sets the behavior of Jmol to different clicking styles. For the standard Jmol default selection behavior, use 
<b>set pickingStyle SELECT toggle</b> The actions of these options depend upon the setting of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setpicking">set picking SELECT</a>. If picking has not been set to SELECT, then this command has no immediate effect. In the explanations given below, it is presumed that we have 
<b>set picking SELECT GROUP</b>. The 
<b>SELECT</b> keyword is recommended but not required.</td ></tr >
<tr >
<td valign="top" >
<b>MEASURE</b></td >
<td valign="top" >
<b>set pickingStyle MEASURE ON</b> in conjunction with 
<b>set picking MEASURE</b> displays the measurements on the structure as they are generated by user clicking. If picking has not been set to MEASURE, then this command has no immediate effect. 
<b>set pickingStyle MEASURE OFF</b> returns to the default Jmol behavior.</td ></tr ></table >
<br />
<br /></i ></td></tr>
<tr name='tr_setpickingstyle'>
<td valign="top">
<a id="k1262"> </a>set pickingStyle SELECT toggle</td ></tr>
<tr name='tr_setpickingstyle'>
<td>
<blockquote>
<p >
<i >left-click toggles that group selected/not selected (Chime style; Jmol default).</i ></p ></blockquote></td></tr> 
<tr name='tr_setpickingstyle'>
<td valign="top">
<a id="k1263"> </a>set pickingStyle SELECT selectOrToggle</td ></tr>
<tr name='tr_setpickingstyle'>
<td>
<blockquote>
<p >
<i >left-click selects just that group
<br>shift-left-click toggles the group selected/not selected (Rasmol style).</i ></p ></blockquote></td></tr> 
<tr name='tr_setpickingstyle'>
<td valign="top">
<a id="k1264"> </a>set pickingStyle SELECT extendedSelect</td ></tr>
<tr name='tr_setpickingstyle'>
<td>
<blockquote>
<p >
<i >User mouse action is according to the following scheme, which is the style used by 
<a class="xref" href="http://pfaat.sourceforge.net" target="_blank">PFAAT</a>. 
<br>
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >left-click </td >
<td valign="top" >selects just that group, like rasmol</td ></tr >
<tr >
<td valign="top" >shift-left-click</td >
<td valign="top" >toggles the group selected/not selected</td ></tr >
<tr >
<td valign="top" >alt-left-click </td >
<td valign="top" >appends the group to the current selection</td ></tr >
<tr >
<td valign="top" >alt-shift-left-click</td >
<td valign="top" >removes the group from the current selection</td ></tr >
<tr >
<td valign="top" >left-click off model </td >
<td valign="top" >executes (
<b>select none</b>) </td ></tr ></table ></i ></p ></blockquote></td></tr> 
<tr name='tr_setpickingstyle'>
<td valign="top">
<a id="k1265"> </a>set pickingStyle SELECT DRAG</td ></tr>
<tr name='tr_setpickingstyle'>
<td>
<blockquote>
<p >
<i >makes the LEFT button a click-and-drag button when associated also with 
<b>set PICKING select (molecule, group, chain, etc.)</b> and 
<b>set dragSelected</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpickingstyle'>
<td valign="top">
<a id="k1266"> </a>set pickingStyle SELECT NONE</td ></tr>
<tr name='tr_setpickingstyle'>
<td>
<blockquote>
<p >
<i >Returns to the Jmol default 
<b>toggle</b> picking style.</i ></p ></blockquote></td></tr> 
<tr name='tr_setpickingstyle'>
<td valign="top">
<a id="k1267"> </a>set pickingStyle MEASURE ON</td ></tr>
<tr name='tr_setpickingstyle'>
<td>
<blockquote>
<p >
<i >Clicking atoms measures and displays distance, angle, or torsions based on the setting of 
<b>set picking MEASURE</b>. By default the user sees this information displayed. Setting 
<b>set pickingStyle measure OFF</b> when 
<b>set picking MEASURE</b> is set to DISTANCE, ANGLE, or TORSION tells Jmol to stop indicating measurements on the model when the user clicks, even though the distance, angle, or torsion information is still sent to the message queue. </i ></p ></blockquote></td></tr> 
<tr name='tr_setpickingstyle'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1261">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_setusercolorscheme'>
<td colspan="5">
<h3 >
<a id="setusercolorscheme" name="setusercolorscheme">set userColorScheme</a>
<a id="k1268"> </a>
<a id="set_usercolorscheme"> </a></h3></td></tr>
<tr name='tr_setusercolorscheme'>
<td>
<i >Sets a custom color scheme. Color values can be names such as "red" or "blue" or hexadecimal numbers as [xRRGGBB] or {r g b} triples in the form of 3D points. The scheme can then be referred to as "user"; it's reverse as "resu". 
<br />
<br /></i ></td></tr>
<tr name='tr_setusercolorscheme'>
<td valign="top">
<a id="k1270"> </a>set userColorScheme colorName colorName ..</td ></tr> 
<tr name='tr_setusercolorscheme'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_setusercolorscheme'>
<td colspan="5">
<p>
<a class="xref" href="#background">background</a> 
<a class="xref" href="#coloratomobject">color (atom object)</a> 
<a class="xref" href="#colorbondobject">color (bond object)</a> 
<a class="xref" href="#colorelement">color (element)</a> 
<a class="xref" href="#colormodelobject">color (model object)</a> 
<a class="xref" href="#colorother">color (other)</a> 
<a class="xref" href="#colorscheme">color (scheme)</a> 
<a class="xref" href="#colormeasures">color measures</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#show">show</a> </p></td></tr>
<tr name='tr_setusercolorscheme'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#table1">variables</a>
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1269">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_show'>
<td colspan="5">
<h3 class=h3newer>
<a id="show" name="show">show</a>
<a id="k1271"> </a> 
<br />
<span class=newer>(v. 13.0 -- adds show chemical, DSSP, NMR)</span></h3></td></tr>
<tr name='tr_show'>
<td>
<i >show sends information about the model to the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setcallback">MessageCallback</a> function and to the Java or Jmol 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#console">console</a>. If using the application, using 
<b>Jmol -ionx filename.spt modelfile.xyz > output.txt</b>, you can put a 
<b>show</b> command in a script file (filename.spt), and have the output directed to output.txt. The command line options used in this example include -i (silent startup), -o (use standard output), -n (no display), -x (exit after running the specified script file). All of the parameters that can be 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set">set</a> can be shown. They are not listed here.
<br />
<br /></i ></td></tr>
<tr name='tr_show'>
<td valign="top">
<a name="show_atom" id="k1274"> </a>show ATOM</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Lists the atom numbers that are currently selected in the order of atom index; duplicates are not listed twice.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_best" id="k1275"> </a>show BEST ROTATION</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Operates on the currently selected atoms, reporting a quarternion that would rotate them to their 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#rotate_best">best</a> orientation for viewing. </i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_best" id="k1276"> </a>show BEST BOX</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Operates on the currently selected atoms, reporting the volume and dimensions of the best box that would contain the selected atoms. </i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_boundbox" id="k1277"> </a>show BOUNDBOX</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Delivers the coordinates of the center coordinate and a directional vector defining a box just perfectly enclosing the model. The vector is determined by taking the min and max values for the atom along each cartesian axis. The center is the geometric center of the model, not the default center of rotation (which is the mean atom position). The eight corners of the boundbox are found by adding the center point to the vector, with all possible combinations of +/- component cectors. The length of a side of the boundbox is determined by doubling the appropriate component of the vector. So, for example, the length of the boundbox along the x-axis is (2*vectorX). Units are in Angstroms. Output is in the form 
<br>boundbox: (centerX, centerY, centerZ) (vectorX, vectorY, vectorZ)</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_cache" id="k1278"> </a>show CACHE</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Lists the contents of the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#cache">cache</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_center" id="k1279"> </a>show CENTER</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Delivers the coordinates of the center of the model. Units are in Angstroms. Output is in the form 
<br>center: (centerX, centerY, centerZ)</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_chain" id="k1280"> </a>show CHAIN</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Lists the chains (A, B, C, etc.) of the atoms that are currently selected in the order of atom index; duplicates are not listed twice.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_chemical" id="k1281"> </a>show CHEMICAL [option]</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Displays a property of the selected atoms depending upon the selected option obtained from the 
<a class="xref" href="http://cactus.nci.nih.gov" target="_blank">NIH Catus server</a>. Note that in addition to these, we have 
<b>show SMILES</b> and 
<b>show DRAWING</b>. 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >
<b>name</b></td >
<td valign="top" >list of known names of the compound, if found in the NIH database</td ></tr >
<tr >
<td valign="top" >
<b>inchi</b></td >
<td valign="top" > 
<a class="xref" href="http://www.iupac.org/inchi" target="_blank">InChI</a> string</td ></tr >
<tr >
<td valign="top" >
<b>inchikey</b></td >
<td valign="top" >InChI key</td ></tr >
<tr >
<td valign="top" >
<b>stdinchi</b></td >
<td valign="top" >standard 
<a class="xref" href="http://www.iupac.org/inchi" target="_blank">InChI</a> string</td ></tr >
<tr >
<td valign="top" >
<b>stdinchikey</b></td >
<td valign="top" >standard InChI key</td ></tr ></table ></i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_colorscheme" id="k1282"> </a>show COLORSCHEME "name"</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Displays the list of colors comprising a color scheme, where "name" is, for example, "roygb", "rwb", or "user", "byElement_Jmol", "byElement_Rasmol", "byResidue_Shapely" (cooresponding to 
<b>color shapely</b>), and "byResidue_Amino" (corresponding to 
<b>color amino</b>). </i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_data" id="k1283"> </a>show DATA "type"</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Displays the most recently read 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#data">data</a> of the given type. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#getproperty">getProperty data</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_domains" id="k1284"> </a>
<span class=newer>show DOMAINS [
<b>
<span class="newv">Jmol 14.2</span>.6</b>]</span></td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Shows 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#annotationssequencedomainannotations">domain annotations</a> that have been loaded from RCSB or PDBe with the 
<b>/dom</b> option. For example, 
<br>
<br>
<b>load =1crn/dom;show domains SCOP</b>
<br>1crn SCOP 57430 identifier=Crambin-like
<br>1crn SCOP 57430 fold description=Crambin-like
<br>1crn SCOP 57430 fold sunid=57428
<br>1crn SCOP 57430 description=Crambin-like
<br>1crn SCOP 57430 class description=Small proteins
<br>1crn SCOP 57430 class sunid=56992
<br>1crn SCOP 57430 superfamily description=Crambin-like
<br>1crn SCOP 57430 superfamily sunid=57429
<br></span></i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_draw" id="k1286"> </a>show DRAW</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Displays the command required to generate the current 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a> object. Particularly useful after using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setpicking">set picking DRAW</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_drawing" id="k1285"> </a>show DRAWING</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Displays a drawing of the Jmol structure in a new browser window.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_dssp" id="k1287"> </a>show DSSP</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Displays a DSSP 
<a class="xref" href="misc/1gua-dssp-jmol.txt" target="_blank">secondary structure analysis report</a>, which includes regions of three kinds of helix (3/10, alpha, and pi), turns, sheets, and bridge groups (DSSP codes G, H, I, T, E, and B, respectively). Bends (DSSP "S") are not included. This report can be sent to a file using, for example: 
<b>var x = script("show DSSP");write var x "dsspReport.txt"</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_file" id="k1288"> </a>show FILE</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Delivers the entire contents of the file for the current model. </i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_file" id="k1289"> </a>show FILE filepath</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Delivers the entire contents of the specified file on the server from which the applet was loaded. The filename must be relative to the current page (not necessarily the directory containing the applet) and must be enclosed in quotation marks. If the file is in ZIP format -- JAR, ZIP, JMOL -- or contains ZIP data (PNGJ), only a directory of the contained files is reported. </i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_isosurface" id="k1273"> </a>show ISOSURFACE</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Displays the 
<a class="xref" href="misc/JVXL-format.pdf" target="_blank">JVXL</a> file equivalent. (Not available for all object types.)</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_functions" id="k1290"> </a>show FUNCTIONS</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Lists all user-defined functions.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_group" id="k1291"> </a>show GROUP</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Lists the groups (ALA, VAL, etc.) of the atoms that are currently selected in the order of atom index; duplicates are not listed twice.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_history" id="k1292"> </a>show HISTORY n</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Shows n lines of command history. If no number is given, 
<b>show history</b> by itself shows the full set of recorded command lines (100 maximum by default, but this maximum can be changed using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setfilesandscripts">set history</a> command. History recording can be turned on and off using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#history">history</a> command.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_lighting" id="k1293"> </a>show LIGHTING</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Displays lighting details, including ambientPercent, diffusePercent, specular, specularPercent, specularPower, specularExponent, and zShade</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_measurements" id="k1294"> </a>show MEASUREMENTS</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Displays a table of information relating to 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#measure">measurements</a> that have been made.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_menu" id="k1295"> </a>show MENU</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Displays the current Jmol menu in a format that can be loaded using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loadmenu">load MENU</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_minimization" id="k1296"> </a>show MINIMIZATION</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Displays a detailed report regarding minimization parameters used for the most recent 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#minimize">minimization</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_mo" id="k1297"> </a>show MO</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Displays the 
<a class="xref" href="misc/JVXL-format.pdf" target="_blank">JVXL</a> file equivalent for the current 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#mo">molecular orbital</a>. If no MO is currently shown, displays the JVXL equivalent for the entire set of molecular orbitals. (This can take some time to construct.)</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_model" id="k1298"> </a>show MODEL</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Delivers properties associated with the currently loaded model. Output includes information about all of the models in the set. This command is still in development. The exact form and content of the output is subject to change (and suggestion).</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_moveto" id="k1299"> </a>show MOVETO</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Same as 
<b>show orientation moveto</b></i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_nmr" id="k1300"> </a>show NMR</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Links to 
<a class="xref" href="http://www.nmrdb.org/predictor" target="_blank">http://www.nmrdb.org/predictor</a> (or whatever URL is indicated in 
<b>set nmrUrlFormat</b> using the SMILES string of the selected atoms. </i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_orientation" id="k1301"> </a>show ORIENTATION [optional type]</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Delivers the orientation of the model. Output consists of both a "moveTo" command and an alternative sequence of "reset; rotate z; rotate y; rotate z" commands that would result in the current orientation. Thus, this command allows reading and restoring specific user-specified orientations. Optional types include: 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >moveto</td >
<td valign="top" >the moveto command leading to this orientation, with no comments </td ></tr >
<tr >
<td valign="top" >rotation</td >
<td valign="top" >the current rotation, as a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#quaternion">quaternion</a></td ></tr >
<tr >
<td valign="top" >translation</td >
<td valign="top" >the current translation in percent X and percent Y from center of the window</td ></tr ></table ></i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_pdbheader" id="k1302"> </a>show PDBHEADER</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Delivers the PDB file header.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_pointgroup" id="k1303"> </a>show POINTGROUP</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Displays a table summarizing the point group of a symmetrical or nearly symmetrical model. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">calculate pointgroup</a> for details of this calculation.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_pointgroup" id="k1304"> </a>
<span class=newer>show POINTGROUP POLYHEDRON [
<b>Jmol 14.3.15</b>]</span></td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Displays a table summarizing the point group of a selected polyhedron. One atom (one polyhedron) should be selected prior to this command.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_properties" id="k1305"> </a>
<span class=newer>show PROPERTIES (list) FORMAT %s %i ... [
<b>Jmol 14.3.15</b>]</span></td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Displays a list of up to three atom properties, optionally along with atom name and index. For example, 
<b>show properties x y z</b> tabulates just x, y, and z coordinate values. Adding a format allows rounding and formatting as for labels. Two special formats, %s and %i, add atom name and index, respectively. For example, 
<b>show properties x y z FORMAT "%s %i %10.6f %10.6f %10.6f"</b>. The corresponding WRITE command puts these into a file.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_residues" id="k1306"> </a>show RESIDUES</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Reports a listing of currently selected residues:
<pre>[GLY]1:A[ARG]2:A
<br>[ARG]3:A
<br>[ILE]4:A
<br>[GLN]5:A
<br>[GLY]6:A
<br>[GLN]7:A
<br>[ARG]8:A
<br>[ARG]9:A
<br>[GLY]10:A
<br>[ARG]11:A
<br>[GLY]12:A</pre></i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_rotation" id="k1307"> </a>show ROTATION</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Same as 
<b>show orientation rotation</b></i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_selected" id="k1309"> </a>show SELECTED</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Lists the default label for all selected atoms, in the order of atom index.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_sequence" id="k1308"> </a>show SEQUENCE</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Reports the sequence of the currently selected residues in the following format: 
<pre>Model 1
<br>Chain A:
<br>[GLY]1 [ARG]2 [ARG]3 [ILE]4 [GLN]5 
<br>[GLY]6 [GLN]7 [ARG]8 [ARG]9 [GLY]10 
<br>[ARG]11 [GLY]12 [THR]13 [SER]14 [THR]15 
<br>[PHE]16 [ARG]17 [ALA]18 [PRO]19 [SER]20 
<br>[HIS]21 [ARG]22 [TYR]23 [LYS]24 [ALA]25 
<br>[ASP]26 [LEU]27 [GLU]28 [HIS]29 [ARG]30 
<br>[LYS]31 [VAL]32 [GLU]33 [ASP]34 [GLY]35 
<br>[ASP]36 [VAL]37</pre>.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_set" id="k1310"> </a>show SET</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Delivers a list of all "set" commands that have been issued, with their values.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_smiles" id="k1311"> </a>show SMILES</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Delivers a SMILES string for the selected atoms. Assumes full molecules; does not report for biomolecules -- for that, use 
<b>print {selected}.find("SMILES", true)</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_spacegroup" id="k1312"> </a>show SPACEGROUP "name"</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Displays information relating to crystallographic space groups. If a file with crystallographic symmetry is loaded, 
<b>show spacegroup</b> by itself displays information for that spacegroup. Quotes are required around the space group name. If the name itself includes double quotes, use two single quotes instead. For example: P 32 2", not P 32 2". </i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_state" id="k1313"> </a>show STATE [optional name]</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Delivers a Jmol script that, when run, will regenerate the state of the Jmol applet or application. The following objects are not yet supported: dipole, isosurface, lcaoCartoon, mo. If a name is given, then the state 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#save">saved</a> with that name is used; if no name is given, the state described is the current state.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_state" id="k1314"> </a>show STATE /xxx</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Shows only the lines from the current state that contain the specified phrase "xxx"</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_state" id="k1315"> </a>show STATE FILE "fileName"</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Delivers the Jmol state embedded in an image file of the format PNG or JPG created by Jmol (and thus containing the string "**** Jmol Embedded Script ****"). </i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_symop" id="k1316"> </a>show SYMOP (integer)</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Describes the specified symmetry operation. For example, 
<b>show symop 3</b> might give "-y,x-y,z-1/3 3-fold screw axis|translation: 0 0 -1/3". If no integer is given, this command delivers the full list of symmetry operations for the current frame. Starting with 
<span class="newv">Jmol 14.2</span>, an optional additional flag "fmatrix" reports the symmetry operation as a matrix rather than in Jones-Faithful notation.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_symop" id="k1318"> </a>show SYMOP 
<a class='def' href='#d1317' title='is any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> surrounded by parentheses or braces, or any {x y z} coordinate '>[atom-expression-or-coordinate]</a> 
<a class='def' href='#d1317' title='is any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> surrounded by parentheses or braces, or any {x y z} coordinate '>[atom-expression-or-coordinate]</a></td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Describes the symmetry operation relating the two specified points. (If an atom set is given, only the average position of the coordinates is used.) For example, 
<b>show symop {molecule=1} {molecule=2}</b> might give "3 -y,x-y,z-1/3 3-fold screw axis|translation: 0 0 -1/3". If more than one symmetry operation relates the positions, then all are described. Starting with 
<span class="newv">Jmol 14.2</span>, an optional additional flag "fmatrix" reports the symmetry operation as a matrix rather than in Jones-Faithful notation.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_symmetry" id="k1319"> </a>show SYMMETRY</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Displays information relating to the crystallographic symmetry of the model, including space group name and symmetry operations. (Applicable file formats only.)</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_timeout" id="k1320"> </a>show TIMEOUT</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Lists all pending 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#settimeout">timeouts</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_trace" id="k1321"> </a>show TRACE</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Reports a trace of function and script calls leading to the current command.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_transform" id="k1322"> </a>show TRANSFORM</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Delivers the current 3x3 transformation matrix (rotation only). </i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_translation" id="k1323"> </a>show TRANSLATION</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Same as 
<b>show orientation translation</b></i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_unitcell" id="k1324"> </a>show UNITCELL</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Displays information relating to the crystallographic unit cell of the model. (Applicable file formats only.)</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_url" id="k1325"> </a>show URL</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Opens the data file in a new browser window. (applet only)</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_url" id="k1326"> </a>show URL URL</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Opens the specified URL in a new browser window. (applet only)</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_validation" id="k1327"> </a>
<span class=newer>show VALIDATION [
<b>
<span class="newv">Jmol 14.2</span>.6</b>]</span></td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Shows 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#annotationsstructurevalidationannotations">validation annotations</a> that are available as properties, having been loaded from RCSB or PDBe with the 
<b>/val</b> option. For example, 
<br>
<br>
<b>load *1crn/val; show validation</b>
<br>Validations loaded:
<br> property_types_of_outliers (residues: 3)
<br> property_bond_lengths (atoms: 2, max: 5.38)
<br> property_bond_angles (atoms: 6, max: 7.83) 
<br></span></i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_variables" id="k1328"> </a>show VARIABLES</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Reports a listing of all variables and their values.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_zoom" id="k1329"> </a>show ZOOM</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >Delivers the current zoom setting. Output is in the form of the zoom command: "zoom n" where "n" is an integer percent of "normal" zoom.</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td valign="top">
<a name="show_$objectid" id="k1330"> </a>show $objectID</td ></tr>
<tr name='tr_show'>
<td>
<blockquote>
<p >
<i >For 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a> objects, displays the command that can be used to generate that object. For 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface</a> objects, displays the 
<a class="xref" href="misc/JVXL-format.pdf" target="_blank">JVXL</a> file equivalent. The $ is required. (Not available for all object types.)</i ></p ></blockquote></td></tr> 
<tr name='tr_show'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_show'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_show'>
<td colspan="5">
<p>
<a class="xref" href="#background">background</a> 
<a class="xref" href="#boundbox">boundbox</a> 
<a class="xref" href="#cache">cache</a> 
<a class="xref" href="#center">center</a> 
<a class="xref" href="#centerat">centerAt</a> 
<a class="xref" href="#coloratomobject">color (atom object)</a> 
<a class="xref" href="#colorbondobject">color (bond object)</a> 
<a class="xref" href="#colorelement">color (element)</a> 
<a class="xref" href="#colormodelobject">color (model object)</a> 
<a class="xref" href="#colorother">color (other)</a> 
<a class="xref" href="#colorscheme">color (scheme)</a> 
<a class="xref" href="#colormeasures">color measures</a> 
<a class="xref" href="#delete">delete</a> 
<a class="xref" href="#draw">draw</a> 
<a class="xref" href="#getproperty">getProperty</a> 
<a class="xref" href="#setmisc">set (misc)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#setusercolorscheme">set userColorScheme</a> 
<a class="xref" href="#writeobject">write (object)</a> </p></td></tr>
<tr name='tr_show'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1272">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_shownmr'>
<td colspan="5">
<h3 >
<a id="shownmr" name="shownmr">show (NMR)</a>
<a id="k1331"> </a></h3></td></tr>
<tr name='tr_shownmr'>
<td>
<i >Displays a predicted 1H NMR spectrum using JSpecView (Jmol application only). Atoms on the structure are correlated with signals in the spectrum. The spectrum is constructed using a service provided by 
<a class="xref" href="http://nmrdb.org" target="_blank">http://nmrdb.org</a>.
<br>
<img src=img/jsv.png />
<br />
<br /></i ></td></tr> 
<tr name='tr_shownmr'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_shownmr'>
<td colspan="5">
<p>
<a class="xref" href="#setvisibility">set (visibility)</a> </p></td></tr>
<tr name='tr_shownmr'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1332">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_slab'>
<td colspan="5">
<h3 >
<a id="slab" name="slab">slab</a>
<a id="k1333"> </a></h3></td></tr>
<tr name='tr_slab'>
<td>
<i > Slab and Depth together control the percentage of the molecule to be displayed based on clipping planes. 
<b>slab on</b> turns slab/depth on. 
<b>slab 50</b> shows the back 50% of the molecule. 
<b>slab 25</b> show the back 25% of the molecule. 
<b>depth</b> does the opposite of 
<b>slab</b>, hiding atoms far from the user. The default settings to see all of the model, then, are 
<b>slab 100; depth 0</b>. Atoms appear solid; bonds appear hollow. Slabbing can also be applied "internally" -- that is, based on molecular coordinates, not screen coordinates. Internal slabbing involves defining a plane ax + by + cz + d = 0 as {a b c d}, using Miller indices {h k l}, or using standard notation such as "x=3" or "xy". 
<br />
<br /></i ></td></tr>
<tr name='tr_slab'>
<td valign="top">
<a name="slab_" id="k1335"> </a>slab ON/OFF{default: ON}</td ></tr>
<tr name='tr_slab'>
<td>
<blockquote>
<p >
<i >Turns slab/depth on or off. Either 
<b>slab ON</b> or 
<b>depth ON</b> can be used; in either case both slab and depth are turned on.</i ></p ></blockquote></td></tr> 
<tr name='tr_slab'>
<td valign="top">
<a name="slab_._percent_slab" id="k1337"> </a>slab 
<a class='def' href='#d1336' title='an (integer, 0 to 100)'>[slab-percent]</a></td ></tr>
<tr name='tr_slab'>
<td>
<blockquote>
<p >
<i >Sets the position of the slab/depth plane from 0 (front) to 100 (rear) of the model</i ></p ></blockquote></td></tr> 
<tr name='tr_slab'>
<td valign="top">
<a name="slab_hkl" id="k1338"> </a>slab HKL {h k l} or NONE</td ></tr>
<tr name='tr_slab'>
<td>
<blockquote>
<p >
<i >Sets the position of the slab/depth plane based on the specified Miller index plane. For slabbing, with positive hkl values, atoms far from {0 0 0} are removed. The value NONE removes the slab/depth plane</i ></p ></blockquote></td></tr> 
<tr name='tr_slab'>
<td valign="top">
<a name="slab_-hkl" id="k1339"> </a>slab -HKL {h k l}</td ></tr>
<tr name='tr_slab'>
<td>
<blockquote>
<p >
<i >Sets the position of the slab/depth plane based on the specified Miller index plane; reference point is opposite 
<b>slab hkl</b> or 
<b>depth hkl</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_slab'>
<td valign="top">
<a name="slab_plane" id="k1340"> </a>slab PLANE plane_expression or NONE</td ></tr>
<tr name='tr_slab'>
<td>
<blockquote>
<p >
<i >Sets the slab/depth plane based on a plane using the general syntax for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#planeexpressions">plane expressions</a>. For example: 
<b>slab PLANE {atomno=3} {atomno=2} {atomno=1}; slab on</b>. Note that the order of points defines the direction from the plane of atoms to be removed. If using your right hand to define the path from first point to second to third, your right thumb points to the atoms removed by slabbing. (Opposite this for 
<b>depth</b>.)</i ></p ></blockquote></td></tr> 
<tr name='tr_slab'>
<td valign="top">
<a name="slab_-plane" id="k1341"> </a>slab -PLANE plane_expression</td ></tr>
<tr name='tr_slab'>
<td>
<blockquote>
<p >
<i >Reverses the sense of the plane defined as above.</i ></p ></blockquote></td></tr> 
<tr name='tr_slab'>
<td valign="top">
<a name="slab_reset" id="k1342"> </a>slab RESET</td ></tr>
<tr name='tr_slab'>
<td>
<blockquote>
<p >
<i >Resets slab and depth to the standard slab 100, depth 0, clears any internal planes, and turns slab on.</i ></p ></blockquote></td></tr> 
<tr name='tr_slab'>
<td valign="top">
<a name="slab_set" id="k1343"> </a>slab SET</td ></tr>
<tr name='tr_slab'>
<td>
<blockquote>
<p >
<i >Sets the current slab (using 
<b>slab on</b>) to be internal, so that rotation of the model preserves the current slab from a molecular perspective.</i ></p ></blockquote></td></tr> 
<tr name='tr_slab'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_slab'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('.slab')">in new window using 1crn.pdb</td></tr>
<tr name='tr_slab'>
<td>
<table cellpadding="10">
<tr>
<td class="example">slab 50; depth 0;slab on; # show the back half of the molecule
<br />slab 100;depth 50; slab on;# show the front half of the molecule
<br />slab 75; depth 25;slab on; # show middle 50% of the molecule
<br />slab 50;depth 50;slab on; # show a plane that is 1 pixel deep</td></tr></table></td></tr>
<tr name='tr_slab'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_slab'>
<td colspan="5">
<p>
<a class="xref" href="#backbone">backbone</a> 
<a class="xref" href="#background">background</a> 
<a class="xref" href="#cartoon">cartoon</a> 
<a class="xref" href="#depth">depth</a> 
<a class="xref" href="#dots">dots</a> 
<a class="xref" href="#ellipsoid">ellipsoid</a> 
<a class="xref" href="#geosurface">geoSurface</a> 
<a class="xref" href="#meshribbon">meshribbon</a> 
<a class="xref" href="#ribbon">ribbon</a> 
<a class="xref" href="#rocket">rocket</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlighting">set (lighting)</a> 
<a class="xref" href="#setmisc">set (misc)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#strand">strand</a> 
<a class="xref" href="#trace">trace</a> 
<a class="xref" href="#vector">vector</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_slab'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1334">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_spacefill'>
<td colspan="5">
<h3 >
<a id="spacefill" name="spacefill">spacefill or cpk</a>
<a id="k1344"> </a></h3></td></tr>
<tr name='tr_spacefill'>
<td>
<i >Renders selected atoms as shaded spheres. A boolean value renders the spheres with the van der Waals radius. A decimal value specifies the sphere radius in Angstroms. An integer followed by "%" specifies sphere radius as a percentage of the van der Waals radius. A "+" sign followed by a number specifies to draw the surface that number of Angstroms beyond the van der Waals radius. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#dots">dots</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface sasurface</a>. Note that the value of the current spacefill setting can be retrieved using the .radius value for the atom. (For example, 
<b> print {atomno=3}.radius</b>.) [Note: The Jmol default Van der Waals radius setting is "AUTO" to allow non-PDB files and PDB files with H atoms to load with a slightly different look than PDB files with no H atoms. This brings Jmol's default parameter set in line with OpenBabel 2.2 and affects the default rendering also of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#halos">halos</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#star">stars</a>.]
<br />
<br /></i ></td></tr>
<tr name='tr_spacefill'>
<td valign="top">
<a name="spacefill_" id="k1346"> </a>spacefill ON/OFF{default: ON}</td ></tr>
<tr name='tr_spacefill'>
<td>
<blockquote>
<p >
<i >Turns spacefill on/off</i ></p ></blockquote></td></tr> 
<tr name='tr_spacefill'>
<td valign="top">
<a name="spacefill_only" id="k1347"> </a>spacefill ONLY</td ></tr>
<tr name='tr_spacefill'>
<td>
<blockquote>
<p >
<i >Turns spacefill rendering on and all other rendering (including labels) off.</i ></p ></blockquote></td></tr> 
<tr name='tr_spacefill'>
<td valign="top">
<a name="spacefill_auto" id="k1348"> </a>spacefill AUTO</td ></tr>
<tr name='tr_spacefill'>
<td>
<blockquote>
<p >
<i >The default setting, renders atom sizes for non-PDB files or PDB files with H atoms using OpenBabel 2.2 values. </i ></p ></blockquote></td></tr> 
<tr name='tr_spacefill'>
<td valign="top">
<a name="spacefill_[decimal]" id="k1349"> </a>spacefill [decimal]</td ></tr>
<tr name='tr_spacefill'>
<td>
<blockquote>
<p >
<i >Specifying a decimal number generates a sphere at a specific radius in Angstroms. A negative number also implies 
<b>ONLY</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_spacefill'>
<td valign="top">
<a name="spacefill_[integer]" id="k1350"> </a>spacefill [integer] %</td ></tr>
<tr name='tr_spacefill'>
<td>
<blockquote>
<p >
<i >Specifying an integer percent generates a sphere at the specified percentage of the van der Waals radius. This refers to the currently set van der Waals radius set -- Jmol, Babel, Rasmol, or User.</i ></p ></blockquote></td></tr> 
<tr name='tr_spacefill'>
<td valign="top">
<a name="spacefill_[integer]" id="k1351"> </a>spacefill [integer] %Jmol</td ></tr>
<tr name='tr_spacefill'>
<td>
<blockquote>
<p >
<i >Specifying an integer percent generates a sphere at the specified percentage of the van der Waals radius as defined by Jmol 10 constants (OpenBabel 1.0). See 
<a class="xref" href="misc/vdw_comparison.xls" target="_blank">vdw_comparison.xls</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_spacefill'>
<td valign="top">
<a name="spacefill_[integer]" id="k1352"> </a>spacefill [integer] %Babel</td ></tr>
<tr name='tr_spacefill'>
<td>
<blockquote>
<p >
<i >Specifying an integer percent generates a sphere at the specified percentage of the van der Waals radius as defined by OpenBabel 2.2. See 
<a class="xref" href="misc/vdw_comparison.xls" target="_blank">vdw_comparison.xls</a></i ></p ></blockquote></td></tr> 
<tr name='tr_spacefill'>
<td valign="top">
<a name="spacefill_[integer]" id="k1353"> </a>spacefill [integer] %Babel21</td ></tr>
<tr name='tr_spacefill'>
<td>
<blockquote>
<p >
<i >Specifying an integer percent generates a sphere at the specified percentage of the van der Waals radius as defined by OpenBabel 2.1. See 
<a class="xref" href="misc/vdw_comparison.xls" target="_blank">vdw_comparison.xls</a></i ></p ></blockquote></td></tr> 
<tr name='tr_spacefill'>
<td valign="top">
<a name="spacefill_[integer]" id="k1354"> </a>spacefill [integer] %Rasmol</td ></tr>
<tr name='tr_spacefill'>
<td>
<blockquote>
<p >
<i >Specifying an integer percent generates a sphere at the specified percentage of the van der Waals radius as defined by Rasmol. See 
<a class="xref" href="misc/vdw_comparison.xls" target="_blank">vdw_comparison.xls</a></i ></p ></blockquote></td></tr> 
<tr name='tr_spacefill'>
<td valign="top">
<a name="spacefill_[integer]" id="k1355"> </a>spacefill [integer] %User</td ></tr>
<tr name='tr_spacefill'>
<td>
<blockquote>
<p >
<i >Specifying an integer percent generates a sphere at the specified percentage of the van der Waals radius as defined by the user using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#data">data</a> command.</i ></p ></blockquote></td></tr> 
<tr name='tr_spacefill'>
<td valign="top">
<a name="spacefill_+_solvent_probe_radius_" id="k1356"> </a>spacefill +(solvent probe radius)</td ></tr>
<tr name='tr_spacefill'>
<td>
<blockquote>
<p >
<i >With an explicit plus sign, 
<b>spacefill</b> draws the surface the given number of angstroms beyond the van der Waals radius. This is the definition of a solvent-accessible surface. Note that 
<b>spacefill +0</b> is the same as 
<b>spacefill 100%</b>. More typical would be 
<b>spacefill +1.2</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_spacefill'>
<td valign="top">
<a name="spacefill_ionic" id="k1358"> </a>spacefill IONIC</td ></tr>
<tr name='tr_spacefill'>
<td>
<blockquote>
<p >
<i >Generates a sphere for each atom according to an approximation of its ionic radius.</i ></p ></blockquote></td></tr> 
<tr name='tr_spacefill'>
<td valign="top">
<a name="spacefill_temperature" id="k1357"> </a>spacefill TEMPERATURE</td ></tr>
<tr name='tr_spacefill'>
<td>
<blockquote>
<p >
<i >Generates a sphere for eah atom according to its crystallographic B-factor. If Uij data has been read from a CIF file, then this value is set to 100 * (U11 * U22 * U33)^0.333</i ></p ></blockquote></td></tr> 
<tr name='tr_spacefill'>
<td valign="top">
<a name="spacefill_adpmin" id="k1359"> </a>spacefill ADPMIN n%</td ></tr>
<tr name='tr_spacefill'>
<td>
<blockquote>
<p >
<i >Generates a sphere at the radius corresponding to the minimum anisotropic displacement parameter for the selected atoms factored by the given percentage. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#ellipsoid">ellipsoid</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_spacefill'>
<td valign="top">
<a name="spacefill_adpmax" id="k1360"> </a>spacefill ADPMAX n%</td ></tr>
<tr name='tr_spacefill'>
<td>
<blockquote>
<p >
<i >Generates a sphere at the radius corresponding to the maximum anisotropic displacement parameter for the selected atoms factored by the given percentage. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#ellipsoid">ellipsoid</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_spacefill'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_spacefill'>
<td colspan="5">
<p>
<a class="xref" href="#backbone">backbone</a> 
<a class="xref" href="#background">background</a> 
<a class="xref" href="#cartoon">cartoon</a> 
<a class="xref" href="#data">data</a> 
<a class="xref" href="#dots">dots</a> 
<a class="xref" href="#ellipsoid">ellipsoid</a> 
<a class="xref" href="#geosurface">geoSurface</a> 
<a class="xref" href="#meshribbon">meshribbon</a> 
<a class="xref" href="#ribbon">ribbon</a> 
<a class="xref" href="#rocket">rocket</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlighting">set (lighting)</a> 
<a class="xref" href="#setmisc">set (misc)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#strand">strand</a> 
<a class="xref" href="#trace">trace</a> 
<a class="xref" href="#vector">vector</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_spacefill'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1345">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_spin'>
<td colspan="5">
<h3 >
<a id="spin" name="spin">spin</a>
<a id="k1361"> </a></h3></td></tr>
<tr name='tr_spin'>
<td>
<i >Starts and stops the molecule spinning around the axis determined by 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_spinx">set spinX, set spinY, and set spinZ</a>, as though the "camera" were changing position. This command was greatly expanded in version 11.0 to include all the possible functions of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#rotate">rotate</a>.
<br />
<br /></i ></td></tr>
<tr name='tr_spin'>
<td valign="top">
<a name="spin_" id="k1363"> </a>spin ON/OFF{default: ON}</td ></tr> 
<tr name='tr_spin'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('.spin')">in new window using caffeine.xyz</td></tr>
<tr name='tr_spin'>
<td>
<table cellpadding="10">
<tr>
<td class="example">spin branch {N8} {C19} 50 # CH3 starts spinning around the N8-C19 bond</td></tr></table></td></tr>
<tr name='tr_spin'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_spin'>
<td colspan="5">
<p>
<a class="xref" href="#animation">animation</a> 
<a class="xref" href="#file">file</a> 
<a class="xref" href="#frame">frame</a> 
<a class="xref" href="#invertselected">invertSelected</a> 
<a class="xref" href="#move">move</a> 
<a class="xref" href="#moveto">moveto</a> 
<a class="xref" href="#rotate">rotate</a> 
<a class="xref" href="#rotateselected">rotateSelected</a> 
<a class="xref" href="#setmisc">set (misc)</a> 
<a class="xref" href="#translate">translate</a> 
<a class="xref" href="#translateselected">translateSelected</a> 
<a class="xref" href="#zoom">zoom</a> 
<a class="xref" href="#zoomto">zoomto</a> </p></td></tr>
<tr name='tr_spin'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1362">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_ssbonds'>
<td colspan="5">
<h3 >
<a id="ssbonds" name="ssbonds">ssbonds</a>
<a id="k1364"> </a></h3></td></tr>
<tr name='tr_ssbonds'>
<td>
<i >Cysteine disulfide bonds can be turned on or off, colored, and given customized widths in Angstroms.
<br />
<br /></i ></td></tr>
<tr name='tr_ssbonds'>
<td valign="top">
<a name="ssbonds_" id="k1366"> </a>ssbonds ON/OFF{default: ON}</td ></tr> 
<tr name='tr_ssbonds'>
<td valign="top">
<a name="ssbonds_._ssbond_width_angstroms" id="k1368"> </a>ssbonds 
<a class='def' href='#d1367' title='a (decimal, &lt;2.0)'>[width-angstroms]</a></td ></tr> 
<tr name='tr_ssbonds'>
<td valign="top">
<a name="ssbonds_._ssbond_width_rasmol" id="k1370"> </a>ssbonds 
<a class='def' href='#d1369' title='in 1/250ths of an Angstrom (deprecated) -- (integer, &lt;500)'>[width-Rasmol]</a></td ></tr> 
<tr name='tr_ssbonds'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_ssbonds'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_ssbonds'>
<td colspan="5">
<p>
<a class="xref" href="#bondorder">bondorder</a> 
<a class="xref" href="#connect">connect</a> 
<a class="xref" href="#hbonds">hbonds</a> 
<a class="xref" href="#setbondstyles">set (bond styles)</a> 
<a class="xref" href="#setfilesandscripts">set (files and scripts)</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_ssbonds'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1365">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_star'>
<td colspan="5">
<h3 >
<a id="star" name="star">star or stars</a>
<a id="k1371"> </a></h3></td></tr>
<tr name='tr_star'>
<td>
<i >The 
<b>star</b> command places a set of crosshairs of a given size in Angstroms on the selected atoms. The default size of the star is, like spacefill, the nominal van der Waals radius for the atom. The default color for the star is that of the atom it is associated with. Use 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#color">color star [colorname]</a> to then color selected stars the color of your choice. For options, see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#spacefill">spacefill</a>. 
<br />
<br /></i ></td></tr> 
<tr name='tr_star'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('.star')">in new window using 1crn.pdb</td></tr>
<tr name='tr_star'>
<td>
<table cellpadding="10">
<tr>
<td class="example">select *.S?;star ON
<br />select 40;star 1.0;color star red
<br />select *;color star NONE
<br />select *;star OFF</td></tr></table></td></tr>
<tr name='tr_star'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1372">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_step'>
<td colspan="5">
<h3 >
<a id="step" name="step">step</a>
<a id="k1373"> </a></h3></td></tr>
<tr name='tr_step'>
<td>
<i >Within the Jmol application, after a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#pause">pause</a> command, 
<b>step</b> executes only the next command and then pauses again. To see what the next command is without executing it, enter 
<b>?</b> as the command. 
<br />
<br /></i ></td></tr> 
<tr name='tr_step'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_step'>
<td colspan="5">
<p>
<a class="xref" href="#immediate!">[immediate (!)]</a> 
<a class="xref" href="#delay">delay</a> 
<a class="xref" href="#exit">exit</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#loop">loop</a> 
<a class="xref" href="#pause">pause</a> 
<a class="xref" href="#quit">quit</a> 
<a class="xref" href="#resume">resume</a> </p></td></tr>
<tr name='tr_step'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1374">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_stereo'>
<td colspan="5">
<h3 class=h3newer>
<a id="stereo" name="stereo">stereo</a>
<a id="k1375"> </a></h3></td></tr>
<tr name='tr_stereo'>
<td>
<i >Jmol supports two forms of stereo rendering for molecules. In the first form, the two images are placed side by side and rotated so as to appear from slightly different perspectives, creating the illusion of 3D when a practiced user trains one eye on one image and the other eye on the other image. 
<br>
<br>
<img src="img/glasses.gif" style="clear:right" alt="" />A second form of stereo rendering, 
<b>anaglyphic rendering</b>, nearly superimposes two identical models that are slightly rotated relative to each other. These models are each of a different color (red and one of blue, cyan, or green). The illusion of depth can then be created when the user wears an inexpensive pair of "3D glasses" that have differently colored lenses. 
<br>
<br>One should experiment with different background colors when using redcyan or redblue stereo rendering. For many users 
<b>background grey</b> looks better than 
<b>background white</b> or 
<b>background black</b>.
<br />
<br /></i ></td></tr>
<tr name='tr_stereo'>
<td valign="top">
<a name="stereo_" id="k1378"> </a>stereo 
<a class='def' href='#d1377' title='angle of rotation for stereo viewing -- (integer|decimal)'>[stereo-viewing-angle]</a>{default: 5}</td ></tr>
<tr name='tr_stereo'>
<td>
<blockquote>
<p >
<i >Turns side-by-side stereo viewing on. (Note that if this form of stereo viewing is desired, you will probably want to have the applet width twice the applet height.) The default rotation is -5 degrees. Sets the number of degrees of clockwise vertical-axis rotation of the RIGHT-hand image relative to the LEFT-hand image (which itself does not change rotation when stereo viewing is turned on and off). Negative values correspond to cross-eyed viewing, where the left eye is trained on the right image, and the right eye is trained on the left image. Positive values (clockwise rotation) correspond to "wall-eyed" viewing, where the right eye is trained on the right image and the left eye is trained on the left image. Note that 
<b>stereo 90</b> may be useful, as it shows two views of a model that rotate synchronously, a "front view" on the left and a "right side view" on the right.</i ></p ></blockquote></td></tr> 
<tr name='tr_stereo'>
<td valign="top">
<a name="stereo_" id="k1379"> </a>stereo {default: ON}</td ></tr>
<tr name='tr_stereo'>
<td>
<blockquote>
<p >
<i >Turns side-by-side stereo viewing on with a previously defined rotation or, if no rotation has been defined, a rotation of 5 degrees.</i ></p ></blockquote></td></tr> 
<tr name='tr_stereo'>
<td valign="top">
<a name="stereo_off" id="k1381"> </a>stereo OFF</td ></tr>
<tr name='tr_stereo'>
<td>
<blockquote>
<p >
<i >Turns stereo viewing off.</i ></p ></blockquote></td></tr> 
<tr name='tr_stereo'>
<td valign="top">
<a name="stereo_dti" id="k1380"> </a>
<span class=newer>stereo DTI 
<a class='def' href='#d1377' title='angle of rotation for stereo viewing -- (integer|decimal)'>[stereo-viewing-angle]</a>{default: 5} [
<b>Jmol 14.3.15</b>]</span></td ></tr>
<tr name='tr_stereo'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Turns side-by-side DTI format stereo viewing on with a previously defined rotation or, if no rotation has been defined, a rotation of 5 degrees. The left and right eye versions are placed side by side, with the horizontal dimension halved so that both images appear in the same space of the standard display. The viewing angle is optional.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_stereo'>
<td valign="top">
<a name="stereo_redblue" id="k1382"> </a>stereo REDBLUE 
<a class='def' href='#d1377' title='angle of rotation for stereo viewing -- (integer|decimal)'>[stereo-viewing-angle]</a>{default: 3}</td ></tr>
<tr name='tr_stereo'>
<td>
<blockquote>
<p >
<i >Turns red/blue anaglyphic rendering on with a specific relative rotation, if desired. The default is 3 degrees.</i ></p ></blockquote></td></tr> 
<tr name='tr_stereo'>
<td valign="top">
<a name="stereo_redcyan" id="k1383"> </a>stereo REDCYAN 
<a class='def' href='#d1377' title='angle of rotation for stereo viewing -- (integer|decimal)'>[stereo-viewing-angle]</a>{default: 3}</td ></tr>
<tr name='tr_stereo'>
<td>
<blockquote>
<p >
<i >Turns red/cyan anaglyphic rendering on with a specific relative rotation, if desired. The default is 3 degrees.</i ></p ></blockquote></td></tr> 
<tr name='tr_stereo'>
<td valign="top">
<a name="stereo_redgreen" id="k1384"> </a>stereo REDGREEN 
<a class='def' href='#d1377' title='angle of rotation for stereo viewing -- (integer|decimal)'>[stereo-viewing-angle]</a>{default: 3}</td ></tr>
<tr name='tr_stereo'>
<td>
<blockquote>
<p >
<i >Turns red/green anaglyphic rendering on with a specific relative rotation, if desired. The default is 3 degrees.</i ></p ></blockquote></td></tr> 
<tr name='tr_stereo'>
<td valign="top">
<a name="stereo_._colorrgb" id="k1386"> </a>stereo 
<a class='def' href='#d1385' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a> 
<a class='def' href='#d1385' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a> 
<a class='def' href='#d1377' title='angle of rotation for stereo viewing -- (integer|decimal)'>[stereo-viewing-angle]</a>{default: 3}</td ></tr>
<tr name='tr_stereo'>
<td>
<blockquote>
<p >
<i >Turns custom two-color anaglyphic rendering on with a specific relative rotation, if desired. The default is 3 degrees. The second color is optional. If it is left off, then the second color is the complement of the first. So, for example: 
<b>stereo red</b> is the same as 
<b>stereo red cyan</b>. Note that due to the odd way JavaScript designates green (as [x008000] rather than [x00FF00]), 
<b>stereo red green</b> is NOT the same as 
<b>stereo redgreen</b>. The equivalent of 
<b>stereo redgreen</b> is 
<b>stereo red lime</b>. When experimenting to match a given set of glasses, it is recommended that you use explicit hex codes for the colors:
<br>
<br>
<b>stereo [xFF0000] [x00FF00]</b>
<br>
<br> The set of color names used in Jmol is the JavaScript set, given at 
<a class="xref" href="http://jmol.sourceforge.net/jscolors/#JavaScript colors" target="_blank">http://jmol.sourceforge.net/jscolors/#JavaScript colors</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_stereo'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_stereo'>
<td>
<img border="0" src="img/ex.jpg" title="pop up example" /></a>
<br />
<i class="example">Examples:</i> 
<a href="javascript:showModel('.stereo')">in new window using 1crn.pdb</td></tr>
<tr name='tr_stereo'>
<td>
<table cellpadding="10">
<tr>
<td class="example">zoom 50;background white;stereo ON
<br />stereo 90
<br />stereo 5
<br />stereo -5
<br />zoom 100;background grey;stereo REDCYAN
<br />stereo REDBLUE 3
<br />stereo REDGREEN;stereo OFF</td></tr></table></td></tr>
<tr name='tr_stereo'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1376">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_strand'>
<td colspan="5">
<h3 >
<a id="strand" name="strand">strand or strands</a>
<a id="k1387"> </a></h3></td></tr>
<tr name='tr_strand'>
<td>
<i >Strands offer a representation the protein backbone or nucleic acid helix using lines. Curvature control points are as described for 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#ribbon">ribbon</a>. 
<br />
<br /></i ></td></tr>
<tr name='tr_strand'>
<td valign="top">
<a name="strand_" id="k1389"> </a>strand ON/OFF{default: ON}</td ></tr> 
<tr name='tr_strand'>
<td valign="top">
<a name="strand_only" id="k1390"> </a>strand ONLY</td ></tr>
<tr name='tr_strand'>
<td>
<blockquote>
<p >
<i >Turns strand rendering on and all other rendering (including labels) off.</i ></p ></blockquote></td></tr> 
<tr name='tr_strand'>
<td valign="top">
<a name="strand_._strand_radius" id="k1392"> </a>strand 
<a class='def' href='#d1391' title='half of the overall width of the set of strands -- (decimal, &lt;=4.0)'>[strand-radius]</a></td ></tr>
<tr name='tr_strand'>
<td>
<blockquote>
<p >
<i >Normally, strands vary in width according to the amino acid atom positions. This command sets the radius of the set of strands to be a constant value (a decimal, in Angstroms). A negative number also implies 
<b>ONLY</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_strand'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_strand'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_strand'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples/structure.htm">structure.htm</a> </td></tr>
<tr name='tr_strand'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_strand'>
<td colspan="5">
<p>
<a class="xref" href="#backbone">backbone</a> 
<a class="xref" href="#background">background</a> 
<a class="xref" href="#cartoon">cartoon</a> 
<a class="xref" href="#dots">dots</a> 
<a class="xref" href="#ellipsoid">ellipsoid</a> 
<a class="xref" href="#geosurface">geoSurface</a> 
<a class="xref" href="#meshribbon">meshribbon</a> 
<a class="xref" href="#ribbon">ribbon</a> 
<a class="xref" href="#rocket">rocket</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlighting">set (lighting)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#trace">trace</a> 
<a class="xref" href="#vector">vector</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_strand'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1388">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_structure'>
<td colspan="5">
<h3 >
<a id="structure" name="structure">structure or _structure</a>
<a id="k1393"> </a></h3></td></tr>
<tr name='tr_structure'>
<td>
<i >The 
<b>structure</b> command allows customized definition of the secondary structure of a protein model as HELIX, SHEET, TURN, or NONE. 
<br />
<br /></i ></td></tr>
<tr name='tr_structure'>
<td valign="top">
<a name="structure_helix|sheet|turn|none" id="k1395"> </a>structure HELIX|SHEET|TURN|NONE (atomExpression)</td ></tr>
<tr name='tr_structure'>
<td>
<blockquote>
<p >
<i >The atom expression is optional and if missing defaults to the currently selected atoms. 
<b>structure HELIX {4-10:B}</b>, for example, sets residues 4-10 on chain B to be represented as a helix. Note that the file must be of PDB format (from a pdb, mmcif, or suitable mol2 file) as well.</i ></p ></blockquote></td></tr> 
<tr name='tr_structure'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1394">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_struts'>
<td colspan="5">
<h3 >
<a id="struts" name="struts">struts or strut</a>
<a id="k1396"> </a></h3></td></tr>
<tr name='tr_struts'>
<td>
<i >In rapid prototyping of protein models, it is sometimes necessary to add short connectors between strands and helixes to provide strength to the plastic model. Jmol includes the shape STRUT that creates these supports. These stick-like objects can be added using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#connect">CONNECT ... STRUTS</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setpicking">SET PICKING STRUTS</a> commands, and they can be calculated automatically using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#calculate">calculate STRUTS</a>. STRUTS are not measures and they are not covalent bonds. 
<b>set strutDefaultRadius 0.3</b> sets the default radius for struts. (Their color by default is translucent white.)
<br />
<br /></i ></td></tr>
<tr name='tr_struts'>
<td valign="top">
<a name="struts_" id="k1398"> </a>struts ON/OFF{default: ON}</td ></tr>
<tr name='tr_struts'>
<td>
<blockquote>
<p >
<i >Turn struts on or off</i ></p ></blockquote></td></tr> 
<tr name='tr_struts'>
<td valign="top">
<a name="struts_only" id="k1399"> </a>struts ONLY</td ></tr>
<tr name='tr_struts'>
<td>
<blockquote>
<p >
<i >Turns struts on and all other rendering (including labels) off.</i ></p ></blockquote></td></tr> 
<tr name='tr_struts'>
<td valign="top">
<a name="struts_._radius_angstroms" id="k1401"> </a>struts 
<a class='def' href='#d1400' title='a (decimal, &lt;=3.0)'>[radius-in-angstroms]</a></td ></tr>
<tr name='tr_struts'>
<td>
<blockquote>
<p >
<i >Show struts with the given cylinder diameter in Angstroms</i ></p ></blockquote></td></tr> 
<tr name='tr_struts'>
<td valign="top">
<a name="struts_._radius_rasmol" id="k1403"> </a>struts 
<a class='def' href='#d1402' title='in 1/250ths of an Angstrom (deprecated) -- (integer, 1 to 749)'>[radius-Rasmol]</a></td ></tr>
<tr name='tr_struts'>
<td>
<blockquote>
<p >
<i >Show struts with the given cylinder diameter in Rasmol units (deprecated).</i ></p ></blockquote></td></tr> 
<tr name='tr_struts'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_struts'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_struts'>
<td colspan="5">
<p>
<a class="xref" href="#bondorder">bondorder</a> 
<a class="xref" href="#connect">connect</a> 
<a class="xref" href="#hbonds">hbonds</a> 
<a class="xref" href="#setbondstyles">set (bond styles)</a> 
<a class="xref" href="#setfilesandscripts">set (files and scripts)</a> 
<a class="xref" href="#ssbonds">ssbonds</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_struts'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1397">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_subset'>
<td colspan="5">
<h3 >
<a id="subset" name="subset">subset</a>
<a id="k1404"> </a></h3></td></tr>
<tr name='tr_subset'>
<td>
<i >The 
<b>subset</b> command selects a subset of the atoms that will serve as a basis for all atom expressions until either another subset command is issued or until a new file is loaded. After 
<b>subset *:C</b>, for example, 
<b>select *</b> only selects atoms of chain C, 
<b>restrict none</b> only clears chain C, and 
<b>restrict *:C</b> does nothing. By itself, the 
<b>subset</b> command is the same as 
<b>subset all</b>. Since all menu-driven commands work through the script processor, realize that any user selections will also be affected by the current subset. (
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#hover">hover</a> is still active, though.) "Select All" from the menu, for example, will only select the current subset of atoms. In addition, atoms outside the current subset cannot be clicked on by the user for atom identification or for measurements. Thus, after operations requiring subset have been completed, consider issuing 
<b>subset all</b> unless you intend to shut off user clicking.
<br />
<br /></i ></td></tr> 
<tr name='tr_subset'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_subset'>
<td colspan="5">
<p>
<a class="xref" href="#display">display</a> 
<a class="xref" href="#hide">hide</a> 
<a class="xref" href="#restrict">restrict</a> 
<a class="xref" href="#select">select</a> </p></td></tr>
<tr name='tr_subset'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1405">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_switch'>
<td colspan="5">
<h3 >
<a id="switch" name="switch">SWITCH</a>
<a id="k1406"> </a></h3>
<div class="chimenote">
<i>Note:</i> The SWITCH command does not require @{ ... } around Jmol math expressions.
<br />
<br /></div></td></tr>
<tr name='tr_switch'>
<td>
<i >
<b>switch</b> and 
<b>case</b> allow a simplified syntax as an alternative to mulitple 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#if">if</a> statements. The implementation in Jmol is more like the JavaScript equivalent than the Java version. Like JavaScript, CASE values can be expression that involve any variable type rather than just integer constants. Expressions are evaluated from the top down; the DEFAULT keyword may appear along with any other CASE or by itself. As for these other languages, an optional BREAK command is necessary after a case to prevent continuation of the script into the next case. For example: 
<br>
<br>switch(prompt("What sort of rendering would you like?","Spacefill|Wireframe|Ball&Stick",true)) {
<br>case "Spacefill":
<br>   spacefill only
<br>  break
<br>case "Wireframe":
<br>   wireframe only
<br>  break;
<br>case "Ball&Stick":
<br>  wireframe only;wireframe reset;spacefill reset
<br>  break;
<br>}
<br />
<br /></i ></td></tr> 
<tr name='tr_switch'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_switch'>
<td colspan="5">
<p>
<a class="xref" href="#jmolcommandsyntax">[Jmol Command Syntax]</a> 
<a class="xref" href="#jmolmath">[Jmol Math]</a> 
<a class="xref" href="#jmolparameters">[Jmol Parameters]</a> 
<a class="xref" href="#atomexpressions">[atom expressions]</a> 
<a class="xref" href="#atomproperties">[atom properties]</a> 
<a class="xref" href="#functions">[functions]</a> 
<a class="xref" href="#break">break</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#catch">catch</a> 
<a class="xref" href="#continue">continue</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#else">else</a> 
<a class="xref" href="#elseif">elseIf</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#message">message</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#return">return</a> 
<a class="xref" href="#set">set</a> 
<a class="xref" href="#try">try</a> 
<a class="xref" href="#var">var</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_switch'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1407">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_sync'>
<td colspan="5">
<h3 class=h3newer>
<a id="sync" name="sync">sync</a>
<a id="k1408"> </a></h3></td></tr>
<tr name='tr_sync'>
<td>
<i >The 
<b>sync</b> command allows synchronization among applets and applications. 
<br />
<table cellpadding="2" cellspacing="2" border="1" >
<tr >
<td valign="top" >Applet Synchronization </td >
<td valign="top" > For applets, an applet can be a driver, a slave, or (like many supervisors) both (a slave driver, GET IT?). Three optional settings are available. With 
<b>set syncScript ON</b> scripted commands are transmitted; with 
<b>set syncMouse ON</b> mouse movements are transmitted. These two parameters are independent. If both are off (the default behavior) and sync is ON, then the orientation of the target applet is maintained the same as the driving applet, but script commands are not automatically transmitted. Details can be seen at 
<a class="xref" href="examples-11/sync2.htm" target="_blank">examples-11/sync2.htm</a>.</td ></tr >
<tr >
<td valign="top" >Inter-Application Communication</td >
<td valign="top" >The 
<b>sync</b> command with a numerical first parameter allows Jmol to function as a server and/or client over a local internet port. In server mode (specified with a negative port number), Jmol accepts connections and then responds to JSON-encoded messages relating to script commands, mouse actions, touches, or shut-down requests. As a client, Jmol can accept such messages or also send messages to a connected server. Protocol details can be found in 
<a class="xref" href="misc/appsync.txt" target="_blank">misc/appsync.txt</a>.</td ></tr >
<tr >
<td valign="top" >JSpecView Synchronization</td >
<td valign="top" >Jmol incorporates 
<a class="xref" href="http://jspecview.sourceforge.net" target="_blank">JSpecView</a> into the application and includes special 
<b>sync</b> capabilities that allow JCAMP-DX files that contain spectra, models, and assignments for IR, NMR, MS, GC, and GC-MS data to be automatically synchronized for user interaction with the data and the model. This capability within the application extends to the applet, in which case a page would load two applets, JmolApplet.jar and JSpecViewApplet.jar. For example, see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/jspecview/test2.htm" target="_blank">http://chemapps.stolaf.edu/jmol/jspecview/test2.htm</a>. 
<br>
<br> The format is 
<b>sync ˜ "Select: attributes"</b> where 
<b>attributes</b> are key/value pairs in the form of HTML or XML: key="value". Attributes include 
<b>file</b>, 
<b>model</b>, 
<b>atoms</b>, 
<b>select</b>, and 
<b>script</b>. If Jmol does not find a model with ID 
<b>file#model</b>, it will load that model. 
<b>atoms</b> is a list of atom numbers separated by commas: 1,2,3, etc., that will be translated into the selection 
<b>@1 or @2 or @3</b> within Jmol. 
<b>select</b> can be any valid Jmol selection such as 
<b>THR</b> or 
<b>1-30</b>. Jmol automatically adds 
<b>visible and</b> to the selection created from 
<b>atom</b> or 
<b>select</b>. Requires 
<b>SYNC ON</b>. See 
<a class="xref" href="misc/Jmol-JSpecView-specs.pdf" target="_blank">Jmol-JSpecView-specs.pdf</a></td ></tr ></table >
<br />
<br /></i ></td></tr>
<tr name='tr_sync'>
<td valign="top">
<a name="sync_&per;|>|*|appletid|appletid[syncid]" id="k1410"> </a>sync .|>|*|appletId|appletId[syncId] ON</td ></tr>
<tr name='tr_sync'>
<td>
<blockquote>
<p >
<i >Turns on synchronization for just this applet (.), all applets except this one (>), all applets (*), a specific applet on this page (appletId), or a specific applet within a specific synchronization set (appletId[syncId]). All applets selected will drive orientations of all others.</i ></p ></blockquote></td></tr> 
<tr name='tr_sync'>
<td valign="top">
<a name="sync_" id="k1411"> </a>sync .|>|*|appletId|appletId[syncId] SLAVE</td ></tr>
<tr name='tr_sync'>
<td>
<blockquote>
<p >
<i >Same as 
<b>sync ON</b>, but the selected applets will be set to receive commands only, not send them.</i ></p ></blockquote></td></tr> 
<tr name='tr_sync'>
<td valign="top">
<a name="sync_" id="k1412"> </a>sync .|>|*|appletId|appletId[syncId] OFF</td ></tr>
<tr name='tr_sync'>
<td>
<blockquote>
<p >
<i >Turns off synchronization for the designated applets.</i ></p ></blockquote></td></tr> 
<tr name='tr_sync'>
<td valign="top">
<a name="sync_" id="k1413"> </a>sync .|>|*|appletId|appletId[syncId] "command"</td ></tr>
<tr name='tr_sync'>
<td>
<blockquote>
<p >
<i >Sends the command (or scripted sequence of commands) to the desigated applets. Quotation marks ARE required.</i ></p ></blockquote></td></tr> 
<tr name='tr_sync'>
<td valign="top">
<a name="sync_-_integer_" id="k1414"> </a>sync -(integer)</td ></tr>
<tr name='tr_sync'>
<td>
<blockquote>
<p >
<i >(application only) Indicating a negative port number initializes Jmol as a server over the specified port. Also sets 
<b>sync on; sync slave</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_sync'>
<td valign="top">
<a name="sync_-_integer_" id="k1415"> </a>sync -(integer) command</td ></tr>
<tr name='tr_sync'>
<td>
<blockquote>
<p >
<i >(application only) Acting as a server, sends a command to its own instance (primarily for testing).</i ></p ></blockquote></td></tr> 
<tr name='tr_sync'>
<td valign="top">
<a name="sync__integer_" id="k1416"> </a>sync (integer) command</td ></tr>
<tr name='tr_sync'>
<td>
<blockquote>
<p >
<i >(application only) Sends a Jmol command over the specified port, establishing the connection if it does not exist.</i ></p ></blockquote></td></tr> 
<tr name='tr_sync'>
<td valign="top">
<a name="sync__integer_" id="k1417"> </a>sync (integer) JSON message</td ></tr>
<tr name='tr_sync'>
<td>
<blockquote>
<p >
<i >(application only) Sends a JSON message to a server. (See 
<a class="xref" href="misc/appsync.txt" target="_blank">misc/appsync.txt</a>.)</i ></p ></blockquote></td></tr> 
<tr name='tr_sync'>
<td valign="top">
<a name="sync__integer_" id="k1418"> </a>
<span class=newer>sync (integer) expression [
<b>Jmol 14.3.11</b>]</span></td ></tr>
<tr name='tr_sync'>
<td>
<blockquote>
<p >
<i >
<span class=newer>(application only) Sends a JSON message to a server using a Jmol variable or expression. For example:
<br>
<br>
<b> x = {"type":"command","command":"background green; print y", "var": "y", "data":['an array',2]}
<br>sync 3000 x
<br></b></span></i ></p ></blockquote></td></tr> 
<tr name='tr_sync'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_sync'>
<td colspan="5">
<p>
<a class="xref" href="#jmol/jspecview/magresview">[Jmol/JSpecView/MagresView]</a> </p></td></tr>
<tr name='tr_sync'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1409">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_throw'>
<td colspan="5">
<h3 class=h3new>
<a id="throw" name="throw">THROW</a>
<a id="k1419"> </a> 
<br />
<span class=new>(v. 14.2)</span></h3>
<div class="chimenote">
<i>Note:</i> The THROW command does not require @{ ... } around Jmol math expressions.
<br />
<br /></div></td></tr>
<tr name='tr_throw'>
<td>
<i >The 
<b>throw</b> command initiates a user-defined error condition that either stops processsing or, when within a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#try">try/catch</a> syntax, is caught and handled at another point in the script. 
<br />
<br /></i ></td></tr>
<tr name='tr_throw'>
<td valign="top">
<a name="throw_[math_expression]" id="k1421"> </a>
<span class=new>throw [math expression]</span></td ></tr>
<tr name='tr_throw'>
<td>
<blockquote>
<p >
<i >
<span class=new>The 
<b>throw</b> command initiates a user-defined error condition that either stops processsing or, when within a 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#try">try/catch</a> syntax, is caught and handled at another point in the script. For example:
<br>
<br>  
<b>print "testing"
<br>  throw "testing here"
<br>  print "we will never see this"</b>
<br>
<br>results in the following message in the Jmol console:
<br>
<br>  testing
<br>  script ERROR: testing here
<br>  ----
<br>  throw >> "testing here" &lt;&lt;
<br>
<br>The message need not be just a simple string. It can be any Jmol variable or any math expression. For example:
<br>
<br>  
<b>x = "i="
<br>  throw x + i</b>
<br>
<br>The thrown message is passed to a variable named 
<b>thrown_value</b>, which can be checked within the catch part of a try/catch syntax:
<br>
<br>  
<b>try{
<br>    print "testing"
<br>    throw "testing here"
<br>    print "continuing"
<br>  } catch(e) {
<br>    print "thrown_value=" + thrown_value;
<br>  }
<br>  </b>
<br>results in:
<br>  
<br>  testing
<br>  thrown_value=testing here
<br>
<br></span></i ></p ></blockquote></td></tr> 
<tr name='tr_throw'>
<td valign="top">
<a name="throw_context" id="k1422"> </a>
<span class=new>throw CONTEXT contextName</span></td ></tr>
<tr name='tr_throw'>
<td>
<blockquote>
<p >
<i >
<span class=new>The 
<b>throw CONTEXT</b> form of the throw command allows an unusual form of asynchronous processing that is unlike anything in Java or JavaScript. The command replaces 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#pause">pause</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#resume">resume</a>, now deprecated. The command throws a catchable error, but in the process of doing so, creates a script context that allows RESUMING the process at the point of the throw. If within a try/catch phrase, 
<b>throw CONTEXT contextName</b> is handled by the catch, in which case the variable 
<b>thrown_value</b> is just the string contextName (and 
<b>@thrown_value</b> will be the context itself, in the form of an associative array).
<br>
<br>More interesting, though, is when the throw is not within a try/catch phrase, in which case Jmol reports to the console:
<br>
<br>  to resume, enter: &contextName
<br>
<br>This essentially provides a callback into the running (though interrupted) script. So you could, for example, put a running script "on hold" while you load a file or check or modify variables, and then continue where it left off.
<br>
<br>Resuming the process at the point of the throw is carried using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#resume">resume CONTEXT contextName</a> or just & followed by the name of the context:
<br>
<br>  
<b>throw context test
<br>  ...
<br>  &test</b>
<br>
<br>The current context returns to the highest level, out of all 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#for">for</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#while">while</a> loops or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#function">function</a> calls. However, the variables in the context that was thrown are accessible as though the contextName variable were an associative array. So, for example, if we have
<br>
<br>  
<b>function f(a, b, c) {
<br>    var x = 5
<br>    throw context testing
<br>    print "x=" + x
<br>  }
<br>
<br>  f(1,2,3)
<br>  print "done"</b>
<br>
<br>The context will be saved as the variable "testing", which takes the form of an associative array with keys that are lower-case names of all variables defined for this context (using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#var">VAR</a>). We can then test all the variables in that saved context and even change them before continuing:
<br>
<br>  
<b>print testing["x"]</b>
<br>
<br>  5
<br>
<br>  
<b>testing["x"]++
<br>   print testing</b>
<br>     
<br>  _path  :  [script] >> function f
<br>  _retval  :  0
<br>  a  :  2
<br>  b  :  2
<br>  c  :  3
<br>  x  :  6
<br>
<br>If we were then to issue
<br>
<br>  
<b>&testing</b>
<br>
<br>we would get the report:
<br>
<br>  x=6
<br>  done
<br>      
<br>Note that contexts can be resumed any number of times. The variables will be whatever values they were left at in the previous time through the process (not necessarily their original values.)
<br>
<br>Note also that resuming contexts within functions that return a value, for example, in the function 
<b>myfunc</b> within
<br>
<br>  
<b>x = a + myfunc(a,b,c) + c</b>
<br>
<br>will not (at this time) return to complete the assignment. Instead, the process will continue at the next statement in the script. If this sort of functionality is desired, it is recommended that arguments be passed by reference, as arrays:
<br>
<br>  
<b>x = [ ]
<br>  myfunc(a,b,c,x) // fills in x[1] rather than returning a value
<br>  x = a + x[1] + c</b>
<br>
<br>It is possible that future versions of Jmol will be able to resume within an expression and complete the assignment, so throws within such functions should be avoided.
<br>
<br></span></i ></p ></blockquote></td></tr> 
<tr name='tr_throw'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_throw'>
<td colspan="5">
<p>
<a class="xref" href="#immediate!">[immediate (!)]</a> 
<a class="xref" href="#break">break</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#catch">catch</a> 
<a class="xref" href="#continue">continue</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#delay">delay</a> 
<a class="xref" href="#else">else</a> 
<a class="xref" href="#elseif">elseIf</a> 
<a class="xref" href="#exit">exit</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#loop">loop</a> 
<a class="xref" href="#pause">pause</a> 
<a class="xref" href="#quit">quit</a> 
<a class="xref" href="#resume">resume</a> 
<a class="xref" href="#return">return</a> 
<a class="xref" href="#step">step</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#try">try</a> 
<a class="xref" href="#var">var</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_throw'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1420">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_timeout'>
<td colspan="5">
<h3 >
<a id="timeout" name="timeout">timeout or timeouts</a>
<a id="k1423"> </a></h3></td></tr>
<tr name='tr_timeout'>
<td>
<i >Sets a script to be executed after a given time. (Execution can be checked using 
<b>set debugscript</b>. The commands as they are executed will appear in the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#console">console</a>.) See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#show">show timeout</a>. 
<br />
<br /></i ></td></tr>
<tr name='tr_timeout'>
<td valign="top">
<a name="timeout_" id="k1425"> </a>timeout</td ></tr>
<tr name='tr_timeout'>
<td>
<blockquote>
<p >
<i >By itself, the 
<b>timeout</b> command simply displays a list of pending timeouts.</i ></p ></blockquote></td></tr> 
<tr name='tr_timeout'>
<td valign="top">
<a name="timeout_off" id="k1426"> </a>timeout OFF</td ></tr>
<tr name='tr_timeout'>
<td>
<blockquote>
<p >
<i >Turns off all pending timeouts or &lt;no timeouts set></i ></p ></blockquote></td></tr> 
<tr name='tr_timeout'>
<td valign="top">
<a name="timeout_id_"id"" id="k1427"> </a>timeout ID "id" time(s or ms) "command"</td ></tr>
<tr name='tr_timeout'>
<td>
<blockquote>
<p >
<i >Initiates a timeout. A decimal delay time (for example, 
<b>3.0</b>) is taken to be seconds; integer time indicates milliseconds. If the delay time is negative, then the timeout will repeat until a new file is loaded or a ZAP command is given. The ID keyword is optional.</i ></p ></blockquote></td></tr> 
<tr name='tr_timeout'>
<td valign="top">
<a name="timeout_id_"id"" id="k1428"> </a>timeout ID "id" OFF</td ></tr>
<tr name='tr_timeout'>
<td>
<blockquote>
<p >
<i >Turns off the named timeout if pending. The ID keyword is optional.</i ></p ></blockquote></td></tr> 
<tr name='tr_timeout'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1424">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_trace'>
<td colspan="5">
<h3 >
<a id="trace" name="trace">trace</a>
<a id="k1429"> </a></h3></td></tr>
<tr name='tr_trace'>
<td>
<i >A "trace" is a smooth hermite curve through the same control points used by 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#ribbons">ribbons</a>.
<br />
<br /></i ></td></tr>
<tr name='tr_trace'>
<td valign="top">
<a name="trace_" id="k1431"> </a>trace ON/OFF{default: ON}</td ></tr> 
<tr name='tr_trace'>
<td valign="top">
<a name="trace_only" id="k1432"> </a>trace ONLY</td ></tr>
<tr name='tr_trace'>
<td>
<blockquote>
<p >
<i >Turns trace rendering on and all other rendering (including labels) off.</i ></p ></blockquote></td></tr> 
<tr name='tr_trace'>
<td valign="top">
<a name="trace_._trace_radius" id="k1434"> </a>trace 
<a class='def' href='#d1433' title='the radius of the trace -- (decimal, &lt;=4.0)'>[trace-radius]</a></td ></tr> 
<tr name='tr_trace'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_trace'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_trace'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples/structure.htm">structure.htm</a> </td></tr>
<tr name='tr_trace'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_trace'>
<td colspan="5">
<p>
<a class="xref" href="#backbone">backbone</a> 
<a class="xref" href="#background">background</a> 
<a class="xref" href="#cartoon">cartoon</a> 
<a class="xref" href="#dots">dots</a> 
<a class="xref" href="#ellipsoid">ellipsoid</a> 
<a class="xref" href="#geosurface">geoSurface</a> 
<a class="xref" href="#meshribbon">meshribbon</a> 
<a class="xref" href="#ribbon">ribbon</a> 
<a class="xref" href="#rocket">rocket</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlighting">set (lighting)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#strand">strand</a> 
<a class="xref" href="#vector">vector</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_trace'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1430">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_translate'>
<td colspan="5">
<h3 >
<a id="translate" name="translate">translate</a>
<a id="k1435"> </a></h3></td></tr>
<tr name='tr_translate'>
<td>
<i >Moves the molecule along the specified window-based axis, X, Y, or Z. If the keyword SELECTED is added as the first parameter, then only the selected atoms are moved, and actual coordinates are changed. Otherwise, unless indicated otherwise, the TRANSLATE command just moves the viewpoint, without changing atom coordinates.
<br />
<br /></i ></td></tr>
<tr name='tr_translate'>
<td valign="top">
<a name="translate_x_or_y" id="k1437"> </a>translate X or Y (decimal)</td ></tr>
<tr name='tr_translate'>
<td>
<blockquote>
<p >
<i >Moves the center of rotation to the specified value. A value of 100 will move the molecule completely out of the window. The value represents the percentage of the display window, and 0 is the window center. A value of 50 will move the center of the molecule to the edge of the window. Positive values are to the right of center for X and below center for Y. </i ></p ></blockquote></td></tr> 
<tr name='tr_translate'>
<td valign="top">
<a name="translate_x_or_y" id="k1438"> </a>translate X or Y (decimal) %</td ></tr>
<tr name='tr_translate'>
<td>
<blockquote>
<p >
<i >Moves the center of rotation by the specified percent of the window width (X) or height (Y). </i ></p ></blockquote></td></tr> 
<tr name='tr_translate'>
<td valign="top">
<a name="translate_x_or_y" id="k1439"> </a>translate X or Y (decimal) NM or ANGSTROMS</td ></tr>
<tr name='tr_translate'>
<td>
<blockquote>
<p >
<i >Moves the center of rotation by the specified number of angstroms or nanometers at the midpoint depth of the model. . Positive values shift the model to the right for X and down for Y.</i ></p ></blockquote></td></tr> 
<tr name='tr_translate'>
<td valign="top">
<a name="translate_z" id="k1440"> </a>translate Z (decimal) %</td ></tr>
<tr name='tr_translate'>
<td>
<blockquote>
<p >
<i >Adjusts the zoom setting such that the specified percent change in field of view is effected. Positive values give the illusion of moving the model toward the user. Values that would magnify the model to the extent that less than one angstrom spans the entire window are ignored.</i ></p ></blockquote></td></tr> 
<tr name='tr_translate'>
<td valign="top">
<a name="translate_z" id="k1441"> </a>translate Z (decimal) NM or ANGSTROMS</td ></tr>
<tr name='tr_translate'>
<td>
<blockquote>
<p >
<i >Adjusts the zoom setting such that the specified number of angstroms or nanometers are removed from the field of view (positive value, magnification) or added to the field of view (negative value, giving the illusion of zooming out) at the midpoint depth of the model, as defined by the dimension from which zoom is referenced (based on 
<b>set zoomLarge</b> or 
<b>set zoomHeight</b>). Values that would magnify the model to the extent that less than one angstrom spans the entire window are ignored.</i ></p ></blockquote></td></tr> 
<tr name='tr_translate'>
<td valign="top">
<a name="translate_{{atomset}}" id="k1442"> </a>translate {x y z} {atomSet}</td ></tr>
<tr name='tr_translate'>
<td>
<blockquote>
<p >
<i >Moves the indicated atoms along the specified vector, in Angstroms, changing their actual atom coordinates. 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#fractionalcoordinates">Fractional coordinates</a> are allowed and are indicated with a "/" anywhere in any of the three coordinates. If the atom set is not included, and the SELECTED keyword is used, then the currently selected atom set is translated. </i ></p ></blockquote></td></tr> 
<tr name='tr_translate'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_translate'>
<td colspan="5">
<p>
<a class="xref" href="#animation">animation</a> 
<a class="xref" href="#file">file</a> 
<a class="xref" href="#frame">frame</a> 
<a class="xref" href="#invertselected">invertSelected</a> 
<a class="xref" href="#move">move</a> 
<a class="xref" href="#moveto">moveto</a> 
<a class="xref" href="#rotate">rotate</a> 
<a class="xref" href="#rotateselected">rotateSelected</a> 
<a class="xref" href="#setmisc">set (misc)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#spin">spin</a> 
<a class="xref" href="#translateselected">translateSelected</a> 
<a class="xref" href="#zoom">zoom</a> 
<a class="xref" href="#zoomto">zoomto</a> </p></td></tr>
<tr name='tr_translate'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1436">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_translateselected'>
<td colspan="5">
<h3 >
<a id="translateselected" name="translateselected">translateSelected</a>
<a id="k1443"> </a></h3></td></tr>
<tr name='tr_translateselected'>
<td>
<i >Translates a specified subset of atoms, changing their actual coordinates. This command is equivalent to 
<b>translate selected ...</b>. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#translate">translate</a>. 
<br />
<br /></i ></td></tr> 
<tr name='tr_translateselected'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_translateselected'>
<td>
<table cellpadding="10">
<tr>
<td class="example">select molecule=1
<br />translateSelected {0 0 1/1}</td></tr></table></td></tr>
<tr name='tr_translateselected'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_translateselected'>
<td colspan="5">
<p>
<a class="xref" href="#animation">animation</a> 
<a class="xref" href="#file">file</a> 
<a class="xref" href="#frame">frame</a> 
<a class="xref" href="#invertselected">invertSelected</a> 
<a class="xref" href="#move">move</a> 
<a class="xref" href="#moveto">moveto</a> 
<a class="xref" href="#rotateselected">rotateSelected</a> 
<a class="xref" href="#setmisc">set (misc)</a> 
<a class="xref" href="#spin">spin</a> 
<a class="xref" href="#translate">translate</a> 
<a class="xref" href="#zoom">zoom</a> 
<a class="xref" href="#zoomto">zoomto</a> </p></td></tr>
<tr name='tr_translateselected'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1444">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_try'>
<td colspan="5">
<h3 >
<a id="try" name="try">try</a>
<a id="k1445"> </a></h3></td></tr>
<tr name='tr_try'>
<td>
<i >Surrounding a set of Jmol script with try{...} and following it by catch(e){...} allows the catching of errors within larger blocks of script. The action is the same as in JavaScript, except that the catch phrase is optional. For example, in the following, the first model is never lost, and no error message is printed in the applet window. Any variables created with the VAR keyword are local to the try or catch block.
<br>
<br>load quartz.cif
<br>refresh
<br>while(true) { 
<br>   try {
<br>     load files "caffeine.xyz" "1d.pdb"
<br>   } catch(e) {
<br>     prompt @{"oops -- " + e}
<br>     break;
<br>   }
<br>   prompt "File loaded successfully"
<br>   break;
<br>}
<br>
<br>Note that Jmol script errors are found, not necessarily Java or JavaScript errors. For example, 
<b>x =load("asdfasdf")</b> will not throw an error, because if a Java or HTML file read error is obtained, the variable x simply is filled by that error string. For load("xxx") in particular, you can 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#throw">throw</a> your own error within the try block by inspecting its result and seeing if it is valid -- for example, using 
<b>try{ load("xxx");if(x.find("Exception")||x.find("404")) throw x;. . . }
<br />
<br /></i ></td></tr> 
<tr name='tr_try'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_try'>
<td colspan="5">
<p>
<a class="xref" href="#break">break</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#catch">catch</a> 
<a class="xref" href="#continue">continue</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#else">else</a> 
<a class="xref" href="#elseif">elseIf</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#return">return</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#var">var</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_try'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1446">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_unbind'>
<td colspan="5">
<h3 >
<a id="unbind" name="unbind">unbind</a>
<a id="k1447"> </a></h3></td></tr>
<tr name='tr_unbind'>
<td>
<i >Removes the tie between a mouse action and a Jmol action or user script. For descriptions of these, see 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#bind">bind</a>.
<br />
<br /></i ></td></tr>
<tr name='tr_unbind'>
<td valign="top">
<a name="unbind_" id="k1449"> </a>unbind</td ></tr>
<tr name='tr_unbind'>
<td>
<blockquote>
<p >
<i >By itself, unbind returns Jmol to its default mouse action binding.</i ></p ></blockquote></td></tr> 
<tr name='tr_unbind'>
<td valign="top">
<a name="unbind__mouse_action_" id="k1450"> </a>unbind (mouse action)</td ></tr>
<tr name='tr_unbind'>
<td>
<blockquote>
<p >
<i >Removes all bindings to the specified mouse action.</i ></p ></blockquote></td></tr> 
<tr name='tr_unbind'>
<td valign="top">
<a name="unbind__jmol_action_" id="k1451"> </a>unbind (Jmol action)</td ></tr>
<tr name='tr_unbind'>
<td>
<blockquote>
<p >
<i >Removes all bindings to the specified jmol action</i ></p ></blockquote></td></tr> 
<tr name='tr_unbind'>
<td valign="top">
<a name="unbind_"script"" id="k1452"> </a>unbind "script"</td ></tr>
<tr name='tr_unbind'>
<td>
<blockquote>
<p >
<i >Removes all bindings to the specified user script</i ></p ></blockquote></td></tr> 
<tr name='tr_unbind'>
<td valign="top">
<a name="unbind__mouse_action_" id="k1453"> </a>unbind (mouse action) (Jmol action)</td ></tr>
<tr name='tr_unbind'>
<td>
<blockquote>
<p >
<i >Removes the specified mouse action for the specified Jmol action.</i ></p ></blockquote></td></tr> 
<tr name='tr_unbind'>
<td valign="top">
<a name="unbind__mouse_action_" id="k1454"> </a>unbind (mouse action) "script"</td ></tr>
<tr name='tr_unbind'>
<td>
<blockquote>
<p >
<i >Removes the specified mouse action for the specified script.</i ></p ></blockquote></td></tr> 
<tr name='tr_unbind'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_unbind'>
<td>
<table cellpadding="10">
<tr>
<td class="example">unbind "CTRL-SHIFT-LEFT";
<br />unbind "_clickFrank";unbind "_popupMenu";
<br />unbind "LEFT" "_rotate"</td></tr></table></td></tr>
<tr name='tr_unbind'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_unbind'>
<td colspan="5">
<p>
<a class="xref" href="#bind">bind</a> </p></td></tr>
<tr name='tr_unbind'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1448">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_undo'>
<td colspan="5">
<h3 >
<a id="undo" name="undo">undo</a>
<a id="k1455"> </a></h3></td></tr>
<tr name='tr_undo'>
<td>
<i >(application only) same as the Undo console button -- reloads the previous state
<br />
<br /></i ></td></tr> 
<tr name='tr_undo'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1456">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_undomove'>
<td colspan="5">
<h3 >
<a id="undomove" name="undomove">undoMove</a>
<a id="k1457"> </a></h3></td></tr>
<tr name='tr_undomove'>
<td>
<i >same as CTRL-Z -- undoes changes to atom position when in modelKit mode.
<br />
<br /></i ></td></tr> 
<tr name='tr_undomove'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1458">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_unitcell'>
<td colspan="5">
<h3 class=h3new>
<a id="unitcell" name="unitcell">unitcell</a>
<a id="k1459"> </a> 
<br />
<span class=new>(v. 11.0 -- new)</span></h3></td></tr>
<tr name='tr_unitcell'>
<td>
<i >Turns on or off the unit cell for crystal structures, and determines its line style and line width (as a decimal number, in Angstroms).
<br />
<br /></i ></td></tr>
<tr name='tr_unitcell'>
<td valign="top">
<a name="unitcell_" id="k1461"> </a>unitcell ON/OFF{default: ON}</td ></tr>
<tr name='tr_unitcell'>
<td>
<blockquote>
<p >
<i >Turns the unit cell on or off</i ></p ></blockquote></td></tr> 
<tr name='tr_unitcell'>
<td valign="top">
<a name="unitcell__decimal_" id="k1462"> </a>unitcell (decimal)</td ></tr>
<tr name='tr_unitcell'>
<td>
<blockquote>
<p >
<i >Sets the unit cell line diameter in Angstroms. </i ></p ></blockquote></td></tr> 
<tr name='tr_unitcell'>
<td valign="top">
<a name="unitcell_boundbox" id="k1463"> </a>
<span class=new>unitcell BOUNDBOX</span></td ></tr>
<tr name='tr_unitcell'>
<td>
<blockquote>
<p >
<i >
<span class=new>Sets the unit cell based on the current bound box.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_unitcell'>
<td valign="top">
<a name="unitcell_center" id="k1465"> </a>unitcell CENTER 
<a class='def' href='#d1464' title='is any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> surrounded by parentheses or braces, or any {x y z} coordinate '>[atom-expression-or-coordinate]</a></td ></tr>
<tr name='tr_unitcell'>
<td>
<blockquote>
<p >
<i >Sets the unit cell to be centered on a given atom or coordinate. The coordinate is assumed to be in fractional coordinates already, for example {0.5 0.5 0.5}.</i ></p ></blockquote></td></tr> 
<tr name='tr_unitcell'>
<td valign="top">
<a name="unitcell_dotted" id="k1466"> </a>unitcell DOTTED</td ></tr>
<tr name='tr_unitcell'>
<td>
<blockquote>
<p >
<i >Sets the axes style to a thin dotted line.</i ></p ></blockquote></td></tr> 
<tr name='tr_unitcell'>
<td valign="top">
<a name="unitcell_offset" id="k1467"> </a>unitcell OFFSET {i j k}</td ></tr>
<tr name='tr_unitcell'>
<td>
<blockquote>
<p >
<i >Sets the origin of the unit cell to be the specified coordinate (with braces). No matter how the coorinate is written (with or without "/"), it is interpreted as a fractional coordinate. For example, 
<b>unitcell {0.5 0.5 0.5}</b> sets the origin of the unit cell to {1/2, 1/2, 1/2}. This change is for display purposes only -- the actual "{0 0 0}" point remains where it was initially. The keyword OFFSET, introduced in 
<span class="newv">Jmol 14.2</span>, is optional.</i ></p ></blockquote></td></tr> 
<tr name='tr_unitcell'>
<td valign="top">
<a name="unitcell_range" id="k1468"> </a>unitcell RANGE {nnn yyy scale}</td ></tr>
<tr name='tr_unitcell'>
<td>
<blockquote>
<p >
<i >Creates a block of unit cells, possibly scaled, using the "555" cell naming system. A negative scale, such as -0.5, fills the specified range of unit cells with unit cells of the specified size allowing, for instance, filling of a set of supercells with unit cells based on a primitive smaller unit cell. A scale of 0 creates the unit cell but does not fill it with smaller unit cells. Starting in 
<span class="newv">Jmol 14.2</span>, more complicated supercells can be generated using the "abc;offset" method (see below). The keyword RANGE, introduced in 
<span class="newv">Jmol 14.2</span>, is optional.</i ></p ></blockquote></td></tr> 
<tr name='tr_unitcell'>
<td valign="top">
<a name="unitcell_reset" id="k1475"> </a>
<span class=new>unitcell RESET</span></td ></tr>
<tr name='tr_unitcell'>
<td>
<blockquote>
<p >
<i >
<span class=new>Returns the unit cell to its original setting and resets its line width to a thin line. (Note that 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#restore">restore unitcell</a> accomplishes the same without resetting the line width.)</span></i ></p ></blockquote></td></tr> 
<tr name='tr_unitcell'>
<td valign="top">
<a name="unitcell_ticks_x|y|z" id="k1469"> </a>unitcell TICKS X|Y|Z {major,minor,subminor} FORMAT [%0.2f, ...] </td ></tr>
<tr name='tr_unitcell'>
<td>
<blockquote>
<p >
<i >Sets the parameters for ticks along the a, b, and c edges of the unit cell. An optional specific axis (X, Y, or Z) can be indicated. There are three levels of ticks - major, minor, and "subminor." Only the major ticks have labels. Which of these tick levels are displayed and the distance between ticks depends upon the parameter that takes the form of a point. This point may be in fractional form, {1/2 0 0}. The optional keyword FORMAT allows formating of the labels for the major ticks. These are based on an array of strings given after the FORMAT keyword. If the array is shorter than the number of ticks, the formats in the array are repeated. </i ></p ></blockquote></td></tr> 
<tr name='tr_unitcell'>
<td valign="top">
<a name="unitcell_" id="k1470"> </a>
<span class=new>unitcell [ {origin} {a} {b} {c} ]</span></td ></tr>
<tr name='tr_unitcell'>
<td>
<blockquote>
<p >
<i >
<span class=new>An array of four points defines a new unit cell. Note that fractional units may be used, and if they are, then they are defined for the CURRENT unit cell. For example: 
<b> unitcell [{0 0 0} {1/2 0 0}, {0 1/1 0} , {0 0 1/1}]</b> is reversed by unitcell [{0 0 0} {2/1 0 0}, {0 1/1 0}, {0 0 1/1}]. Note that use of "/" in a ALL of these points, indicating fractional coordinates.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_unitcell'>
<td valign="top">
<a name="unitcell_"parent"" id="k1471"> </a>
<span class=new>unitcell "parent"</span></td ></tr>
<tr name='tr_unitcell'>
<td>
<blockquote>
<p >
<i >
<span class=new>Sets the unit cell to be the parent unit cell (MCIF reader only)</span></i ></p ></blockquote></td></tr> 
<tr name='tr_unitcell'>
<td valign="top">
<a name="unitcell_"standard"" id="k1472"> </a>
<span class=new>unitcell "standard"</span></td ></tr>
<tr name='tr_unitcell'>
<td>
<blockquote>
<p >
<i >
<span class=new>Sets the unit cell to be the stanadard unit cell (MCIF reader only)</span></i ></p ></blockquote></td></tr> 
<tr name='tr_unitcell'>
<td valign="top">
<a name="unitcell_"conventional"" id="k1473"> </a>
<span class=new>unitcell "conventional"</span></td ></tr>
<tr name='tr_unitcell'>
<td>
<blockquote>
<p >
<i >
<span class=new>Sets the unit cell to be the conventional (file-based) unit cell (MCIF reader only)</span></i ></p ></blockquote></td></tr> 
<tr name='tr_unitcell'>
<td valign="top">
<a name="unitcell_"abc;offset"" id="k1474"> </a>
<span class=new>unitcell "abc;offset"</span></td ></tr>
<tr name='tr_unitcell'>
<td>
<blockquote>
<p >
<i >
<span class=new>Sets the unit cell to a new setting relative to its current setting. 
<b>abc</b> is an expression such as 
<b>a/2,2b,c</b> that relates the new setting to the current setting. 
<b>offset</b> is an optional fractional offset such as 
<b>0,1/2,0</b> relative to the current unit cell. Adding "!" at the beginning of the description reverses the notation. Thus, 
<b>unitcell "!a,2b,c;0,1/2,0"</b> reverses the effect of 
<b>unitcell "a,2b,c;0,1/2,0"</b>. This command can be used to create completely different unit cells from that given in a file and allowing commands such as 
<b>select cell=555</b> or 
<b>draw unitcell</b> or 
<b>print {Fe1}.fxyz</b> to operate on this new unit cell.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_unitcell'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_unitcell'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_unitcell'>
<td colspan="5">
<p>
<a class="xref" href="#axes">axes</a> 
<a class="xref" href="#boundbox">boundbox</a> 
<a class="xref" href="#measure">measure</a> </p></td></tr>
<tr name='tr_unitcell'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1460">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_unset'>
<td colspan="5">
<h3 >
<a id="unset" name="unset">unset</a>
<a id="k1476"> </a></h3></td></tr>
<tr name='tr_unset'>
<td>
<i >Same as 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#reset">reset</a>; just looks better for variables. Good to use if just a small part of a large array or hashtable has been assigned to another variable and the rest can be discarded.
<br />
<br /></i ></td></tr> 
<tr name='tr_unset'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_unset'>
<td colspan="5">
<p>
<a class="xref" href="#define">define</a> 
<a class="xref" href="#initialize">initialize</a> 
<a class="xref" href="#refresh">refresh</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#restore">restore</a> 
<a class="xref" href="#save">save</a> 
<a class="xref" href="#zap">zap</a> </p></td></tr>
<tr name='tr_unset'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1477">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_var'>
<td colspan="5">
<h3 class=h3new>
<a id="var" name="var">VAR</a>
<a id="k1478"> </a> 
<br />
<span class=new>(v. 14.2)</span></h3>
<div class="chimenote">
<i>Note:</i> The VAR command does not require @{ ... } around Jmol math expressions.
<br />
<br /></div></td></tr>
<tr name='tr_var'>
<td>
<i >The 
<b>var</b> keyword is used with variable definitions to localize them to a specific script file or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#functions">function</a>. Note that 
<b>var</b> variables within 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#for">for</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#while">while</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#try">try</a>, and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#try">catch</a> blocks or any code surrounded by { } except 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#if">if</a> and 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#switch">switch</a> blocks. Starting with 
<span class="newv">Jmol 14.2</span>, as in JavaScript, 
<b>var</b> can be used with multiple variable names: 
<b>var x,y,z</b>. (Jmol does not support defining variables when listed this way as is possible in JavaScript.)
<br />
<br /></i ></td></tr> 
<tr name='tr_var'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_var'>
<td colspan="5">
<p>
<a class="xref" href="#break">break</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#catch">catch</a> 
<a class="xref" href="#continue">continue</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#else">else</a> 
<a class="xref" href="#elseif">elseIf</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#return">return</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#try">try</a> 
<a class="xref" href="#while">while</a> </p></td></tr>
<tr name='tr_var'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1479">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_vector'>
<td colspan="5">
<h3 class=h3new>
<a id="vector" name="vector">vector or vectors</a>
<a id="k1480"> </a> 
<br />
<span class=new>(v. 14.2)</span></h3></td></tr>
<tr name='tr_vector'>
<td>
<i >Draws vectors arising from vibrational mode data. Operates on whichever atoms have been selected. See also 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#coloratomobject">color (atom object)</a>. For msCIF or JANA2006 incommensurately modulated structures (
<span class="newv">Jmol 14.2</span>), turning "vectors on" displays an arrow from the unmodulated position to the modulated position when 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#modulation">modulation</a> is off, and the other direction when modulation is on. 
<br />
<br /></i ></td></tr>
<tr name='tr_vector'>
<td valign="top">
<a name="vector_" id="k1482"> </a>vector ON/OFF{default: ON}</td ></tr>
<tr name='tr_vector'>
<td>
<blockquote>
<p >
<i >Turns vibration vector display on and off</i ></p ></blockquote></td></tr> 
<tr name='tr_vector'>
<td valign="top">
<a name="vector_._diameter_pixels" id="k1484"> </a>vector 
<a class='def' href='#d1483' title='a scaling factor -- (integer, 1 to 19)'>[diameter-pixels]</a></td ></tr>
<tr name='tr_vector'>
<td>
<blockquote>
<p >
<i >Sets the diameter of the vector</i ></p ></blockquote></td></tr> 
<tr name='tr_vector'>
<td valign="top">
<a name="vector_._radius_angstroms" id="k1486"> </a>vector 
<a class='def' href='#d1485' title='a (decimal, &lt;=3.0)'>[radius-in-angstroms]</a></td ></tr>
<tr name='tr_vector'>
<td>
<blockquote>
<p >
<i >Sets the diameter of the vector</i ></p ></blockquote></td></tr> 
<tr name='tr_vector'>
<td valign="top">
<a name="vector_scale" id="k1488"> </a>vector SCALE 
<a class='def' href='#d1487' title='a (decimal, -10.0 to 10.0)'>[vector-scale]</a></td ></tr>
<tr name='tr_vector'>
<td>
<blockquote>
<p >
<i >Adjusts the scale of the vector independently of the vibration motion.</i ></p ></blockquote></td></tr> 
<tr name='tr_vector'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_vector'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_vector'>
<td colspan="5">
<p>
<a class="xref" href="#backbone">backbone</a> 
<a class="xref" href="#background">background</a> 
<a class="xref" href="#cartoon">cartoon</a> 
<a class="xref" href="#dots">dots</a> 
<a class="xref" href="#ellipsoid">ellipsoid</a> 
<a class="xref" href="#geosurface">geoSurface</a> 
<a class="xref" href="#meshribbon">meshribbon</a> 
<a class="xref" href="#ribbon">ribbon</a> 
<a class="xref" href="#rocket">rocket</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlighting">set (lighting)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#strand">strand</a> 
<a class="xref" href="#trace">trace</a> 
<a class="xref" href="#wireframe">wireframe</a> </p></td></tr>
<tr name='tr_vector'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1481">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_vibration'>
<td colspan="5">
<h3 class=h3newer>
<a id="vibration" name="vibration">vibration</a>
<a id="k1489"> </a> 
<br />
<span class=newer>(v. 11.0 adds vibration period command)</span></h3></td></tr>
<tr name='tr_vibration'>
<td>
<i >Provided information is present in the file (xyz format with columns 6-8 indicating dx, dy, and dz, or Gaussian harmonic frequency output), turns on and off display of vibration animation and allows setting of the time period for the vibration (in seconds) and the scale of the motion relative to the default (1). For msCIF or JANA2006 incommensurately modulated structures (
<span class="newv">Jmol 14.2</span>), turning "vibration on" actuates a visualization of the modulations as totally nonrealistic (but still valuable) phased vibrations.
<br />
<br /></i ></td></tr>
<tr name='tr_vibration'>
<td valign="top">
<a name="vibration_" id="k1491"> </a>vibration ON/OFF{default: ON}</td ></tr>
<tr name='tr_vibration'>
<td>
<blockquote>
<p >
<i >Turns vibration on with a 1-second time period or turns vibration off.</i ></p ></blockquote></td></tr> 
<tr name='tr_vibration'>
<td valign="top">
<a name="vibration_._time_period" id="k1493"> </a>vibration 
<a class='def' href='#d1492' title='number of seconds per vibration -- (positive number)'>[time-period]</a></td ></tr>
<tr name='tr_vibration'>
<td>
<blockquote>
<p >
<i >Sets the time period for one full vibration in seconds and turns vibration on. </i ></p ></blockquote></td></tr> 
<tr name='tr_vibration'>
<td valign="top">
<a name="vibration_max" id="k1494"> </a>
<span class=newer>vibration MAX (decimal) [
<b>Jmol 14.4</b>]</span></td ></tr>
<tr name='tr_vibration'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Rescales all vibration vectors to have a maximum value specified.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_vibration'>
<td valign="top">
<a name="vibration_period" id="k1495"> </a>vibration PERIOD 
<a class='def' href='#d1492' title='number of seconds per vibration -- (positive number)'>[time-period]</a></td ></tr>
<tr name='tr_vibration'>
<td>
<blockquote>
<p >
<i >Sets the time period for one full vibration in seconds, but does not turn vibration on</i ></p ></blockquote></td></tr> 
<tr name='tr_vibration'>
<td valign="top">
<a name="vibration_scale" id="k1497"> </a>vibration SCALE 
<a class='def' href='#d1496' title='a (decimal, -10.0 to 10.0)'>[vibration-scale]</a></td ></tr>
<tr name='tr_vibration'>
<td>
<blockquote>
<p >
<i >Sets the scale of the vibration motion independently of the vector length.</i ></p ></blockquote></td></tr> 
<tr name='tr_vibration'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_vibration'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_vibration'>
<td colspan="5">
<p>
<a class="xref" href="#loadproperty">load [property]</a> </p></td></tr>
<tr name='tr_vibration'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1490">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_while'>
<td colspan="5">
<h3 >
<a id="while" name="while">WHILE or </a>
<a id="k1498"> </a></h3></td></tr>
<tr name='tr_while'>
<td>
<i >
<b>while</b>, like 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#if">if</a> evaluates a logical expression, looping until the expression is no longer TRUE:
<br>
<br>while (x > 0 && x 
< 10) {
<br>  print x
<br>  x = x - 2
<br>}
<br>
<br>The looping can be discontinued using either 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#break">break</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#break">continue</a>. Any variables created with the VAR keyword are local to the 
<b>while</b> block.
<br />
<br /></i ></td></tr> 
<tr name='tr_while'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_while'>
<td colspan="5">
<p>
<a class="xref" href="#jmolcommandsyntax">[Jmol Command Syntax]</a> 
<a class="xref" href="#jmolmath">[Jmol Math]</a> 
<a class="xref" href="#jmolparameters">[Jmol Parameters]</a> 
<a class="xref" href="#atomexpressions">[atom expressions]</a> 
<a class="xref" href="#atomproperties">[atom properties]</a> 
<a class="xref" href="#functions">[functions]</a> 
<a class="xref" href="#break">break</a> 
<a class="xref" href="#case">case</a> 
<a class="xref" href="#catch">catch</a> 
<a class="xref" href="#continue">continue</a> 
<a class="xref" href="#default">default</a> 
<a class="xref" href="#echo">echo</a> 
<a class="xref" href="#else">else</a> 
<a class="xref" href="#elseif">elseIf</a> 
<a class="xref" href="#for">for</a> 
<a class="xref" href="#goto">goto</a> 
<a class="xref" href="#if">if</a> 
<a class="xref" href="#message">message</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#return">return</a> 
<a class="xref" href="#set">set</a> 
<a class="xref" href="#switch">switch</a> 
<a class="xref" href="#try">try</a> 
<a class="xref" href="#var">var</a> </p></td></tr>
<tr name='tr_while'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1499">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_wireframe'>
<td colspan="5">
<h3 >
<a id="wireframe" name="wireframe">wireframe</a>
<a id="k1500"> </a></h3></td></tr>
<tr name='tr_wireframe'>
<td>
<i >Wireframe refers to the bonds drawn between the atoms. A boolean value of ON draws the selected bonds as lines. Alternatively, a numeric value may be used to specify the radius of the bonds. A decimal value such as 0.2 or 0.4 specifies Angstroms. The 
<b>wireframe</b> command operates on bonds either BETWEEN ANY TWO atoms in a previously selected atom set (having previously 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setbondstyles">set bondmode AND</a>) or TO ANY atoms in a previously selected atom set (having previously 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#setbondstyles">set bondmode OR</a>). Note that the selected atoms must already be connected (based on information in the file, Jmol's autobonding algorithm, or from use of the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#connect">connect</a> or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#bondorder">bondorder</a> command) in order to show any effect. 
<br />
<br /></i ></td></tr>
<tr name='tr_wireframe'>
<td valign="top">
<a name="wireframe_" id="k1502"> </a>wireframe ON/OFF{default: ON}</td ></tr>
<tr name='tr_wireframe'>
<td>
<blockquote>
<p >
<i >Turn wireframe on or off</i ></p ></blockquote></td></tr> 
<tr name='tr_wireframe'>
<td valign="top">
<a name="wireframe_only" id="k1503"> </a>wireframe ONLY</td ></tr>
<tr name='tr_wireframe'>
<td>
<blockquote>
<p >
<i >Turns wireframe rendering on and all other rendering (including labels) off.</i ></p ></blockquote></td></tr> 
<tr name='tr_wireframe'>
<td valign="top">
<a name="wireframe_._radius_angstroms" id="k1505"> </a>wireframe 
<a class='def' href='#d1504' title='a (decimal, &lt;=3.0)'>[radius-in-angstroms]</a></td ></tr>
<tr name='tr_wireframe'>
<td>
<blockquote>
<p >
<i >Show wireframe with the given cylinder diameter in Angstroms. A negative number also implies 
<b>ONLY</b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_wireframe'>
<td valign="top">
<a name="wireframe_._radius_rasmol" id="k1507"> </a>wireframe 
<a class='def' href='#d1506' title='in 1/250ths of an Angstrom (deprecated) -- (integer, 1 to 749)'>[radius-Rasmol]</a></td ></tr>
<tr name='tr_wireframe'>
<td>
<blockquote>
<p >
<i >Show wireframe with the given cylinder diameter in Rasmol units (deprecated).</i ></p ></blockquote></td></tr> 
<tr name='tr_wireframe'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_wireframe'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_wireframe'>
<td>
<table cellpadding="10">
<tr>
<td class="example">wireframe 0.2
<br />wireframe off</td></tr></table></td></tr>
<tr name='tr_wireframe'>
<td>
<img border="0" src="img/ex.jpg" title="example page" /></a>
<br />   See 
<a target="_blank" href="examples/bonds.htm">bonds.htm</a> </td></tr>
<tr name='tr_wireframe'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_wireframe'>
<td colspan="5">
<p>
<a class="xref" href="#backbone">backbone</a> 
<a class="xref" href="#background">background</a> 
<a class="xref" href="#bondorder">bondorder</a> 
<a class="xref" href="#cartoon">cartoon</a> 
<a class="xref" href="#connect">connect</a> 
<a class="xref" href="#dots">dots</a> 
<a class="xref" href="#ellipsoid">ellipsoid</a> 
<a class="xref" href="#geosurface">geoSurface</a> 
<a class="xref" href="#hbonds">hbonds</a> 
<a class="xref" href="#meshribbon">meshribbon</a> 
<a class="xref" href="#ribbon">ribbon</a> 
<a class="xref" href="#rocket">rocket</a> 
<a class="xref" href="#setbondstyles">set (bond styles)</a> 
<a class="xref" href="#setfilesandscripts">set (files and scripts)</a> 
<a class="xref" href="#sethighlights">set (highlights)</a> 
<a class="xref" href="#setlighting">set (lighting)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#setperspective">set (perspective)</a> 
<a class="xref" href="#setvisibility">set (visibility)</a> 
<a class="xref" href="#slab">slab</a> 
<a class="xref" href="#spacefill">spacefill</a> 
<a class="xref" href="#ssbonds">ssbonds</a> 
<a class="xref" href="#strand">strand</a> 
<a class="xref" href="#trace">trace</a> 
<a class="xref" href="#vector">vector</a> </p></td></tr>
<tr name='tr_wireframe'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1501">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_write'>
<td colspan="5">
<h3 class=h3new>
<a id="write" name="write">write</a>
<a id="k1508"> </a> 
<br />
<span class=new>(v. 13.0 adds fully encapsulated PNG files ("PNGJ" format))</span></h3></td></tr>
<tr name='tr_write'>
<td>
<i >(application or HTML5 or signed Java applet only). Writes information to a file or to the system clipboard (or POSTing to a server using a URL "http://..." for the file name. Options include: an image of the application screen, the script history, the current model state in the form of a script, the current molecular orbital in the form of a JVXL file, or the current isosurface in the form of a JVXL file. If the filename is simple (no spaces) and the type is clearly in the extension as, for example, 
<b>write test.spt</b>, then Jmol will deduce the type from the filename and create the proper file. For the clipboard, simply specify CLIPBOARD instead of a file name. For files created with zip formats (PNGJ, JMOL, ZIP), the command 
<b>show FILE "&lt;filename>"</b> will list the files contained in the ZIP files. The 
<b>write()</b> function can be used to place the output of the write command into a variable or to the console. For example: 
<b>x = write("coord", "MOL")</b> or 
<b>x = write("PNGJ")</b>.
<br />
<br /></i ></td></tr>
<tr name='tr_write'>
<td valign="top">
<a name="write_"filename"" id="k1510"> </a>
<span class=new>write "fileName" AS type</span></td ></tr>
<tr name='tr_write'>
<td>
<blockquote>
<p >
<i >
<span class=new>Starting with 
<span class="newv">Jmol 14.2</span>, you can also specify the type after the filename and the AS keyword: 
<b>write test.png as PNGJ</b>. The AS keyword only allows this simple format -- just a filename and a type. If any more parameters are required, the AS keyword cannot be used. The type may be any of the file types described below.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_write'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_write'>
<td colspan="5">
<p>
<a class="xref" href="#usingtheclipboard">[using the clipboard]</a> </p></td></tr>
<tr name='tr_write'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1509">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_writeexport'>
<td colspan="5">
<h3 >
<a id="writeexport" name="writeexport">write (export)</a>
<a id="k1511"> </a></h3></td></tr>
<tr name='tr_writeexport'>
<td>
<i >Jmol models can be exported to several formats that can be read by external rendering programs. 
<br />
<br /></i ></td></tr>
<tr name='tr_writeexport'>
<td valign="top">
<a name="write__export__idtf" id="k1513"> </a>write IDTF "fileName"</td ></tr>
<tr name='tr_writeexport'>
<td>
<blockquote>
<p >
<i >Exports the current scene as an 
<a class="xref" href="http://u3d.svn.sourceforge.net/viewvc/u3d/trunk/Docs/IntermediateFormat/IDTF%20Format%20Description.pdf" target="_blank">Intermediate File</a> that can be easily converted to a 
<a class="xref" href="http://en.wikipedia.org/wiki/Universal_3D" target="_blank">Universal 3D</a> file for incorporation into 3D-PDF documents. The conversion to U3D is done external to Jmol using the (Windows-only) program 
<a class="xref" href="misc/idtf.zip" target="_blank">misc/idtf.zip</a>. (This is a copy from the Bin/Win32/Release directory found in the zip file downloadable from 
<a class="xref" href="http://sourceforge.net/projects/u3d/" target="_blank">http://sourceforge.net/projects/u3d/</a>; source code for that C++ program is available at this site as well.) Once Jmol has created the IDTF file using, for example, 
<b>write IDTF "myfile.idtf"</b>, simply execute from a Windows command window 
<b>IDTFConverter.exe -input myfile.idtf -output myfile.u3d</b>. The U3D file created will be highly compressed and FAR smaller than that created using other means (such as first creating a VRML file and then converting that to the U3D format). </i ></p ></blockquote></td></tr> 
<tr name='tr_writeexport'>
<td valign="top">
<a name="write__export__maya" id="k1514"> </a>write MAYA "fileName"</td ></tr>
<tr name='tr_writeexport'>
<td>
<blockquote>
<p >
<i >Exports the current scene as a Maya file. (Basic elements such as atoms and bonds only.)</i ></p ></blockquote></td></tr> 
<tr name='tr_writeexport'>
<td valign="top">
<a name="write__export__obj" id="k1515"> </a>write OBJ "fileName"</td ></tr>
<tr name='tr_writeexport'>
<td>
<blockquote>
<p >
<i >Exports the current scene as a WaveFront OBJ file. The file "fileName" is written along with the additional material file, "fileName.mtl".</i ></p ></blockquote></td></tr> 
<tr name='tr_writeexport'>
<td valign="top">
<a name="write__export__povray" id="k1516"> </a>write POVRAY "fileName"</td ></tr>
<tr name='tr_writeexport'>
<td>
<blockquote>
<p >
<i >Exports the current scene as POVRAY. The file "fileName" is written along with the additional file, "fileName.ini". (Typically "fileName" would include the ".pov" extension, so these would be of the form xxx.pov and xxx.pov.ini.) Note that the .pov file will embed the Jmol script, so the model can be loaded back into Jmol using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#script">script "xxx.pov"</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_writeexport'>
<td valign="top">
<a name="write__export__v3000" id="k1517"> </a>write V3000 "fileName"</td ></tr>
<tr name='tr_writeexport'>
<td>
<blockquote>
<p >
<i >Creates a 
<a class="xref" href="http://www.symyx.com/downloads/public/ctfile/ctfile.pdf" target="_blank">V3000</a> file.</i ></p ></blockquote></td></tr> 
<tr name='tr_writeexport'>
<td valign="top">
<a name="write__export__vrml" id="k1518"> </a>write VRML "fileName"</td ></tr>
<tr name='tr_writeexport'>
<td>
<blockquote>
<p >
<i >Exports the current scene as VRML.</i ></p ></blockquote></td></tr> 
<tr name='tr_writeexport'>
<td valign="top">
<a name="write__export__x3d" id="k1519"> </a>write X3D "fileName"</td ></tr>
<tr name='tr_writeexport'>
<td>
<blockquote>
<p >
<i >Exports the current scene as X3D.</i ></p ></blockquote></td></tr> 
<tr name='tr_writeexport'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1512">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_writeimagesandframes'>
<td colspan="5">
<h3 class=h3newer>
<a id="writeimagesandframes" name="writeimagesandframes">write (images and frames)</a>
<a id="k1520"> </a></h3></td></tr>
<tr name='tr_writeimagesandframes'>
<td>
<i >Jmol can write a 2D image of the model and, for JPG and PNG format, can append its state so that a single file can be read either as an image or as a Jmol state. In addition, You can write sequences of frames as a set of JPG files that can then be incorporated by other programs into movie files. Image quality is determined by 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_antialiasimages">set antialiasImages</a>, which is distinct from 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_antialiasdisplay">set antialiasDisplay</a>. 
<br />
<br /></i ></td></tr>
<tr name='tr_writeimagesandframes'>
<td valign="top">
<a name="write__images_and_frames__frames" id="k1522"> </a>write FRAMES atom_expression width height "fileName.jpg"</td ></tr>
<tr name='tr_writeimagesandframes'>
<td>
<blockquote>
<p >
<i >Allows making of Jmol movies, creating a set of JPG files filename0001.jpg, filename0002.jpg, etc. for all frames in the atom expression. These files can then be combined using an external program of user's choice to create a movie from a sequence of JPEG images. Width and height are optional, as is the atom expression.</i ></p ></blockquote></td></tr>
<tr name='tr_writeimagesandframes'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_writeimagesandframes'>
<td>
<table cellpadding="10">
<tr>
<td class="example">write frames {*} "all.jpg"
<br /> write frames {1.0} "allModelsInFirstFile.jpg"
<br />write frames {1.0,2.0} "firstTwoFiles.jpg" 
<br /> write frames {1.0} 200 200 "smallFile.jpg"</td></tr></table></td></tr> 
<tr name='tr_writeimagesandframes'>
<td valign="top">
<a name="write__images_and_frames__vibration" id="k1523"> </a>write VIBRATION n "fileName"</td ></tr>
<tr name='tr_writeimagesandframes'>
<td>
<blockquote>
<p >
<i >Creates a sequence of JPG file frames that can be combined with movie-making software into a movie. The number of vibration cycles, n, determines the number of frames (individual JPG files) that will be created (20 * n).</i ></p ></blockquote></td></tr>
<tr name='tr_writeimagesandframes'>
<td>
<br />
<i class="example">Examples:</i> </td></tr>
<tr name='tr_writeimagesandframes'>
<td>
<table cellpadding="10">
<tr>
<td class="example">write frames {*} "all.jpg"
<br /> write frames {1.0} "allModelsInFirstFile.jpg"
<br />write frames {1.0,2.0} "firstTwoFiles.jpg" 
<br /> write frames {1.0} 200 200 "smallFile.jpg"</td></tr></table></td></tr> 
<tr name='tr_writeimagesandframes'>
<td valign="top">
<a name="write__images_and_frames__image_width_height" id="k1524"> </a>write IMAGE width height GIF "fileName"</td ></tr>
<tr name='tr_writeimagesandframes'>
<td>
<blockquote>
<p >
<i >Creates a "snapshot" image of the current display and saves it to disk as a GIF image. 
<b>width</b> and 
<b>height</b> are optional and default to the current frame size. Note that when many colors are present, Jmol may not produce satisfactory GIF images.</i ></p ></blockquote></td></tr> 
<tr name='tr_writeimagesandframes'>
<td valign="top">
<a name="write__images_and_frames__image_width_height" id="k1525"> </a>
<span class=newer>write IMAGE width height GIFT "fileName" [
<b>Jmol 14.3.8</b>]</span></td ></tr>
<tr name='tr_writeimagesandframes'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Creates a "snapshot" image of the current display and saves it to disk as a transparent-background GIF image. 
<b>width</b> and 
<b>height</b> are optional and default to the current frame size. </span></i ></p ></blockquote></td></tr> 
<tr name='tr_writeimagesandframes'>
<td valign="top">
<a name="write__images_and_frames__image_width_height" id="k1526"> </a>write IMAGE width height JPG n "fileName"</td ></tr>
<tr name='tr_writeimagesandframes'>
<td>
<blockquote>
<p >
<i >Creates a "snapshot" image of the current display and saves it to disk as a JPG image. 
<b>width</b> and 
<b>height</b> are optional and default to the current frame size. The optional integer n is a quality from 1 to 100 (default 100; or 75 prior to Jmol 13.1.15). If 
<b>set imageState</b> is TRUE (the default setting), then Jmol inserts into the JPG file its state, allowing a single image file to be used both for viewing as a 2D image and reading as a 3D Jmol state using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#script">script</a> command or by dragging and dropping in the Jmol application.</i ></p ></blockquote></td></tr> 
<tr name='tr_writeimagesandframes'>
<td valign="top">
<a name="write__images_and_frames__image_width_height" id="k1527"> </a>write IMAGE width height JPG64 n "fileName"</td ></tr>
<tr name='tr_writeimagesandframes'>
<td>
<blockquote>
<p >
<i >Creates a "snapshot" image of the current display and saves it to disk as a JPG or base-64-encoded JPG image. 
<b>width</b> and 
<b>height</b> are optional and default to the current frame size. The optional integer n is a quality from 1 to 100 (default 75).</i ></p ></blockquote></td></tr> 
<tr name='tr_writeimagesandframes'>
<td valign="top">
<a name="write__images_and_frames__image_width_height" id="k1528"> </a>write IMAGE width height PDF n "fileName"</td ></tr>
<tr name='tr_writeimagesandframes'>
<td>
<blockquote>
<p >
<i >Creates a "snapshot" image of the current display embedded in a PDF file and saves it to disk. 
<b>width</b> and 
<b>height</b> are optional and default to the current frame size. The optional parameter 
<b>n</b> specifies portrait (1, default) or landscape (2) mode. </i ></p ></blockquote></td></tr> 
<tr name='tr_writeimagesandframes'>
<td valign="top">
<a name="write__images_and_frames__image_width_height" id="k1529"> </a>write IMAGE width height PNG n "fileName"</td ></tr>
<tr name='tr_writeimagesandframes'>
<td>
<blockquote>
<p >
<i >Creates a "snapshot" image of the current display in PNG format and saves it to disk. 
<b>width</b> and 
<b>height</b> are optional and default to the current frame size. The amount of compression, 
<b>n</b>, is a number between 0 and 10 (default 2). If 
<b>set imageState</b> is TRUE (the default setting), then Jmol appends to the PNG file its state, allowing a single image file to be used both for viewing as a 2D image and reading as a 3D Jmol state using the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#script">script</a> command or by dragging and dropping in the Jmol application. For this drag/drop operation to be successful, any local files necessary (model, or isosurface, for example) must be in the directory containing the PNG file, and any remote files must still be accessible via a web connection. See also the PNGJ format, below.</i ></p ></blockquote></td></tr> 
<tr name='tr_writeimagesandframes'>
<td valign="top">
<a name="write__images_and_frames__image_width_height" id="k1530"> </a>write IMAGE width height PNGJ n "fileName"</td ></tr>
<tr name='tr_writeimagesandframes'>
<td>
<blockquote>
<p >
<i >Creates a "snapshot" image of the current display in PNG format, appending to that file the full state and all necessary files (models, isosurfaces, etc.) required to reproduce it in the form of JMOL zip data format. 
<b>width</b> and 
<b>height</b> are optional and default to the current frame size. (Jmol 12.3.7)</i ></p ></blockquote></td></tr> 
<tr name='tr_writeimagesandframes'>
<td valign="top">
<a name="write__images_and_frames__image_width_height" id="k1531"> </a>write IMAGE width height PNGT n "fileName"</td ></tr>
<tr name='tr_writeimagesandframes'>
<td>
<blockquote>
<p >
<i >Creates a "snapshot" image of the current display in PNG format, setting the background to be transparent. It is recommended using an unusual background color, such as [x101010], to ensure only the background is made transparent. Also, 
<b>set antialiasImages FALSE</b> is recommended to avoid ragged edges around the image. 
<b>width</b> and 
<b>height</b> are optional and default to the current frame size. The amount of compression, 
<b>n</b> is a number between 0 and 10 (default 2). </i ></p ></blockquote></td></tr> 
<tr name='tr_writeimagesandframes'>
<td valign="top">
<a name="write__images_and_frames__image_width_height" id="k1532"> </a>write IMAGE width height PPM "fileName"</td ></tr>
<tr name='tr_writeimagesandframes'>
<td>
<blockquote>
<p >
<i >Creates a "snapshot" image of the current display in 
<a class="xref" href="http://netpbm.sourceforge.net/doc/ppm.html" target="_blank">PPM</a> format and saves it to disk. 
<b>width</b> and 
<b>height</b> are optional and default to the current frame size. </i ></p ></blockquote></td></tr> 
<tr name='tr_writeimagesandframes'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_writeimagesandframes'>
<td colspan="5">
<p>
<a class="xref" href="#animation">animation</a> 
<a class="xref" href="#capture">capture</a> 
<a class="xref" href="#setmisc">set (misc)</a> </p></td></tr>
<tr name='tr_writeimagesandframes'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1521">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_writeinfo'>
<td colspan="5">
<h3 class=h3newer>
<a id="writeinfo" name="writeinfo">write (info)</a>
<a id="k1533"> </a> 
<br />
<span class=newer>(v. 11.0)</span></h3></td></tr>
<tr name='tr_writeinfo'>
<td>
<i >The Jmol history, menu, currently defined functions, and variables may all be written to files. In addition, specific properities, quaternion analysis, and ramachandran information can also be saved in PDB format.
<br />
<br /></i ></td></tr>
<tr name='tr_writeinfo'>
<td valign="top">
<a name="write__info__functions" id="k1535"> </a>write FUNCTIONS "fileName"</td ></tr>
<tr name='tr_writeinfo'>
<td>
<blockquote>
<p >
<i >Writes all user-defined functions to a file. </i ></p ></blockquote></td></tr> 
<tr name='tr_writeinfo'>
<td valign="top">
<a name="write__info__history" id="k1536"> </a>write HISTORY "fileName"</td ></tr>
<tr name='tr_writeinfo'>
<td>
<blockquote>
<p >
<i >Saves the script command 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#history">history</a> to a file.</i ></p ></blockquote></td></tr> 
<tr name='tr_writeinfo'>
<td valign="top">
<a name="write__info__inline" id="k1543"> </a>write INLINE "data" "fileName"</td ></tr>
<tr name='tr_writeinfo'>
<td>
<blockquote>
<p >
<i >Writes the specified data directly to a file.</i ></p ></blockquote></td></tr> 
<tr name='tr_writeinfo'>
<td valign="top">
<a name="write__info__jmol" id="k1537"> </a>write JMOL "fileName"</td ></tr>
<tr name='tr_writeinfo'>
<td>
<blockquote>
<p >
<i >Same as ZIPALL (see below). See also 
<b>write PNGJ</b>, above.</i ></p ></blockquote></td></tr> 
<tr name='tr_writeinfo'>
<td valign="top">
<a name="write__info__menu" id="k1538"> </a>write MENU "fileName"</td ></tr>
<tr name='tr_writeinfo'>
<td>
<blockquote>
<p >
<i >Saves the current Jmol popup menu as a file. See 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#loadmenu">load MENU</a>.</i ></p ></blockquote></td></tr> 
<tr name='tr_writeinfo'>
<td valign="top">
<a name="write__info__quaternion" id="k1539"> </a>write QUATERNION . . . "fileName"</td ></tr>
<tr name='tr_writeinfo'>
<td>
<blockquote>
<p >
<i >Writes a file that is of PDB format and contains the quaternion representation of the rotational frame of individual amino acid residues in a protein or base pairs in a nucleic acid. See the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#plot">plot QUATERNION</a> command for parameter options.</i ></p ></blockquote></td></tr> 
<tr name='tr_writeinfo'>
<td valign="top">
<a name="write__info__properties" id="k1540"> </a>write PROPERTIES . . . "fileName"</td ></tr>
<tr name='tr_writeinfo'>
<td>
<blockquote>
<p >
<i >Writes a file that is of PDB format and contains the specified parameters in the X, Y, and Z fields, possibly scaled, with the scaling indicated in a REMARK record. See the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#plot">plot PROPERTIES</a> command for parameter options.</i ></p ></blockquote></td></tr> 
<tr name='tr_writeinfo'>
<td valign="top">
<a name="write__info__properties__list__format__%s_%i_._._._" id="k1541"> </a>
<span class=newer>write PROPERTIES (list) FORMAT %s %i . . . "fileName" [
<b>Jmol 14.4</b>]</span></td ></tr>
<tr name='tr_writeinfo'>
<td>
<blockquote>
<p >
<i >
<span class=newer>Writes a file with the format you specify. For example: 
<b>write properties x y z format "%s %i %f %f %f" "t.dat"</b>. The fields %s and %i refer to (optional) atom name and index, respectively.</span></i ></p ></blockquote></td></tr> 
<tr name='tr_writeinfo'>
<td valign="top">
<a name="write__info__ramachandran" id="k1542"> </a>write RAMACHANDRAN . . . "fileName"</td ></tr>
<tr name='tr_writeinfo'>
<td>
<blockquote>
<p >
<i >Creates a file in PDB format for the alpha carbons of a peptide, where the x, y, and z axis values are actually the PHI, PSI, and OMEGA values for each amino acid. An additional optional keyword DRAW writes a script file that would draw PHI and PSI angles on the structure. See the 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#plot">plot RAMACHANDRAN</a> command for parameter options.</i ></p ></blockquote></td></tr> 
<tr name='tr_writeinfo'>
<td valign="top">
<a name="write__info__var" id="k1544"> </a>write VAR [variable name] "fileName"</td ></tr>
<tr name='tr_writeinfo'>
<td>
<blockquote>
<p >
<i >Saves the value of a variable to a file. If x is a binary associative array containing the key "_IMAGE_", then a PNGJ file is created. If x is a binary associative array NOT containing this key, then a ZIP file is created. (
<span class="newv">Jmol 14.2</span>)</i ></p ></blockquote></td></tr> 
<tr name='tr_writeinfo'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1534">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_writemodel'>
<td colspan="5">
<h3 class=h3new>
<a id="writemodel" name="writemodel">write (model)</a>
<a id="k1545"> </a> 
<br />
<span class=new>(v. 11.2)</span></h3></td></tr>
<tr name='tr_writemodel'>
<td>
<i >There are several options for writing model data to a file or saving the state of Jmol so that a model can be reloaded. 
<br />
<br /></i ></td></tr>
<tr name='tr_writemodel'>
<td valign="top">
<a name="write__model___json|mol|mol0|pdb|sdf|v2000|v3000_|_xyz|xyzrn|xyzvib" id="k1547"> </a>write JSON|MOL|MOL0|PDB|SDF|V2000|V3000 | XYZ|XYZRN|XYZVIB "fileName"</td ></tr>
<tr name='tr_writemodel'>
<td>
<blockquote>
<p >
<i >Writes molecular data to a file either determined by keyword (JSON, XYZ, XYZRN, XYZVIB, MOL, MOL67, PDB, SDF, SPT, V2000, V3000) or file extenion. The SDF option creates a multi-model 
<a class="xref" href="http://www.symyx.com/downloads/public/ctfile/ctfile.pdf" target="_blank">SDfile</a>. MOL67 creates MOL files that utilizes the "aromatic single/double" bond types 6 and 7 (Jmol 14.4.3). XYZRN creates files that include van der Waals radius and name, for input to the 
<a class="xref" href="http://www.scripps.edu/˜sanner/html/msms_home.html" target="_blank">MSMS</a> program. XYZVIB creates a multi-model XYZ file with vibrational vectors added for all atoms having defined vibration vectors. the type keyword may be omitted if the filename has an letter extension matching one of these types. Only the currently selected atoms are saved.</i ></p ></blockquote></td></tr> 
<tr name='tr_writemodel'>
<td valign="top">
<a name="write__model__coords" id="k1549"> </a>write COORDS "fileName"</td ></tr>
<tr name='tr_writemodel'>
<td>
<blockquote>
<p >
<i >Writes a file including only the previously selected atoms, modifying the coordinates to the current view if the file type is one of: CD, JSON, MOL, SDF, V2000, or V3000. Starting with 
<span class="newv">Jmol 14.2</span>, if the filename is omitted then the coordinates in XYZ format are displayed in the console.</i ></p ></blockquote></td></tr> 
<tr name='tr_writemodel'>
<td valign="top">
<a name="write__model__coords" id="k1548"> </a>write COORDS SPT "fileName"</td ></tr>
<tr name='tr_writemodel'>
<td>
<blockquote>
<p >
<i >Writes a script file explicitly containing the coordinates of the previously selected atoms, whether or not they have been altered using 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#invertselected">invertSelected</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#rotateselected">rotateSelected</a>, or 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#translateselected">translateSelected</a>. The SPT keyword is optional if the file ends with the extension 
<b>.spt
<b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_writemodel'>
<td valign="top">
<a name="write__model__file" id="k1550"> </a>write FILE "fileName"</td ></tr>
<tr name='tr_writemodel'>
<td>
<blockquote>
<p >
<i >Writes the most recent file loaded to the indicated filename. If the model was loaded using a manifest from a ZIP file, then the entire ZIP file is written.</i ></p ></blockquote></td></tr> 
<tr name='tr_writemodel'>
<td valign="top">
<a name="write__model__jmol" id="k1551"> </a>write JMOL "fileName"</td ></tr>
<tr name='tr_writemodel'>
<td>
<blockquote>
<p >
<i >Same as ZIPALL (see below). See also 
<b>write PNGJ</b>, above. The JMOL keyword is optional if the file ends with the extension 
<b>.jmol
<b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_writemodel'>
<td valign="top">
<a name="write__model__state" id="k1552"> </a>write STATE "fileName"</td ></tr>
<tr name='tr_writemodel'>
<td>
<blockquote>
<p >
<i >Saves the current state to a script file. The STATE keyword is optional if the file ends with the extension 
<b>.spt</b>. When a state is loaded, the 
<b>stateVersion</b> variable is set. This variable can be checked to see what version of Jmol was used to create the state:
<br>
<br>
<b>write "t3.spt";script "t3.spt";print stateVersion</b>
<br>
<br> 1403015 # indicating Jmol 14.3.15 
<br>
<br></i ></p ></blockquote></td></tr> 
<tr name='tr_writemodel'>
<td valign="top">
<a name="write__model__state" id="k1553"> </a>write STATE LOCALPATH "path" "fileName"</td ></tr>
<tr name='tr_writemodel'>
<td>
<blockquote>
<p >
<i >Saves the current state to a script file, stripping all local file references to the indicated relative path. </i ></p ></blockquote></td></tr> 
<tr name='tr_writemodel'>
<td valign="top">
<a name="write__model__state" id="k1554"> </a>write STATE REMOTEPATH "path" "fileName"</td ></tr>
<tr name='tr_writemodel'>
<td>
<blockquote>
<p >
<i >Saves the current state to a script file, stripping all remote file references to the indicated relative path. </i ></p ></blockquote></td></tr> 
<tr name='tr_writemodel'>
<td valign="top">
<a name="write__model__zip" id="k1555"> </a>write ZIP "fileName"</td ></tr>
<tr name='tr_writemodel'>
<td>
<blockquote>
<p >
<i >Saves the current state and all necessary LOCAL files to a ZIP file with the given name. The ZIP keyword is optional if the file ends with the extension 
<b>.zip
<b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_writemodel'>
<td valign="top">
<a name="write__model__zipall" id="k1556"> </a>write ZIPALL "fileName"</td ></tr>
<tr name='tr_writemodel'>
<td>
<blockquote>
<p >
<i >Saves the current state and all necessary files -- local or remote -- to a ZIP file with the given name. The ZIPALL keyword is optional if the file ends with the extension 
<b>.jmol
<b>.</i ></p ></blockquote></td></tr> 
<tr name='tr_writemodel'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1546">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_writeobject'>
<td colspan="5">
<h3 >
<a id="writeobject" name="writeobject">write (object)</a>
<a id="k1557"> </a></h3></td></tr>
<tr name='tr_writeobject'>
<td>
<i >Several Jmol objects can be saved independently.
<br />
<br /></i ></td></tr>
<tr name='tr_writeobject'>
<td valign="top">
<a name="write__object__isosurface" id="k1559"> </a>write ISOSURFACE "fileName"</td ></tr>
<tr name='tr_writeobject'>
<td>
<blockquote>
<p >
<i >Saves the current isosurface in the form of a JVXL file.</i ></p ></blockquote></td></tr> 
<tr name='tr_writeobject'>
<td valign="top">
<a name="write__object__mesh" id="k1560"> </a>write MESH "fileName"</td ></tr>
<tr name='tr_writeobject'>
<td>
<blockquote>
<p >
<i >Generates a relatively compact JVXL XML "vertex-only" mesh surface file from an isosurface. A typical command, after creation of an isosurface, would be 
<b>write MESH t.jvxl</b>. Note that standard JVXL files are considerably smaller, however.</i ></p ></blockquote></td></tr> 
<tr name='tr_writeobject'>
<td valign="top">
<a name="write__object__mo" id="k1561"> </a>write MO "fileName"</td ></tr>
<tr name='tr_writeobject'>
<td>
<blockquote>
<p >
<i >Saves the current molecular orbital in the form of a JVXL file.</i ></p ></blockquote></td></tr> 
<tr name='tr_writeobject'>
<td valign="top">
<a name="write__object__pointgroup" id="k1562"> </a>write POINTGROUP "fileName"</td ></tr>
<tr name='tr_writeobject'>
<td>
<blockquote>
<p >
<i >Writes a tabular summary of the point group for a symmetrical or nearly symmetrical molecule. </i ></p ></blockquote></td></tr> 
<tr name='tr_writeobject'>
<td valign="top">
<a name="write__object__pointgroup" id="k1563"> </a>write POINTGROUP DRAW "fileName"</td ></tr>
<tr name='tr_writeobject'>
<td>
<blockquote>
<p >
<i >Creates a script file containing DRAW commands that will draw the planes and axes of symmetry for a molecule. </i ></p ></blockquote></td></tr> 
<tr name='tr_writeobject'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_writeobject'>
<td colspan="5">
<p>
<a class="xref" href="#draw">draw</a> 
<a class="xref" href="#setmisc">set (misc)</a> 
<a class="xref" href="#show">show</a> </p></td></tr>
<tr name='tr_writeobject'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1558">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_zap'>
<td colspan="5">
<h3 >
<a id="zap" name="zap">zap</a>
<a id="k1564"> </a></h3>
<div class="chimenote">
<i>Note:</i> The zap command does not require { ... } around Jmol atom expressions.
<br />
<br /></div></td></tr>
<tr name='tr_zap'>
<td>
<i >Clears the currently loaded molecule. After 
<b>zap</b> or before any model is loaded, all of the following commands are active and may be used to create nonmolecular visualizations: 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#axes">axes</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#background">background</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#boundbox">boundbox</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#center">center</a>*, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#centerat">centerAt</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#dipole">dipole</a>*, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#draw">draw</a>*, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#echo">echo</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#font">font</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#frank">frank</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#isosurface">isosurface</a>*, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#move">move</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#moveto">moveto</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#pmesh">pmesh</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#restore">restore</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#rotate">rotate</a>*, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#save">save</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#slab">slab</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#spin">spin</a>*, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#stereo">stereo</a>, 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#translate">translate</a>, and related 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set">set</a> commands. 
<br>
<br>* indicates only aspects not requiring selection of atoms for these commands. The ZAP command can be used to delete selected models.
<br />
<br /></i ></td></tr>
<tr name='tr_zap'>
<td valign="top">
<a name="zap_" id="k1566"> </a>zap</td ></tr>
<tr name='tr_zap'>
<td>
<blockquote>
<p >
<i >Clears all loaded models.</i ></p ></blockquote></td></tr> 
<tr name='tr_zap'>
<td valign="top">
<a name="zap__atom_expression_" id="k1567"> </a>zap (atom expression)</td ></tr>
<tr name='tr_zap'>
<td>
<blockquote>
<p >
<i >Clears all models that include any of the selected atoms. Examples include: 
<b>zap file=1</b>, 
<b>zap model=1.1</b>, 
<b>zap atomno=1</b>, 
<b>zap not visible</b></i ></p ></blockquote></td></tr> 
<tr name='tr_zap'>
<td valign="top">
<a name="zap_" id="k1564"> </a>zap</td ></tr> 
<tr name='tr_zap'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_zap'>
<td colspan="5">
<p>
<a class="xref" href="#jmol/jspecview/magresview">[Jmol/JSpecView/MagresView]</a> 
<a class="xref" href="#cache">cache</a> 
<a class="xref" href="#define">define</a> 
<a class="xref" href="#initialize">initialize</a> 
<a class="xref" href="#load">load</a> 
<a class="xref" href="#refresh">refresh</a> 
<a class="xref" href="#reset">reset</a> 
<a class="xref" href="#restore">restore</a> 
<a class="xref" href="#save">save</a> 
<a class="xref" href="#setfilesandscripts">set (files and scripts)</a> 
<a class="xref" href="#unset">unset</a> </p></td></tr>
<tr name='tr_zap'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1565">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_zoom'>
<td colspan="5">
<h3 >
<a id="zoom" name="zoom">zoom</a>
<a id="k1568"> </a></h3></td></tr>
<tr name='tr_zoom'>
<td>
<i > Allows enlarging or shrinking of the displayed model, as though the "camera" were moving toward or away from the model. A percentage value specifies the zoom relative to 100, the default value, which in Jmol is calculated so that all atoms are completely visible on the screen (when 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_zoomlarge">set zoomLarge</a> is set FALSE), or visible in the largest dimension (when 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#set_zoomlarge">set zoomLarge</a> is set TRUE, its default setting), through all rotations using the default vanderWaals rendering percentage. The command "zoom OFF" disables mouse-based zooming and zooms to 100. The command "zoom ON" re-enables zooming at the current zoom setting. If the zoom has been turned off, setting the zoom using, for example, "zoom 50," though it sets the "current zoom setting," has no effect until the next "zoom ON" command is given. If an atom expression or isosurface ID is given, then zoom also sets the center of that object as the rotation center, and if windowCentered is true (the default), that point is moved the center of the screen. 
<br />
<br /></i ></td></tr>
<tr name='tr_zoom'>
<td valign="top">
<a name="zoom_in" id="k1572"> </a>zoom IN</td ></tr>
<tr name='tr_zoom'>
<td>
<blockquote>
<p >
<i >Zooms IN by a factor of 2 over the course of 1 second.</i ></p ></blockquote></td></tr> 
<tr name='tr_zoom'>
<td valign="top">
<a name="zoom_out" id="k1573"> </a>zoom OUT</td ></tr>
<tr name='tr_zoom'>
<td>
<blockquote>
<p >
<i >Zooms OUT by a factor of 2 over the course of 1 second.</i ></p ></blockquote></td></tr> 
<tr name='tr_zoom'>
<td valign="top">
<a name="zoom_" id="k1570"> </a>zoom ON/OFF{default: ON}</td ></tr> 
<tr name='tr_zoom'>
<td valign="top">
<a name="zoom_._percent_zoom" id="k1575"> </a>zoom 
<a class='def' href='#d1574' title='an (integer, 5 to 200000)'>[percent-zoom]</a></td ></tr>
<tr name='tr_zoom'>
<td>
<blockquote>
<p >
<i >Zooms to the specified percent zoom</i ></p ></blockquote></td></tr> 
<tr name='tr_zoom'>
<td valign="top">
<a name="zoom_0" id="k1571"> </a>zoom 0</td ></tr>
<tr name='tr_zoom'>
<td>
<blockquote>
<p >
<i >Zooms to the setting that fills the screen with the currently displayed atoms.</i ></p ></blockquote></td></tr> 
<tr name='tr_zoom'>
<td valign="top">
<a name="zoom_percent_zoom_or_0" id="k1576"> </a>zoom optional {atom expression} or {x y z} or $xxx percent zoom or 0</td ></tr>
<tr name='tr_zoom'>
<td>
<blockquote>
<p >
<i >Sets a new zoom setting and optionally also designates the specified reference atom expression or coordinate or isosurface as the rotation center. If a reference atom set or isosurface is given, the value is relative to that group of atoms or isosurface.</i ></p ></blockquote></td></tr> 
<tr name='tr_zoom'>
<td valign="top">
<a name="zoom__+_or_-_delta" id="k1577"> </a>zoom optional {atom expression} or {x y z} or $xxx + or - delta</td ></tr>
<tr name='tr_zoom'>
<td>
<blockquote>
<p >
<i >Adds or subtracts an absolute amount from the current zoom setting and optionally sets the rotation center.</i ></p ></blockquote></td></tr> 
<tr name='tr_zoom'>
<td valign="top">
<a name="zoom__*_or_/_factor" id="k1578"> </a>zoom optional {atom expression} or {x y z} or $xxx * or / factor</td ></tr>
<tr name='tr_zoom'>
<td>
<blockquote>
<p >
<i >Multiplies or divides the current zoom setting by the indicated factor and optionally sets the rotation center.</i ></p ></blockquote></td></tr> 
<tr name='tr_zoom'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_zoom'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_zoom'>
<td colspan="5">
<p>
<a class="xref" href="#animation">animation</a> 
<a class="xref" href="#file">file</a> 
<a class="xref" href="#frame">frame</a> 
<a class="xref" href="#invertselected">invertSelected</a> 
<a class="xref" href="#move">move</a> 
<a class="xref" href="#moveto">moveto</a> 
<a class="xref" href="#rotateselected">rotateSelected</a> 
<a class="xref" href="#setmisc">set (misc)</a> 
<a class="xref" href="#spin">spin</a> 
<a class="xref" href="#translate">translate</a> 
<a class="xref" href="#translateselected">translateSelected</a> 
<a class="xref" href="#zoomto">zoomto</a> </p></td></tr>
<tr name='tr_zoom'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1569">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr>
<tr name='tr_zoomto'>
<td colspan="5">
<h3 >
<a id="zoomto" name="zoomto">zoomto</a>
<a id="k1579"> </a></h3></td></tr>
<tr name='tr_zoomto'>
<td>
<i >Carries out a smooth transition to the specified zoom setting. Indicating a new rotation center is optional. All capabilities of 
<a class="xref" href="http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#zoom">zoom</a> are supported. Jmol includes centering on isosurfaces using $xxx.
<br />
<br /></i ></td></tr>
<tr name='tr_zoomto'>
<td valign="top">
<a name="zoomto_" id="k1581"> </a>zoomto</td ></tr>
<tr name='tr_zoomto'>
<td>
<blockquote>
<p >
<i >By itself, 
<b>zoomTo</b> smoothly zooms IN by a factor of 2 over the course of 1 second.</i ></p ></blockquote></td></tr> 
<tr name='tr_zoomto'>
<td valign="top">
<a name="zoomto_in" id="k1582"> </a>zoomto IN</td ></tr>
<tr name='tr_zoomto'>
<td>
<blockquote>
<p >
<i >Smoothly zooms IN by a factor of 2 over the course of 1 second.</i ></p ></blockquote></td></tr> 
<tr name='tr_zoomto'>
<td valign="top">
<a name="zoomto_out" id="k1583"> </a>zoomto OUT</td ></tr>
<tr name='tr_zoomto'>
<td>
<blockquote>
<p >
<i >Smoothly zooms OUT by a factor of 2 over the course of 1 second.</i ></p ></blockquote></td></tr> 
<tr name='tr_zoomto'>
<td valign="top">
<a name="zoomto_._floattime" id="k1585"> </a>zoomto 
<a class='def' href='#d1584' title='in (seconds)'>[time-in-seconds]</a> {atom expression} or {x y z} or $xxx</td ></tr>
<tr name='tr_zoomto'>
<td>
<blockquote>
<p >
<i >Smoothly moves the specified atom or coordinate to the center of the window if windowCentered or designates it as the center of rotation if not windowCentered. xTrans and yTrans parameters specify percent translation within the window along X and Y, respectively . All parameters are options. The default time is 1 second; indicating no center position results in simple, smooth zooming.</i ></p ></blockquote></td></tr> 
<tr name='tr_zoomto'>
<td valign="top">
<a name="zoomto_._floattime" id="k1587"> </a>zoomto 
<a class='def' href='#d1584' title='in (seconds)'>[time-in-seconds]</a> {atom expression} or {x y z} or $xxx 
<a class='def' href='#d1586' title='an (integer, 5 to 200000)'>[percent-zoom]</a> xTrans yTrans</td ></tr>
<tr name='tr_zoomto'>
<td>
<blockquote>
<p >
<i >Smoothly transitions to the indicated zoom setting over the course of the specified number of seconds. Optional xTrans and yTrans parameters specify percent translation within the window along X and Y, respectively </i ></p ></blockquote></td></tr> 
<tr name='tr_zoomto'>
<td valign="top">
<a name="zoomto_._floattime" id="k1588"> </a>zoomto 
<a class='def' href='#d1584' title='in (seconds)'>[time-in-seconds]</a> {atom expression} or {x y z} or $xxx + or - delta xTrans yTrans</td ></tr>
<tr name='tr_zoomto'>
<td>
<blockquote>
<p >
<i >Adds or subtracts an absolute amount from the current zoom setting over the course of the specified number of seconds. Optional xTrans and yTrans parameters specify percent translation within the window along X and Y, respectively </i ></p ></blockquote></td></tr> 
<tr name='tr_zoomto'>
<td valign="top">
<a name="zoomto_._floattime" id="k1589"> </a>zoomto 
<a class='def' href='#d1584' title='in (seconds)'>[time-in-seconds]</a> {atom expression} or {x y z} or $xxx * or / factor xTrans yTrans</td ></tr>
<tr name='tr_zoomto'>
<td>
<blockquote>
<p >
<i >Multiplies or divides the current zoom setting by the indicated factor over the course of the specified number of seconds. Optional xTrans and yTrans parameters specify percent translation within the window along X and Y, respectively </i ></p ></blockquote></td></tr> 
<tr name='tr_zoomto'>
<td valign="top">
<a name="zoomto_._floattime" id="k1590"> </a>zoomto 
<a class='def' href='#d1584' title='in (seconds)'>[time-in-seconds]</a> {atom expression} or {x y z} or $xxx 0 xTrans yTrans</td ></tr>
<tr name='tr_zoomto'>
<td>
<blockquote>
<p >
<i >Zooms to the setting that fills the screen with the designated atoms. (Requires 
<b>set perspectiveModel 11</b> for proper operation.) Can include modifiers +n, -n, *n, /n after the 0. Optional xTrans and yTrans parameters specify percent translation within the window along X and Y, respectively </i ></p ></blockquote></td></tr> 
<tr name='tr_zoomto'>
<td>
<p>
<br />
<table ></table ></td></tr>
<tr name='tr_zoomto'>
<td>
<p>
<br />
<i>See also:</i></p></td></tr>
<tr name='tr_zoomto'>
<td colspan="5">
<p>
<a class="xref" href="#animation">animation</a> 
<a class="xref" href="#file">file</a> 
<a class="xref" href="#frame">frame</a> 
<a class="xref" href="#invertselected">invertSelected</a> 
<a class="xref" href="#move">move</a> 
<a class="xref" href="#moveto">moveto</a> 
<a class="xref" href="#navigate">navigate</a> 
<a class="xref" href="#rotateselected">rotateSelected</a> 
<a class="xref" href="#setmisc">set (misc)</a> 
<a class="xref" href="#setnavigation">set (navigation)</a> 
<a class="xref" href="#spin">spin</a> 
<a class="xref" href="#translate">translate</a> 
<a class="xref" href="#translateselected">translateSelected</a> 
<a class="xref" href="#zoom">zoom</a> </p></td></tr>
<tr name='tr_zoomto'>
<td colspan="12" class="sep1">
<br />
<br />
<a href="#top">
<img class="nf" src="img/u.gif" border="0" />top</a> 
<a href="javascript:setsearch()">
<img class="nf" src="img/q.gif" border="0" />search</a> 
<a href="#k1580">
<img class="nf" src="img/i.gif" border="0" />index</a></td></tr></table >
<hr />
<h3>
<a id="index">Index</a></h3>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#jmolcommandsyntax">[Jmol Command Syntax]</a>
<a id="k1"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#jmolmath">[Jmol Math]</a>
<a id="k4"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#jmolparameters">[Jmol Parameters]</a>
<a id="k6"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#jmolsmarts/smiles">[Jmol SMARTS/SMILES]</a>
<a id="k8"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#jmol/jspecview/magresview">[Jmol/JSpecView/MagresView]</a>
<a id="k10"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#annotations">[annotations]</a>
<a id="k12"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#atomexpressions">[atom expressions]</a>
<a id="k14"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#atomproperties">[atom properties]</a>
<a id="k16"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#auxiliaryinfo">[auxiliaryInfo]</a>
<a id="k18"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#comments">[comments]</a>
<a id="k20"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#export">[export]</a>
<a id="k22"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#fractionalcoordinates">[fractional coordinates]</a>
<a id="k24"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#functions">[functions]</a>
<a id="k26"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#immediate">[immediate (!)]</a>
<a id="k28"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#planeexpressions">[plane expressions]</a>
<a id="k30"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#read/writezipfiles">[read/write ZIP files]</a>
<a id="k32"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#usingtheclipboard">[using the clipboard]</a>
<a id="k34"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#animation">animation or anim</a>
<a id="k36"> </a>
<br /></b> 
<a href="#k37">animation ON/OFF{default: ON}</a>
<br /> 
<a href="#k40">animation DIRECTION +1</a>
<br /> 
<a href="#k38">animation DIRECTION -1</a>
<br /> 
<a href="#k39">animation DISPLAY {atom set}</a>
<br /> 
<a href="#k42">animation FPS </a>
<a class='def' href='#d41' title='the animation rate -- (integer)'>[frames-per-second]</a>
<br /> 
<a href="#k43">animation FRAMES [ array of model numbers ]</a>
<br /> 
<a href="#k44">animation MODE LOOP</a>
<br /> 
<a href="#k47">animation MODE LOOP </a>
<a class='def' href='#d45' title='the time in seconds to pause on the first frame -- (integer|decimal, >=0)'>[time-delay1]</a> 
<a class='def' href='#d46' title='the time in seconds to pause on the last frame -- (integer|decimal, >=0)'>[time-delay2]</a>
<br /> 
<a href="#k48">animation MODE ONCE</a>
<br /> 
<a href="#k49">animation MODE PALINDROME</a>
<br /> 
<a href="#k50">animation MODE PALINDROME </a>
<a class='def' href='#d45' title='the time in seconds to pause on the first frame -- (integer|decimal, >=0)'>[time-delay1]</a> 
<a class='def' href='#d46' title='the time in seconds to pause on the last frame -- (integer|decimal, >=0)'>[time-delay2]</a>
<br /> 
<a href="#k51">animation MORPH (integer)</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#axes">axes</a>
<a id="k53"> </a>
<br /></b> 
<a href="#k54">axes ON/OFF{default: ON}</a>
<br /> 
<a href="#k55">axes (decimal)</a>
<br /> 
<a href="#k56">axes CENTER {x y z}</a>
<br /> 
<a href="#k57">axes DOTTED</a>
<br /> 
<a href="#k60">axes (integer)</a>
<br /> 
<a href="#k58">axes LABELS "x-label" "y-label" "z-label" "origin-label"</a>
<br /> 
<a href="#k59">axes LABELS "x-label" "y-label" "z-label" "-x-label" "-y-label" "-z-label"</a>
<br /> 
<a href="#k61">axes MOLECULAR</a>
<br /> 
<a href="#k62">axes OFFSET (decimal)</a>
<br /> 
<a href="#k68">axes POSITION [x y] or [x y %]</a>
<br /> 
<a href="#k63">axes SCALE (decimal)</a>
<br /> 
<a href="#k65">axes TICKS X|Y|Z {major,minor,subminor} FORMAT [%0.2f, ...] SCALE {scaleX, scaleY, scaleZ} | x.xx</a>
<br /> 
<a href="#k64">axes TYPE a b c ab ac bc abc</a>
<br /> 
<a href="#k67">axes UNITCELL</a>
<br /> 
<a href="#k66">axes WINDOW</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#backbone">backbone</a>
<a id="k70"> </a>
<br /></b> 
<a href="#k71">backbone ON/OFF{default: ON}</a>
<br /> 
<a href="#k72">backbone ONLY</a>
<br /> 
<a href="#k74">backbone </a>
<a class='def' href='#d73' title='the radius of the backbone -- (decimal, &lt;=4.0)'>[backbone-radius]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#background">background</a>
<a id="k76"> </a>
<br /></b> 
<a href="#k78">background </a>
<a class='def' href='#d77' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a>
<br /> 
<a href="#k80">background ECHO </a>
<a class='def' href='#d79' title='is (color name), [r, g, b], [xRRGGBB], NONE'>[color-none-CPK]</a>
<br /> 
<a href="#k81">background IMAGE "filename"</a>
<br /> 
<a href="#k83">background HOVER </a>
<a class='def' href='#d79' title='is (color name), [r, g, b], [xRRGGBB], NONE'>[color-none-CPK]</a>
<br /> 
<a href="#k82">background LABELS </a>
<a class='def' href='#d79' title='is (color name), [r, g, b], [xRRGGBB], NONE'>[color-none-CPK]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#bind">bind</a>
<a id="k85"> </a>
<br /></b> 
<a href="#k86">bind (mouse action) (Jmol action)</a>
<br /> 
<a href="#k87">bind (mouse action) "script"</a>
<br /> 
<a href="#k88">bind (mouse action) "+:script"</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#bondorder">bondorder</a>
<a id="k90"> </a>
<br /></b> 
<a href="#k91">bondorder 0.5, 1, 1.5, 2, 2.5, 3, 4, -1, -1.5, -2.5</a>
<br /> 
<a href="#k93">bondorder </a>
<a class='def' href='#d92' title='is SINGLE, DOUBLE, TRIPLE, QUADRUPLE, AROMATIC, PARTIAL, PARTIALDOUBLE, PARTIALTRIPLE, PARTIALTRIPLE2, PARTIAL N.M, UNSPECIFIED, or HBOND'>[connection-options]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#boundbox">boundbox or boundingBox</a>
<a id="k95"> </a>
<br /></b> 
<a href="#k98">boundbox </a>
<a class='def' href='#d96' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>{default: *} 
<a class='def' href='#d97' title='a line width or type for a drawing object -- ON, OFF, DOTTED, (integer, 1 to 19), (decimal, &lt;2.0)'>[line-width-or-type]</a>{default: ON}
<br /> 
<a href="#k101">boundbox </a>
<a class='def' href='#d99' title='is any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> surrounded by parentheses or braces, or any @0@x y z@1@ coordinate '>[atom-expression-or-coordinate]</a> 
<a class='def' href='#d100' title='is an xyz coordinate in the form @0@x y z@1@ '>[xyz-coordinate]</a> 
<a class='def' href='#d97' title='a line width or type for a drawing object -- ON, OFF, DOTTED, (integer, 1 to 19), (decimal, &lt;2.0)'>[line-width-or-type]</a>{default: unchanged}
<br /> 
<a href="#k102">boundbox CORNERS </a>
<a class='def' href='#d99' title='is any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> surrounded by parentheses or braces, or any @0@x y z@1@ coordinate '>[atom-expression-or-coordinate]</a> 
<a class='def' href='#d99' title='is any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> surrounded by parentheses or braces, or any @0@x y z@1@ coordinate '>[atom-expression-or-coordinate]</a> 
<a class='def' href='#d97' title='a line width or type for a drawing object -- ON, OFF, DOTTED, (integer, 1 to 19), (decimal, &lt;2.0)'>[line-width-or-type]</a>{default: unchanged}
<br /> 
<a href="#k103">boundbox TICKS X|Y|Z {major,minor,subminor} FORMAT [%0.2f, ...] SCALE {scaleX, scaleY, scaleZ} | x.xx</a>
<br /> 
<a href="#k104">boundbox SCALE x.xx</a>
<br /> 
<a href="#k105">boundbox $isosurfaceID</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#break">break</a>
<a id="k107"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#cache">cache</a>
<a id="k109"> </a>
<br /></b> 
<a href="#k111">cache ADD "filename"</a>
<br /> 
<a href="#k110">cache CLEAR</a>
<br /> 
<a href="#k112">cache REMOVE "filename"</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#calculate">calculate</a>
<a id="k114"> </a>
<br /></b> 
<a href="#k115">calculate AROMATIC</a>
<br /> 
<a href="#k116">calculate FORMALCHARGE</a>
<br /> 
<a href="#k118">calculate HBONDS </a>
<a class='def' href='#d117' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a> 
<a class='def' href='#d117' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k119">calculate HBONDS STRUCTURE</a>
<br /> 
<a href="#k120">calculate HYDROGENS </a>
<a class='def' href='#d117' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>{default: *}
<br /> 
<a href="#k121">calculate PARTIALCHARGE</a>
<br /> 
<a href="#k128">calculate SYMMETRY POLYHEDRA</a>
<br /> 
<a href="#k122">calculate POINTGROUP</a>
<br /> 
<a href="#k125">calculate STRAIGHTNESS</a>
<br /> 
<a href="#k126">calculate STRUCTURE type </a>
<a class='def' href='#d117' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k127">calculate STRUTS</a>
<br /> 
<a href="#k124">calculate SURFACEDISTANCE FROM </a>
<a class='def' href='#d117' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k123">calculate SURFACEDISTANCE WITHIN </a>
<a class='def' href='#d117' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#capture">capture</a>
<a id="k130"> </a>
<br /></b> 
<a href="#k131">capture</a>
<br /> 
<a href="#k132">capture "filename" (decimal)</a>
<br /> 
<a href="#k133">capture TRANSPARENT "filename" (decimal)</a>
<br /> 
<a href="#k134">capture "filename" LOOP (decimal)</a>
<br /> 
<a href="#k135">capture "filename" ROCK axis degrees</a>
<br /> 
<a href="#k136">capture "filename" SPIN axis</a>
<br /> 
<a href="#k137">capture OFF</a>
<br /> 
<a href="#k138">capture ON</a>
<br /> 
<a href="#k139">capture END</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#cartoon">cartoon or cartoons</a>
<a id="k141"> </a>
<br /></b> 
<a href="#k142">cartoon ON/OFF{default: ON}</a>
<br /> 
<a href="#k143">cartoon ONLY</a>
<br /> 
<a href="#k145">cartoon </a>
<a class='def' href='#d144' title='the radius of the cartoon elements -- (decimal, &lt;=4.0)'>[cartoon-radius]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#case">CASE</a>
<a id="k147"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#catch">CATCH</a>
<a id="k149"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#cd">cd</a>
<a id="k151"> </a>
<br /></b> 
<a href="#k152">cd</a>
<br /> 
<a href="#k153">cd ""</a>
<br /> 
<a href="#k154">cd "directoryName"</a>
<br /> 
<a href="#k155">cd ?</a>
<br /> 
<a href="#k156">cd =</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#center">center or centre</a>
<a id="k158"> </a>
<br /></b> 
<a href="#k161">center </a>
<a class='def' href='#d160' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k163">center </a>
<a class='def' href='#d162' title='is an xyz coordinate in the form @0@x y z@1@ '>[xyz-coordinate]</a>
<br /> 
<a href="#k165">center </a>
<a class='def' href='#d164' title='a drawn object -- $name'>[drawn-object]</a>
<br /> 
<a href="#k159">center</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#centerat">centerAt</a>
<a id="k167"> </a>
<br /></b> 
<a href="#k168">centerAt ABSOLUTE x y z {default: 0.0 0.0 0.0}</a>
<br /> 
<a href="#k170">centerAt AVERAGE x y z {default: 0.0 0.0 0.0}</a>
<br /> 
<a href="#k169">centerAt BOUNDBOX x y z {default: 0.0 0.0 0.0}</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#cgo">cgo</a>
<a id="k172"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#color">color or colour</a>
<a id="k174"> </a>
<br /></b> 
<a href="#k176">color </a>
<a class='def' href='#d175' title='to color based on a 
<a class=xref href=http://jmol.sourceforge.net/jscolors/ target=_blank>[Jmol color scheme]</a>. (CPK and NONE are synonymous here) -- (color name), [r, g, b], [xRRGGBB], ALTLOC, AMINO, CHAIN, CPK, FIXEDTEMPERATURE, FORMALCHARGE, GROUP, INSERTION, JMOL, MOLECULE, MONOMER, NONE, PARTIALCHARGE, RASMOL, RELATIVETEMPERATURE, SHAPELY, STRUCTURE, SURFACEDISTANCE'>[color-scheme]</a>
<br /> 
<a href="#k177">color </a>
<a class='def' href='#d175' title='to color based on a 
<a class=xref href=http://jmol.sourceforge.net/jscolors/ target=_blank>[Jmol color scheme]</a>. (CPK and NONE are synonymous here) -- (color name), [r, g, b], [xRRGGBB], ALTLOC, AMINO, CHAIN, CPK, FIXEDTEMPERATURE, FORMALCHARGE, GROUP, INSERTION, JMOL, MOLECULE, MONOMER, NONE, PARTIALCHARGE, RASMOL, RELATIVETEMPERATURE, SHAPELY, STRUCTURE, SURFACEDISTANCE'>[color-scheme]</a> TRANSLUCENT
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#color">color (atom object)</a>
<a id="k179"> </a>
<br /></b> 
<a href="#k182">color </a>
<a class='def' href='#d180' title='an object related to an atom -- ATOM, BACKBONE, CARTOON, DOTS, ELLIPSOID, HALOS, LABELS, MESHRIBBON, POLYHEDRA, RIBBONS, ROCKETS, SELECTIONHALOS, STARS, STRANDS, STRUTS, TRACE, VECTORS'>[atom-associated-object]</a> 
<a class='def' href='#d181' title='to color based on a 
<a class=xref href=http://jmol.sourceforge.net/jscolors/ target=_blank>[Jmol color scheme]</a>. (CPK and NONE are synonymous here) -- (color name), [r, g, b], [xRRGGBB], ALTLOC, AMINO, CHAIN, CPK, FIXEDTEMPERATURE, FORMALCHARGE, GROUP, INSERTION, JMOL, MOLECULE, MONOMER, NONE, PARTIALCHARGE, RASMOL, RELATIVETEMPERATURE, SHAPELY, STRUCTURE, SURFACEDISTANCE'>[color-scheme]</a>
<br /> 
<a href="#k183">color BALLS </a>
<a class='def' href='#d181' title='to color based on a 
<a class=xref href=http://jmol.sourceforge.net/jscolors/ target=_blank>[Jmol color scheme]</a>. (CPK and NONE are synonymous here) -- (color name), [r, g, b], [xRRGGBB], ALTLOC, AMINO, CHAIN, CPK, FIXEDTEMPERATURE, FORMALCHARGE, GROUP, INSERTION, JMOL, MOLECULE, MONOMER, NONE, PARTIALCHARGE, RASMOL, RELATIVETEMPERATURE, SHAPELY, STRUCTURE, SURFACEDISTANCE'>[color-scheme]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#color">color (bond object)</a>
<a id="k185"> </a>
<br /></b> 
<a href="#k187">color BONDS </a>
<a class='def' href='#d186' title='is (color name), [r, g, b], [xRRGGBB], CPK, NONE'>[color-none-CPK]</a>
<br /> 
<a href="#k188">color SSBONDS </a>
<a class='def' href='#d186' title='is (color name), [r, g, b], [xRRGGBB], CPK, NONE'>[color-none-CPK]</a>
<br /> 
<a href="#k189">color HBONDS </a>
<a class='def' href='#d186' title='is (color name), [r, g, b], [xRRGGBB], CPK, NONE'>[color-none-CPK]</a>
<br /> 
<a href="#k190">color HBONDS ENERGY</a>
<br /> 
<a href="#k191">color HBONDS TYPE</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#color">color (element)</a>
<a id="k193"> </a>
<br /></b> 
<a href="#k196">color </a>
<a class='def' href='#d194' title='to color specific elements such as CARBON or HYDROGEN -- (element name)'>[element-name]</a> 
<a class='def' href='#d195' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#color">color (model object)</a>
<a id="k198"> </a>
<br /></b> 
<a href="#k201">color </a>
<a class='def' href='#d199' title='is AXIS1*, AXIS2*, AXIS3*, AXES, BOUNDBOX, DRAW, ECHO, GEOSURFACE, HOVER, ISOSURFACE, LABEL, MEASUREMENTS, MO, PMESH, POLYHEDRA, SELECTIONHALOS, UNITCELL (*starting with Jmol 11.1.20)'>[model-object]</a> 
<a class='def' href='#d200' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#color">color (other)</a>
<a id="k203"> </a>
<br /></b> 
<a href="#k205">color HIGHLIGHT </a>
<a class='def' href='#d204' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a>
<br /> 
<a href="#k206">color ISOSURFACE {atomSet} </a>
<a class='def' href='#d204' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a>
<br /> 
<a href="#k207">color ISOSURFACE </a>
<a class='def' href='#d204' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a> TO 
<a class='def' href='#d204' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a> (integer)
<br /> 
<a href="#k208">color ISOSURFACE PHASE </a>
<a class='def' href='#d204' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a> 
<a class='def' href='#d204' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a> (integer)
<br /> 
<a href="#k210">color SELECTIONHALOS </a>
<a class='def' href='#d209' title='is (color name), [r, g, b], [xRRGGBB], NONE'>[color-none-CPK]</a>
<br /> 
<a href="#k212">color </a>
<a class='def' href='#d211' title='a drawn object -- $name'>[drawn-object]</a> 
<a class='def' href='#d204' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a>
<br /> 
<a href="#k213">color POLYHEDRA </a>
<a class='def' href='#d204' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a> 
<a class='def' href='#d204' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#color">color (scheme)</a>
<a id="k215"> </a>
<br /></b> 
<a href="#k216">color "colorSchemeName" RANGE [min] [max]</a>
<br /> 
<a href="#k217">color {atomSet} PROPERTY x "colorSchemeName" RANGE [min] [max]</a>
<br /> 
<a href="#k218">color {atomSet} PROPERTY_x "colorSchemeName" RANGE [min] [max]</a>
<br /> 
<a href="#k219">color shape PROPERTY x "colorSchemeName" RANGE [min] [max]</a>
<br /> 
<a href="#k220">color shape PROPERTY_x "colorSchemeName" RANGE [min] [max]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#colormeasures">color measures</a>
<a id="k222"> </a>
<br /></b> 
<a href="#k224">color measures </a>
<a class='def' href='#d223' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#compare">compare</a>
<a id="k226"> </a>
<br /></b> 
<a href="#k227">compare {model1} {model2} SUBSET {atomSet} ATOMS [paired atom list]</a>
<br /> 
<a href="#k230">compare {model1} {model2} SMARTS or SMILES "smartsString"</a>
<br /> 
<a href="#k231">compare {atomSet} [array of coordinates]</a>
<br /> 
<a href="#k232">compare {atomSet} ATOMS {subset1} [coords1] {subset2} [coords2]. . .</a>
<br /> 
<a href="#k233">compare {model1} {model2} BONDS "smartsString"</a>
<br /> 
<a href="#k228">compare {model1} {model2} ORIENTATIONS [paired atom list]</a>
<br /> 
<a href="#k229">compare {model1} {model2} ORIENTATIONS [paired quaternion array list]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#configuration">configuration or conformation or config</a>
<a id="k235"> </a>
<br /></b> 
<a href="#k236">configuration [configuration number]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#connect">connect</a>
<a id="k238"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#console">console</a>
<a id="k240"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#contact">contact</a>
<a id="k242"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#continue">continue</a>
<a id="k244"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#data">data</a>
<a id="k246"> </a>
<br /></b> 
<a href="#k247">data "label"</a>
<br /> 
<a href="#k250">data "label @x"</a>
<br /> 
<a href="#k251">data "data2d_xxx"</a>
<br /> 
<a href="#k253">data "property_xxx propertyAtomField propertyDataField"</a>
<br /> 
<a href="#k252">data "property_xxx propertyAtomField propertyAtomColumnCount propertyDataField propertyDataColumnCount"</a>
<br /> 
<a href="#k248">data CLEAR</a>
<br /> 
<a href="#k249">data "element_vdw" 6 1.7; 7 1.8 END "element_vdw"</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#default">default</a>
<a id="k255"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#define">define or @</a>
<a id="k257"> </a>
<br /></b> 
<a href="#k260">define </a>
<a class='def' href='#d258' title='a (string)'>[variable-name]</a> 
<a class='def' href='#d259' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#delay">delay</a>
<a id="k262"> </a>
<br /></b> 
<a href="#k265">delay </a>
<a class='def' href='#d264' title='in seconds -- (integer|decimal, >=0)'>[time-delay]</a>
<br /> 
<a href="#k263">delay on</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#delete">delete</a>
<a id="k267"> </a>
<br /></b> 
<a href="#k270">delete $ [object id]</a>
<br /> 
<a href="#k271">delete $ [save id]</a>
<br /> 
<a href="#k269">delete </a>
<a class='def' href='#d268' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#depth">depth</a>
<a id="k273"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#dipole">dipole or dipoles</a>
<a id="k275"> </a>
<br /></b> 
<a href="#k277">dipole ID [object id] ALL </a>
<a class='def' href='#d276' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#display">display</a>
<a id="k279"> </a>
<br /></b> 
<a href="#k281">display </a>
<a class='def' href='#d280' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k282">display [{...}]</a>
<br /> 
<a href="#k283">display BONDS</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#dots">dots</a>
<a id="k285"> </a>
<br /></b> 
<a href="#k286">dots ON/OFF{default: ON}</a>
<br /> 
<a href="#k287">dots ONLY</a>
<br /> 
<a href="#k288">dots VANDERWAALS</a>
<br /> 
<a href="#k289">dots IONIC</a>
<br /> 
<a href="#k290">dots nn%</a>
<br /> 
<a href="#k291">dots (decimal)</a>
<br /> 
<a href="#k292">dots +(decimal)</a>
<br /> 
<a href="#k293">dots ADPMIN n%</a>
<br /> 
<a href="#k294">dots ADPMAX n%</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#draw">draw</a>
<a id="k296"> </a>
<br /></b> 
<a href="#k297">draw ARC {pt1} {pt2} {ptRef} {nDegreesOffset theta fractionalOffset} </a>
<br /> 
<a href="#k298">draw ARC {pt1} {plane} {ptRef} {nDegreesOffset theta fractionalOffset}</a>
<br /> 
<a href="#k299">draw ARROW {pt1} {pt2} {pt3} ...</a>
<br /> 
<a href="#k300">draw ARROW [array of points]</a>
<br /> 
<a href="#k301">draw ARROW ATOM/BOND</a>
<br /> 
<a href="#k302">draw BOUNDBOX</a>
<br /> 
<a href="#k303">draw CIRCLE {pt1} {pt2}</a>
<br /> 
<a href="#k304">draw CIRCLE {pt1} {plane}</a>
<br /> 
<a href="#k305">draw CURVE {pt1} {pt2} {pt3} ...</a>
<br /> 
<a href="#k306">draw CURVE [array of points]</a>
<br /> 
<a href="#k307">draw CYLINDER {pt1} {pt2}</a>
<br /> 
<a href="#k309">draw FRAME </a>
<a class='def' href='#d308' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a> {quaternion}
<br /> 
<a href="#k310">draw HELIX AXIS</a>
<br /> 
<a href="#k311">draw INTERSECTION BOUNDBOX (plane expression)</a>
<br /> 
<a href="#k312">draw INTERSECTION UNITCELL (plane expression)</a>
<br /> 
<a href="#k313">draw LINE [array of points]</a>
<br /> 
<a href="#k314">draw PLANE {pt1} {pt2} {pt3}</a>
<br /> 
<a href="#k315">draw POINTGROUP [parameters]</a>
<br /> 
<a href="#k316">draw POINTGROUP POLYHEDRON</a>
<br /> 
<a href="#k317">draw POLYGON [polygon definition]</a>
<br /> 
<a href="#k318">draw POINTS [array of points]</a>
<br /> 
<a href="#k319">draw POLYGON [array of points]</a>
<br /> 
<a href="#k320">draw QUATERNION [parameters]</a>
<br /> 
<a href="#k321">draw RAMACHANDRAN</a>
<br /> 
<a href="#k322">draw SLAB $id PLANE (plane expression)</a>
<br /> 
<a href="#k323">draw SYMOP [n or "x,y,z"] {atom expression}</a>
<br /> 
<a href="#k324">draw SYMOP {atom expression} {atom expression}</a>
<br /> 
<a href="#k325">draw SYMOP (integer) {atom expression} {atom expression}</a>
<br /> 
<a href="#k326">draw SYMOP [matrix]</a>
<br /> 
<a href="#k327">draw UNITCELL</a>
<br /> 
<a href="#k328">draw VECTOR {pt1} {pt2}</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#echo">echo</a>
<a id="k330"> </a>
<br /></b> 
<a href="#k331">echo (string)</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#ellipsoid">ellipsoid or ellipsoids</a>
<a id="k333"> </a>
<br /></b> 
<a href="#k334">ellipsoid ON/OFF{default: ON}</a>
<br /> 
<a href="#k335">ellipsoid nn%</a>
<br /> 
<a href="#k344">ellipsoid ID [object id] ON</a>
<br /> 
<a href="#k345">ellipsoid ID [object id] OFF</a>
<br /> 
<a href="#k336">ellipsoid ID [object id] AXES {ax ay az} {bx by bz} {cx cy cz}</a>
<br /> 
<a href="#k341">ellipsoid ID [object id] CENTER {x y z}</a>
<br /> 
<a href="#k342">ellipsoid ID [object id] CENTER { atom expression }</a>
<br /> 
<a href="#k343">ellipsoid ID [object id] CENTER $object</a>
<br /> 
<a href="#k337">ellipsoid ID [object id] COLOR [color parameters]</a>
<br /> 
<a href="#k339">ellipsoid ID [object id] DELETE</a>
<br /> 
<a href="#k340">ellipsoid ID [object id] OPTIONS "options"</a>
<br /> 
<a href="#k338">ellipsoid ID [object id] SCALE (decimal)</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#else">else</a>
<a id="k347"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#elseif">elseIf</a>
<a id="k349"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#exit">exit</a>
<a id="k351"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#file">file</a>
<a id="k353"> </a>
<br /></b> 
<a href="#k354">file (integer)</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#fix">fix</a>
<a id="k356"> </a>
<br /></b> 
<a href="#k358">fix </a>
<a class='def' href='#d357' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#font">font</a>
<a id="k360"> </a>
<br /></b> 
<a href="#k365">font </a>
<a class='def' href='#d361' title='is AXES, ECHO, HOVER, LABEL, or MEASURE'>[object-with-text]</a> 
<a class='def' href='#d362' title='approximately the same as Rasmol -- (integer, 6 to 63)'>[font-size]</a> 
<a class='def' href='#d363' title='is SERIF, SANSSERIF, or MONOSPACED '>[font-face]</a>{default: SansSerif} 
<a class='def' href='#d364' title='is PLAIN, BOLD, ITALIC, or BOLDITALIC'>[font-style]</a>{default: Plain} [scaling factor]
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#for">FOR</a>
<a id="k367"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#frame">frame or frames</a>
<a id="k369"> </a>
<br /></b> 
<a href="#k370">frame (integer >= 1)</a>
<br /> 
<a href="#k371">frame (positive decimal)</a>
<br /> 
<a href="#k373">frame (decimal) - (decimal)</a>
<br /> 
<a href="#k372">frame (negative decimal)</a>
<br /> 
<a href="#k378">frame 0</a>
<br /> 
<a href="#k374">frame 0.0</a>
<br /> 
<a href="#k376">frame [ array of model numbers ]</a>
<br /> 
<a href="#k375">frame {atomSet}</a>
<br /> 
<a href="#k377">frame "id"</a>
<br /> 
<a href="#k380">frame ALIGN </a>
<a class='def' href='#d379' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k381">frame ALIGN </a>
<a class='def' href='#d379' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a> FIXED
<br /> 
<a href="#k382">frame modelID ALIGN {x y z}</a>
<br /> 
<a href="#k383">frame ALL</a>
<br /> 
<a href="#k384">frame CREATE (integer)</a>
<br /> 
<a href="#k385">frame ID "id"</a>
<br /> 
<a href="#k386">frame LAST</a>
<br /> 
<a href="#k387">frame NEXT</a>
<br /> 
<a href="#k388">frame PAUSE</a>
<br /> 
<a href="#k389">frame PLAY (starting frame)</a>
<br /> 
<a href="#k390">frame PLAYREV (starting frame)</a>
<br /> 
<a href="#k391">frame PREVIOUS</a>
<br /> 
<a href="#k392">frame RANGE (starting frame) (ending frame)</a>
<br /> 
<a href="#k393">frame RESUME</a>
<br /> 
<a href="#k394">frame REWIND</a>
<br /> 
<a href="#k395">frame TITLE "title"</a>
<br /> 
<a href="#k396">frame TITLE (array)</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#frank">frank</a>
<a id="k398"> </a>
<br /></b> 
<a href="#k399">frank ON/OFF</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#geosurface">geoSurface</a>
<a id="k401"> </a>
<br /></b> 
<a href="#k402">geoSurface ON/OFF{default: ON}</a>
<br /> 
<a href="#k403">geoSurface ONLY</a>
<br /> 
<a href="#k404">geoSurface VANDERWAALS</a>
<br /> 
<a href="#k405">geoSurface IONIC</a>
<br /> 
<a href="#k406">geoSurface (integer)</a>
<br /> 
<a href="#k407">geoSurface (decimal)</a>
<br /> 
<a href="#k408">geoSurface +(decimal)</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#getproperty">getProperty</a>
<a id="k410"> </a>
<br /></b> 
<a href="#k411">getProperty animationInfo</a>
<br /> 
<a href="#k412">getProperty appletInfo</a>
<br /> 
<a href="#k414">getProperty atomInfo </a>
<a class='def' href='#d413' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k415">getProperty auxiliaryInfo</a>
<br /> 
<a href="#k416">getProperty bondInfo </a>
<a class='def' href='#d413' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k417">getProperty boundBoxInfo</a>
<br /> 
<a href="#k418">getProperty centerInfo</a>
<br /> 
<a href="#k419">getProperty chainInfo </a>
<a class='def' href='#d413' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k420">getProperty dataInfo type</a>
<br /> 
<a href="#k421">getProperty extractModel </a>
<a class='def' href='#d413' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k422">getProperty fileContents</a>
<br /> 
<a href="#k423">getProperty fileContents filepath</a>
<br /> 
<a href="#k424">getProperty fileHeader</a>
<br /> 
<a href="#k425">getProperty fileName</a>
<br /> 
<a href="#k426">getProperty fileInfo type</a>
<br /> 
<a href="#k427">getProperty image</a>
<br /> 
<a href="#k428">getProperty isosurfaceData</a>
<br /> 
<a href="#k429">getProperty isosurfaceInfo</a>
<br /> 
<a href="#k430">getProperty ligandInfo</a>
<br /> 
<a href="#k431">getProperty measurementInfo</a>
<br /> 
<a href="#k432">getProperty menu</a>
<br /> 
<a href="#k433">getProperty minimizationInfo</a>
<br /> 
<a href="#k434">getProperty modelInfo</a>
<br /> 
<a href="#k435">getProperty moleculeInfo </a>
<a class='def' href='#d413' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k436">getProperty nmrinfo</a>
<br /> 
<a href="#k437">getProperty orientationInfo</a>
<br /> 
<a href="#k438">getProperty polymerInfo </a>
<a class='def' href='#d413' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k439">getProperty shapeInfo</a>
<br /> 
<a href="#k440">getProperty stateInfo</a>
<br /> 
<a href="#k441">getProperty transformInfo</a>
<br /> 
<a href="#k442">getProperty variableInfo (math expression)</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#goto">goto</a>
<a id="k444"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#halos">halos</a>
<a id="k446"> </a>
<br /></b> 
<a href="#k448">halos ONLY</a>
<br /> 
<a href="#k447">halos ON/OFF{default: ON}</a>
<br /> 
<a href="#k449">halos reset</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#hbonds">hbonds</a>
<a id="k451"> </a>
<br /></b> 
<a href="#k452">hbonds ON/OFF{default: ON}</a>
<br /> 
<a href="#k454">hbonds </a>
<a class='def' href='#d453' title='a (decimal, &lt;2.0)'>[width-in-angstroms]</a>
<br /> 
<a href="#k455">hbonds CALCULATE</a>
<br /> 
<a href="#k456">hbonds DELETE</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#help">help</a>
<a id="k458"> </a>
<br /></b> 
<a href="#k459">help query</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#hide">hide</a>
<a id="k461"> </a>
<br /></b> 
<a href="#k463">hide </a>
<a class='def' href='#d462' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k465">hide BONDS</a>
<br /> 
<a href="#k464">hide [{...}]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#history">history</a>
<a id="k467"> </a>
<br /></b> 
<a href="#k468">history ON/OFF{default: ON}</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#hover">hover</a>
<a id="k470"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#if">IF</a>
<a id="k472"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#image">image</a>
<a id="k474"> </a>
<br /></b> 
<a href="#k475">image ID id</a>
<br /> 
<a href="#k476">image ID id width height</a>
<br /> 
<a href="#k477">image ID id "filename"</a>
<br /> 
<a href="#k478">image ID id close</a>
<br /> 
<a href="#k479">image "filename" close</a>
<br /> 
<a href="#k480">image close</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#initialize">initialize</a>
<a id="k482"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#invertselected">invertSelected</a>
<a id="k484"> </a>
<br /></b> 
<a href="#k485">invertSelected POINT point_definition</a>
<br /> 
<a href="#k486">invertSelected PLANE plane_expression</a>
<br /> 
<a href="#k487">invertSelected HKL {h k l}</a>
<br /> 
<a href="#k488">invertSelected STEREO {center} {atomsToInvert}</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#isosurface">isosurface</a>
<a id="k490"> </a>
<br /></b> 
<a href="#k491">isosurface AREA SET (integer)</a>
<br /> 
<a href="#k493">isosurface CONNECT </a>
<a class='def' href='#d492' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k494">isosurface DELETE</a>
<br /> 
<a href="#k495">isosurface LATTICE {a b c}</a>
<br /> 
<a href="#k496">isosurface LATTICE {a b c} FIXED</a>
<br /> 
<a href="#k497">isosurface LIST</a>
<br /> 
<a href="#k498">isosurface SET (integer)</a>
<br /> 
<a href="#k499">isosurface SLAB (parameters)</a>
<br /> 
<a href="#k500">isosurface UNITCELL (fraction)</a>
<br /> 
<a href="#k501">isosurface VOLUME SET (integer)</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#javascript">javascript</a>
<a id="k503"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#label">label or labels</a>
<a id="k505"> </a>
<br /></b> 
<a href="#k507">label "text"</a>
<br /> 
<a href="#k508">label DISPLAY</a>
<br /> 
<a href="#k509">label HIDE</a>
<br /> 
<a href="#k506">label ON/OFF{default: ON}</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#lcaocartoon">lcaoCartoon</a>
<a id="k511"> </a>
<br /></b> 
<a href="#k512">lcaoCartoon ON/OFF{default: ON}</a>
<br /> 
<a href="#k513">lcaoCartoon CREATE "[type]"</a>
<br /> 
<a href="#k514">lcaoCartoon LONEPAIR "[type]"</a>
<br /> 
<a href="#k515">lcaoCartoon RADICAL "[type]"</a>
<br /> 
<a href="#k516">lcaoCartoon CREATE "[type]" MOLECULAR</a>
<br /> 
<a href="#k518">lcaoCartoon COLOR </a>
<a class='def' href='#d517' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a>
<br /> 
<a href="#k520">lcaoCartoon COLOR </a>
<a class='def' href='#d517' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a> 
<a class='def' href='#d517' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a>
<br /> 
<a href="#k521">lcaoCartoon DELETE</a>
<br /> 
<a href="#k522">lcaoCartoon LIST</a>
<br /> 
<a href="#k523">lcaoCartoon SCALE (decimal)</a>
<br /> 
<a href="#k526">lcaoCartoon SELECT </a>
<a class='def' href='#d525' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k524">lcaoCartoon SELECT "[type]"</a>
<br /> 
<a href="#k519">lcaoCartoon TRANSLUCENT or OPAQUE</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#load">load</a>
<a id="k528"> </a>
<br /></b> 
<a href="#k529">load</a>
<br /> 
<a href="#k547">load keyword "filename"</a>
<br /> 
<a href="#k530">load "filename" (integer)</a>
<br /> 
<a href="#k531">load "filename" [i j k l m...]</a>
<br /> 
<a href="#k532">load "filetype::filename"</a>
<br /> 
<a href="#k550">load "remoteFilename" AS "localFileName"</a>
<br /> 
<a href="#k533">load @variableName</a>
<br /> 
<a href="#k534">load INLINE "fileData"</a>
<br /> 
<a href="#k535">load "@variableName"</a>
<br /> 
<a href="#k536">load VAR x</a>
<br /> 
<a href="#k537">load *XXXX</a>
<br /> 
<a href="#k538">load *XXXX*</a>
<br /> 
<a href="#k539">load =XXXX</a>
<br /> 
<a href="#k540">load ==XXX</a>
<br /> 
<a href="#k541">load =database/id</a>
<br /> 
<a href="#k542">load ":chemical name"</a>
<br /> 
<a href="#k543">load $smilesString</a>
<br /> 
<a href="#k544">load $identifier</a>
<br /> 
<a href="#k545">load ORIENTATION</a>
<br /> 
<a href="#k546">load SMILES "smilesString"</a>
<br /> 
<a href="#k548">load "filename" FILL ..</a>
<br /> 
<a href="#k549">load "filename" FILTER "filter specification"</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#loadappend">load APPEND</a>
<a id="k552"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#loadasync">load ASYNC</a>
<a id="k554"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#loaddata">load DATA</a>
<a id="k556"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#loadfiles">load FILES</a>
<a id="k558"> </a>
<br /></b> 
<a href="#k559">load FILES "filename1" "filename2" ...</a>
<br /> 
<a href="#k560">load FILES "filename1" + "filename2"</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#loadmenu">load MENU</a>
<a id="k562"> </a>
<br /></b> 
<a href="#k563">load MENU "menufile"</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#loadmodels">load MODELS</a>
<a id="k565"> </a>
<br /></b> 
<a href="#k566">load MODELS {first last stride} "filename"</a>
<br /> 
<a href="#k567">load MODELS ({i j k:l m...}) "filename"</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#loadtrajectory">load TRAJECTORY</a>
<a id="k569"> </a>
<br /></b> 
<a href="#k570">load TRAJECTORY "filename"</a>
<br /> 
<a href="#k571">load TRAJECTORY {first last stride} or ({i j k:l m...}) "filename"</a>
<br /> 
<a href="#k572">load TRAJECTORY "filename" FILTER "filter specification" COORD {first last stride} or ({i j k:l m...}) mdcrd::crdfile1</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#loadproperty">load [property]</a>
<a id="k574"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#log">LOG</a>
<a id="k576"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#loop">loop</a>
<a id="k578"> </a>
<br /></b> 
<a href="#k581">loop </a>
<a class='def' href='#d580' title='in seconds -- (integer|decimal, >=0)'>[time-delay]</a>
<br /> 
<a href="#k579">loop on</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#mapproperty">mapProperty</a>
<a id="k583"> </a>
<br /></b> 
<a href="#k584">mapProperty {atomExpression1}.property1 {atomExpression2}.property2 propertyKey</a>
<br /> 
<a href="#k585">mapProperty SELECTED {atomExpression} propertyKey</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#measure">measure or measures or monitor or monitors</a>
<a id="k587"> </a>
<br /></b> 
<a href="#k588">measure ON/OFF{default: ON}</a>
<br /> 
<a href="#k589">measure "n:labelFormat"</a>
<br /> 
<a href="#k593">measure (two to four atom expressions, each in parentheses) "labelFormat"</a>
<br /> 
<a href="#k590">measure (integer) (integer) "labelFormat"</a>
<br /> 
<a href="#k591">measure (integer) (integer) (integer) "labelFormat"</a>
<br /> 
<a href="#k592">measure (integer) (integer) (integer) (integer) "labelFormat"</a>
<br /> 
<a href="#k601">measure TICKS X|Y|Z {major,minor,subminor} FORMAT [%0.2f, ...] SCALE {scaleX, scaleY, scaleZ} | x.xx FIRST x.xx {point1} {point2}</a>
<br /> 
<a href="#k594">measure ALL (two to four atom expressions) "labelFormat"</a>
<br /> 
<a href="#k595">measure ALLCONNECTED (two to four atom expressions) "labelFormat"</a>
<br /> 
<a href="#k596">measure DELETE</a>
<br /> 
<a href="#k597">measure DELETE (integer)</a>
<br /> 
<a href="#k598">measure DELETE (two to four atom expressions)</a>
<br /> 
<a href="#k599">measure LIST</a>
<br /> 
<a href="#k600">measure RANGE (decimal) (decimal) ALL|ALLCONNECTED|DELETE (two to four atom expressions, each in parentheses)</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#menu">menu</a>
<a id="k603"> </a>
<br /></b> 
<a href="#k602">menu</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#meshribbon">meshribbon or meshribbons</a>
<a id="k605"> </a>
<br /></b> 
<a href="#k606">meshribbon ON/OFF{default: ON}</a>
<br /> 
<a href="#k607">meshribbon ONLY</a>
<br /> 
<a href="#k609">meshribbon </a>
<a class='def' href='#d608' title='the overall radius of the mesh ribbon -- (decimal, &lt;=4.0)'>[mesh-ribbon-radius]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#message">message</a>
<a id="k611"> </a>
<br /></b> 
<a href="#k612">message (string)</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#minimize">minimize or minimization</a>
<a id="k614"> </a>
<br /></b> 
<a href="#k615">minimize</a>
<br /> 
<a href="#k617">minimize </a>
<a class='def' href='#d616' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k618">minimize ADDHYDROGENS</a>
<br /> 
<a href="#k619">minimize CANCEL</a>
<br /> 
<a href="#k620">minimize CLEAR</a>
<br /> 
<a href="#k621">minimize CONSTRAINT CLEAR</a>
<br /> 
<a href="#k622">minimize CONSTRAINT (two to four atom expressions) (decimal)</a>
<br /> 
<a href="#k623">minimize CRITERION</a>
<br /> 
<a href="#k624">minimize ENERGY</a>
<br /> 
<a href="#k626">minimize SELECT </a>
<a class='def' href='#d616' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k627">minimize SELECT </a>
<a class='def' href='#d616' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a> ONLY
<br /> 
<a href="#k628">minimize STEPS (integer)</a>
<br /> 
<a href="#k629">minimize STOP</a>
<br /> 
<a href="#k625">minimize FIX </a>
<a class='def' href='#d616' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#mo">mo</a>
<a id="k631"> </a>
<br /></b> 
<a href="#k632">mo ON/OFF{default: ON}</a>
<br /> 
<a href="#k633">mo (integer) [SQUARED]</a>
<br /> 
<a href="#k634">mo DENSITY</a>
<br /> 
<a href="#k635">mo [c1 n1,c2 n2, c3 n3,...] [SQUARED]</a>
<br /> 
<a href="#k645">mo COLOR </a>
<a class='def' href='#d644' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a>
<br /> 
<a href="#k646">mo COLOR </a>
<a class='def' href='#d644' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a> 
<a class='def' href='#d644' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a>
<br /> 
<a href="#k648">mo CUTOFF (decimal)</a>
<br /> 
<a href="#k647">mo DELETE</a>
<br /> 
<a href="#k636">mo HOMO [+/-n] [SQUARED]</a>
<br /> 
<a href="#k637">mo LUMO [+/-n] [SQUARED]</a>
<br /> 
<a href="#k638">mo MODEL n or x.y</a>
<br /> 
<a href="#k639">mo NEXT [SQUARED]</a>
<br /> 
<a href="#k641">mo NOPLANE</a>
<br /> 
<a href="#k642">mo PLANE plane_expression</a>
<br /> 
<a href="#k643">mo POINTS numberOfPoints randomSeed</a>
<br /> 
<a href="#k640">mo PREVIOUS [SQUARED]</a>
<br /> 
<a href="#k649">mo RESOLUTION (decimal)</a>
<br /> 
<a href="#k650">mo SLAB (parameters)</a>
<br /> 
<a href="#k651">mo TITLEFORMAT "format"</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#model">model or models</a>
<a id="k653"> </a>
<br /></b> 
<a href="#k654">model (integer)</a>
<br /> 
<a href="#k655">model (integer) PROPERTY name (list)</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#modulation">modulation</a>
<a id="k657"> </a>
<br /></b> 
<a href="#k658">modulation ON</a>
<br /> 
<a href="#k659">modulation OFF</a>
<br /> 
<a href="#k661">modulation </a>
<a class='def' href='#d660' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a> ON/OFF
<br /> 
<a href="#k662">modulation T (decimal)</a>
<br /> 
<a href="#k663">modulation T {t1 t2 t3}</a>
<br /> 
<a href="#k664">modulation Q (integer)</a>
<br /> 
<a href="#k665">modulation Q {m1 m2 m3}</a>
<br /> 
<a href="#k666">modulation scale x.x</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#move">move</a>
<a id="k668"> </a>
<br /></b> 
<a href="#k680">move </a>
<a class='def' href='#d669' title='the degrees of rotation about x -- (integer)'>[x-rotation]</a> 
<a class='def' href='#d670' title='the degrees of rotation about y -- (integer)'>[y-rotation]</a> 
<a class='def' href='#d671' title='the degrees of rotation about z -- (integer)'>[z-rotation]</a> 
<a class='def' href='#d672' title='a scaling factor -- (integer)'>[zoom-factor]</a> 
<a class='def' href='#d673' title='the distance offset along x -- (integer)'>[x-translation]</a> 
<a class='def' href='#d674' title='the distance offset along y -- (integer)'>[y-translation]</a> 
<a class='def' href='#d675' title='the distance offset along z -- (integer)'>[z-translation]</a> 
<a class='def' href='#d676' title='the cutoff for the slab display -- (integer)'>[slab-cutoff]</a> 
<a class='def' href='#d677' title='the amount of time to wait -- (decimal)'>[seconds-total]</a> 
<a class='def' href='#d678' title='the frames per second to move -- (integer)'>[move-frames-per-second]</a>{default: 30} 
<a class='def' href='#d679' title='the maximum acceleration -- (integer)'>[maximum-acceleration]</a>{default: 5}
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#moveto">moveto</a>
<a id="k682"> </a>
<br /></b> 
<a href="#k691">moveto timeSeconds AXIS [a1,b1,c1,a2,b2,c2,a3,b3,c3,a4,b4,c4,-a1,-b1,-c1,-a2,-b2,-c2,-a3,-b3,-c3,-a4,-b4,-c4]</a>
<br /> 
<a href="#k692">moveto timeSeconds AXIS [a,b,c,x,y,z]</a>
<br /> 
<a href="#k683">moveto timeSeconds FRONT|BACK|LEFT|RIGHT|TOP|BOTTOM</a>
<br /> 
<a href="#k684">moveto timeSeconds {x y z} degrees zoomPercent transX transY {x y z} rotationRadius navigationCenter navTransX navTransY navDepth</a>
<br /> 
<a href="#k685">moveto timeSeconds {x y z} degrees 0 transX transY (atom expression) 0 zoomAdjustment navigationCenter navTransX navTransY navDepth</a>
<br /> 
<a href="#k686">moveto timeSeconds {x y z} degrees (atom expression) 0 zoomAdjustment navigationCenter navTransX navTransY navDepth</a>
<br /> 
<a href="#k687">moveto timeSeconds QUATERNION { quaternion }</a>
<br /> 
<a href="#k689">moveto timeSeconds QUATERNION </a>
<a class='def' href='#d688' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k690">moveto timeSeconds QUATERNION MOLECULAR { quaternion }</a>
<br /> 
<a href="#k693">moveto STOP</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#mutate">mutate</a>
<a id="k695"> </a>
<br /></b> 
<a href="#k696">mutate 33 LYS</a>
<br /> 
<a href="#k697">mutate ALA34 G</a>
<br /> 
<a href="#k698">mutate {ALA.CA}[2] G</a>
<br /> 
<a href="#k699">mutate {1-3} GAL</a>
<br /> 
<a href="#k700">mutate {1-3} G_L</a>
<br /> 
<a href="#k701">mutate ALA34 myfile.pdb</a>
<br /> 
<a href="#k702">mutate @3 @res</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#navigate">navigate or navigation</a>
<a id="k704"> </a>
<br /></b> 
<a href="#k705">navigate timeSeconds CENTER {x y z}</a>
<br /> 
<a href="#k707">navigate timeSeconds CENTER </a>
<a class='def' href='#d706' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k708">navigate timeSeconds CENTER $object</a>
<br /> 
<a href="#k709">navigate timeSeconds DEPTH percent</a>
<br /> 
<a href="#k710">navigate timeSeconds PATH $object</a>
<br /> 
<a href="#k711">navigate timeSeconds PATH (any combination of coordinates, atom expressions, and objects)</a>
<br /> 
<a href="#k712">navigate timeSeconds ROTATE X degrees</a>
<br /> 
<a href="#k713">navigate timeSeconds ROTATE Y degrees</a>
<br /> 
<a href="#k714">navigate timeSeconds ROTATE Z degrees</a>
<br /> 
<a href="#k715">navigate timeSeconds TRACE </a>
<a class='def' href='#d706' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k716">navigate timeSeconds TRANSLATE x.xx y.yy</a>
<br /> 
<a href="#k717">navigate timeSeconds TRANSLATE X x.xx</a>
<br /> 
<a href="#k718">navigate timeSeconds TRANSLATE Y y.yy</a>
<br /> 
<a href="#k719">navigate timeSeconds TRANSLATE {x y z}</a>
<br /> 
<a href="#k720">navigate timeSeconds TRANSLATE </a>
<a class='def' href='#d706' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k721">navigate timeSeconds TRANSLATE $object</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#nbo">nbo</a>
<a id="k723"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#parallel/process">parallel/process</a>
<a id="k725"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#pause">pause or wait</a>
<a id="k727"> </a>
<br /></b> 
<a href="#k728">pause message</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#plot">plot</a>
<a id="k730"> </a>
<br /></b> 
<a href="#k736">plot PROPERTIES property1 property2</a>
<br /> 
<a href="#k737">plot PROPERTIES property1 property2 property3</a>
<br /> 
<a href="#k731">plot QUATERNION w, x, y, or z</a>
<br /> 
<a href="#k732">plot QUATERNION a,r DIFFERENCE</a>
<br /> 
<a href="#k733">plot QUATERNION a,r DIFFERENCE2</a>
<br /> 
<a href="#k734">plot RAMACHANDRAN</a>
<br /> 
<a href="#k735">plot RAMACHANDRAN r</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#pmesh">pmesh</a>
<a id="k739"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#polyhedra">polyhedra</a>
<a id="k741"> </a>
<br /></b> 
<a href="#k742">polyhedra ONLY</a>
<br /> 
<a href="#k743">polyhedra {centers} {vertices}</a>
<br /> 
<a href="#k744">polyhedra {center} TO {vertices}</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#print">PRINT</a>
<a id="k746"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#prompt">PROMPT</a>
<a id="k748"> </a>
<br /></b> 
<a href="#k749">prompt</a>
<br /> 
<a href="#k750">prompt "message"</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#quaternion">quaternion or quaternions</a>
<a id="k752"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#quit">quit</a>
<a id="k754"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#ramachandran">ramachandran or rama</a>
<a id="k756"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#redo">redo</a>
<a id="k758"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#redomove">redoMove</a>
<a id="k760"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#refresh">refresh</a>
<a id="k762"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#reset">reset</a>
<a id="k764"> </a>
<br /></b> 
<a href="#k765">reset</a>
<br /> 
<a href="#k766">reset AROMATIC</a>
<br /> 
<a href="#k767">reset ERROR</a>
<br /> 
<a href="#k768">reset FUNCTIONS</a>
<br /> 
<a href="#k769">reset LIGHTING</a>
<br /> 
<a href="#k770">reset PRINT</a>
<br /> 
<a href="#k771">reset SPIN</a>
<br /> 
<a href="#k772">reset STRUCTURE</a>
<br /> 
<a href="#k773">reset VDW</a>
<br /> 
<a href="#k774">reset variableName</a>
<br /> 
<a href="#k775">reset ALL</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#restore">restore</a>
<a id="k777"> </a>
<br /></b> 
<a href="#k778">restore BONDS saveName</a>
<br /> 
<a href="#k779">restore ORIENTATION saveName timeSeconds</a>
<br /> 
<a href="#k780">restore SELECTION saveName</a>
<br /> 
<a href="#k781">restore STATE saveName</a>
<br /> 
<a href="#k782">restore STRUCTURE saveName</a>
<br /> 
<a href="#k783">restore UNITCELL</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#restrict">restrict</a>
<a id="k785"> </a>
<br /></b> 
<a href="#k786">restrict {default: ALL}</a>
<br /> 
<a href="#k788">restrict </a>
<a class='def' href='#d787' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k789">restrict BONDS </a>
<a class='def' href='#d787' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#resume">resume</a>
<a id="k791"> </a>
<br /></b> 
<a href="#k790">resume</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#return">RETURN</a>
<a id="k793"> </a>
<br /></b> 
<a href="#k794">return returnValue</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#ribbon">ribbon or ribbons</a>
<a id="k796"> </a>
<br /></b> 
<a href="#k797">ribbon ON/OFF{default: ON}</a>
<br /> 
<a href="#k798">ribbon ONLY</a>
<br /> 
<a href="#k800">ribbon </a>
<a class='def' href='#d799' title='half of the overall width of the ribbon -- (decimal, &lt;=4.0)'>[ribbon-radius]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#rocket">rocket or rockets</a>
<a id="k802"> </a>
<br /></b> 
<a href="#k803">rocket ON/OFF{default: ON}</a>
<br /> 
<a href="#k806">rocket ONLY</a>
<br /> 
<a href="#k805">rocket </a>
<a class='def' href='#d804' title='half of the overall width of the rocket barrel -- (decimal, &lt;=4.0)'>[rocket-radius]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#rotate">rotate</a>
<a id="k808"> </a>
<br /></b> 
<a href="#k809">rotate BEST</a>
<br /> 
<a href="#k811">rotate BRANCH {atom1} {atom2}</a>
<br /> 
<a href="#k810">rotate BRANCH @list nSeconds</a>
<br /> 
<a href="#k812">rotate COMPARE {atomset} {atomset or coordinates}</a>
<br /> 
<a href="#k813">rotate SYMOP n</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#rotateselected">rotateSelected</a>
<a id="k815"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#save">save</a>
<a id="k817"> </a>
<br /></b> 
<a href="#k818">save BONDS saveName</a>
<br /> 
<a href="#k823">save CONTEXT saveName</a>
<br /> 
<a href="#k819">save ORIENTATION saveName</a>
<br /> 
<a href="#k820">save SELECTION saveName</a>
<br /> 
<a href="#k821">save STATE saveName</a>
<br /> 
<a href="#k822">save STRUCTURE saveName</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#script">script or source</a>
<a id="k825"> </a>
<br /></b> 
<a href="#k829">script </a>
<a class='def' href='#d826' title='any valid filename or URL -- (string)'>[file-name]</a>
<br /> 
<a href="#k827">script LOCALPATH "path" </a>
<a class='def' href='#d826' title='any valid filename or URL -- (string)'>[file-name]</a>
<br /> 
<a href="#k828">script REMOTEPATH "path" </a>
<a class='def' href='#d826' title='any valid filename or URL -- (string)'>[file-name]</a>
<br /> 
<a href="#k830">script </a>
<a class='def' href='#d826' title='any valid filename or URL -- (string)'>[file-name]</a> CHECK
<br /> 
<a href="#k831">script </a>
<a class='def' href='#d826' title='any valid filename or URL -- (string)'>[file-name]</a> COMMAND n
<br /> 
<a href="#k832">script </a>
<a class='def' href='#d826' title='any valid filename or URL -- (string)'>[file-name]</a> COMMANDS n - m
<br /> 
<a href="#k833">script </a>
<a class='def' href='#d826' title='any valid filename or URL -- (string)'>[file-name]</a> LINE n
<br /> 
<a href="#k834">script </a>
<a class='def' href='#d826' title='any valid filename or URL -- (string)'>[file-name]</a> LINES n - m
<br /> 
<a href="#k835">script APPLET appletName @{Jmol math expression}</a>
<br /> 
<a href="#k836">script INLINE @{Jmol math expression}</a>
<br /> 
<a href="#k837">script javascript:functionCall()</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#select">select</a>
<a id="k839"> </a>
<br /></b> 
<a href="#k840">select {default: ALL}</a>
<br /> 
<a href="#k842">select </a>
<a class='def' href='#d841' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k843">select ON/OFF </a>
<a class='def' href='#d841' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k844">select GROUP </a>
<a class='def' href='#d841' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k845">select ADD </a>
<a class='def' href='#d841' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k846">select REMOVE </a>
<a class='def' href='#d841' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k847">select </a>
<a class='def' href='#d841' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a> (property expression)
<br /> 
<a href="#k848">select BONDS ({bond list})</a>
<br /> 
<a href="#k849">select MEASURES ({measure list})</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#selectionhalos">selectionHalos</a>
<a id="k851"> </a>
<br /></b> 
<a href="#k852">selectionHalos ON/OFF{default: OFF}</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#set">set</a>
<a id="k854"> </a>
<br /></b> 
<a href="#k856">set xxx</a>
<br /> 
<a href="#k855">set</a>
<br /> 
<a href="#k857">set xxx?</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#set">set (antialiasing)</a>
<a id="k859"> </a>
<br /></b> 
<a href="#k860">set antialiasDisplay OFF</a>
<br /> 
<a href="#k861">set antialiasTranslucent ON</a>
<br /> 
<a href="#k862">set antialiasImages ON</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#set">set (bond styles)</a>
<a id="k864"> </a>
<br /></b> 
<a href="#k866">set bondMode AND</a>
<br /> 
<a href="#k867">set bondMode OR</a>
<br /> 
<a href="#k868">set bondModeOr FALSE</a>
<br /> 
<a href="#k869">set bondRadiusMilliAngstroms (integer)</a>
<br /> 
<a href="#k870">set bondTolerance (decimal)</a>
<br /> 
<a href="#k881">set dipoleScale (-10.0 to 10.0)</a>
<br /> 
<a href="#k871">set hbondsRasmol TRUE</a>
<br /> 
<a href="#k872">set hbondsSolid FALSE</a>
<br /> 
<a href="#k873">set hbondsBackbone FALSE</a>
<br /> 
<a href="#k874">set minBondDistance (decimal)</a>
<br /> 
<a href="#k875">set multipleBondBananas FALSE</a>
<br /> 
<a href="#k876">set multipleBondRadiusFactor 0</a>
<br /> 
<a href="#k877">set multipleBondSpacing -1</a>
<br /> 
<a href="#k878">set partialDots FALSE</a>
<br /> 
<a href="#k865">set showMultipleBonds ON</a>
<br /> 
<a href="#k879">set ssbonds BACKBONE or SIDECHAIN</a>
<br /> 
<a href="#k880">set ssBondsBackbone FALSE</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#set">set (callback)</a>
<a id="k883"> </a>
<br /></b> 
<a href="#k884">set AnimFrameCallback "function name"</a>
<br /> 
<a href="#k886">set EchoCallback "function name"</a>
<br /> 
<a href="#k887">set EvalCallback</a>
<br /> 
<a href="#k885">set HoverCallback "function name"</a>
<br /> 
<a href="#k891">set LoadStructCallback "function name"</a>
<br /> 
<a href="#k889">set MeasureCallback "function name"</a>
<br /> 
<a href="#k892">set MessageCallback "function name"</a>
<br /> 
<a href="#k890">set MinimizationCallback "function name"</a>
<br /> 
<a href="#k893">set PickCallback "function name"</a>
<br /> 
<a href="#k894">set ResizeCallback "function name"</a>
<br /> 
<a href="#k888">set ScriptCallback "function name"</a>
<br /> 
<a href="#k895">set StructureModifiedCallback "function name"</a>
<br /> 
<a href="#k896">set SyncCallback "function name"</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#set">set (debugging)</a>
<a id="k898"> </a>
<br /></b> 
<a href="#k899">set debug OFF</a>
<br /> 
<a href="#k900">set debugScript OFF</a>
<br /> 
<a href="#k901">set delayMaximumMs 0</a>
<br /> 
<a href="#k902">set fontCaching TRUE</a>
<br /> 
<a href="#k903">set historyLevel (integer)</a>
<br /> 
<a href="#k904">set logLevel (0 - 5)</a>
<br /> 
<a href="#k907">set scriptReportingLevel (integer)</a>
<br /> 
<a href="#k905">set showScript OFF</a>
<br /> 
<a href="#k906">set showScript milliseconds</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#set">set (files and scripts)</a>
<a id="k909"> </a>
<br /></b> 
<a href="#k910">set allowEmbeddedScripts</a>
<br /> 
<a href="#k911">set appendNew TRUE</a>
<br /> 
<a href="#k912">set appletProxy "URL"</a>
<br /> 
<a href="#k913">set applySymmetryToBonds OFF</a>
<br /> 
<a href="#k914">set atomTypes "..."</a>
<br /> 
<a href="#k915">set bondingVersion 0</a>
<br /> 
<a href="#k916">set autobond ON</a>
<br /> 
<a href="#k917">set autoLoadOrientation FALSE</a>
<br /> 
<a href="#k918">set currentLocalPath "path"</a>
<br /> 
<a href="#k919">set dataSeparator "separator text"</a>
<br /> 
<a href="#k920">set defaultDirectory "directory path"</a>
<br /> 
<a href="#k921">set defaultDropScript "script"</a>
<br /> 
<a href="#k922">set defaultLattice {i j k}</a>
<br /> 
<a href="#k923">set defaultLoadScript "script"</a>
<br /> 
<a href="#k924">set edsUrlCutoff "url"</a>
<br /> 
<a href="#k925">set edsUrlFormat "url"</a>
<br /> 
<a href="#k926">set edsUrlFormatDiff "url"</a>
<br /> 
<a href="#k927">set forceAutoBond OFF</a>
<br /> 
<a href="#k928">set history nLines</a>
<br /> 
<a href="#k929">set loadFormat "URL"</a>
<br /> 
<a href="#k930">set loadLigandFormat "URL"</a>
<br /> 
<a href="#k931">set nihResolverFormat "URL"</a>
<br /> 
<a href="#k932">set pathForAllFiles "path"</a>
<br /> 
<a href="#k933">set pdbAddHydrogens FALSE</a>
<br /> 
<a href="#k934">set scriptQueue ON</a>
<br /> 
<a href="#k935">set smallMoleculeMaxAtoms 40000</a>
<br /> 
<a href="#k936">set smilesURLformat "URL"</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#set">set (highlights)</a>
<a id="k938"> </a>
<br /></b> 
<a href="#k939">set display SELECTED/NORMAL</a>
<br /> 
<a href="#k940">set frank</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#set">set (labels)</a>
<a id="k942"> </a>
<br /></b> 
<a href="#k946">set defaultLabelPDB "labelFormat"</a>
<br /> 
<a href="#k947">set defaultLabelXYZ "labelFormat"</a>
<br /> 
<a href="#k943">set fontScaling OFF</a>
<br /> 
<a href="#k945">set fontSize </a>
<a class='def' href='#d944' title='approximately the same as Rasmol -- (integer, 6 to 63)'>[font-size]</a>{default: 8}
<br /> 
<a href="#k948">set labelAlignment LEFT, RIGHT, or CENTER</a>
<br /> 
<a href="#k957">set labelAtom ON/OFF{default: ON} </a>
<a class='def' href='#d951' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k958">set labelFront ON/OFF{default: ON} </a>
<a class='def' href='#d951' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k959">set labelGroup ON/OFF{default: ON} </a>
<a class='def' href='#d951' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k952">set labelOffset </a>
<a class='def' href='#d949' title='the x-offset -- (integer)'>[x-offset]</a> 
<a class='def' href='#d950' title='the y-offset -- (integer)'>[y-offset]</a> 
<a class='def' href='#d951' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k953">set labelOffset {x, y, z} </a>
<a class='def' href='#d951' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k954">set labelOffsetAbsolute </a>
<a class='def' href='#d949' title='the x-offset -- (integer)'>[x-offset]</a> 
<a class='def' href='#d950' title='the y-offset -- (integer)'>[y-offset]</a> 
<a class='def' href='#d951' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k955">set labelPointer OFF </a>
<a class='def' href='#d951' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k956">set labelPointer BACKGROUND </a>
<a class='def' href='#d951' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> 
<a href="#k960">set labelToggle </a>
<a class='def' href='#d951' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#set">set (language)</a>
<a id="k962"> </a>
<br /></b> 
<a href="#k963">set language "[two-letter code]"</a>
<br /> 
<a href="#k964">set languageTranslation ON</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#set">set (lighting)</a>
<a id="k966"> </a>
<br /></b> 
<a href="#k967">set ambientPercent (integer 0 to 100)</a>
<br /> 
<a href="#k968">set celShading FALSE</a>
<br /> 
<a href="#k969">set celShadingPower (integer)</a>
<br /> 
<a href="#k970">set depth (integer)</a>
<br /> 
<a href="#k971">set diffusePercent (integer 0 to 100)</a>
<br /> 
<a href="#k972">set phongExponent (integer 0 to 1000)</a>
<br /> 
<a href="#k973">set slab (integer)</a>
<br /> 
<a href="#k974">set specular OFF</a>
<br /> 
<a href="#k975">set specularExponent (integer 1 to 10)</a>
<br /> 
<a href="#k977">set specularPercent (integer 0 to 100)</a>
<br /> 
<a href="#k976">set specularPower (integer 0 to 100)</a>
<br /> 
<a href="#k978">set zDepth (integer)</a>
<br /> 
<a href="#k980">set zShade OFF</a>
<br /> 
<a href="#k981">set zShadePower (integer)</a>
<br /> 
<a href="#k979">set zSlab (integer)</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#set">set (measure)</a>
<a id="k983"> </a>
<br /></b> 
<a href="#k984">set defaultDistanceLabel "format"</a>
<br /> 
<a href="#k985">set defaultAngleLabel "format"</a>
<br /> 
<a href="#k986">set defaultTorsionLabel "format"</a>
<br /> 
<a href="#k992">set measurements </a>
<a class='def' href='#d991' title='a (decimal, &lt;2.0)'>[width-in-angstroms]</a>
<br /> 
<a href="#k994">set measurements </a>
<a class='def' href='#d993' title='an (integer)'>[linewidth-pixels]</a>
<br /> 
<a href="#k987">set justifyMeasurements FALSE</a>
<br /> 
<a href="#k995">set measurements DOTTED</a>
<br /> 
<a href="#k988">set measurementLabels ON</a>
<br /> 
<a href="#k990">set measurementUnits (distance unit)</a>
<br /> 
<a href="#k989">set showMeasurements TRUE</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#set">set (misc)</a>
<a id="k997"> </a>
<br /></b> 
<a href="#k998">set allowGestures FALSE</a>
<br /> 
<a href="#k999">set allowKeystrokes FALSE</a>
<br /> 
<a href="#k1000">set allowModelKit TRUE</a>
<br /> 
<a href="#k1001">set allowMoveAtoms FALSE</a>
<br /> 
<a href="#k1002">set allowMultiTouch TRUE</a>
<br /> 
<a href="#k1003">set allowRotateSelected FALSE</a>
<br /> 
<a href="#k1004">set animationFps (integer)</a>
<br /> 
<a href="#k1005">set animationMode "ONCE" or "LOOP" or "PALINDROME"</a>
<br /> 
<a href="#k1007">set autoFPS FALSE</a>
<br /> 
<a href="#k1008">set axesColor "color_name"</a>
<br /> 
<a href="#k1009">set axis1Color "color_name"</a>
<br /> 
<a href="#k1010">set axis2Color "color_name"</a>
<br /> 
<a href="#k1011">set axis3Color "color_name"</a>
<br /> 
<a href="#k1006">set atomPicking TRUE</a>
<br /> 
<a href="#k1012">set backgroundModel (integer >= 1) or "file.model"</a>
<br /> 
<a href="#k1013">set bondPicking FALSE</a>
<br /> 
<a href="#k1014">set chainCaseSensitive FALSE</a>
<br /> 
<a href="#k1015">set contextDepthMax 100</a>
<br /> 
<a href="#k1021">set colorRasmol FALSE</a>
<br /> 
<a href="#k1016">set defaultColorScheme JMOL or RASMOL</a>
<br /> 
<a href="#k1017">set defaultDrawArrowScale (decimal)</a>
<br /> 
<a href="#k1018">set defaults JMOL or RASMOL</a>
<br /> 
<a href="#k1019">set defaults PyMOL</a>
<br /> 
<a href="#k1020">set defaultVDW JMOL or BABEL or RASMOL or USER</a>
<br /> 
<a href="#k1022">set dotDensity -3 to 3</a>
<br /> 
<a href="#k1023">set dotScale (integer)</a>
<br /> 
<a href="#k1024">set dotsSelectedOnly FALSE</a>
<br /> 
<a href="#k1025">set dotSurface ON</a>
<br /> 
<a href="#k1026">set dragSelected OFF</a>
<br /> 
<a href="#k1027">set drawFontSize 14</a>
<br /> 
<a href="#k1028">set drawHover OFF</a>
<br /> 
<a href="#k1029">set drawPicking OFF</a>
<br /> 
<a href="#k1030">set energyUnits kJ or kcal</a>
<br /> 
<a href="#k1031">set exportDrivers "driver_list"</a>
<br /> 
<a href="#k1032">set exportScale (decimal)</a>
<br /> 
<a href="#k1033">set forcefield "MMFF" or "UFF"</a>
<br /> 
<a href="#k1034">set formalCharge (integer)</a>
<br /> 
<a href="#k1035">set helixStep (integer)</a>
<br /> 
<a href="#k1036">set helpPath "URL"</a>
<br /> 
<a href="#k1058">set nmrUrlFormat "URL"</a>
<br /> 
<a href="#k1037">set hoverDelay (decimal)</a>
<br /> 
<a href="#k1038">set hoverLabel (string)</a>
<br /> 
<a href="#k1039">set imageState ON</a>
<br /> 
<a href="#k1040">set isKiosk OFF</a>
<br /> 
<a href="#k1041">set isosurfaceKey OFF</a>
<br /> 
<a href="#k1042">set isosurfacePropertySmoothing ON</a>
<br /> 
<a href="#k1043">set isosurfacePropertySmoothingPower 0 to 10 (7)</a>
<br /> 
<a href="#k1044">set legacyJavaFloat FALSE</a>
<br /> 
<a href="#k1045">set loadAtomDataTolerance (decimal)</a>
<br /> 
<a href="#k1046">set measureAllModels OFF</a>
<br /> 
<a href="#k1047">set meshScale 1</a>
<br /> 
<a href="#k1048">set messageStyleChime FALSE</a>
<br /> 
<a href="#k1049">set minimizationCriterion (decimal)</a>
<br /> 
<a href="#k1050">set minimizationRefresh TRUE</a>
<br /> 
<a href="#k1051">set minimizationSilent FALSE</a>
<br /> 
<a href="#k1052">set minimizationSteps (integer)</a>
<br /> 
<a href="#k1053">set minPixelSelRadius 6</a>
<br /> 
<a href="#k1054">set modulationScale (decimal)</a>
<br /> 
<a href="#k1055">set mouseDragFactor (decimal)</a>
<br /> 
<a href="#k1056">set mouseWheelFactor (decimal)</a>
<br /> 
<a href="#k1057">set multiprocessor FALSE</a>
<br /> 
<a href="#k1059">set particleRadius (decimal)</a>
<br /> 
<a href="#k1060">set pdbGetHeader FALSE</a>
<br /> 
<a href="#k1061">set pdbSequential FALSE</a>
<br /> 
<a href="#k1062">set percentVdwAtom (integer)</a>
<br /> 
<a href="#k1064">set pickingSpinRate (integer)</a>
<br /> 
<a href="#k1065">set pointGroupDistanceTolerance (decimal)</a>
<br /> 
<a href="#k1066">set pointGroupLinearTolerance (decimal)</a>
<br /> 
<a href="#k1063">set pickLabel (string)</a>
<br /> 
<a href="#k1067">set preserveState TRUE</a>
<br /> 
<a href="#k1068">set propertyAtomNumberColumnCount (integer)</a>
<br /> 
<a href="#k1069">set propertyAtomNumberField (integer)</a>
<br /> 
<a href="#k1070">set propertyColorScheme "colorSchemeName"</a>
<br /> 
<a href="#k1071">set propertyDataColumnCount (integer)</a>
<br /> 
<a href="#k1072">set propertyDataField (integer)</a>
<br /> 
<a href="#k1073">set quaternionFrame A,B,C,N,P,Q,RC,RP,X</a>
<br /> 
<a href="#k1074">set rangeSelected</a>
<br /> 
<a href="#k1075">set repaintWaitMs 1000</a>
<br /> 
<a href="#k1076">set saveProteinStructureState TRUE</a>
<br /> 
<a href="#k1077">set selectAllModels TRUE</a>
<br /> 
<a href="#k1078">set selectHetero ON</a>
<br /> 
<a href="#k1079">set selectHydrogen ON</a>
<br /> 
<a href="#k1080">set showKeyStrokes TRUE</a>
<br /> 
<a href="#k1081">set showModulationVectors FALSE</a>
<br /> 
<a href="#k1082">set showTiming FALSE</a>
<br /> 
<a href="#k1083">set slabRange (decimal)</a>
<br /> 
<a href="#k1084">set smartAromatic ON</a>
<br /> 
<a href="#k1086">set spinFps </a>
<a class='def' href='#d1085' title='an (integer)'>[frames-per-second]</a>
<br /> 
<a href="#k1088">set spinX </a>
<a class='def' href='#d1087' title='an (integer)'>[degrees-per-second]</a>
<br /> 
<a href="#k1089">set spinY </a>
<a class='def' href='#d1087' title='an (integer)'>[degrees-per-second]</a>
<br /> 
<a href="#k1090">set spinZ </a>
<a class='def' href='#d1087' title='an (integer)'>[degrees-per-second]</a>
<br /> 
<a href="#k1091">set starWidth (decimal)</a>
<br /> 
<a href="#k1092">set statusReporting ON</a>
<br /> 
<a href="#k1093">set stereoDegrees (decimal)</a>
<br /> 
<a href="#k1094">set strutDefaultRadius 0.3</a>
<br /> 
<a href="#k1095">set strutLengthMaximum 7</a>
<br /> 
<a href="#k1096">set strutsMultiple OFF</a>
<br /> 
<a href="#k1097">set strutSpacing 6</a>
<br /> 
<a href="#k1098">set syncMouse OFF</a>
<br /> 
<a href="#k1099">set syncScript OFF</a>
<br /> 
<a href="#k1100">set undo ON</a>
<br /> 
<a href="#k1101">set useMinimizationThread ON</a>
<br /> 
<a href="#k1102">set useNumberLocalization ON</a>
<br /> 
<a href="#k1103">set vectorScale (decimal)</a>
<br /> 
<a href="#k1104">set vectorsCentered</a>
<br /> 
<a href="#k1105">set vdw JMOL or PROBE</a>
<br /> 
<a href="#k1106">set vectorSymmetry FALSE</a>
<br /> 
<a href="#k1107">set vibrationPeriod (decimal)</a>
<br /> 
<a href="#k1108">set vibrationScale (decimal)</a>
<br /> 
<a href="#k1109">set waitForMoveto ON</a>
<br /> 
<a href="#k1110">set wireframeRotation OFF</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#set">set (navigation)</a>
<a id="k1112"> </a>
<br /></b> 
<a href="#k1113">set hideNavigationPoint FALSE</a>
<br /> 
<a href="#k1114">set navFPS (integer)</a>
<br /> 
<a href="#k1115">set navigateSurface FALSE</a>
<br /> 
<a href="#k1116">set navigationDepth (percent)</a>
<br /> 
<a href="#k1117">set navigationMode FALSE</a>
<br /> 
<a href="#k1118">set navigationPeriodic FALSE</a>
<br /> 
<a href="#k1119">set navigationSpeed (integer)</a>
<br /> 
<a href="#k1120">set navigationSlab (percent)</a>
<br /> 
<a href="#k1121">set navX (decimal)</a>
<br /> 
<a href="#k1122">set navY (decimal)</a>
<br /> 
<a href="#k1123">set navZ (decimal)</a>
<br /> 
<a href="#k1124">set showNavigationPointAlways FALSE</a>
<br /> 
<a href="#k1125">set visualRange (angstroms)</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#set">set (perspective)</a>
<a id="k1127"> </a>
<br /></b> 
<a href="#k1128">set cameraDepth (positive number)</a>
<br /> 
<a href="#k1129">set perspectiveDepth ON</a>
<br /> 
<a href="#k1130">set perspectiveModel 11</a>
<br /> 
<a href="#k1131">set rotationRadius (Angstroms)</a>
<br /> 
<a href="#k1133">set scaleAngstromsPerInch </a>
<a class='def' href='#d1132' title='the apparent distance from the model to the user in arbitrary units -- (integer), (decimal)'>[viewing-distance]</a>
<br /> 
<a href="#k1134">set windowCentered TRUE</a>
<br /> 
<a href="#k1135">set zoomEnabled TRUE</a>
<br /> 
<a href="#k1136">set zoomHeight FALSE</a>
<br /> 
<a href="#k1137">set zoomLarge TRUE</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#set">set (structure)</a>
<a id="k1139"> </a>
<br /></b> 
<a href="#k1140">set backboneSteps OFF</a>
<br /> 
<a href="#k1143">set cartoonBaseEdges OFF</a>
<br /> 
<a href="#k1141">set cartoonFancy OFF</a>
<br /> 
<a href="#k1142">set cartoonLadders OFF</a>
<br /> 
<a href="#k1144">set cartoonRibose OFF</a>
<br /> 
<a href="#k1145">set cartoonRockets OFF</a>
<br /> 
<a href="#k1146">set defaultStructureDSSP TRUE</a>
<br /> 
<a href="#k1147">set dsspCalculateHydrogenAlways TRUE</a>
<br /> 
<a href="#k1148">set hermiteLevel (integer, -8 to 8)</a>
<br /> 
<a href="#k1149">set highResolution OFF</a>
<br /> 
<a href="#k1150">set ribbonAspectRatio (integer)</a>
<br /> 
<a href="#k1151">set ribbonBorder OFF</a>
<br /> 
<a href="#k1152">set rocketBarrels OFF</a>
<br /> 
<a href="#k1153">set sheetSmoothing (0 to 1)</a>
<br /> 
<a href="#k1155">set strandCount </a>
<a class='def' href='#d1154' title='the number of strands -- (integer, 0 to 20)'>[strand-count]</a>
<br /> 
<a href="#k1157">set strandCountForMeshRibbon </a>
<a class='def' href='#d1154' title='the number of strands -- (integer, 0 to 20)'>[strand-count]</a>
<br /> 
<a href="#k1156">set strandCountForStrands </a>
<a class='def' href='#d1154' title='the number of strands -- (integer, 0 to 20)'>[strand-count]</a>
<br /> 
<a href="#k1159">set structure HELIX|SHEET|TURN [phi-psi ranges]</a>
<br /> 
<a href="#k1158">set traceAlpha TRUE</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#set">set (visibility)</a>
<a id="k1161"> </a>
<br /></b> 
<a href="#k1163">set axes </a>
<a class='def' href='#d1162' title='a line width or type for a drawing object -- ON, OFF, DOTTED, (integer, 1 to 19), (decimal, &lt;2.0)'>[line-width-or-type]</a>
<br /> 
<a href="#k1165">set axesMode 0, 1, or 2</a>
<br /> 
<a href="#k1164">set axesOffset (decimal)</a>
<br /> 
<a href="#k1166">set axesMolecular OFF</a>
<br /> 
<a href="#k1167">set axesScale (decimal)</a>
<br /> 
<a href="#k1168">set axesUnitcell OFF</a>
<br /> 
<a href="#k1169">set axesWindow ON</a>
<br /> 
<a href="#k1171">set backgroundColor </a>
<a class='def' href='#d1170' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a>
<br /> 
<a href="#k1172">set boundbox </a>
<a class='def' href='#d1162' title='a line width or type for a drawing object -- ON, OFF, DOTTED, (integer, 1 to 19), (decimal, &lt;2.0)'>[line-width-or-type]</a>
<br /> 
<a href="#k1173">set boundboxColor "color_name"</a>
<br /> 
<a href="#k1174">set defaultTranslucent (decimal)</a>
<br /> 
<a href="#k1175">set disablePopupMenu FALSE</a>
<br /> 
<a href="#k1176">set displayCellParameters TRUE</a>
<br /> 
<a href="#k1177">set greyScaleRendering OFF</a>
<br /> 
<a href="#k1178">set hideNameInPopUp FALSE</a>
<br /> 
<a href="#k1179">set hideNotSelected FALSE</a>
<br /> 
<a href="#k1180">set platformSpeed 1 - 8</a>
<br /> 
<a href="#k1181">set refreshing TRUE</a>
<br /> 
<a href="#k1184">set shift_XX (decimal)</a>
<br /> 
<a href="#k1185">set showAxes FALSE</a>
<br /> 
<a href="#k1186">set showBoundBox FALSE</a>
<br /> 
<a href="#k1187">set showFrank TRUE</a>
<br /> 
<a href="#k1188">set showHiddenSelectionHalos FALSE</a>
<br /> 
<a href="#k1189">set showHydrogens TRUE</a>
<br /> 
<a href="#k1190">set showSelections FALSE</a>
<br /> 
<a href="#k1192">set showUnitcell FALSE</a>
<br /> 
<a href="#k1191">set showUnitcellDetails TRUE</a>
<br /> 
<a href="#k1193">set slabByAtom FALSE</a>
<br /> 
<a href="#k1194">set slabByMolecule FALSE</a>
<br /> 
<a href="#k1195">set slabEnabled FALSE</a>
<br /> 
<a href="#k1196">set solventProbe OFF</a>
<br /> 
<a href="#k1183">set solventProbeRadius </a>
<a class='def' href='#d1182' title='a (decimal)'>[probe-radius-in-angstroms]</a>{default: 1.2}
<br /> 
<a href="#k1197">set translucent TRUE</a>
<br /> 
<a href="#k1198">set unitcell</a>
<br /> 
<a href="#k1199">set unitCellColor "color_name"</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#setecho">set echo</a>
<a id="k1201"> </a>
<br /></b> 
<a href="#k1203">set echo id </a>
<a class='def' href='#d1202' title='one of the following: -- LEFT, CENTER, RIGHT'>[horizontal-position]</a>{default: left}
<br /> 
<a href="#k1204">set echo id x-position y-position</a>
<br /> 
<a href="#k1205">set echo id x% y%</a>
<br /> 
<a href="#k1206">set echo id [x y]</a>
<br /> 
<a href="#k1207">set echo id [x y %]</a>
<br /> 
<a href="#k1208">set echo id {x y z}</a>
<br /> 
<a href="#k1210">set echo id { </a>
<a class='def' href='#d1209' title='any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> that evaluates to a set of atoms '>[atom-expression]</a> }
<br /> 
<a href="#k1214">set echo id DEPTH z</a>
<br /> 
<a href="#k1215">set echo id DISPLAYED</a>
<br /> 
<a href="#k1213">set echo id IMAGE "file name"</a>
<br /> 
<a href="#k1212">set echo id MODEL (model number)</a>
<br /> 
<a href="#k1218">set echo id POINT </a>
<a class='def' href='#d1217' title='is any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> surrounded by parentheses or braces, or any @0@x y z@1@ coordinate '>[atom-expression-or-coordinate]</a>
<br /> 
<a href="#k1216">set echo id SCALE (decimal)</a>
<br /> 
<a href="#k1211">set echo id SCRIPT "script"</a>
<br /> 
<a href="#k1219">set echo id HIDDEN</a>
<br /> 
<a href="#k1221">set echo ALL</a>
<br /> 
<a href="#k1222">set echo NONE</a>
<br /> 
<a href="#k1223">set echo OFF</a>
<br /> 
<a href="#k1220">set echo id some text</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#setmodelkitmode">set modelKitMode</a>
<a id="k1225"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#setpicking">set picking</a>
<a id="k1227"> </a>
<br /></b> 
<a href="#k1228">set picking ON</a>
<br /> 
<a href="#k1229">set picking CENTER</a>
<br /> 
<a href="#k1230">set picking CONNECT</a>
<br /> 
<a href="#k1231">set picking DELETEATOM</a>
<br /> 
<a href="#k1232">set picking DELETEBOND</a>
<br /> 
<a href="#k1233">set picking DRAGATOM</a>
<br /> 
<a href="#k1234">set picking DRAGLIGAND</a>
<br /> 
<a href="#k1235">set picking DRAGMINIMIZE</a>
<br /> 
<a href="#k1236">set picking DRAGMINIMIZEMOLECULE</a>
<br /> 
<a href="#k1237">set picking DRAGSELECTED</a>
<br /> 
<a href="#k1238">set picking DRAW</a>
<br /> 
<a href="#k1239">set picking IDENT</a>
<br /> 
<a href="#k1240">set picking INVERTSTEREO</a>
<br /> 
<a href="#k1241">set picking LABEL</a>
<br /> 
<a href="#k1242">set picking MEASURE</a>
<br /> 
<a href="#k1243">set picking MEASURE DISTANCE</a>
<br /> 
<a href="#k1244">set picking MEASURE ANGLE</a>
<br /> 
<a href="#k1245">set picking MEASURE TORSION</a>
<br /> 
<a href="#k1246">set picking MEASURE SEQUENCE</a>
<br /> 
<a href="#k1247">set picking NAVIGATION</a>
<br /> 
<a href="#k1248">set picking SELECT ATOM</a>
<br /> 
<a href="#k1249">set picking SELECT CHAIN</a>
<br /> 
<a href="#k1250">set picking SELECT GROUP</a>
<br /> 
<a href="#k1251">set picking SELECT ELEMENT</a>
<br /> 
<a href="#k1254">set picking SELECT MOLECULE</a>
<br /> 
<a href="#k1252">set picking SELECT POLYMER</a>
<br /> 
<a href="#k1255">set picking SELECT SITE</a>
<br /> 
<a href="#k1253">set picking SELECT STRUCTURE</a>
<br /> 
<a href="#k1257">set picking SPIN </a>
<a class='def' href='#d1256' title='an (integer)'>[frames-per-second]</a>
<br /> 
<a href="#k1258">set picking STRUTS</a>
<br /> 
<a href="#k1259">set picking SYMMETRY</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#setpickingstyle">set pickingStyle</a>
<a id="k1261"> </a>
<br /></b> 
<a href="#k1262">set pickingStyle SELECT toggle</a>
<br /> 
<a href="#k1263">set pickingStyle SELECT selectOrToggle</a>
<br /> 
<a href="#k1264">set pickingStyle SELECT extendedSelect</a>
<br /> 
<a href="#k1265">set pickingStyle SELECT DRAG</a>
<br /> 
<a href="#k1266">set pickingStyle SELECT NONE</a>
<br /> 
<a href="#k1267">set pickingStyle MEASURE ON</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#setusercolorscheme">set userColorScheme</a>
<a id="k1269"> </a>
<br /></b> 
<a href="#k1270">set userColorScheme colorName colorName ..</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#show">show</a>
<a id="k1272"> </a>
<br /></b> 
<a href="#k1274">show ATOM</a>
<br /> 
<a href="#k1275">show BEST ROTATION</a>
<br /> 
<a href="#k1276">show BEST BOX</a>
<br /> 
<a href="#k1277">show BOUNDBOX</a>
<br /> 
<a href="#k1278">show CACHE</a>
<br /> 
<a href="#k1279">show CENTER</a>
<br /> 
<a href="#k1280">show CHAIN</a>
<br /> 
<a href="#k1281">show CHEMICAL [option]</a>
<br /> 
<a href="#k1282">show COLORSCHEME "name"</a>
<br /> 
<a href="#k1283">show DATA "type"</a>
<br /> 
<a href="#k1284">show DOMAINS</a>
<br /> 
<a href="#k1286">show DRAW</a>
<br /> 
<a href="#k1285">show DRAWING</a>
<br /> 
<a href="#k1287">show DSSP</a>
<br /> 
<a href="#k1288">show FILE</a>
<br /> 
<a href="#k1289">show FILE filepath</a>
<br /> 
<a href="#k1273">show ISOSURFACE</a>
<br /> 
<a href="#k1290">show FUNCTIONS</a>
<br /> 
<a href="#k1291">show GROUP</a>
<br /> 
<a href="#k1292">show HISTORY n</a>
<br /> 
<a href="#k1293">show LIGHTING</a>
<br /> 
<a href="#k1294">show MEASUREMENTS</a>
<br /> 
<a href="#k1295">show MENU</a>
<br /> 
<a href="#k1296">show MINIMIZATION</a>
<br /> 
<a href="#k1297">show MO</a>
<br /> 
<a href="#k1298">show MODEL</a>
<br /> 
<a href="#k1299">show MOVETO</a>
<br /> 
<a href="#k1300">show NMR</a>
<br /> 
<a href="#k1301">show ORIENTATION [optional type]</a>
<br /> 
<a href="#k1302">show PDBHEADER</a>
<br /> 
<a href="#k1303">show POINTGROUP</a>
<br /> 
<a href="#k1304">show POINTGROUP POLYHEDRON</a>
<br /> 
<a href="#k1305">show PROPERTIES (list) FORMAT %s %i ...</a>
<br /> 
<a href="#k1306">show RESIDUES</a>
<br /> 
<a href="#k1307">show ROTATION</a>
<br /> 
<a href="#k1309">show SELECTED</a>
<br /> 
<a href="#k1308">show SEQUENCE</a>
<br /> 
<a href="#k1310">show SET</a>
<br /> 
<a href="#k1311">show SMILES</a>
<br /> 
<a href="#k1312">show SPACEGROUP "name"</a>
<br /> 
<a href="#k1313">show STATE [optional name]</a>
<br /> 
<a href="#k1314">show STATE /xxx</a>
<br /> 
<a href="#k1315">show STATE FILE "fileName"</a>
<br /> 
<a href="#k1316">show SYMOP (integer)</a>
<br /> 
<a href="#k1318">show SYMOP </a>
<a class='def' href='#d1317' title='is any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> surrounded by parentheses or braces, or any @0@x y z@1@ coordinate '>[atom-expression-or-coordinate]</a> 
<a class='def' href='#d1317' title='is any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> surrounded by parentheses or braces, or any @0@x y z@1@ coordinate '>[atom-expression-or-coordinate]</a>
<br /> 
<a href="#k1319">show SYMMETRY</a>
<br /> 
<a href="#k1320">show TIMEOUT</a>
<br /> 
<a href="#k1321">show TRACE</a>
<br /> 
<a href="#k1322">show TRANSFORM</a>
<br /> 
<a href="#k1323">show TRANSLATION</a>
<br /> 
<a href="#k1324">show UNITCELL</a>
<br /> 
<a href="#k1325">show URL</a>
<br /> 
<a href="#k1326">show URL URL</a>
<br /> 
<a href="#k1327">show VALIDATION</a>
<br /> 
<a href="#k1328">show VARIABLES</a>
<br /> 
<a href="#k1329">show ZOOM</a>
<br /> 
<a href="#k1330">show $objectID</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#show">show (NMR)</a>
<a id="k1332"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#slab">slab</a>
<a id="k1334"> </a>
<br /></b> 
<a href="#k1335">slab ON/OFF{default: ON}</a>
<br /> 
<a href="#k1337">slab </a>
<a class='def' href='#d1336' title='an (integer, 0 to 100)'>[slab-percent]</a>
<br /> 
<a href="#k1338">slab HKL {h k l} or NONE</a>
<br /> 
<a href="#k1339">slab -HKL {h k l}</a>
<br /> 
<a href="#k1340">slab PLANE plane_expression or NONE</a>
<br /> 
<a href="#k1341">slab -PLANE plane_expression</a>
<br /> 
<a href="#k1342">slab RESET</a>
<br /> 
<a href="#k1343">slab SET</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#spacefill">spacefill or cpk</a>
<a id="k1345"> </a>
<br /></b> 
<a href="#k1346">spacefill ON/OFF{default: ON}</a>
<br /> 
<a href="#k1347">spacefill ONLY</a>
<br /> 
<a href="#k1348">spacefill AUTO</a>
<br /> 
<a href="#k1349">spacefill [decimal]</a>
<br /> 
<a href="#k1350">spacefill [integer] %</a>
<br /> 
<a href="#k1351">spacefill [integer] %Jmol</a>
<br /> 
<a href="#k1352">spacefill [integer] %Babel</a>
<br /> 
<a href="#k1353">spacefill [integer] %Babel21</a>
<br /> 
<a href="#k1354">spacefill [integer] %Rasmol</a>
<br /> 
<a href="#k1355">spacefill [integer] %User</a>
<br /> 
<a href="#k1356">spacefill +(solvent probe radius)</a>
<br /> 
<a href="#k1358">spacefill IONIC</a>
<br /> 
<a href="#k1357">spacefill TEMPERATURE</a>
<br /> 
<a href="#k1359">spacefill ADPMIN n%</a>
<br /> 
<a href="#k1360">spacefill ADPMAX n%</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#spin">spin</a>
<a id="k1362"> </a>
<br /></b> 
<a href="#k1363">spin ON/OFF{default: ON}</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#ssbonds">ssbonds</a>
<a id="k1365"> </a>
<br /></b> 
<a href="#k1366">ssbonds ON/OFF{default: ON}</a>
<br /> 
<a href="#k1368">ssbonds </a>
<a class='def' href='#d1367' title='a (decimal, &lt;2.0)'>[width-angstroms]</a>
<br /> 
<a href="#k1370">ssbonds </a>
<a class='def' href='#d1369' title='in 1/250ths of an Angstrom (deprecated) -- (integer, &lt;500)'>[width-Rasmol]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#star">star or stars</a>
<a id="k1372"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#step">step</a>
<a id="k1374"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#stereo">stereo</a>
<a id="k1376"> </a>
<br /></b> 
<a href="#k1378">stereo </a>
<a class='def' href='#d1377' title='angle of rotation for stereo viewing -- (integer|decimal)'>[stereo-viewing-angle]</a>{default: 5}
<br /> 
<a href="#k1379">stereo {default: ON}</a>
<br /> 
<a href="#k1381">stereo OFF</a>
<br /> 
<a href="#k1380">stereo DTI </a>
<a class='def' href='#d1377' title='angle of rotation for stereo viewing -- (integer|decimal)'>[stereo-viewing-angle]</a>{default: 5}
<br /> 
<a href="#k1382">stereo REDBLUE </a>
<a class='def' href='#d1377' title='angle of rotation for stereo viewing -- (integer|decimal)'>[stereo-viewing-angle]</a>{default: 3}
<br /> 
<a href="#k1383">stereo REDCYAN </a>
<a class='def' href='#d1377' title='angle of rotation for stereo viewing -- (integer|decimal)'>[stereo-viewing-angle]</a>{default: 3}
<br /> 
<a href="#k1384">stereo REDGREEN </a>
<a class='def' href='#d1377' title='angle of rotation for stereo viewing -- (integer|decimal)'>[stereo-viewing-angle]</a>{default: 3}
<br /> 
<a href="#k1386">stereo </a>
<a class='def' href='#d1385' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a> 
<a class='def' href='#d1385' title='a name of a color or a red, green, blue color triple in decimal with commas, for example [255,0,255], or as a single hexadecimal number, for example [xFF00FF] (brackets included) -- (color name), [r, g, b], [xRRGGBB]'>[RGB-color]</a> 
<a class='def' href='#d1377' title='angle of rotation for stereo viewing -- (integer|decimal)'>[stereo-viewing-angle]</a>{default: 3}
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#strand">strand or strands</a>
<a id="k1388"> </a>
<br /></b> 
<a href="#k1389">strand ON/OFF{default: ON}</a>
<br /> 
<a href="#k1390">strand ONLY</a>
<br /> 
<a href="#k1392">strand </a>
<a class='def' href='#d1391' title='half of the overall width of the set of strands -- (decimal, &lt;=4.0)'>[strand-radius]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#structure">structure or _structure</a>
<a id="k1394"> </a>
<br /></b> 
<a href="#k1395">structure HELIX|SHEET|TURN|NONE (atomExpression)</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#struts">struts or strut</a>
<a id="k1397"> </a>
<br /></b> 
<a href="#k1398">struts ON/OFF{default: ON}</a>
<br /> 
<a href="#k1399">struts ONLY</a>
<br /> 
<a href="#k1401">struts </a>
<a class='def' href='#d1400' title='a (decimal, &lt;=3.0)'>[radius-in-angstroms]</a>
<br /> 
<a href="#k1403">struts </a>
<a class='def' href='#d1402' title='in 1/250ths of an Angstrom (deprecated) -- (integer, 1 to 749)'>[radius-Rasmol]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#subset">subset</a>
<a id="k1405"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#switch">SWITCH</a>
<a id="k1407"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#sync">sync</a>
<a id="k1409"> </a>
<br /></b> 
<a href="#k1410">sync &PER;|>|*|appletId|appletId[syncId] ON</a>
<br /> 
<a href="#k1411">sync &PER;|>|*|appletId|appletId[syncId] SLAVE</a>
<br /> 
<a href="#k1412">sync &PER;|>|*|appletId|appletId[syncId] OFF</a>
<br /> 
<a href="#k1413">sync &PER;|>|*|appletId|appletId[syncId] "command"</a>
<br /> 
<a href="#k1414">sync -(integer)</a>
<br /> 
<a href="#k1415">sync -(integer) command</a>
<br /> 
<a href="#k1416">sync (integer) command</a>
<br /> 
<a href="#k1417">sync (integer) JSON message</a>
<br /> 
<a href="#k1418">sync (integer) expression</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#throw">THROW</a>
<a id="k1420"> </a>
<br /></b> 
<a href="#k1421">throw [math expression]</a>
<br /> 
<a href="#k1422">throw CONTEXT contextName</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#timeout">timeout or timeouts</a>
<a id="k1424"> </a>
<br /></b> 
<a href="#k1425">timeout</a>
<br /> 
<a href="#k1426">timeout OFF</a>
<br /> 
<a href="#k1427">timeout ID "id" time(s or ms) "command"</a>
<br /> 
<a href="#k1428">timeout ID "id" OFF</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#trace">trace</a>
<a id="k1430"> </a>
<br /></b> 
<a href="#k1431">trace ON/OFF{default: ON}</a>
<br /> 
<a href="#k1432">trace ONLY</a>
<br /> 
<a href="#k1434">trace </a>
<a class='def' href='#d1433' title='the radius of the trace -- (decimal, &lt;=4.0)'>[trace-radius]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#translate">translate</a>
<a id="k1436"> </a>
<br /></b> 
<a href="#k1437">translate X or Y (decimal)</a>
<br /> 
<a href="#k1438">translate X or Y (decimal) %</a>
<br /> 
<a href="#k1439">translate X or Y (decimal) NM or ANGSTROMS</a>
<br /> 
<a href="#k1440">translate Z (decimal) %</a>
<br /> 
<a href="#k1441">translate Z (decimal) NM or ANGSTROMS</a>
<br /> 
<a href="#k1442">translate {x y z} {atomSet}</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#translateselected">translateSelected</a>
<a id="k1444"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#try">try</a>
<a id="k1446"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#unbind">unbind</a>
<a id="k1448"> </a>
<br /></b> 
<a href="#k1449">unbind</a>
<br /> 
<a href="#k1450">unbind (mouse action)</a>
<br /> 
<a href="#k1451">unbind (Jmol action)</a>
<br /> 
<a href="#k1452">unbind "script"</a>
<br /> 
<a href="#k1453">unbind (mouse action) (Jmol action)</a>
<br /> 
<a href="#k1454">unbind (mouse action) "script"</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#undo">undo</a>
<a id="k1456"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#undomove">undoMove</a>
<a id="k1458"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#unitcell">unitcell</a>
<a id="k1460"> </a>
<br /></b> 
<a href="#k1461">unitcell ON/OFF{default: ON}</a>
<br /> 
<a href="#k1462">unitcell (decimal)</a>
<br /> 
<a href="#k1463">unitcell BOUNDBOX</a>
<br /> 
<a href="#k1465">unitcell CENTER </a>
<a class='def' href='#d1464' title='is any 
<a class=xref href=http://chemapps.stolaf.edu/jmol/docs/index.htm?ver=14.2#atomexpressions>expression</a> surrounded by parentheses or braces, or any @0@x y z@1@ coordinate '>[atom-expression-or-coordinate]</a>
<br /> 
<a href="#k1466">unitcell DOTTED</a>
<br /> 
<a href="#k1467">unitcell OFFSET {i j k}</a>
<br /> 
<a href="#k1468">unitcell RANGE {nnn yyy scale}</a>
<br /> 
<a href="#k1475">unitcell RESET</a>
<br /> 
<a href="#k1469">unitcell TICKS X|Y|Z {major,minor,subminor} FORMAT [%0.2f, ...] </a>
<br /> 
<a href="#k1470">unitcell [ {origin} {a} {b} {c} ]</a>
<br /> 
<a href="#k1471">unitcell "parent"</a>
<br /> 
<a href="#k1472">unitcell "standard"</a>
<br /> 
<a href="#k1473">unitcell "conventional"</a>
<br /> 
<a href="#k1474">unitcell "abc;offset"</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#unset">unset</a>
<a id="k1477"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#var">VAR</a>
<a id="k1479"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#vector">vector or vectors</a>
<a id="k1481"> </a>
<br /></b> 
<a href="#k1482">vector ON/OFF{default: ON}</a>
<br /> 
<a href="#k1484">vector </a>
<a class='def' href='#d1483' title='a scaling factor -- (integer, 1 to 19)'>[diameter-pixels]</a>
<br /> 
<a href="#k1486">vector </a>
<a class='def' href='#d1485' title='a (decimal, &lt;=3.0)'>[radius-in-angstroms]</a>
<br /> 
<a href="#k1488">vector SCALE </a>
<a class='def' href='#d1487' title='a (decimal, -10.0 to 10.0)'>[vector-scale]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#vibration">vibration</a>
<a id="k1490"> </a>
<br /></b> 
<a href="#k1491">vibration ON/OFF{default: ON}</a>
<br /> 
<a href="#k1493">vibration </a>
<a class='def' href='#d1492' title='number of seconds per vibration -- (positive number)'>[time-period]</a>
<br /> 
<a href="#k1494">vibration MAX (decimal)</a>
<br /> 
<a href="#k1495">vibration PERIOD </a>
<a class='def' href='#d1492' title='number of seconds per vibration -- (positive number)'>[time-period]</a>
<br /> 
<a href="#k1497">vibration SCALE </a>
<a class='def' href='#d1496' title='a (decimal, -10.0 to 10.0)'>[vibration-scale]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#while">WHILE or </a>
<a id="k1499"> </a>
<br /></b> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#wireframe">wireframe</a>
<a id="k1501"> </a>
<br /></b> 
<a href="#k1502">wireframe ON/OFF{default: ON}</a>
<br /> 
<a href="#k1503">wireframe ONLY</a>
<br /> 
<a href="#k1505">wireframe </a>
<a class='def' href='#d1504' title='a (decimal, &lt;=3.0)'>[radius-in-angstroms]</a>
<br /> 
<a href="#k1507">wireframe </a>
<a class='def' href='#d1506' title='in 1/250ths of an Angstrom (deprecated) -- (integer, 1 to 749)'>[radius-Rasmol]</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#write">write</a>
<a id="k1509"> </a>
<br /></b> 
<a href="#k1510">write "fileName" AS type</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#write">write (export)</a>
<a id="k1512"> </a>
<br /></b> 
<a href="#k1513">write IDTF "fileName"</a>
<br /> 
<a href="#k1514">write MAYA "fileName"</a>
<br /> 
<a href="#k1515">write OBJ "fileName"</a>
<br /> 
<a href="#k1516">write POVRAY "fileName"</a>
<br /> 
<a href="#k1517">write V3000 "fileName"</a>
<br /> 
<a href="#k1518">write VRML "fileName"</a>
<br /> 
<a href="#k1519">write X3D "fileName"</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#write">write (images and frames)</a>
<a id="k1521"> </a>
<br /></b> 
<a href="#k1522">write FRAMES atom_expression width height "fileName.jpg"</a>
<br /> 
<a href="#k1523">write VIBRATION n "fileName"</a>
<br /> 
<a href="#k1524">write IMAGE width height GIF "fileName"</a>
<br /> 
<a href="#k1525">write IMAGE width height GIFT "fileName"</a>
<br /> 
<a href="#k1526">write IMAGE width height JPG n "fileName"</a>
<br /> 
<a href="#k1527">write IMAGE width height JPG64 n "fileName"</a>
<br /> 
<a href="#k1528">write IMAGE width height PDF n "fileName"</a>
<br /> 
<a href="#k1529">write IMAGE width height PNG n "fileName"</a>
<br /> 
<a href="#k1530">write IMAGE width height PNGJ n "fileName"</a>
<br /> 
<a href="#k1531">write IMAGE width height PNGT n "fileName"</a>
<br /> 
<a href="#k1532">write IMAGE width height PPM "fileName"</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#write">write (info)</a>
<a id="k1534"> </a>
<br /></b> 
<a href="#k1535">write FUNCTIONS "fileName"</a>
<br /> 
<a href="#k1536">write HISTORY "fileName"</a>
<br /> 
<a href="#k1543">write INLINE "data" "fileName"</a>
<br /> 
<a href="#k1537">write JMOL "fileName"</a>
<br /> 
<a href="#k1538">write MENU "fileName"</a>
<br /> 
<a href="#k1539">write QUATERNION . . . "fileName"</a>
<br /> 
<a href="#k1540">write PROPERTIES . . . "fileName"</a>
<br /> 
<a href="#k1541">write PROPERTIES (list) FORMAT %s %i . . . "fileName"</a>
<br /> 
<a href="#k1542">write RAMACHANDRAN . . . "fileName"</a>
<br /> 
<a href="#k1544">write VAR [variable name] "fileName"</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#write">write (model)</a>
<a id="k1546"> </a>
<br /></b> 
<a href="#k1547">write JSON|MOL|MOL0|PDB|SDF|V2000|V3000 | XYZ|XYZRN|XYZVIB "fileName"</a>
<br /> 
<a href="#k1549">write COORDS "fileName"</a>
<br /> 
<a href="#k1548">write COORDS SPT "fileName"</a>
<br /> 
<a href="#k1550">write FILE "fileName"</a>
<br /> 
<a href="#k1551">write JMOL "fileName"</a>
<br /> 
<a href="#k1552">write STATE "fileName"</a>
<br /> 
<a href="#k1553">write STATE LOCALPATH "path" "fileName"</a>
<br /> 
<a href="#k1554">write STATE REMOTEPATH "path" "fileName"</a>
<br /> 
<a href="#k1555">write ZIP "fileName"</a>
<br /> 
<a href="#k1556">write ZIPALL "fileName"</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#write">write (object)</a>
<a id="k1558"> </a>
<br /></b> 
<a href="#k1559">write ISOSURFACE "fileName"</a>
<br /> 
<a href="#k1560">write MESH "fileName"</a>
<br /> 
<a href="#k1561">write MO "fileName"</a>
<br /> 
<a href="#k1562">write POINTGROUP "fileName"</a>
<br /> 
<a href="#k1563">write POINTGROUP DRAW "fileName"</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#zap">zap</a>
<a id="k1565"> </a>
<br /></b> 
<a href="#k1566">zap</a>
<br /> 
<a href="#k1567">zap (atom expression)</a>
<br /> 
<a href="#k1564">zap</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#zoom">zoom</a>
<a id="k1569"> </a>
<br /></b> 
<a href="#k1572">zoom IN</a>
<br /> 
<a href="#k1573">zoom OUT</a>
<br /> 
<a href="#k1570">zoom ON/OFF{default: ON}</a>
<br /> 
<a href="#k1575">zoom </a>
<a class='def' href='#d1574' title='an (integer, 5 to 200000)'>[percent-zoom]</a>
<br /> 
<a href="#k1571">zoom 0</a>
<br /> 
<a href="#k1576">zoom optional {atom expression} or {x y z} or $xxx percent zoom or 0</a>
<br /> 
<a href="#k1577">zoom optional {atom expression} or {x y z} or $xxx + or - delta</a>
<br /> 
<a href="#k1578">zoom optional {atom expression} or {x y z} or $xxx * or / factor</a>
<br /> </p xml=/indexlistset=xml>
<p xml=indexlistset=xml>
<b>
<br />
<a href="#zoomto">zoomto</a>
<a id="k1580"> </a>
<br /></b> 
<a href="#k1581">zoomto</a>
<br /> 
<a href="#k1582">zoomto IN</a>
<br /> 
<a href="#k1583">zoomto OUT</a>
<br /> 
<a href="#k1585">zoomto </a>
<a class='def' href='#d1584' title='in (seconds)'>[time-in-seconds]</a> {atom expression} or {x y z} or $xxx
<br /> 
<a href="#k1587">zoomto </a>
<a class='def' href='#d1584' title='in (seconds)'>[time-in-seconds]</a> {atom expression} or {x y z} or $xxx 
<a class='def' href='#d1586' title='an (integer, 5 to 200000)'>[percent-zoom]</a> xTrans yTrans
<br /> 
<a href="#k1588">zoomto </a>
<a class='def' href='#d1584' title='in (seconds)'>[time-in-seconds]</a> {atom expression} or {x y z} or $xxx + or - delta xTrans yTrans
<br /> 
<a href="#k1589">zoomto </a>
<a class='def' href='#d1584' title='in (seconds)'>[time-in-seconds]</a> {atom expression} or {x y z} or $xxx * or / factor xTrans yTrans
<br /> 
<a href="#k1590">zoomto </a>
<a class='def' href='#d1584' title='in (seconds)'>[time-in-seconds]</a> {atom expression} or {x y z} or $xxx 0 xTrans yTrans
<br /> </p xml=/indexlistset=xml>
<hr />
<p>last updated: Apr 03, 2016</p>
<p>
<a href="index.htm?html">html</a> 
<p>
<a href="index.htm?xml">xml</a> 
<a href="index.htm?docbook">docbook</a></p></div>